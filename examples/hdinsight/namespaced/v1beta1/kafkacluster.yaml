# SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: hdinsight.azure.m.upbound.io/v1beta1
kind: KafkaCluster
metadata:
  annotations:
    meta.upbound.io/example-id: hdinsight/v1beta2/kafkacluster
    uptest.upbound.io/timeout: "3600"
  labels:
    testing.upbound.io/example-name: kafkacluster0001
  name: kafkacluster0001
  namespace: upbound-system
spec:
  forProvider:
    clusterVersion: "4.0"
    componentVersion:
      kafka: "2.1"
    gateway:
      passwordSecretRef:
        key: example-key
        name: example-secret
      username: acctestusrgw
    location: West Europe
    resourceGroupNameSelector:
      matchLabels:
        testing.upbound.io/example-name: rgkafkacluster
    roles:
      headNode:
        passwordSecretRef:
          key: example-key
          name: example-secret
        username: acctestusrvm
        vmSize: Standard_D3_V2
      workerNode:
        numberOfDisksPerNode: 1
        passwordSecretRef:
          key: example-key
          name: example-secret
        targetInstanceCount: 3
        username: acctestusrvm
        vmSize: Standard_D3_V2
      zookeeperNode:
        passwordSecretRef:
          key: example-key
          name: example-secret
        username: acctestusrvm
        vmSize: Standard_D3_V2
    storageAccount:
      - isDefault: true
        storageAccountKeySecretRef:
          key: attribute.primary_access_key
          name: example-storage-account
        storageContainerIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example
    tier: Standard
---
apiVersion: azure.m.upbound.io/v1beta1
kind: ResourceGroup
metadata:
  annotations:
    meta.upbound.io/example-id: hdinsight/v1beta1/kafkacluster
  labels:
    testing.upbound.io/example-name: rgkafkacluster
  name: rgkafkacluster
  namespace: upbound-system
spec:
  forProvider:
    location: West Europe
---
apiVersion: storage.azure.m.upbound.io/v1beta1
kind: Account
metadata:
  annotations:
    meta.upbound.io/example-id: hdinsight/v1beta2/kafkacluster
    uptest.upbound.io/pre-delete-hook: ../testhooks/delete-kafka.sh
  labels:
    testing.upbound.io/example-name: example0001
  name: example0001
  namespace: upbound-system
spec:
  forProvider:
    accountReplicationType: LRS
    accountTier: Standard
    location: West Europe
    resourceGroupNameSelector:
      matchLabels:
        testing.upbound.io/example-name: rgkafkacluster
  writeConnectionSecretToRef:
    name: example-storage-account
    namespace: upbound-system
---
apiVersion: storage.azure.m.upbound.io/v1beta1
kind: Container
metadata:
  annotations:
    meta.upbound.io/example-id: hdinsight/v1beta2/kafkacluster
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    containerAccessType: private
    storageAccountNameSelector:
      matchLabels:
        testing.upbound.io/example-name: example0001
---
apiVersion: v1
data:
  example-key: VGVyckFmb3JtMTIzIQ==
kind: Secret
metadata:
  name: example-secret
  namespace: upbound-system
type: Opaque
