# SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: machinelearningservices.azure.m.upbound.io/v1beta1
kind: SynapseSpark
metadata:
  annotations:
    meta.upbound.io/example-id: machinelearningservices/v1beta2/synapsespark
  labels:
    testing.upbound.io/example-name: synapsespark001
  name: synapsespark001
  namespace: upbound-system
spec:
  forProvider:
    identity:
      type: SystemAssigned
    location: West Europe
    machineLearningWorkspaceIdSelector:
      matchLabels:
        testing.upbound.io/example-name: exampleworkspace002
    synapseSparkPoolIdSelector:
      matchLabels:
        testing.upbound.io/example-name: example
---
apiVersion: insights.azure.m.upbound.io/v1beta1
kind: ApplicationInsights
metadata:
  annotations:
    meta.upbound.io/example-id: machinelearningservices/v1beta2/synapsespark
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    applicationType: web
    location: West Europe
    resourceGroupNameSelector:
      matchLabels:
        testing.upbound.io/example-name: rgsynapsespark
---
apiVersion: keyvault.azure.m.upbound.io/v1beta1
kind: Vault
metadata:
  annotations:
    meta.upbound.io/example-id: machinelearningservices/v1beta2/synapsespark
  labels:
    testing.upbound.io/example-name: synapsesparkvault
  name: synapsesparkvault
  namespace: upbound-system
spec:
  forProvider:
    location: West Europe
    purgeProtectionEnabled: true
    resourceGroupNameSelector:
      matchLabels:
        testing.upbound.io/example-name: rgsynapsespark
    skuName: standard
    tenantId: ${data.azurerm_client_config.current.tenant_id}
---
apiVersion: machinelearningservices.azure.m.upbound.io/v1beta1
kind: Workspace
metadata:
  annotations:
    meta.upbound.io/example-id: machinelearningservices/v1beta2/synapsespark
  labels:
    testing.upbound.io/example-name: exampleworkspace002
  name: exampleworkspace002
  namespace: upbound-system
spec:
  forProvider:
    applicationInsightsIdSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    identity:
      type: SystemAssigned
    keyVaultIdSelector:
      matchLabels:
        testing.upbound.io/example-name: synapsesparkvault
    location: West Europe
    resourceGroupNameSelector:
      matchLabels:
        testing.upbound.io/example-name: rgsynapsespark
    storageAccountIdSelector:
      matchLabels:
        testing.upbound.io/example-name: example0001
---
apiVersion: azure.m.upbound.io/v1beta1
kind: ResourceGroup
metadata:
  annotations:
    meta.upbound.io/example-id: machinelearningservices/v1beta1/synapsespark
  labels:
    testing.upbound.io/example-name: rgsynapsespark
  name: rgsynapsespark
  namespace: upbound-system
spec:
  forProvider:
    location: West Europe
---
apiVersion: storage.azure.m.upbound.io/v1beta1
kind: Account
metadata:
  annotations:
    meta.upbound.io/example-id: machinelearningservices/v1beta2/synapsespark
  labels:
    testing.upbound.io/example-name: example0001
  name: example0001
  namespace: upbound-system
spec:
  forProvider:
    accountReplicationType: LRS
    accountTier: Standard
    location: West Europe
    resourceGroupNameSelector:
      matchLabels:
        testing.upbound.io/example-name: rgsynapsespark
---
apiVersion: storage.azure.m.upbound.io/v1beta1
kind: DataLakeGen2FileSystem
metadata:
  annotations:
    meta.upbound.io/example-id: machinelearningservices/v1beta2/synapsespark
  labels:
    testing.upbound.io/example-name: datalakegenfs
  name: datalakegenfs
  namespace: upbound-system
spec:
  forProvider:
    storageAccountIdSelector:
      matchLabels:
        testing.upbound.io/example-name: example0001
---
apiVersion: synapse.azure.m.upbound.io/v1beta1
kind: SparkPool
metadata:
  annotations:
    meta.upbound.io/example-id: machinelearningservices/v1beta2/synapsespark
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    nodeCount: 3
    nodeSize: Small
    nodeSizeFamily: MemoryOptimized
    synapseWorkspaceIdSelector:
      matchLabels:
        testing.upbound.io/example-name: exampleworkspace001
---
apiVersion: synapse.azure.m.upbound.io/v1beta1
kind: Workspace
metadata:
  annotations:
    meta.upbound.io/example-id: machinelearningservices/v1beta2/synapsespark
  labels:
    testing.upbound.io/example-name: exampleworkspace001
  name: exampleworkspace001
  namespace: upbound-system
spec:
  forProvider:
    identity:
      type: SystemAssigned
    location: West Europe
    resourceGroupNameSelector:
      matchLabels:
        testing.upbound.io/example-name: rgsynapsespark
    sqlAdministratorLogin: sqladminuser
    storageDataLakeGen2FilesystemIdSelector:
      matchLabels:
        testing.upbound.io/example-name: datalakegenfs
---
apiVersion: alertsmanagement.azure.m.upbound.io/v1beta1
kind: MonitorSmartDetectorAlertRule
metadata:
  annotations:
    meta.upbound.io/example-id: machinelearningservices/v1beta2/synapsespark
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    actionGroup:
      idsRefs:
        - name: example
    detectorType: FailureAnomaliesDetector
    frequency: PT1M
    name: myrule
    resourceGroupNameSelector:
      matchLabels:
        testing.upbound.io/example-name: rgsynapsespark
    scopeResourceIdsRefs:
      - name: example
    severity: Sev0
---
apiVersion: insights.azure.m.upbound.io/v1beta1
kind: MonitorActionGroup
metadata:
  annotations:
    meta.upbound.io/example-id: machinelearningservices/v1beta2/synapsespark
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    resourceGroupNameSelector:
      matchLabels:
        testing.upbound.io/example-name: rgsynapsespark
    shortName: examplegroup
