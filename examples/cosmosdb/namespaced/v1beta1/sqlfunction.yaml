# SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
#
# SPDX-License-Identifier: CC0-1.0

apiVersion: cosmosdb.azure.m.upbound.io/v1beta1
kind: SQLFunction
metadata:
  annotations:
    meta.upbound.io/example-id: cosmosdb/v1beta1/sqlfunction
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    body: function trigger(){}
    containerIdSelector:
      matchLabels:
        testing.upbound.io/example-name: example
---
apiVersion: cosmosdb.azure.m.upbound.io/v1beta1
kind: SQLContainer
metadata:
  annotations:
    meta.upbound.io/example-id: cosmosdb/v1beta1/sqlfunction
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    accountNameSelector:
      matchLabels:
        testing.upbound.io/example-name: sql
    databaseNameSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    partitionKeyPaths:
      - /id
    resourceGroupNameSelector:
      matchLabels:
        testing.upbound.io/example-name: rg1
---
apiVersion: cosmosdb.azure.m.upbound.io/v1beta1
kind: SQLDatabase
metadata:
  annotations:
    meta.upbound.io/example-id: cosmosdb/v1beta1/sqlfunction
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    accountNameSelector:
      matchLabels:
        testing.upbound.io/example-name: sql
    resourceGroupNameSelector:
      matchLabels:
        testing.upbound.io/example-name: rg1
    throughput: 400
---
apiVersion: cosmosdb.azure.m.upbound.io/v1beta1
kind: Account
metadata:
  annotations:
    meta.upbound.io/example-id: cosmosdb/v1beta1/sqlfunction
  labels:
    testing.upbound.io/example-name: sql
  name: example-cosmosdb-sql-${Rand.RFC1123Subdomain}
  namespace: upbound-system
spec:
  forProvider:
    consistencyPolicy:
      - consistencyLevel: BoundedStaleness
    geoLocation:
      - failoverPriority: 0
        location: West Europe
    location: West Europe
    offerType: Standard
    resourceGroupNameSelector:
      matchLabels:
        testing.upbound.io/example-name: rg1
---
apiVersion: cosmosdb.azure.m.upbound.io/v1beta1
kind: SQLTrigger
metadata:
  annotations:
    meta.upbound.io/example-id: cosmosdb/v1beta1/sqlfunction
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    body: function trigger(){}
    containerIdSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    operation: Delete
    type: Post
---
apiVersion: cosmosdb.azure.m.upbound.io/v1beta1
kind: SQLStoredProcedure
metadata:
  annotations:
    meta.upbound.io/example-id: cosmosdb/v1beta1/sqlfunction
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    accountNameSelector:
      matchLabels:
        testing.upbound.io/example-name: sql
    body: "  \tfunction () { var context = getContext(); var response = context.getResponse(); response.setBody('Hello, World'); }\n"
    containerNameSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    databaseNameSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    resourceGroupNameSelector:
      matchLabels:
        testing.upbound.io/example-name: rg1
---
apiVersion: azure.m.upbound.io/v1beta1
kind: ResourceGroup
metadata:
  annotations:
    meta.upbound.io/example-id: cosmosdb/v1beta1/sqlfunction
  labels:
    testing.upbound.io/example-name: rg1
  name: cosmosdb-func-rg
  namespace: upbound-system
spec:
  forProvider:
    location: West Europe
