apiVersion: cdn.azure.m.upbound.io/v1beta1
kind: FrontdoorSecret
metadata:
  annotations:
    meta.upbound.io/example-id: cdn/v1beta1/frontdoorsecret
    upjet.upbound.io/manual-intervention: |
      FrontoorSecret requires manual testing because you have to add Access Policy to your azurerm_key_vault for the Microsoft.AzurefrontDoor-Cdn Enterprise Application Object ID and
      create a secret which contains certificate which is not self-signed
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    cdnFrontdoorProfileIdSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    secret:
      customerCertificate:
      - keyVaultCertificateIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example

---

apiVersion: cdn.azure.m.upbound.io/v1beta1
kind: FrontdoorProfile
metadata:
  annotations:
    meta.upbound.io/example-id: cdn/v1beta1/frontdoorsecret
    upjet.upbound.io/manual-intervention: |
      FrontoorSecret requires manual testing because you have to add Access Policy to your azurerm_key_vault for the Microsoft.AzurefrontDoor-Cdn Enterprise Application Object ID and
      create a secret which contains certificate which is not self-signed
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    resourceGroupNameSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    skuName: Standard_AzureFrontDoor

---

apiVersion: keyvault.azure.m.upbound.io/v1beta1
kind: AccessPolicy
metadata:
  annotations:
    meta.upbound.io/example-id: cdn/v1beta1/frontdoorsecret
    upjet.upbound.io/manual-intervention: |
      FrontoorSecret requires manual testing because you have to add Access Policy to your azurerm_key_vault for the Microsoft.AzurefrontDoor-Cdn Enterprise Application Object ID and
      create a secret which contains certificate which is not self-signed
  labels:
    testing.upbound.io/example-name: example
  name: example-cdn
  namespace: upbound-system
spec:
  forProvider:
    keyVaultIdSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    objectId: ${data.azuread_service_principal.frontdoor.object_id}
    secretPermissions:
    - Get
    tenantId: ${data.azurerm_client_config.current.tenant_id}

---

apiVersion: keyvault.azure.m.upbound.io/v1beta1
kind: AccessPolicy
metadata:
  annotations:
    meta.upbound.io/example-id: cdn/v1beta1/frontdoorsecret
    upjet.upbound.io/manual-intervention: |
      FrontoorSecret requires manual testing because you have to add Access Policy to your azurerm_key_vault for the Microsoft.AzurefrontDoor-Cdn Enterprise Application Object ID and
      create a secret which contains certificate which is not self-signed
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    secretPermissions:
    - Get
    keyVaultIdSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    objectId: ${data.azurerm_client_config.current.object_id}
    certificatePermissions:
    - Get
    - Create
    - Delete
    - Purge
    - Recover
    - Import
    tenantId: ${data.azurerm_client_config.current.tenant_id}

---

apiVersion: keyvault.azure.m.upbound.io/v1beta1
kind: Vault
metadata:
  annotations:
    meta.upbound.io/example-id: cdn/v1beta1/frontdoorsecret
    upjet.upbound.io/manual-intervention: |
      FrontoorSecret requires manual testing because you have to add Access Policy to your azurerm_key_vault for the Microsoft.AzurefrontDoor-Cdn Enterprise Application Object ID and
      create a secret which contains certificate which is not self-signed
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    location: West Europe
    networkAcls:
      bypass: AzureServices
      defaultAction: Allow
    resourceGroupNameSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    skuName: premium
    softDeleteRetentionDays: 7
    tenantId: ${data.azurerm_client_config.current.tenant_id}

---

apiVersion: keyvault.azure.m.upbound.io/v1beta1
kind: Certificate
metadata:
  annotations:
    meta.upbound.io/example-id: cdn/v1beta1/frontdoorsecret
    upjet.upbound.io/manual-intervention: |
      FrontoorSecret requires manual testing because you have to add Access Policy to your azurerm_key_vault for the Microsoft.AzurefrontDoor-Cdn Enterprise Application Object ID and
      create a secret which contains certificate which is not self-signed
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    certificate:
      contentsSecretRef:
        key: example-key
        name: example-secret
    keyVaultIdSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    name: example-cert

---

apiVersion: azure.m.upbound.io/v1beta1
kind: ResourceGroup
metadata:
  annotations:
    meta.upbound.io/example-id: cdn/v1beta1/frontdoorsecret
    upjet.upbound.io/manual-intervention: |
      FrontoorSecret requires manual testing because you have to add Access Policy to your azurerm_key_vault for the Microsoft.AzurefrontDoor-Cdn Enterprise Application Object ID and
      create a secret which contains certificate which is not self-signed
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    location: West Europe
