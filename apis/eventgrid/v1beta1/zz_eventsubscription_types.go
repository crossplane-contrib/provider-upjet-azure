// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AdvancedFilterInitParameters struct {

	// Compares a value of an event using a single boolean value.
	BoolEquals []BoolEqualsInitParameters `json:"boolEquals,omitempty" tf:"bool_equals,omitempty"`

	// Evaluates if a value of an event isn't NULL or undefined.
	IsNotNull []IsNotNullInitParameters `json:"isNotNull,omitempty" tf:"is_not_null,omitempty"`

	// Evaluates if a value of an event is NULL or undefined.
	IsNullOrUndefined []IsNullOrUndefinedInitParameters `json:"isNullOrUndefined,omitempty" tf:"is_null_or_undefined,omitempty"`

	// Compares a value of an event using a single floating point number.
	NumberGreaterThan []NumberGreaterThanInitParameters `json:"numberGreaterThan,omitempty" tf:"number_greater_than,omitempty"`

	// Compares a value of an event using a single floating point number.
	NumberGreaterThanOrEquals []NumberGreaterThanOrEqualsInitParameters `json:"numberGreaterThanOrEquals,omitempty" tf:"number_greater_than_or_equals,omitempty"`

	// Compares a value of an event using multiple floating point numbers.
	NumberIn []NumberInInitParameters `json:"numberIn,omitempty" tf:"number_in,omitempty"`

	// Compares a value of an event using multiple floating point number ranges.
	NumberInRange []NumberInRangeInitParameters `json:"numberInRange,omitempty" tf:"number_in_range,omitempty"`

	// Compares a value of an event using a single floating point number.
	NumberLessThan []NumberLessThanInitParameters `json:"numberLessThan,omitempty" tf:"number_less_than,omitempty"`

	// Compares a value of an event using a single floating point number.
	NumberLessThanOrEquals []NumberLessThanOrEqualsInitParameters `json:"numberLessThanOrEquals,omitempty" tf:"number_less_than_or_equals,omitempty"`

	// Compares a value of an event using multiple floating point numbers.
	NumberNotIn []NumberNotInInitParameters `json:"numberNotIn,omitempty" tf:"number_not_in,omitempty"`

	// Compares a value of an event using multiple floating point number ranges.
	NumberNotInRange []NumberNotInRangeInitParameters `json:"numberNotInRange,omitempty" tf:"number_not_in_range,omitempty"`

	// Compares a value of an event using multiple string values.
	StringBeginsWith []StringBeginsWithInitParameters `json:"stringBeginsWith,omitempty" tf:"string_begins_with,omitempty"`

	// Compares a value of an event using multiple string values.
	StringContains []StringContainsInitParameters `json:"stringContains,omitempty" tf:"string_contains,omitempty"`

	// Compares a value of an event using multiple string values.
	StringEndsWith []StringEndsWithInitParameters `json:"stringEndsWith,omitempty" tf:"string_ends_with,omitempty"`

	// Compares a value of an event using multiple string values.
	StringIn []StringInInitParameters `json:"stringIn,omitempty" tf:"string_in,omitempty"`

	// Compares a value of an event using multiple string values.
	StringNotBeginsWith []StringNotBeginsWithInitParameters `json:"stringNotBeginsWith,omitempty" tf:"string_not_begins_with,omitempty"`

	// Compares a value of an event using multiple string values.
	StringNotContains []StringNotContainsInitParameters `json:"stringNotContains,omitempty" tf:"string_not_contains,omitempty"`

	// Compares a value of an event using multiple string values.
	StringNotEndsWith []StringNotEndsWithInitParameters `json:"stringNotEndsWith,omitempty" tf:"string_not_ends_with,omitempty"`

	// Compares a value of an event using multiple string values.
	StringNotIn []StringNotInInitParameters `json:"stringNotIn,omitempty" tf:"string_not_in,omitempty"`
}

type AdvancedFilterObservation struct {

	// Compares a value of an event using a single boolean value.
	BoolEquals []BoolEqualsObservation `json:"boolEquals,omitempty" tf:"bool_equals,omitempty"`

	// Evaluates if a value of an event isn't NULL or undefined.
	IsNotNull []IsNotNullObservation `json:"isNotNull,omitempty" tf:"is_not_null,omitempty"`

	// Evaluates if a value of an event is NULL or undefined.
	IsNullOrUndefined []IsNullOrUndefinedObservation `json:"isNullOrUndefined,omitempty" tf:"is_null_or_undefined,omitempty"`

	// Compares a value of an event using a single floating point number.
	NumberGreaterThan []NumberGreaterThanObservation `json:"numberGreaterThan,omitempty" tf:"number_greater_than,omitempty"`

	// Compares a value of an event using a single floating point number.
	NumberGreaterThanOrEquals []NumberGreaterThanOrEqualsObservation `json:"numberGreaterThanOrEquals,omitempty" tf:"number_greater_than_or_equals,omitempty"`

	// Compares a value of an event using multiple floating point numbers.
	NumberIn []NumberInObservation `json:"numberIn,omitempty" tf:"number_in,omitempty"`

	// Compares a value of an event using multiple floating point number ranges.
	NumberInRange []NumberInRangeObservation `json:"numberInRange,omitempty" tf:"number_in_range,omitempty"`

	// Compares a value of an event using a single floating point number.
	NumberLessThan []NumberLessThanObservation `json:"numberLessThan,omitempty" tf:"number_less_than,omitempty"`

	// Compares a value of an event using a single floating point number.
	NumberLessThanOrEquals []NumberLessThanOrEqualsObservation `json:"numberLessThanOrEquals,omitempty" tf:"number_less_than_or_equals,omitempty"`

	// Compares a value of an event using multiple floating point numbers.
	NumberNotIn []NumberNotInObservation `json:"numberNotIn,omitempty" tf:"number_not_in,omitempty"`

	// Compares a value of an event using multiple floating point number ranges.
	NumberNotInRange []NumberNotInRangeObservation `json:"numberNotInRange,omitempty" tf:"number_not_in_range,omitempty"`

	// Compares a value of an event using multiple string values.
	StringBeginsWith []StringBeginsWithObservation `json:"stringBeginsWith,omitempty" tf:"string_begins_with,omitempty"`

	// Compares a value of an event using multiple string values.
	StringContains []StringContainsObservation `json:"stringContains,omitempty" tf:"string_contains,omitempty"`

	// Compares a value of an event using multiple string values.
	StringEndsWith []StringEndsWithObservation `json:"stringEndsWith,omitempty" tf:"string_ends_with,omitempty"`

	// Compares a value of an event using multiple string values.
	StringIn []StringInObservation `json:"stringIn,omitempty" tf:"string_in,omitempty"`

	// Compares a value of an event using multiple string values.
	StringNotBeginsWith []StringNotBeginsWithObservation `json:"stringNotBeginsWith,omitempty" tf:"string_not_begins_with,omitempty"`

	// Compares a value of an event using multiple string values.
	StringNotContains []StringNotContainsObservation `json:"stringNotContains,omitempty" tf:"string_not_contains,omitempty"`

	// Compares a value of an event using multiple string values.
	StringNotEndsWith []StringNotEndsWithObservation `json:"stringNotEndsWith,omitempty" tf:"string_not_ends_with,omitempty"`

	// Compares a value of an event using multiple string values.
	StringNotIn []StringNotInObservation `json:"stringNotIn,omitempty" tf:"string_not_in,omitempty"`
}

type AdvancedFilterParameters struct {

	// Compares a value of an event using a single boolean value.
	// +kubebuilder:validation:Optional
	BoolEquals []BoolEqualsParameters `json:"boolEquals,omitempty" tf:"bool_equals,omitempty"`

	// Evaluates if a value of an event isn't NULL or undefined.
	// +kubebuilder:validation:Optional
	IsNotNull []IsNotNullParameters `json:"isNotNull,omitempty" tf:"is_not_null,omitempty"`

	// Evaluates if a value of an event is NULL or undefined.
	// +kubebuilder:validation:Optional
	IsNullOrUndefined []IsNullOrUndefinedParameters `json:"isNullOrUndefined,omitempty" tf:"is_null_or_undefined,omitempty"`

	// Compares a value of an event using a single floating point number.
	// +kubebuilder:validation:Optional
	NumberGreaterThan []NumberGreaterThanParameters `json:"numberGreaterThan,omitempty" tf:"number_greater_than,omitempty"`

	// Compares a value of an event using a single floating point number.
	// +kubebuilder:validation:Optional
	NumberGreaterThanOrEquals []NumberGreaterThanOrEqualsParameters `json:"numberGreaterThanOrEquals,omitempty" tf:"number_greater_than_or_equals,omitempty"`

	// Compares a value of an event using multiple floating point numbers.
	// +kubebuilder:validation:Optional
	NumberIn []NumberInParameters `json:"numberIn,omitempty" tf:"number_in,omitempty"`

	// Compares a value of an event using multiple floating point number ranges.
	// +kubebuilder:validation:Optional
	NumberInRange []NumberInRangeParameters `json:"numberInRange,omitempty" tf:"number_in_range,omitempty"`

	// Compares a value of an event using a single floating point number.
	// +kubebuilder:validation:Optional
	NumberLessThan []NumberLessThanParameters `json:"numberLessThan,omitempty" tf:"number_less_than,omitempty"`

	// Compares a value of an event using a single floating point number.
	// +kubebuilder:validation:Optional
	NumberLessThanOrEquals []NumberLessThanOrEqualsParameters `json:"numberLessThanOrEquals,omitempty" tf:"number_less_than_or_equals,omitempty"`

	// Compares a value of an event using multiple floating point numbers.
	// +kubebuilder:validation:Optional
	NumberNotIn []NumberNotInParameters `json:"numberNotIn,omitempty" tf:"number_not_in,omitempty"`

	// Compares a value of an event using multiple floating point number ranges.
	// +kubebuilder:validation:Optional
	NumberNotInRange []NumberNotInRangeParameters `json:"numberNotInRange,omitempty" tf:"number_not_in_range,omitempty"`

	// Compares a value of an event using multiple string values.
	// +kubebuilder:validation:Optional
	StringBeginsWith []StringBeginsWithParameters `json:"stringBeginsWith,omitempty" tf:"string_begins_with,omitempty"`

	// Compares a value of an event using multiple string values.
	// +kubebuilder:validation:Optional
	StringContains []StringContainsParameters `json:"stringContains,omitempty" tf:"string_contains,omitempty"`

	// Compares a value of an event using multiple string values.
	// +kubebuilder:validation:Optional
	StringEndsWith []StringEndsWithParameters `json:"stringEndsWith,omitempty" tf:"string_ends_with,omitempty"`

	// Compares a value of an event using multiple string values.
	// +kubebuilder:validation:Optional
	StringIn []StringInParameters `json:"stringIn,omitempty" tf:"string_in,omitempty"`

	// Compares a value of an event using multiple string values.
	// +kubebuilder:validation:Optional
	StringNotBeginsWith []StringNotBeginsWithParameters `json:"stringNotBeginsWith,omitempty" tf:"string_not_begins_with,omitempty"`

	// Compares a value of an event using multiple string values.
	// +kubebuilder:validation:Optional
	StringNotContains []StringNotContainsParameters `json:"stringNotContains,omitempty" tf:"string_not_contains,omitempty"`

	// Compares a value of an event using multiple string values.
	// +kubebuilder:validation:Optional
	StringNotEndsWith []StringNotEndsWithParameters `json:"stringNotEndsWith,omitempty" tf:"string_not_ends_with,omitempty"`

	// Compares a value of an event using multiple string values.
	// +kubebuilder:validation:Optional
	StringNotIn []StringNotInParameters `json:"stringNotIn,omitempty" tf:"string_not_in,omitempty"`
}

type AzureFunctionEndpointInitParameters struct {

	// Specifies the ID of the Function where the Event Subscription will receive events. This must be the functions ID in format {function_app.id}/functions/{name}.
	FunctionID *string `json:"functionId,omitempty" tf:"function_id,omitempty"`

	// Maximum number of events per batch.
	MaxEventsPerBatch *float64 `json:"maxEventsPerBatch,omitempty" tf:"max_events_per_batch,omitempty"`

	// Preferred batch size in Kilobytes.
	PreferredBatchSizeInKilobytes *float64 `json:"preferredBatchSizeInKilobytes,omitempty" tf:"preferred_batch_size_in_kilobytes,omitempty"`
}

type AzureFunctionEndpointObservation struct {

	// Specifies the ID of the Function where the Event Subscription will receive events. This must be the functions ID in format {function_app.id}/functions/{name}.
	FunctionID *string `json:"functionId,omitempty" tf:"function_id,omitempty"`

	// Maximum number of events per batch.
	MaxEventsPerBatch *float64 `json:"maxEventsPerBatch,omitempty" tf:"max_events_per_batch,omitempty"`

	// Preferred batch size in Kilobytes.
	PreferredBatchSizeInKilobytes *float64 `json:"preferredBatchSizeInKilobytes,omitempty" tf:"preferred_batch_size_in_kilobytes,omitempty"`
}

type AzureFunctionEndpointParameters struct {

	// Specifies the ID of the Function where the Event Subscription will receive events. This must be the functions ID in format {function_app.id}/functions/{name}.
	// +kubebuilder:validation:Optional
	FunctionID *string `json:"functionId" tf:"function_id,omitempty"`

	// Maximum number of events per batch.
	// +kubebuilder:validation:Optional
	MaxEventsPerBatch *float64 `json:"maxEventsPerBatch,omitempty" tf:"max_events_per_batch,omitempty"`

	// Preferred batch size in Kilobytes.
	// +kubebuilder:validation:Optional
	PreferredBatchSizeInKilobytes *float64 `json:"preferredBatchSizeInKilobytes,omitempty" tf:"preferred_batch_size_in_kilobytes,omitempty"`
}

type BoolEqualsInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	Value *bool `json:"value,omitempty" tf:"value,omitempty"`
}

type BoolEqualsObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	Value *bool `json:"value,omitempty" tf:"value,omitempty"`
}

type BoolEqualsParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	// +kubebuilder:validation:Optional
	Value *bool `json:"value" tf:"value,omitempty"`
}

type DeadLetterIdentityInitParameters struct {

	// Specifies the type of Managed Service Identity that is used for dead lettering. Allowed value is SystemAssigned, UserAssigned.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The user identity associated with the resource.
	UserAssignedIdentity *string `json:"userAssignedIdentity,omitempty" tf:"user_assigned_identity,omitempty"`
}

type DeadLetterIdentityObservation struct {

	// Specifies the type of Managed Service Identity that is used for dead lettering. Allowed value is SystemAssigned, UserAssigned.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The user identity associated with the resource.
	UserAssignedIdentity *string `json:"userAssignedIdentity,omitempty" tf:"user_assigned_identity,omitempty"`
}

type DeadLetterIdentityParameters struct {

	// Specifies the type of Managed Service Identity that is used for dead lettering. Allowed value is SystemAssigned, UserAssigned.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// The user identity associated with the resource.
	// +kubebuilder:validation:Optional
	UserAssignedIdentity *string `json:"userAssignedIdentity,omitempty" tf:"user_assigned_identity,omitempty"`
}

type DeliveryIdentityInitParameters struct {

	// Specifies the type of Managed Service Identity that is used for event delivery. Allowed value is SystemAssigned, UserAssigned.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The user identity associated with the resource.
	UserAssignedIdentity *string `json:"userAssignedIdentity,omitempty" tf:"user_assigned_identity,omitempty"`
}

type DeliveryIdentityObservation struct {

	// Specifies the type of Managed Service Identity that is used for event delivery. Allowed value is SystemAssigned, UserAssigned.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The user identity associated with the resource.
	UserAssignedIdentity *string `json:"userAssignedIdentity,omitempty" tf:"user_assigned_identity,omitempty"`
}

type DeliveryIdentityParameters struct {

	// Specifies the type of Managed Service Identity that is used for event delivery. Allowed value is SystemAssigned, UserAssigned.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// The user identity associated with the resource.
	// +kubebuilder:validation:Optional
	UserAssignedIdentity *string `json:"userAssignedIdentity,omitempty" tf:"user_assigned_identity,omitempty"`
}

type DeliveryPropertyInitParameters struct {

	// The name of the header to send on to the destination
	HeaderName *string `json:"headerName,omitempty" tf:"header_name,omitempty"`

	// True if the value is a secret and should be protected, otherwise false. If True, then this value won't be returned from Azure API calls
	Secret *bool `json:"secret,omitempty" tf:"secret,omitempty"`

	// If the type is Dynamic, then provide the payload field to be used as the value. Valid source fields differ by subscription type.
	SourceField *string `json:"sourceField,omitempty" tf:"source_field,omitempty"`

	// Either Static or Dynamic
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type DeliveryPropertyObservation struct {

	// The name of the header to send on to the destination
	HeaderName *string `json:"headerName,omitempty" tf:"header_name,omitempty"`

	// True if the value is a secret and should be protected, otherwise false. If True, then this value won't be returned from Azure API calls
	Secret *bool `json:"secret,omitempty" tf:"secret,omitempty"`

	// If the type is Dynamic, then provide the payload field to be used as the value. Valid source fields differ by subscription type.
	SourceField *string `json:"sourceField,omitempty" tf:"source_field,omitempty"`

	// Either Static or Dynamic
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type DeliveryPropertyParameters struct {

	// The name of the header to send on to the destination
	// +kubebuilder:validation:Optional
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// True if the value is a secret and should be protected, otherwise false. If True, then this value won't be returned from Azure API calls
	// +kubebuilder:validation:Optional
	Secret *bool `json:"secret,omitempty" tf:"secret,omitempty"`

	// If the type is Dynamic, then provide the payload field to be used as the value. Valid source fields differ by subscription type.
	// +kubebuilder:validation:Optional
	SourceField *string `json:"sourceField,omitempty" tf:"source_field,omitempty"`

	// Either Static or Dynamic
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// If the type is Static, then provide the value to use
	// +kubebuilder:validation:Optional
	ValueSecretRef *v1.SecretKeySelector `json:"valueSecretRef,omitempty" tf:"-"`
}

type EventSubscriptionInitParameters struct {

	// A advanced_filter block as defined below.
	AdvancedFilter []AdvancedFilterInitParameters `json:"advancedFilter,omitempty" tf:"advanced_filter,omitempty"`

	// Specifies whether advanced filters should be evaluated against an array of values instead of expecting a singular value. Defaults to false.
	AdvancedFilteringOnArraysEnabled *bool `json:"advancedFilteringOnArraysEnabled,omitempty" tf:"advanced_filtering_on_arrays_enabled,omitempty"`

	// An azure_function_endpoint block as defined below.
	AzureFunctionEndpoint []AzureFunctionEndpointInitParameters `json:"azureFunctionEndpoint,omitempty" tf:"azure_function_endpoint,omitempty"`

	// A dead_letter_identity block as defined below.
	DeadLetterIdentity []DeadLetterIdentityInitParameters `json:"deadLetterIdentity,omitempty" tf:"dead_letter_identity,omitempty"`

	// A delivery_identity block as defined below.
	DeliveryIdentity []DeliveryIdentityInitParameters `json:"deliveryIdentity,omitempty" tf:"delivery_identity,omitempty"`

	// One or more delivery_property blocks as defined below.
	DeliveryProperty []DeliveryPropertyInitParameters `json:"deliveryProperty,omitempty" tf:"delivery_property,omitempty"`

	// Specifies the event delivery schema for the event subscription. Possible values include: EventGridSchema, CloudEventSchemaV1_0, CustomInputSchema. Defaults to EventGridSchema. Changing this forces a new resource to be created.
	EventDeliverySchema *string `json:"eventDeliverySchema,omitempty" tf:"event_delivery_schema,omitempty"`

	// Specifies the id where the Event Hub is located.
	EventHubEndpointID *string `json:"eventhubEndpointId,omitempty" tf:"eventhub_endpoint_id,omitempty"`

	// Specifies the expiration time of the event subscription (Datetime Format RFC 3339).
	ExpirationTimeUtc *string `json:"expirationTimeUtc,omitempty" tf:"expiration_time_utc,omitempty"`

	// Specifies the id where the Hybrid Connection is located.
	HybridConnectionEndpointID *string `json:"hybridConnectionEndpointId,omitempty" tf:"hybrid_connection_endpoint_id,omitempty"`

	// A list of applicable event types that need to be part of the event subscription.
	IncludedEventTypes []*string `json:"includedEventTypes,omitempty" tf:"included_event_types,omitempty"`

	// A list of labels to assign to the event subscription.
	Labels []*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Specifies the name of the EventGrid Event Subscription resource. Changing this forces a new resource to be created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// A retry_policy block as defined below.
	RetryPolicy []RetryPolicyInitParameters `json:"retryPolicy,omitempty" tf:"retry_policy,omitempty"`

	// Specifies the id where the Service Bus Queue is located.
	ServiceBusQueueEndpointID *string `json:"serviceBusQueueEndpointId,omitempty" tf:"service_bus_queue_endpoint_id,omitempty"`

	// Specifies the id where the Service Bus Topic is located.
	ServiceBusTopicEndpointID *string `json:"serviceBusTopicEndpointId,omitempty" tf:"service_bus_topic_endpoint_id,omitempty"`

	// A storage_blob_dead_letter_destination block as defined below.
	StorageBlobDeadLetterDestination []StorageBlobDeadLetterDestinationInitParameters `json:"storageBlobDeadLetterDestination,omitempty" tf:"storage_blob_dead_letter_destination,omitempty"`

	// A storage_queue_endpoint block as defined below.
	StorageQueueEndpoint []StorageQueueEndpointInitParameters `json:"storageQueueEndpoint,omitempty" tf:"storage_queue_endpoint,omitempty"`

	// A subject_filter block as defined below.
	SubjectFilter []SubjectFilterInitParameters `json:"subjectFilter,omitempty" tf:"subject_filter,omitempty"`

	// A webhook_endpoint block as defined below.
	WebhookEndpoint []WebhookEndpointInitParameters `json:"webhookEndpoint,omitempty" tf:"webhook_endpoint,omitempty"`
}

type EventSubscriptionObservation struct {

	// A advanced_filter block as defined below.
	AdvancedFilter []AdvancedFilterObservation `json:"advancedFilter,omitempty" tf:"advanced_filter,omitempty"`

	// Specifies whether advanced filters should be evaluated against an array of values instead of expecting a singular value. Defaults to false.
	AdvancedFilteringOnArraysEnabled *bool `json:"advancedFilteringOnArraysEnabled,omitempty" tf:"advanced_filtering_on_arrays_enabled,omitempty"`

	// An azure_function_endpoint block as defined below.
	AzureFunctionEndpoint []AzureFunctionEndpointObservation `json:"azureFunctionEndpoint,omitempty" tf:"azure_function_endpoint,omitempty"`

	// A dead_letter_identity block as defined below.
	DeadLetterIdentity []DeadLetterIdentityObservation `json:"deadLetterIdentity,omitempty" tf:"dead_letter_identity,omitempty"`

	// A delivery_identity block as defined below.
	DeliveryIdentity []DeliveryIdentityObservation `json:"deliveryIdentity,omitempty" tf:"delivery_identity,omitempty"`

	// One or more delivery_property blocks as defined below.
	DeliveryProperty []DeliveryPropertyObservation `json:"deliveryProperty,omitempty" tf:"delivery_property,omitempty"`

	// Specifies the event delivery schema for the event subscription. Possible values include: EventGridSchema, CloudEventSchemaV1_0, CustomInputSchema. Defaults to EventGridSchema. Changing this forces a new resource to be created.
	EventDeliverySchema *string `json:"eventDeliverySchema,omitempty" tf:"event_delivery_schema,omitempty"`

	// Specifies the id where the Event Hub is located.
	EventHubEndpointID *string `json:"eventhubEndpointId,omitempty" tf:"eventhub_endpoint_id,omitempty"`

	// Specifies the expiration time of the event subscription (Datetime Format RFC 3339).
	ExpirationTimeUtc *string `json:"expirationTimeUtc,omitempty" tf:"expiration_time_utc,omitempty"`

	// Specifies the id where the Hybrid Connection is located.
	HybridConnectionEndpointID *string `json:"hybridConnectionEndpointId,omitempty" tf:"hybrid_connection_endpoint_id,omitempty"`

	// The ID of the EventGrid Event Subscription.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A list of applicable event types that need to be part of the event subscription.
	IncludedEventTypes []*string `json:"includedEventTypes,omitempty" tf:"included_event_types,omitempty"`

	// A list of labels to assign to the event subscription.
	Labels []*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Specifies the name of the EventGrid Event Subscription resource. Changing this forces a new resource to be created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// A retry_policy block as defined below.
	RetryPolicy []RetryPolicyObservation `json:"retryPolicy,omitempty" tf:"retry_policy,omitempty"`

	// Specifies the scope at which the EventGrid Event Subscription should be created. Changing this forces a new resource to be created.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// Specifies the id where the Service Bus Queue is located.
	ServiceBusQueueEndpointID *string `json:"serviceBusQueueEndpointId,omitempty" tf:"service_bus_queue_endpoint_id,omitempty"`

	// Specifies the id where the Service Bus Topic is located.
	ServiceBusTopicEndpointID *string `json:"serviceBusTopicEndpointId,omitempty" tf:"service_bus_topic_endpoint_id,omitempty"`

	// A storage_blob_dead_letter_destination block as defined below.
	StorageBlobDeadLetterDestination []StorageBlobDeadLetterDestinationObservation `json:"storageBlobDeadLetterDestination,omitempty" tf:"storage_blob_dead_letter_destination,omitempty"`

	// A storage_queue_endpoint block as defined below.
	StorageQueueEndpoint []StorageQueueEndpointObservation `json:"storageQueueEndpoint,omitempty" tf:"storage_queue_endpoint,omitempty"`

	// A subject_filter block as defined below.
	SubjectFilter []SubjectFilterObservation `json:"subjectFilter,omitempty" tf:"subject_filter,omitempty"`

	// A webhook_endpoint block as defined below.
	WebhookEndpoint []WebhookEndpointObservation `json:"webhookEndpoint,omitempty" tf:"webhook_endpoint,omitempty"`
}

type EventSubscriptionParameters struct {

	// A advanced_filter block as defined below.
	// +kubebuilder:validation:Optional
	AdvancedFilter []AdvancedFilterParameters `json:"advancedFilter,omitempty" tf:"advanced_filter,omitempty"`

	// Specifies whether advanced filters should be evaluated against an array of values instead of expecting a singular value. Defaults to false.
	// +kubebuilder:validation:Optional
	AdvancedFilteringOnArraysEnabled *bool `json:"advancedFilteringOnArraysEnabled,omitempty" tf:"advanced_filtering_on_arrays_enabled,omitempty"`

	// An azure_function_endpoint block as defined below.
	// +kubebuilder:validation:Optional
	AzureFunctionEndpoint []AzureFunctionEndpointParameters `json:"azureFunctionEndpoint,omitempty" tf:"azure_function_endpoint,omitempty"`

	// A dead_letter_identity block as defined below.
	// +kubebuilder:validation:Optional
	DeadLetterIdentity []DeadLetterIdentityParameters `json:"deadLetterIdentity,omitempty" tf:"dead_letter_identity,omitempty"`

	// A delivery_identity block as defined below.
	// +kubebuilder:validation:Optional
	DeliveryIdentity []DeliveryIdentityParameters `json:"deliveryIdentity,omitempty" tf:"delivery_identity,omitempty"`

	// One or more delivery_property blocks as defined below.
	// +kubebuilder:validation:Optional
	DeliveryProperty []DeliveryPropertyParameters `json:"deliveryProperty,omitempty" tf:"delivery_property,omitempty"`

	// Specifies the event delivery schema for the event subscription. Possible values include: EventGridSchema, CloudEventSchemaV1_0, CustomInputSchema. Defaults to EventGridSchema. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	EventDeliverySchema *string `json:"eventDeliverySchema,omitempty" tf:"event_delivery_schema,omitempty"`

	// Specifies the id where the Event Hub is located.
	// +kubebuilder:validation:Optional
	EventHubEndpointID *string `json:"eventhubEndpointId,omitempty" tf:"eventhub_endpoint_id,omitempty"`

	// Specifies the expiration time of the event subscription (Datetime Format RFC 3339).
	// +kubebuilder:validation:Optional
	ExpirationTimeUtc *string `json:"expirationTimeUtc,omitempty" tf:"expiration_time_utc,omitempty"`

	// Specifies the id where the Hybrid Connection is located.
	// +kubebuilder:validation:Optional
	HybridConnectionEndpointID *string `json:"hybridConnectionEndpointId,omitempty" tf:"hybrid_connection_endpoint_id,omitempty"`

	// A list of applicable event types that need to be part of the event subscription.
	// +kubebuilder:validation:Optional
	IncludedEventTypes []*string `json:"includedEventTypes,omitempty" tf:"included_event_types,omitempty"`

	// A list of labels to assign to the event subscription.
	// +kubebuilder:validation:Optional
	Labels []*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Specifies the name of the EventGrid Event Subscription resource. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// A retry_policy block as defined below.
	// +kubebuilder:validation:Optional
	RetryPolicy []RetryPolicyParameters `json:"retryPolicy,omitempty" tf:"retry_policy,omitempty"`

	// Specifies the scope at which the EventGrid Event Subscription should be created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// Reference to a ResourceGroup in azure to populate scope.
	// +kubebuilder:validation:Optional
	ScopeRef *v1.Reference `json:"scopeRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate scope.
	// +kubebuilder:validation:Optional
	ScopeSelector *v1.Selector `json:"scopeSelector,omitempty" tf:"-"`

	// Specifies the id where the Service Bus Queue is located.
	// +kubebuilder:validation:Optional
	ServiceBusQueueEndpointID *string `json:"serviceBusQueueEndpointId,omitempty" tf:"service_bus_queue_endpoint_id,omitempty"`

	// Specifies the id where the Service Bus Topic is located.
	// +kubebuilder:validation:Optional
	ServiceBusTopicEndpointID *string `json:"serviceBusTopicEndpointId,omitempty" tf:"service_bus_topic_endpoint_id,omitempty"`

	// A storage_blob_dead_letter_destination block as defined below.
	// +kubebuilder:validation:Optional
	StorageBlobDeadLetterDestination []StorageBlobDeadLetterDestinationParameters `json:"storageBlobDeadLetterDestination,omitempty" tf:"storage_blob_dead_letter_destination,omitempty"`

	// A storage_queue_endpoint block as defined below.
	// +kubebuilder:validation:Optional
	StorageQueueEndpoint []StorageQueueEndpointParameters `json:"storageQueueEndpoint,omitempty" tf:"storage_queue_endpoint,omitempty"`

	// A subject_filter block as defined below.
	// +kubebuilder:validation:Optional
	SubjectFilter []SubjectFilterParameters `json:"subjectFilter,omitempty" tf:"subject_filter,omitempty"`

	// A webhook_endpoint block as defined below.
	// +kubebuilder:validation:Optional
	WebhookEndpoint []WebhookEndpointParameters `json:"webhookEndpoint,omitempty" tf:"webhook_endpoint,omitempty"`
}

type IsNotNullInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type IsNotNullObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type IsNotNullParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`
}

type IsNullOrUndefinedInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type IsNullOrUndefinedObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type IsNullOrUndefinedParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`
}

type NumberGreaterThanInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type NumberGreaterThanObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type NumberGreaterThanOrEqualsInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type NumberGreaterThanOrEqualsObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type NumberGreaterThanOrEqualsParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	// +kubebuilder:validation:Optional
	Value *float64 `json:"value" tf:"value,omitempty"`
}

type NumberGreaterThanParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	// +kubebuilder:validation:Optional
	Value *float64 `json:"value" tf:"value,omitempty"`
}

type NumberInInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*float64 `json:"values,omitempty" tf:"values,omitempty"`
}

type NumberInObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*float64 `json:"values,omitempty" tf:"values,omitempty"`
}

type NumberInParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values []*float64 `json:"values" tf:"values,omitempty"`
}

type NumberInRangeInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values [][]*float64 `json:"values,omitempty" tf:"values,omitempty"`
}

type NumberInRangeObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values [][]*float64 `json:"values,omitempty" tf:"values,omitempty"`
}

type NumberInRangeParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values [][]*float64 `json:"values" tf:"values,omitempty"`
}

type NumberLessThanInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type NumberLessThanObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type NumberLessThanOrEqualsInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type NumberLessThanOrEqualsObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type NumberLessThanOrEqualsParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	// +kubebuilder:validation:Optional
	Value *float64 `json:"value" tf:"value,omitempty"`
}

type NumberLessThanParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	// +kubebuilder:validation:Optional
	Value *float64 `json:"value" tf:"value,omitempty"`
}

type NumberNotInInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*float64 `json:"values,omitempty" tf:"values,omitempty"`
}

type NumberNotInObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*float64 `json:"values,omitempty" tf:"values,omitempty"`
}

type NumberNotInParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values []*float64 `json:"values" tf:"values,omitempty"`
}

type NumberNotInRangeInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values [][]*float64 `json:"values,omitempty" tf:"values,omitempty"`
}

type NumberNotInRangeObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values [][]*float64 `json:"values,omitempty" tf:"values,omitempty"`
}

type NumberNotInRangeParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values [][]*float64 `json:"values" tf:"values,omitempty"`
}

type RetryPolicyInitParameters struct {

	// Specifies the time to live (in minutes) for events. Supported range is 1 to 1440. See official documentation for more details.
	EventTimeToLive *float64 `json:"eventTimeToLive,omitempty" tf:"event_time_to_live,omitempty"`

	// Specifies the maximum number of delivery retry attempts for events.
	MaxDeliveryAttempts *float64 `json:"maxDeliveryAttempts,omitempty" tf:"max_delivery_attempts,omitempty"`
}

type RetryPolicyObservation struct {

	// Specifies the time to live (in minutes) for events. Supported range is 1 to 1440. See official documentation for more details.
	EventTimeToLive *float64 `json:"eventTimeToLive,omitempty" tf:"event_time_to_live,omitempty"`

	// Specifies the maximum number of delivery retry attempts for events.
	MaxDeliveryAttempts *float64 `json:"maxDeliveryAttempts,omitempty" tf:"max_delivery_attempts,omitempty"`
}

type RetryPolicyParameters struct {

	// Specifies the time to live (in minutes) for events. Supported range is 1 to 1440. See official documentation for more details.
	// +kubebuilder:validation:Optional
	EventTimeToLive *float64 `json:"eventTimeToLive" tf:"event_time_to_live,omitempty"`

	// Specifies the maximum number of delivery retry attempts for events.
	// +kubebuilder:validation:Optional
	MaxDeliveryAttempts *float64 `json:"maxDeliveryAttempts" tf:"max_delivery_attempts,omitempty"`
}

type StorageBlobDeadLetterDestinationInitParameters struct {

	// Specifies the id of the storage account id where the storage blob is located.
	StorageAccountID *string `json:"storageAccountId,omitempty" tf:"storage_account_id,omitempty"`

	// Specifies the name of the Storage blob container that is the destination of the deadletter events.
	StorageBlobContainerName *string `json:"storageBlobContainerName,omitempty" tf:"storage_blob_container_name,omitempty"`
}

type StorageBlobDeadLetterDestinationObservation struct {

	// Specifies the id of the storage account id where the storage blob is located.
	StorageAccountID *string `json:"storageAccountId,omitempty" tf:"storage_account_id,omitempty"`

	// Specifies the name of the Storage blob container that is the destination of the deadletter events.
	StorageBlobContainerName *string `json:"storageBlobContainerName,omitempty" tf:"storage_blob_container_name,omitempty"`
}

type StorageBlobDeadLetterDestinationParameters struct {

	// Specifies the id of the storage account id where the storage blob is located.
	// +kubebuilder:validation:Optional
	StorageAccountID *string `json:"storageAccountId" tf:"storage_account_id,omitempty"`

	// Specifies the name of the Storage blob container that is the destination of the deadletter events.
	// +kubebuilder:validation:Optional
	StorageBlobContainerName *string `json:"storageBlobContainerName" tf:"storage_blob_container_name,omitempty"`
}

type StorageQueueEndpointInitParameters struct {

	// Storage queue message time to live in seconds.
	QueueMessageTimeToLiveInSeconds *float64 `json:"queueMessageTimeToLiveInSeconds,omitempty" tf:"queue_message_time_to_live_in_seconds,omitempty"`
}

type StorageQueueEndpointObservation struct {

	// Storage queue message time to live in seconds.
	QueueMessageTimeToLiveInSeconds *float64 `json:"queueMessageTimeToLiveInSeconds,omitempty" tf:"queue_message_time_to_live_in_seconds,omitempty"`

	// Specifies the name of the storage queue where the Event Subscription will receive events.
	QueueName *string `json:"queueName,omitempty" tf:"queue_name,omitempty"`

	// Specifies the id of the storage account id where the storage queue is located.
	StorageAccountID *string `json:"storageAccountId,omitempty" tf:"storage_account_id,omitempty"`
}

type StorageQueueEndpointParameters struct {

	// Storage queue message time to live in seconds.
	// +kubebuilder:validation:Optional
	QueueMessageTimeToLiveInSeconds *float64 `json:"queueMessageTimeToLiveInSeconds,omitempty" tf:"queue_message_time_to_live_in_seconds,omitempty"`

	// Specifies the name of the storage queue where the Event Subscription will receive events.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Queue
	// +kubebuilder:validation:Optional
	QueueName *string `json:"queueName,omitempty" tf:"queue_name,omitempty"`

	// Reference to a Queue in storage to populate queueName.
	// +kubebuilder:validation:Optional
	QueueNameRef *v1.Reference `json:"queueNameRef,omitempty" tf:"-"`

	// Selector for a Queue in storage to populate queueName.
	// +kubebuilder:validation:Optional
	QueueNameSelector *v1.Selector `json:"queueNameSelector,omitempty" tf:"-"`

	// Specifies the id of the storage account id where the storage queue is located.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	StorageAccountID *string `json:"storageAccountId,omitempty" tf:"storage_account_id,omitempty"`

	// Reference to a Account in storage to populate storageAccountId.
	// +kubebuilder:validation:Optional
	StorageAccountIDRef *v1.Reference `json:"storageAccountIdRef,omitempty" tf:"-"`

	// Selector for a Account in storage to populate storageAccountId.
	// +kubebuilder:validation:Optional
	StorageAccountIDSelector *v1.Selector `json:"storageAccountIdSelector,omitempty" tf:"-"`
}

type StringBeginsWithInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type StringBeginsWithObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type StringBeginsWithParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type StringContainsInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type StringContainsObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type StringContainsParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type StringEndsWithInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type StringEndsWithObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type StringEndsWithParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type StringInInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type StringInObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type StringInParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type StringNotBeginsWithInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type StringNotBeginsWithObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type StringNotBeginsWithParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type StringNotContainsInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type StringNotContainsObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type StringNotContainsParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type StringNotEndsWithInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type StringNotEndsWithObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type StringNotEndsWithParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type StringNotInInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type StringNotInObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type StringNotInParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type SubjectFilterInitParameters struct {

	// Specifies if subject_begins_with and subject_ends_with case sensitive. This value
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive,omitempty"`

	// A string to filter events for an event subscription based on a resource path prefix.
	SubjectBeginsWith *string `json:"subjectBeginsWith,omitempty" tf:"subject_begins_with,omitempty"`

	// A string to filter events for an event subscription based on a resource path suffix.
	SubjectEndsWith *string `json:"subjectEndsWith,omitempty" tf:"subject_ends_with,omitempty"`
}

type SubjectFilterObservation struct {

	// Specifies if subject_begins_with and subject_ends_with case sensitive. This value
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive,omitempty"`

	// A string to filter events for an event subscription based on a resource path prefix.
	SubjectBeginsWith *string `json:"subjectBeginsWith,omitempty" tf:"subject_begins_with,omitempty"`

	// A string to filter events for an event subscription based on a resource path suffix.
	SubjectEndsWith *string `json:"subjectEndsWith,omitempty" tf:"subject_ends_with,omitempty"`
}

type SubjectFilterParameters struct {

	// Specifies if subject_begins_with and subject_ends_with case sensitive. This value
	// +kubebuilder:validation:Optional
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive,omitempty"`

	// A string to filter events for an event subscription based on a resource path prefix.
	// +kubebuilder:validation:Optional
	SubjectBeginsWith *string `json:"subjectBeginsWith,omitempty" tf:"subject_begins_with,omitempty"`

	// A string to filter events for an event subscription based on a resource path suffix.
	// +kubebuilder:validation:Optional
	SubjectEndsWith *string `json:"subjectEndsWith,omitempty" tf:"subject_ends_with,omitempty"`
}

type WebhookEndpointInitParameters struct {

	// The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.
	ActiveDirectoryAppIDOrURI *string `json:"activeDirectoryAppIdOrUri,omitempty" tf:"active_directory_app_id_or_uri,omitempty"`

	// The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.
	ActiveDirectoryTenantID *string `json:"activeDirectoryTenantId,omitempty" tf:"active_directory_tenant_id,omitempty"`

	// Maximum number of events per batch.
	MaxEventsPerBatch *float64 `json:"maxEventsPerBatch,omitempty" tf:"max_events_per_batch,omitempty"`

	// Preferred batch size in Kilobytes.
	PreferredBatchSizeInKilobytes *float64 `json:"preferredBatchSizeInKilobytes,omitempty" tf:"preferred_batch_size_in_kilobytes,omitempty"`

	// Specifies the url of the webhook where the Event Subscription will receive events.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type WebhookEndpointObservation struct {

	// The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.
	ActiveDirectoryAppIDOrURI *string `json:"activeDirectoryAppIdOrUri,omitempty" tf:"active_directory_app_id_or_uri,omitempty"`

	// The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.
	ActiveDirectoryTenantID *string `json:"activeDirectoryTenantId,omitempty" tf:"active_directory_tenant_id,omitempty"`

	// (Computed) The base url of the webhook where the Event Subscription will receive events.
	BaseURL *string `json:"baseUrl,omitempty" tf:"base_url,omitempty"`

	// Maximum number of events per batch.
	MaxEventsPerBatch *float64 `json:"maxEventsPerBatch,omitempty" tf:"max_events_per_batch,omitempty"`

	// Preferred batch size in Kilobytes.
	PreferredBatchSizeInKilobytes *float64 `json:"preferredBatchSizeInKilobytes,omitempty" tf:"preferred_batch_size_in_kilobytes,omitempty"`

	// Specifies the url of the webhook where the Event Subscription will receive events.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type WebhookEndpointParameters struct {

	// The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.
	// +kubebuilder:validation:Optional
	ActiveDirectoryAppIDOrURI *string `json:"activeDirectoryAppIdOrUri,omitempty" tf:"active_directory_app_id_or_uri,omitempty"`

	// The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.
	// +kubebuilder:validation:Optional
	ActiveDirectoryTenantID *string `json:"activeDirectoryTenantId,omitempty" tf:"active_directory_tenant_id,omitempty"`

	// Maximum number of events per batch.
	// +kubebuilder:validation:Optional
	MaxEventsPerBatch *float64 `json:"maxEventsPerBatch,omitempty" tf:"max_events_per_batch,omitempty"`

	// Preferred batch size in Kilobytes.
	// +kubebuilder:validation:Optional
	PreferredBatchSizeInKilobytes *float64 `json:"preferredBatchSizeInKilobytes,omitempty" tf:"preferred_batch_size_in_kilobytes,omitempty"`

	// Specifies the url of the webhook where the Event Subscription will receive events.
	// +kubebuilder:validation:Optional
	URL *string `json:"url" tf:"url,omitempty"`
}

// EventSubscriptionSpec defines the desired state of EventSubscription
type EventSubscriptionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     EventSubscriptionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider EventSubscriptionInitParameters `json:"initProvider,omitempty"`
}

// EventSubscriptionStatus defines the observed state of EventSubscription.
type EventSubscriptionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EventSubscriptionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// EventSubscription is the Schema for the EventSubscriptions API. Manages an EventGrid Event Subscription
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type EventSubscription struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   EventSubscriptionSpec   `json:"spec"`
	Status EventSubscriptionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EventSubscriptionList contains a list of EventSubscriptions
type EventSubscriptionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []EventSubscription `json:"items"`
}

// Repository type metadata.
var (
	EventSubscription_Kind             = "EventSubscription"
	EventSubscription_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: EventSubscription_Kind}.String()
	EventSubscription_KindAPIVersion   = EventSubscription_Kind + "." + CRDGroupVersion.String()
	EventSubscription_GroupVersionKind = CRDGroupVersion.WithKind(EventSubscription_Kind)
)

func init() {
	SchemeBuilder.Register(&EventSubscription{}, &EventSubscriptionList{})
}
