//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobFsLocationObservation) DeepCopyInto(out *AzureBlobFsLocationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobFsLocationObservation.
func (in *AzureBlobFsLocationObservation) DeepCopy() *AzureBlobFsLocationObservation {
	if in == nil {
		return nil
	}
	out := new(AzureBlobFsLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobFsLocationParameters) DeepCopyInto(out *AzureBlobFsLocationParameters) {
	*out = *in
	if in.FileSystem != nil {
		in, out := &in.FileSystem, &out.FileSystem
		*out = new(string)
		**out = **in
	}
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobFsLocationParameters.
func (in *AzureBlobFsLocationParameters) DeepCopy() *AzureBlobFsLocationParameters {
	if in == nil {
		return nil
	}
	out := new(AzureBlobFsLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobStorageLocationObservation) DeepCopyInto(out *AzureBlobStorageLocationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobStorageLocationObservation.
func (in *AzureBlobStorageLocationObservation) DeepCopy() *AzureBlobStorageLocationObservation {
	if in == nil {
		return nil
	}
	out := new(AzureBlobStorageLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobStorageLocationParameters) DeepCopyInto(out *AzureBlobStorageLocationParameters) {
	*out = *in
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(string)
		**out = **in
	}
	if in.DynamicContainerEnabled != nil {
		in, out := &in.DynamicContainerEnabled, &out.DynamicContainerEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DynamicFilenameEnabled != nil {
		in, out := &in.DynamicFilenameEnabled, &out.DynamicFilenameEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DynamicPathEnabled != nil {
		in, out := &in.DynamicPathEnabled, &out.DynamicPathEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobStorageLocationParameters.
func (in *AzureBlobStorageLocationParameters) DeepCopy() *AzureBlobStorageLocationParameters {
	if in == nil {
		return nil
	}
	out := new(AzureBlobStorageLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthenticationObservation) DeepCopyInto(out *BasicAuthenticationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthenticationObservation.
func (in *BasicAuthenticationObservation) DeepCopy() *BasicAuthenticationObservation {
	if in == nil {
		return nil
	}
	out := new(BasicAuthenticationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthenticationParameters) DeepCopyInto(out *BasicAuthenticationParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthenticationParameters.
func (in *BasicAuthenticationParameters) DeepCopy() *BasicAuthenticationParameters {
	if in == nil {
		return nil
	}
	out := new(BasicAuthenticationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogInfoObservation) DeepCopyInto(out *CatalogInfoObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogInfoObservation.
func (in *CatalogInfoObservation) DeepCopy() *CatalogInfoObservation {
	if in == nil {
		return nil
	}
	out := new(CatalogInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogInfoParameters) DeepCopyInto(out *CatalogInfoParameters) {
	*out = *in
	if in.AdministratorLogin != nil {
		in, out := &in.AdministratorLogin, &out.AdministratorLogin
		*out = new(string)
		**out = **in
	}
	if in.AdministratorPasswordSecretRef != nil {
		in, out := &in.AdministratorPasswordSecretRef, &out.AdministratorPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.DualStandbyPairName != nil {
		in, out := &in.DualStandbyPairName, &out.DualStandbyPairName
		*out = new(string)
		**out = **in
	}
	if in.ElasticPoolName != nil {
		in, out := &in.ElasticPoolName, &out.ElasticPoolName
		*out = new(string)
		**out = **in
	}
	if in.PricingTier != nil {
		in, out := &in.PricingTier, &out.PricingTier
		*out = new(string)
		**out = **in
	}
	if in.ServerEndpoint != nil {
		in, out := &in.ServerEndpoint, &out.ServerEndpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogInfoParameters.
func (in *CatalogInfoParameters) DeepCopy() *CatalogInfoParameters {
	if in == nil {
		return nil
	}
	out := new(CatalogInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommandKeyObservation) DeepCopyInto(out *CommandKeyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommandKeyObservation.
func (in *CommandKeyObservation) DeepCopy() *CommandKeyObservation {
	if in == nil {
		return nil
	}
	out := new(CommandKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommandKeyParameters) DeepCopyInto(out *CommandKeyParameters) {
	*out = *in
	if in.KeyVaultPassword != nil {
		in, out := &in.KeyVaultPassword, &out.KeyVaultPassword
		*out = make([]KeyVaultPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.TargetName != nil {
		in, out := &in.TargetName, &out.TargetName
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommandKeyParameters.
func (in *CommandKeyParameters) DeepCopy() *CommandKeyParameters {
	if in == nil {
		return nil
	}
	out := new(CommandKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentObservation) DeepCopyInto(out *ComponentObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentObservation.
func (in *ComponentObservation) DeepCopy() *ComponentObservation {
	if in == nil {
		return nil
	}
	out := new(ComponentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentParameters) DeepCopyInto(out *ComponentParameters) {
	*out = *in
	if in.KeyVaultLicense != nil {
		in, out := &in.KeyVaultLicense, &out.KeyVaultLicense
		*out = make([]KeyVaultLicenseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LicenseSecretRef != nil {
		in, out := &in.LicenseSecretRef, &out.LicenseSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentParameters.
func (in *ComponentParameters) DeepCopy() *ComponentParameters {
	if in == nil {
		return nil
	}
	out := new(ComponentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompressionObservation) DeepCopyInto(out *CompressionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompressionObservation.
func (in *CompressionObservation) DeepCopy() *CompressionObservation {
	if in == nil {
		return nil
	}
	out := new(CompressionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompressionParameters) DeepCopyInto(out *CompressionParameters) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompressionParameters.
func (in *CompressionParameters) DeepCopy() *CompressionParameters {
	if in == nil {
		return nil
	}
	out := new(CompressionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDataSet) DeepCopyInto(out *CustomDataSet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDataSet.
func (in *CustomDataSet) DeepCopy() *CustomDataSet {
	if in == nil {
		return nil
	}
	out := new(CustomDataSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomDataSet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDataSetList) DeepCopyInto(out *CustomDataSetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CustomDataSet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDataSetList.
func (in *CustomDataSetList) DeepCopy() *CustomDataSetList {
	if in == nil {
		return nil
	}
	out := new(CustomDataSetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomDataSetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDataSetObservation) DeepCopyInto(out *CustomDataSetObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDataSetObservation.
func (in *CustomDataSetObservation) DeepCopy() *CustomDataSetObservation {
	if in == nil {
		return nil
	}
	out := new(CustomDataSetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDataSetParameters) DeepCopyInto(out *CustomDataSetParameters) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryIDRef != nil {
		in, out := &in.DataFactoryIDRef, &out.DataFactoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryIDSelector != nil {
		in, out := &in.DataFactoryIDSelector, &out.DataFactoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.LinkedService != nil {
		in, out := &in.LinkedService, &out.LinkedService
		*out = make([]LinkedServiceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SchemaJSON != nil {
		in, out := &in.SchemaJSON, &out.SchemaJSON
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.TypePropertiesJSON != nil {
		in, out := &in.TypePropertiesJSON, &out.TypePropertiesJSON
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDataSetParameters.
func (in *CustomDataSetParameters) DeepCopy() *CustomDataSetParameters {
	if in == nil {
		return nil
	}
	out := new(CustomDataSetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDataSetSpec) DeepCopyInto(out *CustomDataSetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDataSetSpec.
func (in *CustomDataSetSpec) DeepCopy() *CustomDataSetSpec {
	if in == nil {
		return nil
	}
	out := new(CustomDataSetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDataSetStatus) DeepCopyInto(out *CustomDataSetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDataSetStatus.
func (in *CustomDataSetStatus) DeepCopy() *CustomDataSetStatus {
	if in == nil {
		return nil
	}
	out := new(CustomDataSetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomSetupScriptObservation) DeepCopyInto(out *CustomSetupScriptObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomSetupScriptObservation.
func (in *CustomSetupScriptObservation) DeepCopy() *CustomSetupScriptObservation {
	if in == nil {
		return nil
	}
	out := new(CustomSetupScriptObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomSetupScriptParameters) DeepCopyInto(out *CustomSetupScriptParameters) {
	*out = *in
	if in.BlobContainerURI != nil {
		in, out := &in.BlobContainerURI, &out.BlobContainerURI
		*out = new(string)
		**out = **in
	}
	out.SASTokenSecretRef = in.SASTokenSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomSetupScriptParameters.
func (in *CustomSetupScriptParameters) DeepCopy() *CustomSetupScriptParameters {
	if in == nil {
		return nil
	}
	out := new(CustomSetupScriptParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataFlow) DeepCopyInto(out *DataFlow) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataFlow.
func (in *DataFlow) DeepCopy() *DataFlow {
	if in == nil {
		return nil
	}
	out := new(DataFlow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataFlow) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataFlowList) DeepCopyInto(out *DataFlowList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataFlow, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataFlowList.
func (in *DataFlowList) DeepCopy() *DataFlowList {
	if in == nil {
		return nil
	}
	out := new(DataFlowList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataFlowList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataFlowObservation) DeepCopyInto(out *DataFlowObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataFlowObservation.
func (in *DataFlowObservation) DeepCopy() *DataFlowObservation {
	if in == nil {
		return nil
	}
	out := new(DataFlowObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataFlowParameters) DeepCopyInto(out *DataFlowParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryIDRef != nil {
		in, out := &in.DataFactoryIDRef, &out.DataFactoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryIDSelector != nil {
		in, out := &in.DataFactoryIDSelector, &out.DataFactoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.Script != nil {
		in, out := &in.Script, &out.Script
		*out = new(string)
		**out = **in
	}
	if in.ScriptLines != nil {
		in, out := &in.ScriptLines, &out.ScriptLines
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Sink != nil {
		in, out := &in.Sink, &out.Sink
		*out = make([]SinkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]SourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Transformation != nil {
		in, out := &in.Transformation, &out.Transformation
		*out = make([]TransformationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataFlowParameters.
func (in *DataFlowParameters) DeepCopy() *DataFlowParameters {
	if in == nil {
		return nil
	}
	out := new(DataFlowParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataFlowSpec) DeepCopyInto(out *DataFlowSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataFlowSpec.
func (in *DataFlowSpec) DeepCopy() *DataFlowSpec {
	if in == nil {
		return nil
	}
	out := new(DataFlowSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataFlowStatus) DeepCopyInto(out *DataFlowStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataFlowStatus.
func (in *DataFlowStatus) DeepCopy() *DataFlowStatus {
	if in == nil {
		return nil
	}
	out := new(DataFlowStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetAzureBlob) DeepCopyInto(out *DataSetAzureBlob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetAzureBlob.
func (in *DataSetAzureBlob) DeepCopy() *DataSetAzureBlob {
	if in == nil {
		return nil
	}
	out := new(DataSetAzureBlob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSetAzureBlob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetAzureBlobList) DeepCopyInto(out *DataSetAzureBlobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataSetAzureBlob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetAzureBlobList.
func (in *DataSetAzureBlobList) DeepCopy() *DataSetAzureBlobList {
	if in == nil {
		return nil
	}
	out := new(DataSetAzureBlobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSetAzureBlobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetAzureBlobObservation) DeepCopyInto(out *DataSetAzureBlobObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetAzureBlobObservation.
func (in *DataSetAzureBlobObservation) DeepCopy() *DataSetAzureBlobObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetAzureBlobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetAzureBlobParameters) DeepCopyInto(out *DataSetAzureBlobParameters) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryIDRef != nil {
		in, out := &in.DataFactoryIDRef, &out.DataFactoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryIDSelector != nil {
		in, out := &in.DataFactoryIDSelector, &out.DataFactoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DynamicFilenameEnabled != nil {
		in, out := &in.DynamicFilenameEnabled, &out.DynamicFilenameEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DynamicPathEnabled != nil {
		in, out := &in.DynamicPathEnabled, &out.DynamicPathEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.LinkedServiceNameRef != nil {
		in, out := &in.LinkedServiceNameRef, &out.LinkedServiceNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LinkedServiceNameSelector != nil {
		in, out := &in.LinkedServiceNameSelector, &out.LinkedServiceNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.SchemaColumn != nil {
		in, out := &in.SchemaColumn, &out.SchemaColumn
		*out = make([]SchemaColumnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetAzureBlobParameters.
func (in *DataSetAzureBlobParameters) DeepCopy() *DataSetAzureBlobParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetAzureBlobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetAzureBlobSpec) DeepCopyInto(out *DataSetAzureBlobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetAzureBlobSpec.
func (in *DataSetAzureBlobSpec) DeepCopy() *DataSetAzureBlobSpec {
	if in == nil {
		return nil
	}
	out := new(DataSetAzureBlobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetAzureBlobStatus) DeepCopyInto(out *DataSetAzureBlobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetAzureBlobStatus.
func (in *DataSetAzureBlobStatus) DeepCopy() *DataSetAzureBlobStatus {
	if in == nil {
		return nil
	}
	out := new(DataSetAzureBlobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetBinary) DeepCopyInto(out *DataSetBinary) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetBinary.
func (in *DataSetBinary) DeepCopy() *DataSetBinary {
	if in == nil {
		return nil
	}
	out := new(DataSetBinary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSetBinary) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetBinaryList) DeepCopyInto(out *DataSetBinaryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataSetBinary, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetBinaryList.
func (in *DataSetBinaryList) DeepCopy() *DataSetBinaryList {
	if in == nil {
		return nil
	}
	out := new(DataSetBinaryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSetBinaryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetBinaryObservation) DeepCopyInto(out *DataSetBinaryObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetBinaryObservation.
func (in *DataSetBinaryObservation) DeepCopy() *DataSetBinaryObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetBinaryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetBinaryParameters) DeepCopyInto(out *DataSetBinaryParameters) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AzureBlobStorageLocation != nil {
		in, out := &in.AzureBlobStorageLocation, &out.AzureBlobStorageLocation
		*out = make([]AzureBlobStorageLocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = make([]CompressionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryIDRef != nil {
		in, out := &in.DataFactoryIDRef, &out.DataFactoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryIDSelector != nil {
		in, out := &in.DataFactoryIDSelector, &out.DataFactoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.HTTPServerLocation != nil {
		in, out := &in.HTTPServerLocation, &out.HTTPServerLocation
		*out = make([]HTTPServerLocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SFTPServerLocation != nil {
		in, out := &in.SFTPServerLocation, &out.SFTPServerLocation
		*out = make([]SFTPServerLocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetBinaryParameters.
func (in *DataSetBinaryParameters) DeepCopy() *DataSetBinaryParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetBinaryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetBinarySpec) DeepCopyInto(out *DataSetBinarySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetBinarySpec.
func (in *DataSetBinarySpec) DeepCopy() *DataSetBinarySpec {
	if in == nil {
		return nil
	}
	out := new(DataSetBinarySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetBinaryStatus) DeepCopyInto(out *DataSetBinaryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetBinaryStatus.
func (in *DataSetBinaryStatus) DeepCopy() *DataSetBinaryStatus {
	if in == nil {
		return nil
	}
	out := new(DataSetBinaryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetCosmosDBSQLAPI) DeepCopyInto(out *DataSetCosmosDBSQLAPI) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetCosmosDBSQLAPI.
func (in *DataSetCosmosDBSQLAPI) DeepCopy() *DataSetCosmosDBSQLAPI {
	if in == nil {
		return nil
	}
	out := new(DataSetCosmosDBSQLAPI)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSetCosmosDBSQLAPI) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetCosmosDBSQLAPIList) DeepCopyInto(out *DataSetCosmosDBSQLAPIList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataSetCosmosDBSQLAPI, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetCosmosDBSQLAPIList.
func (in *DataSetCosmosDBSQLAPIList) DeepCopy() *DataSetCosmosDBSQLAPIList {
	if in == nil {
		return nil
	}
	out := new(DataSetCosmosDBSQLAPIList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSetCosmosDBSQLAPIList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetCosmosDBSQLAPIObservation) DeepCopyInto(out *DataSetCosmosDBSQLAPIObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetCosmosDBSQLAPIObservation.
func (in *DataSetCosmosDBSQLAPIObservation) DeepCopy() *DataSetCosmosDBSQLAPIObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetCosmosDBSQLAPIObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetCosmosDBSQLAPIParameters) DeepCopyInto(out *DataSetCosmosDBSQLAPIParameters) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CollectionName != nil {
		in, out := &in.CollectionName, &out.CollectionName
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryIDRef != nil {
		in, out := &in.DataFactoryIDRef, &out.DataFactoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryIDSelector != nil {
		in, out := &in.DataFactoryIDSelector, &out.DataFactoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SchemaColumn != nil {
		in, out := &in.SchemaColumn, &out.SchemaColumn
		*out = make([]DataSetCosmosDBSQLAPISchemaColumnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetCosmosDBSQLAPIParameters.
func (in *DataSetCosmosDBSQLAPIParameters) DeepCopy() *DataSetCosmosDBSQLAPIParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetCosmosDBSQLAPIParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetCosmosDBSQLAPISchemaColumnObservation) DeepCopyInto(out *DataSetCosmosDBSQLAPISchemaColumnObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetCosmosDBSQLAPISchemaColumnObservation.
func (in *DataSetCosmosDBSQLAPISchemaColumnObservation) DeepCopy() *DataSetCosmosDBSQLAPISchemaColumnObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetCosmosDBSQLAPISchemaColumnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetCosmosDBSQLAPISchemaColumnParameters) DeepCopyInto(out *DataSetCosmosDBSQLAPISchemaColumnParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetCosmosDBSQLAPISchemaColumnParameters.
func (in *DataSetCosmosDBSQLAPISchemaColumnParameters) DeepCopy() *DataSetCosmosDBSQLAPISchemaColumnParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetCosmosDBSQLAPISchemaColumnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetCosmosDBSQLAPISpec) DeepCopyInto(out *DataSetCosmosDBSQLAPISpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetCosmosDBSQLAPISpec.
func (in *DataSetCosmosDBSQLAPISpec) DeepCopy() *DataSetCosmosDBSQLAPISpec {
	if in == nil {
		return nil
	}
	out := new(DataSetCosmosDBSQLAPISpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetCosmosDBSQLAPIStatus) DeepCopyInto(out *DataSetCosmosDBSQLAPIStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetCosmosDBSQLAPIStatus.
func (in *DataSetCosmosDBSQLAPIStatus) DeepCopy() *DataSetCosmosDBSQLAPIStatus {
	if in == nil {
		return nil
	}
	out := new(DataSetCosmosDBSQLAPIStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetDelimitedText) DeepCopyInto(out *DataSetDelimitedText) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetDelimitedText.
func (in *DataSetDelimitedText) DeepCopy() *DataSetDelimitedText {
	if in == nil {
		return nil
	}
	out := new(DataSetDelimitedText)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSetDelimitedText) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetDelimitedTextAzureBlobStorageLocationObservation) DeepCopyInto(out *DataSetDelimitedTextAzureBlobStorageLocationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetDelimitedTextAzureBlobStorageLocationObservation.
func (in *DataSetDelimitedTextAzureBlobStorageLocationObservation) DeepCopy() *DataSetDelimitedTextAzureBlobStorageLocationObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetDelimitedTextAzureBlobStorageLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetDelimitedTextAzureBlobStorageLocationParameters) DeepCopyInto(out *DataSetDelimitedTextAzureBlobStorageLocationParameters) {
	*out = *in
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(string)
		**out = **in
	}
	if in.DynamicContainerEnabled != nil {
		in, out := &in.DynamicContainerEnabled, &out.DynamicContainerEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DynamicFilenameEnabled != nil {
		in, out := &in.DynamicFilenameEnabled, &out.DynamicFilenameEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DynamicPathEnabled != nil {
		in, out := &in.DynamicPathEnabled, &out.DynamicPathEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetDelimitedTextAzureBlobStorageLocationParameters.
func (in *DataSetDelimitedTextAzureBlobStorageLocationParameters) DeepCopy() *DataSetDelimitedTextAzureBlobStorageLocationParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetDelimitedTextAzureBlobStorageLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetDelimitedTextHTTPServerLocationObservation) DeepCopyInto(out *DataSetDelimitedTextHTTPServerLocationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetDelimitedTextHTTPServerLocationObservation.
func (in *DataSetDelimitedTextHTTPServerLocationObservation) DeepCopy() *DataSetDelimitedTextHTTPServerLocationObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetDelimitedTextHTTPServerLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetDelimitedTextHTTPServerLocationParameters) DeepCopyInto(out *DataSetDelimitedTextHTTPServerLocationParameters) {
	*out = *in
	if in.DynamicFilenameEnabled != nil {
		in, out := &in.DynamicFilenameEnabled, &out.DynamicFilenameEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DynamicPathEnabled != nil {
		in, out := &in.DynamicPathEnabled, &out.DynamicPathEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.RelativeURL != nil {
		in, out := &in.RelativeURL, &out.RelativeURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetDelimitedTextHTTPServerLocationParameters.
func (in *DataSetDelimitedTextHTTPServerLocationParameters) DeepCopy() *DataSetDelimitedTextHTTPServerLocationParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetDelimitedTextHTTPServerLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetDelimitedTextList) DeepCopyInto(out *DataSetDelimitedTextList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataSetDelimitedText, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetDelimitedTextList.
func (in *DataSetDelimitedTextList) DeepCopy() *DataSetDelimitedTextList {
	if in == nil {
		return nil
	}
	out := new(DataSetDelimitedTextList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSetDelimitedTextList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetDelimitedTextObservation) DeepCopyInto(out *DataSetDelimitedTextObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetDelimitedTextObservation.
func (in *DataSetDelimitedTextObservation) DeepCopy() *DataSetDelimitedTextObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetDelimitedTextObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetDelimitedTextParameters) DeepCopyInto(out *DataSetDelimitedTextParameters) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AzureBlobFsLocation != nil {
		in, out := &in.AzureBlobFsLocation, &out.AzureBlobFsLocation
		*out = make([]AzureBlobFsLocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureBlobStorageLocation != nil {
		in, out := &in.AzureBlobStorageLocation, &out.AzureBlobStorageLocation
		*out = make([]DataSetDelimitedTextAzureBlobStorageLocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ColumnDelimiter != nil {
		in, out := &in.ColumnDelimiter, &out.ColumnDelimiter
		*out = new(string)
		**out = **in
	}
	if in.CompressionCodec != nil {
		in, out := &in.CompressionCodec, &out.CompressionCodec
		*out = new(string)
		**out = **in
	}
	if in.CompressionLevel != nil {
		in, out := &in.CompressionLevel, &out.CompressionLevel
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryIDRef != nil {
		in, out := &in.DataFactoryIDRef, &out.DataFactoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryIDSelector != nil {
		in, out := &in.DataFactoryIDSelector, &out.DataFactoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.EscapeCharacter != nil {
		in, out := &in.EscapeCharacter, &out.EscapeCharacter
		*out = new(string)
		**out = **in
	}
	if in.FirstRowAsHeader != nil {
		in, out := &in.FirstRowAsHeader, &out.FirstRowAsHeader
		*out = new(bool)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.HTTPServerLocation != nil {
		in, out := &in.HTTPServerLocation, &out.HTTPServerLocation
		*out = make([]DataSetDelimitedTextHTTPServerLocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.NullValue != nil {
		in, out := &in.NullValue, &out.NullValue
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QuoteCharacter != nil {
		in, out := &in.QuoteCharacter, &out.QuoteCharacter
		*out = new(string)
		**out = **in
	}
	if in.RowDelimiter != nil {
		in, out := &in.RowDelimiter, &out.RowDelimiter
		*out = new(string)
		**out = **in
	}
	if in.SchemaColumn != nil {
		in, out := &in.SchemaColumn, &out.SchemaColumn
		*out = make([]DataSetDelimitedTextSchemaColumnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetDelimitedTextParameters.
func (in *DataSetDelimitedTextParameters) DeepCopy() *DataSetDelimitedTextParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetDelimitedTextParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetDelimitedTextSchemaColumnObservation) DeepCopyInto(out *DataSetDelimitedTextSchemaColumnObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetDelimitedTextSchemaColumnObservation.
func (in *DataSetDelimitedTextSchemaColumnObservation) DeepCopy() *DataSetDelimitedTextSchemaColumnObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetDelimitedTextSchemaColumnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetDelimitedTextSchemaColumnParameters) DeepCopyInto(out *DataSetDelimitedTextSchemaColumnParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetDelimitedTextSchemaColumnParameters.
func (in *DataSetDelimitedTextSchemaColumnParameters) DeepCopy() *DataSetDelimitedTextSchemaColumnParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetDelimitedTextSchemaColumnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetDelimitedTextSpec) DeepCopyInto(out *DataSetDelimitedTextSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetDelimitedTextSpec.
func (in *DataSetDelimitedTextSpec) DeepCopy() *DataSetDelimitedTextSpec {
	if in == nil {
		return nil
	}
	out := new(DataSetDelimitedTextSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetDelimitedTextStatus) DeepCopyInto(out *DataSetDelimitedTextStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetDelimitedTextStatus.
func (in *DataSetDelimitedTextStatus) DeepCopy() *DataSetDelimitedTextStatus {
	if in == nil {
		return nil
	}
	out := new(DataSetDelimitedTextStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetHTTP) DeepCopyInto(out *DataSetHTTP) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetHTTP.
func (in *DataSetHTTP) DeepCopy() *DataSetHTTP {
	if in == nil {
		return nil
	}
	out := new(DataSetHTTP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSetHTTP) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetHTTPList) DeepCopyInto(out *DataSetHTTPList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataSetHTTP, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetHTTPList.
func (in *DataSetHTTPList) DeepCopy() *DataSetHTTPList {
	if in == nil {
		return nil
	}
	out := new(DataSetHTTPList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSetHTTPList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetHTTPObservation) DeepCopyInto(out *DataSetHTTPObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetHTTPObservation.
func (in *DataSetHTTPObservation) DeepCopy() *DataSetHTTPObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetHTTPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetHTTPParameters) DeepCopyInto(out *DataSetHTTPParameters) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryIDRef != nil {
		in, out := &in.DataFactoryIDRef, &out.DataFactoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryIDSelector != nil {
		in, out := &in.DataFactoryIDSelector, &out.DataFactoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RelativeURL != nil {
		in, out := &in.RelativeURL, &out.RelativeURL
		*out = new(string)
		**out = **in
	}
	if in.RequestBody != nil {
		in, out := &in.RequestBody, &out.RequestBody
		*out = new(string)
		**out = **in
	}
	if in.RequestMethod != nil {
		in, out := &in.RequestMethod, &out.RequestMethod
		*out = new(string)
		**out = **in
	}
	if in.SchemaColumn != nil {
		in, out := &in.SchemaColumn, &out.SchemaColumn
		*out = make([]DataSetHTTPSchemaColumnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetHTTPParameters.
func (in *DataSetHTTPParameters) DeepCopy() *DataSetHTTPParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetHTTPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetHTTPSchemaColumnObservation) DeepCopyInto(out *DataSetHTTPSchemaColumnObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetHTTPSchemaColumnObservation.
func (in *DataSetHTTPSchemaColumnObservation) DeepCopy() *DataSetHTTPSchemaColumnObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetHTTPSchemaColumnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetHTTPSchemaColumnParameters) DeepCopyInto(out *DataSetHTTPSchemaColumnParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetHTTPSchemaColumnParameters.
func (in *DataSetHTTPSchemaColumnParameters) DeepCopy() *DataSetHTTPSchemaColumnParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetHTTPSchemaColumnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetHTTPSpec) DeepCopyInto(out *DataSetHTTPSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetHTTPSpec.
func (in *DataSetHTTPSpec) DeepCopy() *DataSetHTTPSpec {
	if in == nil {
		return nil
	}
	out := new(DataSetHTTPSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetHTTPStatus) DeepCopyInto(out *DataSetHTTPStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetHTTPStatus.
func (in *DataSetHTTPStatus) DeepCopy() *DataSetHTTPStatus {
	if in == nil {
		return nil
	}
	out := new(DataSetHTTPStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetJSON) DeepCopyInto(out *DataSetJSON) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetJSON.
func (in *DataSetJSON) DeepCopy() *DataSetJSON {
	if in == nil {
		return nil
	}
	out := new(DataSetJSON)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSetJSON) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetJSONAzureBlobStorageLocationObservation) DeepCopyInto(out *DataSetJSONAzureBlobStorageLocationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetJSONAzureBlobStorageLocationObservation.
func (in *DataSetJSONAzureBlobStorageLocationObservation) DeepCopy() *DataSetJSONAzureBlobStorageLocationObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetJSONAzureBlobStorageLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetJSONAzureBlobStorageLocationParameters) DeepCopyInto(out *DataSetJSONAzureBlobStorageLocationParameters) {
	*out = *in
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(string)
		**out = **in
	}
	if in.DynamicContainerEnabled != nil {
		in, out := &in.DynamicContainerEnabled, &out.DynamicContainerEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DynamicFilenameEnabled != nil {
		in, out := &in.DynamicFilenameEnabled, &out.DynamicFilenameEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DynamicPathEnabled != nil {
		in, out := &in.DynamicPathEnabled, &out.DynamicPathEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetJSONAzureBlobStorageLocationParameters.
func (in *DataSetJSONAzureBlobStorageLocationParameters) DeepCopy() *DataSetJSONAzureBlobStorageLocationParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetJSONAzureBlobStorageLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetJSONHTTPServerLocationObservation) DeepCopyInto(out *DataSetJSONHTTPServerLocationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetJSONHTTPServerLocationObservation.
func (in *DataSetJSONHTTPServerLocationObservation) DeepCopy() *DataSetJSONHTTPServerLocationObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetJSONHTTPServerLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetJSONHTTPServerLocationParameters) DeepCopyInto(out *DataSetJSONHTTPServerLocationParameters) {
	*out = *in
	if in.DynamicFilenameEnabled != nil {
		in, out := &in.DynamicFilenameEnabled, &out.DynamicFilenameEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DynamicPathEnabled != nil {
		in, out := &in.DynamicPathEnabled, &out.DynamicPathEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.RelativeURL != nil {
		in, out := &in.RelativeURL, &out.RelativeURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetJSONHTTPServerLocationParameters.
func (in *DataSetJSONHTTPServerLocationParameters) DeepCopy() *DataSetJSONHTTPServerLocationParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetJSONHTTPServerLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetJSONList) DeepCopyInto(out *DataSetJSONList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataSetJSON, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetJSONList.
func (in *DataSetJSONList) DeepCopy() *DataSetJSONList {
	if in == nil {
		return nil
	}
	out := new(DataSetJSONList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSetJSONList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetJSONObservation) DeepCopyInto(out *DataSetJSONObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetJSONObservation.
func (in *DataSetJSONObservation) DeepCopy() *DataSetJSONObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetJSONObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetJSONParameters) DeepCopyInto(out *DataSetJSONParameters) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AzureBlobStorageLocation != nil {
		in, out := &in.AzureBlobStorageLocation, &out.AzureBlobStorageLocation
		*out = make([]DataSetJSONAzureBlobStorageLocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryIDRef != nil {
		in, out := &in.DataFactoryIDRef, &out.DataFactoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryIDSelector != nil {
		in, out := &in.DataFactoryIDSelector, &out.DataFactoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.HTTPServerLocation != nil {
		in, out := &in.HTTPServerLocation, &out.HTTPServerLocation
		*out = make([]DataSetJSONHTTPServerLocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SchemaColumn != nil {
		in, out := &in.SchemaColumn, &out.SchemaColumn
		*out = make([]DataSetJSONSchemaColumnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetJSONParameters.
func (in *DataSetJSONParameters) DeepCopy() *DataSetJSONParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetJSONParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetJSONSchemaColumnObservation) DeepCopyInto(out *DataSetJSONSchemaColumnObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetJSONSchemaColumnObservation.
func (in *DataSetJSONSchemaColumnObservation) DeepCopy() *DataSetJSONSchemaColumnObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetJSONSchemaColumnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetJSONSchemaColumnParameters) DeepCopyInto(out *DataSetJSONSchemaColumnParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetJSONSchemaColumnParameters.
func (in *DataSetJSONSchemaColumnParameters) DeepCopy() *DataSetJSONSchemaColumnParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetJSONSchemaColumnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetJSONSpec) DeepCopyInto(out *DataSetJSONSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetJSONSpec.
func (in *DataSetJSONSpec) DeepCopy() *DataSetJSONSpec {
	if in == nil {
		return nil
	}
	out := new(DataSetJSONSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetJSONStatus) DeepCopyInto(out *DataSetJSONStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetJSONStatus.
func (in *DataSetJSONStatus) DeepCopy() *DataSetJSONStatus {
	if in == nil {
		return nil
	}
	out := new(DataSetJSONStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetMySQL) DeepCopyInto(out *DataSetMySQL) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetMySQL.
func (in *DataSetMySQL) DeepCopy() *DataSetMySQL {
	if in == nil {
		return nil
	}
	out := new(DataSetMySQL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSetMySQL) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetMySQLList) DeepCopyInto(out *DataSetMySQLList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataSetMySQL, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetMySQLList.
func (in *DataSetMySQLList) DeepCopy() *DataSetMySQLList {
	if in == nil {
		return nil
	}
	out := new(DataSetMySQLList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSetMySQLList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetMySQLObservation) DeepCopyInto(out *DataSetMySQLObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetMySQLObservation.
func (in *DataSetMySQLObservation) DeepCopy() *DataSetMySQLObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetMySQLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetMySQLParameters) DeepCopyInto(out *DataSetMySQLParameters) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryIDRef != nil {
		in, out := &in.DataFactoryIDRef, &out.DataFactoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryIDSelector != nil {
		in, out := &in.DataFactoryIDSelector, &out.DataFactoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SchemaColumn != nil {
		in, out := &in.SchemaColumn, &out.SchemaColumn
		*out = make([]DataSetMySQLSchemaColumnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetMySQLParameters.
func (in *DataSetMySQLParameters) DeepCopy() *DataSetMySQLParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetMySQLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetMySQLSchemaColumnObservation) DeepCopyInto(out *DataSetMySQLSchemaColumnObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetMySQLSchemaColumnObservation.
func (in *DataSetMySQLSchemaColumnObservation) DeepCopy() *DataSetMySQLSchemaColumnObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetMySQLSchemaColumnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetMySQLSchemaColumnParameters) DeepCopyInto(out *DataSetMySQLSchemaColumnParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetMySQLSchemaColumnParameters.
func (in *DataSetMySQLSchemaColumnParameters) DeepCopy() *DataSetMySQLSchemaColumnParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetMySQLSchemaColumnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetMySQLSpec) DeepCopyInto(out *DataSetMySQLSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetMySQLSpec.
func (in *DataSetMySQLSpec) DeepCopy() *DataSetMySQLSpec {
	if in == nil {
		return nil
	}
	out := new(DataSetMySQLSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetMySQLStatus) DeepCopyInto(out *DataSetMySQLStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetMySQLStatus.
func (in *DataSetMySQLStatus) DeepCopy() *DataSetMySQLStatus {
	if in == nil {
		return nil
	}
	out := new(DataSetMySQLStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetObservation) DeepCopyInto(out *DataSetObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetObservation.
func (in *DataSetObservation) DeepCopy() *DataSetObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetParameters) DeepCopyInto(out *DataSetParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetParameters.
func (in *DataSetParameters) DeepCopy() *DataSetParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetParquet) DeepCopyInto(out *DataSetParquet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetParquet.
func (in *DataSetParquet) DeepCopy() *DataSetParquet {
	if in == nil {
		return nil
	}
	out := new(DataSetParquet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSetParquet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetParquetAzureBlobStorageLocationObservation) DeepCopyInto(out *DataSetParquetAzureBlobStorageLocationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetParquetAzureBlobStorageLocationObservation.
func (in *DataSetParquetAzureBlobStorageLocationObservation) DeepCopy() *DataSetParquetAzureBlobStorageLocationObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetParquetAzureBlobStorageLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetParquetAzureBlobStorageLocationParameters) DeepCopyInto(out *DataSetParquetAzureBlobStorageLocationParameters) {
	*out = *in
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(string)
		**out = **in
	}
	if in.DynamicContainerEnabled != nil {
		in, out := &in.DynamicContainerEnabled, &out.DynamicContainerEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DynamicFilenameEnabled != nil {
		in, out := &in.DynamicFilenameEnabled, &out.DynamicFilenameEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DynamicPathEnabled != nil {
		in, out := &in.DynamicPathEnabled, &out.DynamicPathEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetParquetAzureBlobStorageLocationParameters.
func (in *DataSetParquetAzureBlobStorageLocationParameters) DeepCopy() *DataSetParquetAzureBlobStorageLocationParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetParquetAzureBlobStorageLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetParquetHTTPServerLocationObservation) DeepCopyInto(out *DataSetParquetHTTPServerLocationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetParquetHTTPServerLocationObservation.
func (in *DataSetParquetHTTPServerLocationObservation) DeepCopy() *DataSetParquetHTTPServerLocationObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetParquetHTTPServerLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetParquetHTTPServerLocationParameters) DeepCopyInto(out *DataSetParquetHTTPServerLocationParameters) {
	*out = *in
	if in.DynamicFilenameEnabled != nil {
		in, out := &in.DynamicFilenameEnabled, &out.DynamicFilenameEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DynamicPathEnabled != nil {
		in, out := &in.DynamicPathEnabled, &out.DynamicPathEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.RelativeURL != nil {
		in, out := &in.RelativeURL, &out.RelativeURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetParquetHTTPServerLocationParameters.
func (in *DataSetParquetHTTPServerLocationParameters) DeepCopy() *DataSetParquetHTTPServerLocationParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetParquetHTTPServerLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetParquetList) DeepCopyInto(out *DataSetParquetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataSetParquet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetParquetList.
func (in *DataSetParquetList) DeepCopy() *DataSetParquetList {
	if in == nil {
		return nil
	}
	out := new(DataSetParquetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSetParquetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetParquetObservation) DeepCopyInto(out *DataSetParquetObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetParquetObservation.
func (in *DataSetParquetObservation) DeepCopy() *DataSetParquetObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetParquetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetParquetParameters) DeepCopyInto(out *DataSetParquetParameters) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AzureBlobStorageLocation != nil {
		in, out := &in.AzureBlobStorageLocation, &out.AzureBlobStorageLocation
		*out = make([]DataSetParquetAzureBlobStorageLocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompressionCodec != nil {
		in, out := &in.CompressionCodec, &out.CompressionCodec
		*out = new(string)
		**out = **in
	}
	if in.CompressionLevel != nil {
		in, out := &in.CompressionLevel, &out.CompressionLevel
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryIDRef != nil {
		in, out := &in.DataFactoryIDRef, &out.DataFactoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryIDSelector != nil {
		in, out := &in.DataFactoryIDSelector, &out.DataFactoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.HTTPServerLocation != nil {
		in, out := &in.HTTPServerLocation, &out.HTTPServerLocation
		*out = make([]DataSetParquetHTTPServerLocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SchemaColumn != nil {
		in, out := &in.SchemaColumn, &out.SchemaColumn
		*out = make([]DataSetParquetSchemaColumnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetParquetParameters.
func (in *DataSetParquetParameters) DeepCopy() *DataSetParquetParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetParquetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetParquetSchemaColumnObservation) DeepCopyInto(out *DataSetParquetSchemaColumnObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetParquetSchemaColumnObservation.
func (in *DataSetParquetSchemaColumnObservation) DeepCopy() *DataSetParquetSchemaColumnObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetParquetSchemaColumnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetParquetSchemaColumnParameters) DeepCopyInto(out *DataSetParquetSchemaColumnParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetParquetSchemaColumnParameters.
func (in *DataSetParquetSchemaColumnParameters) DeepCopy() *DataSetParquetSchemaColumnParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetParquetSchemaColumnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetParquetSpec) DeepCopyInto(out *DataSetParquetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetParquetSpec.
func (in *DataSetParquetSpec) DeepCopy() *DataSetParquetSpec {
	if in == nil {
		return nil
	}
	out := new(DataSetParquetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetParquetStatus) DeepCopyInto(out *DataSetParquetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetParquetStatus.
func (in *DataSetParquetStatus) DeepCopy() *DataSetParquetStatus {
	if in == nil {
		return nil
	}
	out := new(DataSetParquetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetPostgreSQL) DeepCopyInto(out *DataSetPostgreSQL) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetPostgreSQL.
func (in *DataSetPostgreSQL) DeepCopy() *DataSetPostgreSQL {
	if in == nil {
		return nil
	}
	out := new(DataSetPostgreSQL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSetPostgreSQL) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetPostgreSQLList) DeepCopyInto(out *DataSetPostgreSQLList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataSetPostgreSQL, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetPostgreSQLList.
func (in *DataSetPostgreSQLList) DeepCopy() *DataSetPostgreSQLList {
	if in == nil {
		return nil
	}
	out := new(DataSetPostgreSQLList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSetPostgreSQLList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetPostgreSQLObservation) DeepCopyInto(out *DataSetPostgreSQLObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetPostgreSQLObservation.
func (in *DataSetPostgreSQLObservation) DeepCopy() *DataSetPostgreSQLObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetPostgreSQLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetPostgreSQLParameters) DeepCopyInto(out *DataSetPostgreSQLParameters) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryIDRef != nil {
		in, out := &in.DataFactoryIDRef, &out.DataFactoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryIDSelector != nil {
		in, out := &in.DataFactoryIDSelector, &out.DataFactoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SchemaColumn != nil {
		in, out := &in.SchemaColumn, &out.SchemaColumn
		*out = make([]DataSetPostgreSQLSchemaColumnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetPostgreSQLParameters.
func (in *DataSetPostgreSQLParameters) DeepCopy() *DataSetPostgreSQLParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetPostgreSQLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetPostgreSQLSchemaColumnObservation) DeepCopyInto(out *DataSetPostgreSQLSchemaColumnObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetPostgreSQLSchemaColumnObservation.
func (in *DataSetPostgreSQLSchemaColumnObservation) DeepCopy() *DataSetPostgreSQLSchemaColumnObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetPostgreSQLSchemaColumnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetPostgreSQLSchemaColumnParameters) DeepCopyInto(out *DataSetPostgreSQLSchemaColumnParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetPostgreSQLSchemaColumnParameters.
func (in *DataSetPostgreSQLSchemaColumnParameters) DeepCopy() *DataSetPostgreSQLSchemaColumnParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetPostgreSQLSchemaColumnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetPostgreSQLSpec) DeepCopyInto(out *DataSetPostgreSQLSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetPostgreSQLSpec.
func (in *DataSetPostgreSQLSpec) DeepCopy() *DataSetPostgreSQLSpec {
	if in == nil {
		return nil
	}
	out := new(DataSetPostgreSQLSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetPostgreSQLStatus) DeepCopyInto(out *DataSetPostgreSQLStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetPostgreSQLStatus.
func (in *DataSetPostgreSQLStatus) DeepCopy() *DataSetPostgreSQLStatus {
	if in == nil {
		return nil
	}
	out := new(DataSetPostgreSQLStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetSnowflake) DeepCopyInto(out *DataSetSnowflake) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetSnowflake.
func (in *DataSetSnowflake) DeepCopy() *DataSetSnowflake {
	if in == nil {
		return nil
	}
	out := new(DataSetSnowflake)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSetSnowflake) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetSnowflakeList) DeepCopyInto(out *DataSetSnowflakeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataSetSnowflake, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetSnowflakeList.
func (in *DataSetSnowflakeList) DeepCopy() *DataSetSnowflakeList {
	if in == nil {
		return nil
	}
	out := new(DataSetSnowflakeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSetSnowflakeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetSnowflakeObservation) DeepCopyInto(out *DataSetSnowflakeObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetSnowflakeObservation.
func (in *DataSetSnowflakeObservation) DeepCopy() *DataSetSnowflakeObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetSnowflakeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetSnowflakeParameters) DeepCopyInto(out *DataSetSnowflakeParameters) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryIDRef != nil {
		in, out := &in.DataFactoryIDRef, &out.DataFactoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryIDSelector != nil {
		in, out := &in.DataFactoryIDSelector, &out.DataFactoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SchemaColumn != nil {
		in, out := &in.SchemaColumn, &out.SchemaColumn
		*out = make([]DataSetSnowflakeSchemaColumnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetSnowflakeParameters.
func (in *DataSetSnowflakeParameters) DeepCopy() *DataSetSnowflakeParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetSnowflakeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetSnowflakeSchemaColumnObservation) DeepCopyInto(out *DataSetSnowflakeSchemaColumnObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetSnowflakeSchemaColumnObservation.
func (in *DataSetSnowflakeSchemaColumnObservation) DeepCopy() *DataSetSnowflakeSchemaColumnObservation {
	if in == nil {
		return nil
	}
	out := new(DataSetSnowflakeSchemaColumnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetSnowflakeSchemaColumnParameters) DeepCopyInto(out *DataSetSnowflakeSchemaColumnParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(float64)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetSnowflakeSchemaColumnParameters.
func (in *DataSetSnowflakeSchemaColumnParameters) DeepCopy() *DataSetSnowflakeSchemaColumnParameters {
	if in == nil {
		return nil
	}
	out := new(DataSetSnowflakeSchemaColumnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetSnowflakeSpec) DeepCopyInto(out *DataSetSnowflakeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetSnowflakeSpec.
func (in *DataSetSnowflakeSpec) DeepCopy() *DataSetSnowflakeSpec {
	if in == nil {
		return nil
	}
	out := new(DataSetSnowflakeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSetSnowflakeStatus) DeepCopyInto(out *DataSetSnowflakeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSetSnowflakeStatus.
func (in *DataSetSnowflakeStatus) DeepCopy() *DataSetSnowflakeStatus {
	if in == nil {
		return nil
	}
	out := new(DataSetSnowflakeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressCustomSetupObservation) DeepCopyInto(out *ExpressCustomSetupObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressCustomSetupObservation.
func (in *ExpressCustomSetupObservation) DeepCopy() *ExpressCustomSetupObservation {
	if in == nil {
		return nil
	}
	out := new(ExpressCustomSetupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressCustomSetupParameters) DeepCopyInto(out *ExpressCustomSetupParameters) {
	*out = *in
	if in.CommandKey != nil {
		in, out := &in.CommandKey, &out.CommandKey
		*out = make([]CommandKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Component != nil {
		in, out := &in.Component, &out.Component
		*out = make([]ComponentParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PowershellVersion != nil {
		in, out := &in.PowershellVersion, &out.PowershellVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressCustomSetupParameters.
func (in *ExpressCustomSetupParameters) DeepCopy() *ExpressCustomSetupParameters {
	if in == nil {
		return nil
	}
	out := new(ExpressCustomSetupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressVnetIntegrationObservation) DeepCopyInto(out *ExpressVnetIntegrationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressVnetIntegrationObservation.
func (in *ExpressVnetIntegrationObservation) DeepCopy() *ExpressVnetIntegrationObservation {
	if in == nil {
		return nil
	}
	out := new(ExpressVnetIntegrationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpressVnetIntegrationParameters) DeepCopyInto(out *ExpressVnetIntegrationParameters) {
	*out = *in
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpressVnetIntegrationParameters.
func (in *ExpressVnetIntegrationParameters) DeepCopy() *ExpressVnetIntegrationParameters {
	if in == nil {
		return nil
	}
	out := new(ExpressVnetIntegrationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Factory) DeepCopyInto(out *Factory) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Factory.
func (in *Factory) DeepCopy() *Factory {
	if in == nil {
		return nil
	}
	out := new(Factory)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Factory) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryList) DeepCopyInto(out *FactoryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Factory, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryList.
func (in *FactoryList) DeepCopy() *FactoryList {
	if in == nil {
		return nil
	}
	out := new(FactoryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryObservation) DeepCopyInto(out *FactoryObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryObservation.
func (in *FactoryObservation) DeepCopy() *FactoryObservation {
	if in == nil {
		return nil
	}
	out := new(FactoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryParameters) DeepCopyInto(out *FactoryParameters) {
	*out = *in
	if in.CustomerManagedKeyID != nil {
		in, out := &in.CustomerManagedKeyID, &out.CustomerManagedKeyID
		*out = new(string)
		**out = **in
	}
	if in.CustomerManagedKeyIdentityID != nil {
		in, out := &in.CustomerManagedKeyIdentityID, &out.CustomerManagedKeyIdentityID
		*out = new(string)
		**out = **in
	}
	if in.GithubConfiguration != nil {
		in, out := &in.GithubConfiguration, &out.GithubConfiguration
		*out = make([]GithubConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GlobalParameter != nil {
		in, out := &in.GlobalParameter, &out.GlobalParameter
		*out = make([]GlobalParameterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManagedVirtualNetworkEnabled != nil {
		in, out := &in.ManagedVirtualNetworkEnabled, &out.ManagedVirtualNetworkEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PublicNetworkEnabled != nil {
		in, out := &in.PublicNetworkEnabled, &out.PublicNetworkEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PurviewID != nil {
		in, out := &in.PurviewID, &out.PurviewID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VstsConfiguration != nil {
		in, out := &in.VstsConfiguration, &out.VstsConfiguration
		*out = make([]VstsConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryParameters.
func (in *FactoryParameters) DeepCopy() *FactoryParameters {
	if in == nil {
		return nil
	}
	out := new(FactoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactorySpec) DeepCopyInto(out *FactorySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactorySpec.
func (in *FactorySpec) DeepCopy() *FactorySpec {
	if in == nil {
		return nil
	}
	out := new(FactorySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryStatus) DeepCopyInto(out *FactoryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryStatus.
func (in *FactoryStatus) DeepCopy() *FactoryStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowletObservation) DeepCopyInto(out *FlowletObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowletObservation.
func (in *FlowletObservation) DeepCopy() *FlowletObservation {
	if in == nil {
		return nil
	}
	out := new(FlowletObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowletParameters) DeepCopyInto(out *FlowletParameters) {
	*out = *in
	if in.DataSetParameters != nil {
		in, out := &in.DataSetParameters, &out.DataSetParameters
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowletParameters.
func (in *FlowletParameters) DeepCopy() *FlowletParameters {
	if in == nil {
		return nil
	}
	out := new(FlowletParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubConfigurationObservation) DeepCopyInto(out *GithubConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubConfigurationObservation.
func (in *GithubConfigurationObservation) DeepCopy() *GithubConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(GithubConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubConfigurationParameters) DeepCopyInto(out *GithubConfigurationParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.BranchName != nil {
		in, out := &in.BranchName, &out.BranchName
		*out = new(string)
		**out = **in
	}
	if in.GitURL != nil {
		in, out := &in.GitURL, &out.GitURL
		*out = new(string)
		**out = **in
	}
	if in.RepositoryName != nil {
		in, out := &in.RepositoryName, &out.RepositoryName
		*out = new(string)
		**out = **in
	}
	if in.RootFolder != nil {
		in, out := &in.RootFolder, &out.RootFolder
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubConfigurationParameters.
func (in *GithubConfigurationParameters) DeepCopy() *GithubConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(GithubConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalParameterObservation) DeepCopyInto(out *GlobalParameterObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalParameterObservation.
func (in *GlobalParameterObservation) DeepCopy() *GlobalParameterObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalParameterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalParameterParameters) DeepCopyInto(out *GlobalParameterParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalParameterParameters.
func (in *GlobalParameterParameters) DeepCopy() *GlobalParameterParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalParameterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPServerLocationObservation) DeepCopyInto(out *HTTPServerLocationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPServerLocationObservation.
func (in *HTTPServerLocationObservation) DeepCopy() *HTTPServerLocationObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPServerLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPServerLocationParameters) DeepCopyInto(out *HTTPServerLocationParameters) {
	*out = *in
	if in.DynamicFilenameEnabled != nil {
		in, out := &in.DynamicFilenameEnabled, &out.DynamicFilenameEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DynamicPathEnabled != nil {
		in, out := &in.DynamicPathEnabled, &out.DynamicPathEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.RelativeURL != nil {
		in, out := &in.RelativeURL, &out.RelativeURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPServerLocationParameters.
func (in *HTTPServerLocationParameters) DeepCopy() *HTTPServerLocationParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPServerLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityObservation) DeepCopyInto(out *IdentityObservation) {
	*out = *in
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityObservation.
func (in *IdentityObservation) DeepCopy() *IdentityObservation {
	if in == nil {
		return nil
	}
	out := new(IdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityParameters) DeepCopyInto(out *IdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityParameters.
func (in *IdentityParameters) DeepCopy() *IdentityParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationRuntimeAzure) DeepCopyInto(out *IntegrationRuntimeAzure) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationRuntimeAzure.
func (in *IntegrationRuntimeAzure) DeepCopy() *IntegrationRuntimeAzure {
	if in == nil {
		return nil
	}
	out := new(IntegrationRuntimeAzure)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationRuntimeAzure) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationRuntimeAzureList) DeepCopyInto(out *IntegrationRuntimeAzureList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IntegrationRuntimeAzure, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationRuntimeAzureList.
func (in *IntegrationRuntimeAzureList) DeepCopy() *IntegrationRuntimeAzureList {
	if in == nil {
		return nil
	}
	out := new(IntegrationRuntimeAzureList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationRuntimeAzureList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationRuntimeAzureObservation) DeepCopyInto(out *IntegrationRuntimeAzureObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationRuntimeAzureObservation.
func (in *IntegrationRuntimeAzureObservation) DeepCopy() *IntegrationRuntimeAzureObservation {
	if in == nil {
		return nil
	}
	out := new(IntegrationRuntimeAzureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationRuntimeAzureParameters) DeepCopyInto(out *IntegrationRuntimeAzureParameters) {
	*out = *in
	if in.CleanupEnabled != nil {
		in, out := &in.CleanupEnabled, &out.CleanupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ComputeType != nil {
		in, out := &in.ComputeType, &out.ComputeType
		*out = new(string)
		**out = **in
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryIDRef != nil {
		in, out := &in.DataFactoryIDRef, &out.DataFactoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryIDSelector != nil {
		in, out := &in.DataFactoryIDSelector, &out.DataFactoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.TimeToLiveMin != nil {
		in, out := &in.TimeToLiveMin, &out.TimeToLiveMin
		*out = new(float64)
		**out = **in
	}
	if in.VirtualNetworkEnabled != nil {
		in, out := &in.VirtualNetworkEnabled, &out.VirtualNetworkEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationRuntimeAzureParameters.
func (in *IntegrationRuntimeAzureParameters) DeepCopy() *IntegrationRuntimeAzureParameters {
	if in == nil {
		return nil
	}
	out := new(IntegrationRuntimeAzureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationRuntimeAzureSSIS) DeepCopyInto(out *IntegrationRuntimeAzureSSIS) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationRuntimeAzureSSIS.
func (in *IntegrationRuntimeAzureSSIS) DeepCopy() *IntegrationRuntimeAzureSSIS {
	if in == nil {
		return nil
	}
	out := new(IntegrationRuntimeAzureSSIS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationRuntimeAzureSSIS) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationRuntimeAzureSSISList) DeepCopyInto(out *IntegrationRuntimeAzureSSISList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IntegrationRuntimeAzureSSIS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationRuntimeAzureSSISList.
func (in *IntegrationRuntimeAzureSSISList) DeepCopy() *IntegrationRuntimeAzureSSISList {
	if in == nil {
		return nil
	}
	out := new(IntegrationRuntimeAzureSSISList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationRuntimeAzureSSISList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationRuntimeAzureSSISObservation) DeepCopyInto(out *IntegrationRuntimeAzureSSISObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationRuntimeAzureSSISObservation.
func (in *IntegrationRuntimeAzureSSISObservation) DeepCopy() *IntegrationRuntimeAzureSSISObservation {
	if in == nil {
		return nil
	}
	out := new(IntegrationRuntimeAzureSSISObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationRuntimeAzureSSISParameters) DeepCopyInto(out *IntegrationRuntimeAzureSSISParameters) {
	*out = *in
	if in.CatalogInfo != nil {
		in, out := &in.CatalogInfo, &out.CatalogInfo
		*out = make([]CatalogInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSetupScript != nil {
		in, out := &in.CustomSetupScript, &out.CustomSetupScript
		*out = make([]CustomSetupScriptParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryIDRef != nil {
		in, out := &in.DataFactoryIDRef, &out.DataFactoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryIDSelector != nil {
		in, out := &in.DataFactoryIDSelector, &out.DataFactoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Edition != nil {
		in, out := &in.Edition, &out.Edition
		*out = new(string)
		**out = **in
	}
	if in.ExpressCustomSetup != nil {
		in, out := &in.ExpressCustomSetup, &out.ExpressCustomSetup
		*out = make([]ExpressCustomSetupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExpressVnetIntegration != nil {
		in, out := &in.ExpressVnetIntegration, &out.ExpressVnetIntegration
		*out = make([]ExpressVnetIntegrationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaxParallelExecutionsPerNode != nil {
		in, out := &in.MaxParallelExecutionsPerNode, &out.MaxParallelExecutionsPerNode
		*out = new(float64)
		**out = **in
	}
	if in.NodeSize != nil {
		in, out := &in.NodeSize, &out.NodeSize
		*out = new(string)
		**out = **in
	}
	if in.NumberOfNodes != nil {
		in, out := &in.NumberOfNodes, &out.NumberOfNodes
		*out = new(float64)
		**out = **in
	}
	if in.PackageStore != nil {
		in, out := &in.PackageStore, &out.PackageStore
		*out = make([]PackageStoreParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Proxy != nil {
		in, out := &in.Proxy, &out.Proxy
		*out = make([]ProxyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VnetIntegration != nil {
		in, out := &in.VnetIntegration, &out.VnetIntegration
		*out = make([]VnetIntegrationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationRuntimeAzureSSISParameters.
func (in *IntegrationRuntimeAzureSSISParameters) DeepCopy() *IntegrationRuntimeAzureSSISParameters {
	if in == nil {
		return nil
	}
	out := new(IntegrationRuntimeAzureSSISParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationRuntimeAzureSSISSpec) DeepCopyInto(out *IntegrationRuntimeAzureSSISSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationRuntimeAzureSSISSpec.
func (in *IntegrationRuntimeAzureSSISSpec) DeepCopy() *IntegrationRuntimeAzureSSISSpec {
	if in == nil {
		return nil
	}
	out := new(IntegrationRuntimeAzureSSISSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationRuntimeAzureSSISStatus) DeepCopyInto(out *IntegrationRuntimeAzureSSISStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationRuntimeAzureSSISStatus.
func (in *IntegrationRuntimeAzureSSISStatus) DeepCopy() *IntegrationRuntimeAzureSSISStatus {
	if in == nil {
		return nil
	}
	out := new(IntegrationRuntimeAzureSSISStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationRuntimeAzureSpec) DeepCopyInto(out *IntegrationRuntimeAzureSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationRuntimeAzureSpec.
func (in *IntegrationRuntimeAzureSpec) DeepCopy() *IntegrationRuntimeAzureSpec {
	if in == nil {
		return nil
	}
	out := new(IntegrationRuntimeAzureSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationRuntimeAzureStatus) DeepCopyInto(out *IntegrationRuntimeAzureStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationRuntimeAzureStatus.
func (in *IntegrationRuntimeAzureStatus) DeepCopy() *IntegrationRuntimeAzureStatus {
	if in == nil {
		return nil
	}
	out := new(IntegrationRuntimeAzureStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationRuntimeObservation) DeepCopyInto(out *IntegrationRuntimeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationRuntimeObservation.
func (in *IntegrationRuntimeObservation) DeepCopy() *IntegrationRuntimeObservation {
	if in == nil {
		return nil
	}
	out := new(IntegrationRuntimeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationRuntimeParameters) DeepCopyInto(out *IntegrationRuntimeParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationRuntimeParameters.
func (in *IntegrationRuntimeParameters) DeepCopy() *IntegrationRuntimeParameters {
	if in == nil {
		return nil
	}
	out := new(IntegrationRuntimeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationRuntimeSelfHosted) DeepCopyInto(out *IntegrationRuntimeSelfHosted) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationRuntimeSelfHosted.
func (in *IntegrationRuntimeSelfHosted) DeepCopy() *IntegrationRuntimeSelfHosted {
	if in == nil {
		return nil
	}
	out := new(IntegrationRuntimeSelfHosted)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationRuntimeSelfHosted) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationRuntimeSelfHostedList) DeepCopyInto(out *IntegrationRuntimeSelfHostedList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IntegrationRuntimeSelfHosted, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationRuntimeSelfHostedList.
func (in *IntegrationRuntimeSelfHostedList) DeepCopy() *IntegrationRuntimeSelfHostedList {
	if in == nil {
		return nil
	}
	out := new(IntegrationRuntimeSelfHostedList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationRuntimeSelfHostedList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationRuntimeSelfHostedObservation) DeepCopyInto(out *IntegrationRuntimeSelfHostedObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryAuthorizationKey != nil {
		in, out := &in.PrimaryAuthorizationKey, &out.PrimaryAuthorizationKey
		*out = new(string)
		**out = **in
	}
	if in.SecondaryAuthorizationKey != nil {
		in, out := &in.SecondaryAuthorizationKey, &out.SecondaryAuthorizationKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationRuntimeSelfHostedObservation.
func (in *IntegrationRuntimeSelfHostedObservation) DeepCopy() *IntegrationRuntimeSelfHostedObservation {
	if in == nil {
		return nil
	}
	out := new(IntegrationRuntimeSelfHostedObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationRuntimeSelfHostedParameters) DeepCopyInto(out *IntegrationRuntimeSelfHostedParameters) {
	*out = *in
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryIDRef != nil {
		in, out := &in.DataFactoryIDRef, &out.DataFactoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryIDSelector != nil {
		in, out := &in.DataFactoryIDSelector, &out.DataFactoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.RbacAuthorization != nil {
		in, out := &in.RbacAuthorization, &out.RbacAuthorization
		*out = make([]RbacAuthorizationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationRuntimeSelfHostedParameters.
func (in *IntegrationRuntimeSelfHostedParameters) DeepCopy() *IntegrationRuntimeSelfHostedParameters {
	if in == nil {
		return nil
	}
	out := new(IntegrationRuntimeSelfHostedParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationRuntimeSelfHostedSpec) DeepCopyInto(out *IntegrationRuntimeSelfHostedSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationRuntimeSelfHostedSpec.
func (in *IntegrationRuntimeSelfHostedSpec) DeepCopy() *IntegrationRuntimeSelfHostedSpec {
	if in == nil {
		return nil
	}
	out := new(IntegrationRuntimeSelfHostedSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationRuntimeSelfHostedStatus) DeepCopyInto(out *IntegrationRuntimeSelfHostedStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationRuntimeSelfHostedStatus.
func (in *IntegrationRuntimeSelfHostedStatus) DeepCopy() *IntegrationRuntimeSelfHostedStatus {
	if in == nil {
		return nil
	}
	out := new(IntegrationRuntimeSelfHostedStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyVaultLicenseObservation) DeepCopyInto(out *KeyVaultLicenseObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyVaultLicenseObservation.
func (in *KeyVaultLicenseObservation) DeepCopy() *KeyVaultLicenseObservation {
	if in == nil {
		return nil
	}
	out := new(KeyVaultLicenseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyVaultLicenseParameters) DeepCopyInto(out *KeyVaultLicenseParameters) {
	*out = *in
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
	if in.SecretVersion != nil {
		in, out := &in.SecretVersion, &out.SecretVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyVaultLicenseParameters.
func (in *KeyVaultLicenseParameters) DeepCopy() *KeyVaultLicenseParameters {
	if in == nil {
		return nil
	}
	out := new(KeyVaultLicenseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyVaultPasswordObservation) DeepCopyInto(out *KeyVaultPasswordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyVaultPasswordObservation.
func (in *KeyVaultPasswordObservation) DeepCopy() *KeyVaultPasswordObservation {
	if in == nil {
		return nil
	}
	out := new(KeyVaultPasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyVaultPasswordParameters) DeepCopyInto(out *KeyVaultPasswordParameters) {
	*out = *in
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
	if in.SecretVersion != nil {
		in, out := &in.SecretVersion, &out.SecretVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyVaultPasswordParameters.
func (in *KeyVaultPasswordParameters) DeepCopy() *KeyVaultPasswordParameters {
	if in == nil {
		return nil
	}
	out := new(KeyVaultPasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyVaultSASTokenObservation) DeepCopyInto(out *KeyVaultSASTokenObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyVaultSASTokenObservation.
func (in *KeyVaultSASTokenObservation) DeepCopy() *KeyVaultSASTokenObservation {
	if in == nil {
		return nil
	}
	out := new(KeyVaultSASTokenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyVaultSASTokenParameters) DeepCopyInto(out *KeyVaultSASTokenParameters) {
	*out = *in
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyVaultSASTokenParameters.
func (in *KeyVaultSASTokenParameters) DeepCopy() *KeyVaultSASTokenParameters {
	if in == nil {
		return nil
	}
	out := new(KeyVaultSASTokenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedCustomService) DeepCopyInto(out *LinkedCustomService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedCustomService.
func (in *LinkedCustomService) DeepCopy() *LinkedCustomService {
	if in == nil {
		return nil
	}
	out := new(LinkedCustomService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinkedCustomService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedCustomServiceList) DeepCopyInto(out *LinkedCustomServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LinkedCustomService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedCustomServiceList.
func (in *LinkedCustomServiceList) DeepCopy() *LinkedCustomServiceList {
	if in == nil {
		return nil
	}
	out := new(LinkedCustomServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinkedCustomServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedCustomServiceObservation) DeepCopyInto(out *LinkedCustomServiceObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedCustomServiceObservation.
func (in *LinkedCustomServiceObservation) DeepCopy() *LinkedCustomServiceObservation {
	if in == nil {
		return nil
	}
	out := new(LinkedCustomServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedCustomServiceParameters) DeepCopyInto(out *LinkedCustomServiceParameters) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryIDRef != nil {
		in, out := &in.DataFactoryIDRef, &out.DataFactoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryIDSelector != nil {
		in, out := &in.DataFactoryIDSelector, &out.DataFactoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IntegrationRuntime != nil {
		in, out := &in.IntegrationRuntime, &out.IntegrationRuntime
		*out = make([]IntegrationRuntimeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.TypePropertiesJSON != nil {
		in, out := &in.TypePropertiesJSON, &out.TypePropertiesJSON
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedCustomServiceParameters.
func (in *LinkedCustomServiceParameters) DeepCopy() *LinkedCustomServiceParameters {
	if in == nil {
		return nil
	}
	out := new(LinkedCustomServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedCustomServiceSpec) DeepCopyInto(out *LinkedCustomServiceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedCustomServiceSpec.
func (in *LinkedCustomServiceSpec) DeepCopy() *LinkedCustomServiceSpec {
	if in == nil {
		return nil
	}
	out := new(LinkedCustomServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedCustomServiceStatus) DeepCopyInto(out *LinkedCustomServiceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedCustomServiceStatus.
func (in *LinkedCustomServiceStatus) DeepCopy() *LinkedCustomServiceStatus {
	if in == nil {
		return nil
	}
	out := new(LinkedCustomServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedServiceAzureBlobStorage) DeepCopyInto(out *LinkedServiceAzureBlobStorage) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedServiceAzureBlobStorage.
func (in *LinkedServiceAzureBlobStorage) DeepCopy() *LinkedServiceAzureBlobStorage {
	if in == nil {
		return nil
	}
	out := new(LinkedServiceAzureBlobStorage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinkedServiceAzureBlobStorage) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedServiceAzureBlobStorageList) DeepCopyInto(out *LinkedServiceAzureBlobStorageList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LinkedServiceAzureBlobStorage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedServiceAzureBlobStorageList.
func (in *LinkedServiceAzureBlobStorageList) DeepCopy() *LinkedServiceAzureBlobStorageList {
	if in == nil {
		return nil
	}
	out := new(LinkedServiceAzureBlobStorageList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinkedServiceAzureBlobStorageList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedServiceAzureBlobStorageObservation) DeepCopyInto(out *LinkedServiceAzureBlobStorageObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedServiceAzureBlobStorageObservation.
func (in *LinkedServiceAzureBlobStorageObservation) DeepCopy() *LinkedServiceAzureBlobStorageObservation {
	if in == nil {
		return nil
	}
	out := new(LinkedServiceAzureBlobStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedServiceAzureBlobStorageParameters) DeepCopyInto(out *LinkedServiceAzureBlobStorageParameters) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConnectionStringSecretRef != nil {
		in, out := &in.ConnectionStringSecretRef, &out.ConnectionStringSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryIDRef != nil {
		in, out := &in.DataFactoryIDRef, &out.DataFactoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryIDSelector != nil {
		in, out := &in.DataFactoryIDSelector, &out.DataFactoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IntegrationRuntimeName != nil {
		in, out := &in.IntegrationRuntimeName, &out.IntegrationRuntimeName
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultSASToken != nil {
		in, out := &in.KeyVaultSASToken, &out.KeyVaultSASToken
		*out = make([]KeyVaultSASTokenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SASURISecretRef != nil {
		in, out := &in.SASURISecretRef, &out.SASURISecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ServiceEndpointSecretRef != nil {
		in, out := &in.ServiceEndpointSecretRef, &out.ServiceEndpointSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ServicePrincipalID != nil {
		in, out := &in.ServicePrincipalID, &out.ServicePrincipalID
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalKey != nil {
		in, out := &in.ServicePrincipalKey, &out.ServicePrincipalKey
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalLinkedKeyVaultKey != nil {
		in, out := &in.ServicePrincipalLinkedKeyVaultKey, &out.ServicePrincipalLinkedKeyVaultKey
		*out = make([]ServicePrincipalLinkedKeyVaultKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageKind != nil {
		in, out := &in.StorageKind, &out.StorageKind
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.UseManagedIdentity != nil {
		in, out := &in.UseManagedIdentity, &out.UseManagedIdentity
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedServiceAzureBlobStorageParameters.
func (in *LinkedServiceAzureBlobStorageParameters) DeepCopy() *LinkedServiceAzureBlobStorageParameters {
	if in == nil {
		return nil
	}
	out := new(LinkedServiceAzureBlobStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedServiceAzureBlobStorageSpec) DeepCopyInto(out *LinkedServiceAzureBlobStorageSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedServiceAzureBlobStorageSpec.
func (in *LinkedServiceAzureBlobStorageSpec) DeepCopy() *LinkedServiceAzureBlobStorageSpec {
	if in == nil {
		return nil
	}
	out := new(LinkedServiceAzureBlobStorageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedServiceAzureBlobStorageStatus) DeepCopyInto(out *LinkedServiceAzureBlobStorageStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedServiceAzureBlobStorageStatus.
func (in *LinkedServiceAzureBlobStorageStatus) DeepCopy() *LinkedServiceAzureBlobStorageStatus {
	if in == nil {
		return nil
	}
	out := new(LinkedServiceAzureBlobStorageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedServiceObservation) DeepCopyInto(out *LinkedServiceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedServiceObservation.
func (in *LinkedServiceObservation) DeepCopy() *LinkedServiceObservation {
	if in == nil {
		return nil
	}
	out := new(LinkedServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedServiceOdbc) DeepCopyInto(out *LinkedServiceOdbc) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedServiceOdbc.
func (in *LinkedServiceOdbc) DeepCopy() *LinkedServiceOdbc {
	if in == nil {
		return nil
	}
	out := new(LinkedServiceOdbc)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinkedServiceOdbc) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedServiceOdbcList) DeepCopyInto(out *LinkedServiceOdbcList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LinkedServiceOdbc, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedServiceOdbcList.
func (in *LinkedServiceOdbcList) DeepCopy() *LinkedServiceOdbcList {
	if in == nil {
		return nil
	}
	out := new(LinkedServiceOdbcList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinkedServiceOdbcList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedServiceOdbcObservation) DeepCopyInto(out *LinkedServiceOdbcObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedServiceOdbcObservation.
func (in *LinkedServiceOdbcObservation) DeepCopy() *LinkedServiceOdbcObservation {
	if in == nil {
		return nil
	}
	out := new(LinkedServiceOdbcObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedServiceOdbcParameters) DeepCopyInto(out *LinkedServiceOdbcParameters) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BasicAuthentication != nil {
		in, out := &in.BasicAuthentication, &out.BasicAuthentication
		*out = make([]BasicAuthenticationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryIDRef != nil {
		in, out := &in.DataFactoryIDRef, &out.DataFactoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryIDSelector != nil {
		in, out := &in.DataFactoryIDSelector, &out.DataFactoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IntegrationRuntimeName != nil {
		in, out := &in.IntegrationRuntimeName, &out.IntegrationRuntimeName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedServiceOdbcParameters.
func (in *LinkedServiceOdbcParameters) DeepCopy() *LinkedServiceOdbcParameters {
	if in == nil {
		return nil
	}
	out := new(LinkedServiceOdbcParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedServiceOdbcSpec) DeepCopyInto(out *LinkedServiceOdbcSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedServiceOdbcSpec.
func (in *LinkedServiceOdbcSpec) DeepCopy() *LinkedServiceOdbcSpec {
	if in == nil {
		return nil
	}
	out := new(LinkedServiceOdbcSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedServiceOdbcStatus) DeepCopyInto(out *LinkedServiceOdbcStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedServiceOdbcStatus.
func (in *LinkedServiceOdbcStatus) DeepCopy() *LinkedServiceOdbcStatus {
	if in == nil {
		return nil
	}
	out := new(LinkedServiceOdbcStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedServiceParameters) DeepCopyInto(out *LinkedServiceParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedServiceParameters.
func (in *LinkedServiceParameters) DeepCopy() *LinkedServiceParameters {
	if in == nil {
		return nil
	}
	out := new(LinkedServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonthlyObservation) DeepCopyInto(out *MonthlyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonthlyObservation.
func (in *MonthlyObservation) DeepCopy() *MonthlyObservation {
	if in == nil {
		return nil
	}
	out := new(MonthlyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonthlyParameters) DeepCopyInto(out *MonthlyParameters) {
	*out = *in
	if in.Week != nil {
		in, out := &in.Week, &out.Week
		*out = new(float64)
		**out = **in
	}
	if in.Weekday != nil {
		in, out := &in.Weekday, &out.Weekday
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonthlyParameters.
func (in *MonthlyParameters) DeepCopy() *MonthlyParameters {
	if in == nil {
		return nil
	}
	out := new(MonthlyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PackageStoreObservation) DeepCopyInto(out *PackageStoreObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PackageStoreObservation.
func (in *PackageStoreObservation) DeepCopy() *PackageStoreObservation {
	if in == nil {
		return nil
	}
	out := new(PackageStoreObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PackageStoreParameters) DeepCopyInto(out *PackageStoreParameters) {
	*out = *in
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PackageStoreParameters.
func (in *PackageStoreParameters) DeepCopy() *PackageStoreParameters {
	if in == nil {
		return nil
	}
	out := new(PackageStoreParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pipeline) DeepCopyInto(out *Pipeline) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pipeline.
func (in *Pipeline) DeepCopy() *Pipeline {
	if in == nil {
		return nil
	}
	out := new(Pipeline)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Pipeline) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineList) DeepCopyInto(out *PipelineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Pipeline, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineList.
func (in *PipelineList) DeepCopy() *PipelineList {
	if in == nil {
		return nil
	}
	out := new(PipelineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PipelineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineObservation) DeepCopyInto(out *PipelineObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineObservation.
func (in *PipelineObservation) DeepCopy() *PipelineObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineParameters) DeepCopyInto(out *PipelineParameters) {
	*out = *in
	if in.ActivitiesJSON != nil {
		in, out := &in.ActivitiesJSON, &out.ActivitiesJSON
		*out = new(string)
		**out = **in
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Concurrency != nil {
		in, out := &in.Concurrency, &out.Concurrency
		*out = new(float64)
		**out = **in
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryIDRef != nil {
		in, out := &in.DataFactoryIDRef, &out.DataFactoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryIDSelector != nil {
		in, out := &in.DataFactoryIDSelector, &out.DataFactoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.MoniterMetricsAfterDuration != nil {
		in, out := &in.MoniterMetricsAfterDuration, &out.MoniterMetricsAfterDuration
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineParameters.
func (in *PipelineParameters) DeepCopy() *PipelineParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineSpec) DeepCopyInto(out *PipelineSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineSpec.
func (in *PipelineSpec) DeepCopy() *PipelineSpec {
	if in == nil {
		return nil
	}
	out := new(PipelineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineStatus) DeepCopyInto(out *PipelineStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineStatus.
func (in *PipelineStatus) DeepCopy() *PipelineStatus {
	if in == nil {
		return nil
	}
	out := new(PipelineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyObservation) DeepCopyInto(out *ProxyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyObservation.
func (in *ProxyObservation) DeepCopy() *ProxyObservation {
	if in == nil {
		return nil
	}
	out := new(ProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyParameters) DeepCopyInto(out *ProxyParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.SelfHostedIntegrationRuntimeName != nil {
		in, out := &in.SelfHostedIntegrationRuntimeName, &out.SelfHostedIntegrationRuntimeName
		*out = new(string)
		**out = **in
	}
	if in.StagingStorageLinkedServiceName != nil {
		in, out := &in.StagingStorageLinkedServiceName, &out.StagingStorageLinkedServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyParameters.
func (in *ProxyParameters) DeepCopy() *ProxyParameters {
	if in == nil {
		return nil
	}
	out := new(ProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RbacAuthorizationObservation) DeepCopyInto(out *RbacAuthorizationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RbacAuthorizationObservation.
func (in *RbacAuthorizationObservation) DeepCopy() *RbacAuthorizationObservation {
	if in == nil {
		return nil
	}
	out := new(RbacAuthorizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RbacAuthorizationParameters) DeepCopyInto(out *RbacAuthorizationParameters) {
	*out = *in
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RbacAuthorizationParameters.
func (in *RbacAuthorizationParameters) DeepCopy() *RbacAuthorizationParameters {
	if in == nil {
		return nil
	}
	out := new(RbacAuthorizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RejectedLinkedServiceObservation) DeepCopyInto(out *RejectedLinkedServiceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RejectedLinkedServiceObservation.
func (in *RejectedLinkedServiceObservation) DeepCopy() *RejectedLinkedServiceObservation {
	if in == nil {
		return nil
	}
	out := new(RejectedLinkedServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RejectedLinkedServiceParameters) DeepCopyInto(out *RejectedLinkedServiceParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RejectedLinkedServiceParameters.
func (in *RejectedLinkedServiceParameters) DeepCopy() *RejectedLinkedServiceParameters {
	if in == nil {
		return nil
	}
	out := new(RejectedLinkedServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SFTPServerLocationObservation) DeepCopyInto(out *SFTPServerLocationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SFTPServerLocationObservation.
func (in *SFTPServerLocationObservation) DeepCopy() *SFTPServerLocationObservation {
	if in == nil {
		return nil
	}
	out := new(SFTPServerLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SFTPServerLocationParameters) DeepCopyInto(out *SFTPServerLocationParameters) {
	*out = *in
	if in.DynamicFilenameEnabled != nil {
		in, out := &in.DynamicFilenameEnabled, &out.DynamicFilenameEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DynamicPathEnabled != nil {
		in, out := &in.DynamicPathEnabled, &out.DynamicPathEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SFTPServerLocationParameters.
func (in *SFTPServerLocationParameters) DeepCopy() *SFTPServerLocationParameters {
	if in == nil {
		return nil
	}
	out := new(SFTPServerLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleObservation) DeepCopyInto(out *ScheduleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleObservation.
func (in *ScheduleObservation) DeepCopy() *ScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleParameters) DeepCopyInto(out *ScheduleParameters) {
	*out = *in
	if in.DaysOfMonth != nil {
		in, out := &in.DaysOfMonth, &out.DaysOfMonth
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Hours != nil {
		in, out := &in.Hours, &out.Hours
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Minutes != nil {
		in, out := &in.Minutes, &out.Minutes
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Monthly != nil {
		in, out := &in.Monthly, &out.Monthly
		*out = make([]MonthlyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleParameters.
func (in *ScheduleParameters) DeepCopy() *ScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaColumnObservation) DeepCopyInto(out *SchemaColumnObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaColumnObservation.
func (in *SchemaColumnObservation) DeepCopy() *SchemaColumnObservation {
	if in == nil {
		return nil
	}
	out := new(SchemaColumnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaColumnParameters) DeepCopyInto(out *SchemaColumnParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaColumnParameters.
func (in *SchemaColumnParameters) DeepCopy() *SchemaColumnParameters {
	if in == nil {
		return nil
	}
	out := new(SchemaColumnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaLinkedServiceObservation) DeepCopyInto(out *SchemaLinkedServiceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaLinkedServiceObservation.
func (in *SchemaLinkedServiceObservation) DeepCopy() *SchemaLinkedServiceObservation {
	if in == nil {
		return nil
	}
	out := new(SchemaLinkedServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaLinkedServiceParameters) DeepCopyInto(out *SchemaLinkedServiceParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaLinkedServiceParameters.
func (in *SchemaLinkedServiceParameters) DeepCopy() *SchemaLinkedServiceParameters {
	if in == nil {
		return nil
	}
	out := new(SchemaLinkedServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalLinkedKeyVaultKeyObservation) DeepCopyInto(out *ServicePrincipalLinkedKeyVaultKeyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalLinkedKeyVaultKeyObservation.
func (in *ServicePrincipalLinkedKeyVaultKeyObservation) DeepCopy() *ServicePrincipalLinkedKeyVaultKeyObservation {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalLinkedKeyVaultKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePrincipalLinkedKeyVaultKeyParameters) DeepCopyInto(out *ServicePrincipalLinkedKeyVaultKeyParameters) {
	*out = *in
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePrincipalLinkedKeyVaultKeyParameters.
func (in *ServicePrincipalLinkedKeyVaultKeyParameters) DeepCopy() *ServicePrincipalLinkedKeyVaultKeyParameters {
	if in == nil {
		return nil
	}
	out := new(ServicePrincipalLinkedKeyVaultKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SinkLinkedServiceObservation) DeepCopyInto(out *SinkLinkedServiceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SinkLinkedServiceObservation.
func (in *SinkLinkedServiceObservation) DeepCopy() *SinkLinkedServiceObservation {
	if in == nil {
		return nil
	}
	out := new(SinkLinkedServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SinkLinkedServiceParameters) DeepCopyInto(out *SinkLinkedServiceParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SinkLinkedServiceParameters.
func (in *SinkLinkedServiceParameters) DeepCopy() *SinkLinkedServiceParameters {
	if in == nil {
		return nil
	}
	out := new(SinkLinkedServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SinkObservation) DeepCopyInto(out *SinkObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SinkObservation.
func (in *SinkObservation) DeepCopy() *SinkObservation {
	if in == nil {
		return nil
	}
	out := new(SinkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SinkParameters) DeepCopyInto(out *SinkParameters) {
	*out = *in
	if in.DataSet != nil {
		in, out := &in.DataSet, &out.DataSet
		*out = make([]DataSetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Flowlet != nil {
		in, out := &in.Flowlet, &out.Flowlet
		*out = make([]FlowletParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LinkedService != nil {
		in, out := &in.LinkedService, &out.LinkedService
		*out = make([]SinkLinkedServiceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RejectedLinkedService != nil {
		in, out := &in.RejectedLinkedService, &out.RejectedLinkedService
		*out = make([]RejectedLinkedServiceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SchemaLinkedService != nil {
		in, out := &in.SchemaLinkedService, &out.SchemaLinkedService
		*out = make([]SchemaLinkedServiceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SinkParameters.
func (in *SinkParameters) DeepCopy() *SinkParameters {
	if in == nil {
		return nil
	}
	out := new(SinkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDataSetObservation) DeepCopyInto(out *SourceDataSetObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDataSetObservation.
func (in *SourceDataSetObservation) DeepCopy() *SourceDataSetObservation {
	if in == nil {
		return nil
	}
	out := new(SourceDataSetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDataSetParameters) DeepCopyInto(out *SourceDataSetParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDataSetParameters.
func (in *SourceDataSetParameters) DeepCopy() *SourceDataSetParameters {
	if in == nil {
		return nil
	}
	out := new(SourceDataSetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceFlowletObservation) DeepCopyInto(out *SourceFlowletObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceFlowletObservation.
func (in *SourceFlowletObservation) DeepCopy() *SourceFlowletObservation {
	if in == nil {
		return nil
	}
	out := new(SourceFlowletObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceFlowletParameters) DeepCopyInto(out *SourceFlowletParameters) {
	*out = *in
	if in.DataSetParameters != nil {
		in, out := &in.DataSetParameters, &out.DataSetParameters
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceFlowletParameters.
func (in *SourceFlowletParameters) DeepCopy() *SourceFlowletParameters {
	if in == nil {
		return nil
	}
	out := new(SourceFlowletParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceLinkedServiceObservation) DeepCopyInto(out *SourceLinkedServiceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceLinkedServiceObservation.
func (in *SourceLinkedServiceObservation) DeepCopy() *SourceLinkedServiceObservation {
	if in == nil {
		return nil
	}
	out := new(SourceLinkedServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceLinkedServiceParameters) DeepCopyInto(out *SourceLinkedServiceParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceLinkedServiceParameters.
func (in *SourceLinkedServiceParameters) DeepCopy() *SourceLinkedServiceParameters {
	if in == nil {
		return nil
	}
	out := new(SourceLinkedServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceObservation) DeepCopyInto(out *SourceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceObservation.
func (in *SourceObservation) DeepCopy() *SourceObservation {
	if in == nil {
		return nil
	}
	out := new(SourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceParameters) DeepCopyInto(out *SourceParameters) {
	*out = *in
	if in.DataSet != nil {
		in, out := &in.DataSet, &out.DataSet
		*out = make([]SourceDataSetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Flowlet != nil {
		in, out := &in.Flowlet, &out.Flowlet
		*out = make([]SourceFlowletParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LinkedService != nil {
		in, out := &in.LinkedService, &out.LinkedService
		*out = make([]SourceLinkedServiceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RejectedLinkedService != nil {
		in, out := &in.RejectedLinkedService, &out.RejectedLinkedService
		*out = make([]SourceRejectedLinkedServiceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SchemaLinkedService != nil {
		in, out := &in.SchemaLinkedService, &out.SchemaLinkedService
		*out = make([]SourceSchemaLinkedServiceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceParameters.
func (in *SourceParameters) DeepCopy() *SourceParameters {
	if in == nil {
		return nil
	}
	out := new(SourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceRejectedLinkedServiceObservation) DeepCopyInto(out *SourceRejectedLinkedServiceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceRejectedLinkedServiceObservation.
func (in *SourceRejectedLinkedServiceObservation) DeepCopy() *SourceRejectedLinkedServiceObservation {
	if in == nil {
		return nil
	}
	out := new(SourceRejectedLinkedServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceRejectedLinkedServiceParameters) DeepCopyInto(out *SourceRejectedLinkedServiceParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceRejectedLinkedServiceParameters.
func (in *SourceRejectedLinkedServiceParameters) DeepCopy() *SourceRejectedLinkedServiceParameters {
	if in == nil {
		return nil
	}
	out := new(SourceRejectedLinkedServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceSchemaLinkedServiceObservation) DeepCopyInto(out *SourceSchemaLinkedServiceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceSchemaLinkedServiceObservation.
func (in *SourceSchemaLinkedServiceObservation) DeepCopy() *SourceSchemaLinkedServiceObservation {
	if in == nil {
		return nil
	}
	out := new(SourceSchemaLinkedServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceSchemaLinkedServiceParameters) DeepCopyInto(out *SourceSchemaLinkedServiceParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceSchemaLinkedServiceParameters.
func (in *SourceSchemaLinkedServiceParameters) DeepCopy() *SourceSchemaLinkedServiceParameters {
	if in == nil {
		return nil
	}
	out := new(SourceSchemaLinkedServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformationDataSetObservation) DeepCopyInto(out *TransformationDataSetObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformationDataSetObservation.
func (in *TransformationDataSetObservation) DeepCopy() *TransformationDataSetObservation {
	if in == nil {
		return nil
	}
	out := new(TransformationDataSetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformationDataSetParameters) DeepCopyInto(out *TransformationDataSetParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformationDataSetParameters.
func (in *TransformationDataSetParameters) DeepCopy() *TransformationDataSetParameters {
	if in == nil {
		return nil
	}
	out := new(TransformationDataSetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformationFlowletObservation) DeepCopyInto(out *TransformationFlowletObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformationFlowletObservation.
func (in *TransformationFlowletObservation) DeepCopy() *TransformationFlowletObservation {
	if in == nil {
		return nil
	}
	out := new(TransformationFlowletObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformationFlowletParameters) DeepCopyInto(out *TransformationFlowletParameters) {
	*out = *in
	if in.DataSetParameters != nil {
		in, out := &in.DataSetParameters, &out.DataSetParameters
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformationFlowletParameters.
func (in *TransformationFlowletParameters) DeepCopy() *TransformationFlowletParameters {
	if in == nil {
		return nil
	}
	out := new(TransformationFlowletParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformationLinkedServiceObservation) DeepCopyInto(out *TransformationLinkedServiceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformationLinkedServiceObservation.
func (in *TransformationLinkedServiceObservation) DeepCopy() *TransformationLinkedServiceObservation {
	if in == nil {
		return nil
	}
	out := new(TransformationLinkedServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformationLinkedServiceParameters) DeepCopyInto(out *TransformationLinkedServiceParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformationLinkedServiceParameters.
func (in *TransformationLinkedServiceParameters) DeepCopy() *TransformationLinkedServiceParameters {
	if in == nil {
		return nil
	}
	out := new(TransformationLinkedServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformationObservation) DeepCopyInto(out *TransformationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformationObservation.
func (in *TransformationObservation) DeepCopy() *TransformationObservation {
	if in == nil {
		return nil
	}
	out := new(TransformationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformationParameters) DeepCopyInto(out *TransformationParameters) {
	*out = *in
	if in.DataSet != nil {
		in, out := &in.DataSet, &out.DataSet
		*out = make([]TransformationDataSetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Flowlet != nil {
		in, out := &in.Flowlet, &out.Flowlet
		*out = make([]TransformationFlowletParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LinkedService != nil {
		in, out := &in.LinkedService, &out.LinkedService
		*out = make([]TransformationLinkedServiceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformationParameters.
func (in *TransformationParameters) DeepCopy() *TransformationParameters {
	if in == nil {
		return nil
	}
	out := new(TransformationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerBlobEvent) DeepCopyInto(out *TriggerBlobEvent) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerBlobEvent.
func (in *TriggerBlobEvent) DeepCopy() *TriggerBlobEvent {
	if in == nil {
		return nil
	}
	out := new(TriggerBlobEvent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TriggerBlobEvent) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerBlobEventList) DeepCopyInto(out *TriggerBlobEventList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TriggerBlobEvent, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerBlobEventList.
func (in *TriggerBlobEventList) DeepCopy() *TriggerBlobEventList {
	if in == nil {
		return nil
	}
	out := new(TriggerBlobEventList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TriggerBlobEventList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerBlobEventObservation) DeepCopyInto(out *TriggerBlobEventObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerBlobEventObservation.
func (in *TriggerBlobEventObservation) DeepCopy() *TriggerBlobEventObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerBlobEventObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerBlobEventParameters) DeepCopyInto(out *TriggerBlobEventParameters) {
	*out = *in
	if in.Activated != nil {
		in, out := &in.Activated, &out.Activated
		*out = new(bool)
		**out = **in
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BlobPathBeginsWith != nil {
		in, out := &in.BlobPathBeginsWith, &out.BlobPathBeginsWith
		*out = new(string)
		**out = **in
	}
	if in.BlobPathEndsWith != nil {
		in, out := &in.BlobPathEndsWith, &out.BlobPathEndsWith
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryIDRef != nil {
		in, out := &in.DataFactoryIDRef, &out.DataFactoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryIDSelector != nil {
		in, out := &in.DataFactoryIDSelector, &out.DataFactoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IgnoreEmptyBlobs != nil {
		in, out := &in.IgnoreEmptyBlobs, &out.IgnoreEmptyBlobs
		*out = new(bool)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = make([]TriggerBlobEventPipelineParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountID != nil {
		in, out := &in.StorageAccountID, &out.StorageAccountID
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountIDRef != nil {
		in, out := &in.StorageAccountIDRef, &out.StorageAccountIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountIDSelector != nil {
		in, out := &in.StorageAccountIDSelector, &out.StorageAccountIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerBlobEventParameters.
func (in *TriggerBlobEventParameters) DeepCopy() *TriggerBlobEventParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerBlobEventParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerBlobEventPipelineObservation) DeepCopyInto(out *TriggerBlobEventPipelineObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerBlobEventPipelineObservation.
func (in *TriggerBlobEventPipelineObservation) DeepCopy() *TriggerBlobEventPipelineObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerBlobEventPipelineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerBlobEventPipelineParameters) DeepCopyInto(out *TriggerBlobEventPipelineParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerBlobEventPipelineParameters.
func (in *TriggerBlobEventPipelineParameters) DeepCopy() *TriggerBlobEventPipelineParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerBlobEventPipelineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerBlobEventSpec) DeepCopyInto(out *TriggerBlobEventSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerBlobEventSpec.
func (in *TriggerBlobEventSpec) DeepCopy() *TriggerBlobEventSpec {
	if in == nil {
		return nil
	}
	out := new(TriggerBlobEventSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerBlobEventStatus) DeepCopyInto(out *TriggerBlobEventStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerBlobEventStatus.
func (in *TriggerBlobEventStatus) DeepCopy() *TriggerBlobEventStatus {
	if in == nil {
		return nil
	}
	out := new(TriggerBlobEventStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerSchedule) DeepCopyInto(out *TriggerSchedule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerSchedule.
func (in *TriggerSchedule) DeepCopy() *TriggerSchedule {
	if in == nil {
		return nil
	}
	out := new(TriggerSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TriggerSchedule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerScheduleList) DeepCopyInto(out *TriggerScheduleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TriggerSchedule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerScheduleList.
func (in *TriggerScheduleList) DeepCopy() *TriggerScheduleList {
	if in == nil {
		return nil
	}
	out := new(TriggerScheduleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TriggerScheduleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerScheduleObservation) DeepCopyInto(out *TriggerScheduleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerScheduleObservation.
func (in *TriggerScheduleObservation) DeepCopy() *TriggerScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerScheduleParameters) DeepCopyInto(out *TriggerScheduleParameters) {
	*out = *in
	if in.Activated != nil {
		in, out := &in.Activated, &out.Activated
		*out = new(bool)
		**out = **in
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryIDRef != nil {
		in, out := &in.DataFactoryIDRef, &out.DataFactoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryIDSelector != nil {
		in, out := &in.DataFactoryIDSelector, &out.DataFactoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = make([]TriggerSchedulePipelineParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PipelineName != nil {
		in, out := &in.PipelineName, &out.PipelineName
		*out = new(string)
		**out = **in
	}
	if in.PipelineNameRef != nil {
		in, out := &in.PipelineNameRef, &out.PipelineNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PipelineNameSelector != nil {
		in, out := &in.PipelineNameSelector, &out.PipelineNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PipelineParameters != nil {
		in, out := &in.PipelineParameters, &out.PipelineParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerScheduleParameters.
func (in *TriggerScheduleParameters) DeepCopy() *TriggerScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerSchedulePipelineObservation) DeepCopyInto(out *TriggerSchedulePipelineObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerSchedulePipelineObservation.
func (in *TriggerSchedulePipelineObservation) DeepCopy() *TriggerSchedulePipelineObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerSchedulePipelineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerSchedulePipelineParameters) DeepCopyInto(out *TriggerSchedulePipelineParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerSchedulePipelineParameters.
func (in *TriggerSchedulePipelineParameters) DeepCopy() *TriggerSchedulePipelineParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerSchedulePipelineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerScheduleSpec) DeepCopyInto(out *TriggerScheduleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerScheduleSpec.
func (in *TriggerScheduleSpec) DeepCopy() *TriggerScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(TriggerScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerScheduleStatus) DeepCopyInto(out *TriggerScheduleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerScheduleStatus.
func (in *TriggerScheduleStatus) DeepCopy() *TriggerScheduleStatus {
	if in == nil {
		return nil
	}
	out := new(TriggerScheduleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnetIntegrationObservation) DeepCopyInto(out *VnetIntegrationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnetIntegrationObservation.
func (in *VnetIntegrationObservation) DeepCopy() *VnetIntegrationObservation {
	if in == nil {
		return nil
	}
	out := new(VnetIntegrationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnetIntegrationParameters) DeepCopyInto(out *VnetIntegrationParameters) {
	*out = *in
	if in.PublicIps != nil {
		in, out := &in.PublicIps, &out.PublicIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetName != nil {
		in, out := &in.SubnetName, &out.SubnetName
		*out = new(string)
		**out = **in
	}
	if in.SubnetNameRef != nil {
		in, out := &in.SubnetNameRef, &out.SubnetNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetNameSelector != nil {
		in, out := &in.SubnetNameSelector, &out.SubnetNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VnetID != nil {
		in, out := &in.VnetID, &out.VnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnetIntegrationParameters.
func (in *VnetIntegrationParameters) DeepCopy() *VnetIntegrationParameters {
	if in == nil {
		return nil
	}
	out := new(VnetIntegrationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VstsConfigurationObservation) DeepCopyInto(out *VstsConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VstsConfigurationObservation.
func (in *VstsConfigurationObservation) DeepCopy() *VstsConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(VstsConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VstsConfigurationParameters) DeepCopyInto(out *VstsConfigurationParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.BranchName != nil {
		in, out := &in.BranchName, &out.BranchName
		*out = new(string)
		**out = **in
	}
	if in.ProjectName != nil {
		in, out := &in.ProjectName, &out.ProjectName
		*out = new(string)
		**out = **in
	}
	if in.RepositoryName != nil {
		in, out := &in.RepositoryName, &out.RepositoryName
		*out = new(string)
		**out = **in
	}
	if in.RootFolder != nil {
		in, out := &in.RootFolder, &out.RootFolder
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VstsConfigurationParameters.
func (in *VstsConfigurationParameters) DeepCopy() *VstsConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(VstsConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}
