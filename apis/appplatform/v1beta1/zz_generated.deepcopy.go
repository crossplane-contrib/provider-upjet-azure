//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigServerGitSettingObservation) DeepCopyInto(out *ConfigServerGitSettingObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigServerGitSettingObservation.
func (in *ConfigServerGitSettingObservation) DeepCopy() *ConfigServerGitSettingObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigServerGitSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigServerGitSettingParameters) DeepCopyInto(out *ConfigServerGitSettingParameters) {
	*out = *in
	if in.HTTPBasicAuth != nil {
		in, out := &in.HTTPBasicAuth, &out.HTTPBasicAuth
		*out = make([]HTTPBasicAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = make([]RepositoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHAuth != nil {
		in, out := &in.SSHAuth, &out.SSHAuth
		*out = make([]ConfigServerGitSettingSSHAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SearchPaths != nil {
		in, out := &in.SearchPaths, &out.SearchPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigServerGitSettingParameters.
func (in *ConfigServerGitSettingParameters) DeepCopy() *ConfigServerGitSettingParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigServerGitSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigServerGitSettingSSHAuthObservation) DeepCopyInto(out *ConfigServerGitSettingSSHAuthObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigServerGitSettingSSHAuthObservation.
func (in *ConfigServerGitSettingSSHAuthObservation) DeepCopy() *ConfigServerGitSettingSSHAuthObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigServerGitSettingSSHAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigServerGitSettingSSHAuthParameters) DeepCopyInto(out *ConfigServerGitSettingSSHAuthParameters) {
	*out = *in
	if in.HostKeyAlgorithm != nil {
		in, out := &in.HostKeyAlgorithm, &out.HostKeyAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.HostKeySecretRef != nil {
		in, out := &in.HostKeySecretRef, &out.HostKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	out.PrivateKeySecretRef = in.PrivateKeySecretRef
	if in.StrictHostKeyCheckingEnabled != nil {
		in, out := &in.StrictHostKeyCheckingEnabled, &out.StrictHostKeyCheckingEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigServerGitSettingSSHAuthParameters.
func (in *ConfigServerGitSettingSSHAuthParameters) DeepCopy() *ConfigServerGitSettingSSHAuthParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigServerGitSettingSSHAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPersistentDiskObservation) DeepCopyInto(out *CustomPersistentDiskObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPersistentDiskObservation.
func (in *CustomPersistentDiskObservation) DeepCopy() *CustomPersistentDiskObservation {
	if in == nil {
		return nil
	}
	out := new(CustomPersistentDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPersistentDiskParameters) DeepCopyInto(out *CustomPersistentDiskParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.ReadOnlyEnabled != nil {
		in, out := &in.ReadOnlyEnabled, &out.ReadOnlyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.StorageName != nil {
		in, out := &in.StorageName, &out.StorageName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPersistentDiskParameters.
func (in *CustomPersistentDiskParameters) DeepCopy() *CustomPersistentDiskParameters {
	if in == nil {
		return nil
	}
	out := new(CustomPersistentDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPBasicAuthObservation) DeepCopyInto(out *HTTPBasicAuthObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPBasicAuthObservation.
func (in *HTTPBasicAuthObservation) DeepCopy() *HTTPBasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPBasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPBasicAuthParameters) DeepCopyInto(out *HTTPBasicAuthParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPBasicAuthParameters.
func (in *HTTPBasicAuthParameters) DeepCopy() *HTTPBasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPBasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityObservation) DeepCopyInto(out *IdentityObservation) {
	*out = *in
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityObservation.
func (in *IdentityObservation) DeepCopy() *IdentityObservation {
	if in == nil {
		return nil
	}
	out := new(IdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityParameters) DeepCopyInto(out *IdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityParameters.
func (in *IdentityParameters) DeepCopy() *IdentityParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSettingsObservation) DeepCopyInto(out *IngressSettingsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSettingsObservation.
func (in *IngressSettingsObservation) DeepCopy() *IngressSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(IngressSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSettingsParameters) DeepCopyInto(out *IngressSettingsParameters) {
	*out = *in
	if in.BackendProtocol != nil {
		in, out := &in.BackendProtocol, &out.BackendProtocol
		*out = new(string)
		**out = **in
	}
	if in.ReadTimeoutInSeconds != nil {
		in, out := &in.ReadTimeoutInSeconds, &out.ReadTimeoutInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.SendTimeoutInSeconds != nil {
		in, out := &in.SendTimeoutInSeconds, &out.SendTimeoutInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(string)
		**out = **in
	}
	if in.SessionCookieMaxAge != nil {
		in, out := &in.SessionCookieMaxAge, &out.SessionCookieMaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSettingsParameters.
func (in *IngressSettingsParameters) DeepCopy() *IngressSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(IngressSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkObservation) DeepCopyInto(out *NetworkObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkObservation.
func (in *NetworkObservation) DeepCopy() *NetworkObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkParameters) DeepCopyInto(out *NetworkParameters) {
	*out = *in
	if in.AppNetworkResourceGroup != nil {
		in, out := &in.AppNetworkResourceGroup, &out.AppNetworkResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.AppSubnetID != nil {
		in, out := &in.AppSubnetID, &out.AppSubnetID
		*out = new(string)
		**out = **in
	}
	if in.AppSubnetIDRef != nil {
		in, out := &in.AppSubnetIDRef, &out.AppSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AppSubnetIDSelector != nil {
		in, out := &in.AppSubnetIDSelector, &out.AppSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CidrRanges != nil {
		in, out := &in.CidrRanges, &out.CidrRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ReadTimeoutSeconds != nil {
		in, out := &in.ReadTimeoutSeconds, &out.ReadTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.ServiceRuntimeNetworkResourceGroup != nil {
		in, out := &in.ServiceRuntimeNetworkResourceGroup, &out.ServiceRuntimeNetworkResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.ServiceRuntimeSubnetID != nil {
		in, out := &in.ServiceRuntimeSubnetID, &out.ServiceRuntimeSubnetID
		*out = new(string)
		**out = **in
	}
	if in.ServiceRuntimeSubnetIDRef != nil {
		in, out := &in.ServiceRuntimeSubnetIDRef, &out.ServiceRuntimeSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceRuntimeSubnetIDSelector != nil {
		in, out := &in.ServiceRuntimeSubnetIDSelector, &out.ServiceRuntimeSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkParameters.
func (in *NetworkParameters) DeepCopy() *NetworkParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistentDiskObservation) DeepCopyInto(out *PersistentDiskObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistentDiskObservation.
func (in *PersistentDiskObservation) DeepCopy() *PersistentDiskObservation {
	if in == nil {
		return nil
	}
	out := new(PersistentDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistentDiskParameters) DeepCopyInto(out *PersistentDiskParameters) {
	*out = *in
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.SizeInGb != nil {
		in, out := &in.SizeInGb, &out.SizeInGb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistentDiskParameters.
func (in *PersistentDiskParameters) DeepCopy() *PersistentDiskParameters {
	if in == nil {
		return nil
	}
	out := new(PersistentDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuotaObservation) DeepCopyInto(out *QuotaObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuotaObservation.
func (in *QuotaObservation) DeepCopy() *QuotaObservation {
	if in == nil {
		return nil
	}
	out := new(QuotaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuotaParameters) DeepCopyInto(out *QuotaParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuotaParameters.
func (in *QuotaParameters) DeepCopy() *QuotaParameters {
	if in == nil {
		return nil
	}
	out := new(QuotaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryHTTPBasicAuthObservation) DeepCopyInto(out *RepositoryHTTPBasicAuthObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryHTTPBasicAuthObservation.
func (in *RepositoryHTTPBasicAuthObservation) DeepCopy() *RepositoryHTTPBasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(RepositoryHTTPBasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryHTTPBasicAuthParameters) DeepCopyInto(out *RepositoryHTTPBasicAuthParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryHTTPBasicAuthParameters.
func (in *RepositoryHTTPBasicAuthParameters) DeepCopy() *RepositoryHTTPBasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryHTTPBasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryObservation) DeepCopyInto(out *RepositoryObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryObservation.
func (in *RepositoryObservation) DeepCopy() *RepositoryObservation {
	if in == nil {
		return nil
	}
	out := new(RepositoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryParameters) DeepCopyInto(out *RepositoryParameters) {
	*out = *in
	if in.HTTPBasicAuth != nil {
		in, out := &in.HTTPBasicAuth, &out.HTTPBasicAuth
		*out = make([]RepositoryHTTPBasicAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHAuth != nil {
		in, out := &in.SSHAuth, &out.SSHAuth
		*out = make([]SSHAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SearchPaths != nil {
		in, out := &in.SearchPaths, &out.SearchPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryParameters.
func (in *RepositoryParameters) DeepCopy() *RepositoryParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredNetworkTrafficRulesObservation) DeepCopyInto(out *RequiredNetworkTrafficRulesObservation) {
	*out = *in
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.Fqdns != nil {
		in, out := &in.Fqdns, &out.Fqdns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPAddresses != nil {
		in, out := &in.IPAddresses, &out.IPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredNetworkTrafficRulesObservation.
func (in *RequiredNetworkTrafficRulesObservation) DeepCopy() *RequiredNetworkTrafficRulesObservation {
	if in == nil {
		return nil
	}
	out := new(RequiredNetworkTrafficRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredNetworkTrafficRulesParameters) DeepCopyInto(out *RequiredNetworkTrafficRulesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredNetworkTrafficRulesParameters.
func (in *RequiredNetworkTrafficRulesParameters) DeepCopy() *RequiredNetworkTrafficRulesParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredNetworkTrafficRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSHAuthObservation) DeepCopyInto(out *SSHAuthObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSHAuthObservation.
func (in *SSHAuthObservation) DeepCopy() *SSHAuthObservation {
	if in == nil {
		return nil
	}
	out := new(SSHAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSHAuthParameters) DeepCopyInto(out *SSHAuthParameters) {
	*out = *in
	if in.HostKeyAlgorithm != nil {
		in, out := &in.HostKeyAlgorithm, &out.HostKeyAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.HostKeySecretRef != nil {
		in, out := &in.HostKeySecretRef, &out.HostKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	out.PrivateKeySecretRef = in.PrivateKeySecretRef
	if in.StrictHostKeyCheckingEnabled != nil {
		in, out := &in.StrictHostKeyCheckingEnabled, &out.StrictHostKeyCheckingEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSHAuthParameters.
func (in *SSHAuthParameters) DeepCopy() *SSHAuthParameters {
	if in == nil {
		return nil
	}
	out := new(SSHAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudActiveDeployment) DeepCopyInto(out *SpringCloudActiveDeployment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudActiveDeployment.
func (in *SpringCloudActiveDeployment) DeepCopy() *SpringCloudActiveDeployment {
	if in == nil {
		return nil
	}
	out := new(SpringCloudActiveDeployment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudActiveDeployment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudActiveDeploymentList) DeepCopyInto(out *SpringCloudActiveDeploymentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudActiveDeployment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudActiveDeploymentList.
func (in *SpringCloudActiveDeploymentList) DeepCopy() *SpringCloudActiveDeploymentList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudActiveDeploymentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudActiveDeploymentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudActiveDeploymentObservation) DeepCopyInto(out *SpringCloudActiveDeploymentObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudActiveDeploymentObservation.
func (in *SpringCloudActiveDeploymentObservation) DeepCopy() *SpringCloudActiveDeploymentObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudActiveDeploymentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudActiveDeploymentParameters) DeepCopyInto(out *SpringCloudActiveDeploymentParameters) {
	*out = *in
	if in.DeploymentName != nil {
		in, out := &in.DeploymentName, &out.DeploymentName
		*out = new(string)
		**out = **in
	}
	if in.DeploymentNameRef != nil {
		in, out := &in.DeploymentNameRef, &out.DeploymentNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DeploymentNameSelector != nil {
		in, out := &in.DeploymentNameSelector, &out.DeploymentNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudAppID != nil {
		in, out := &in.SpringCloudAppID, &out.SpringCloudAppID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppIDRef != nil {
		in, out := &in.SpringCloudAppIDRef, &out.SpringCloudAppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudAppIDSelector != nil {
		in, out := &in.SpringCloudAppIDSelector, &out.SpringCloudAppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudActiveDeploymentParameters.
func (in *SpringCloudActiveDeploymentParameters) DeepCopy() *SpringCloudActiveDeploymentParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudActiveDeploymentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudActiveDeploymentSpec) DeepCopyInto(out *SpringCloudActiveDeploymentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudActiveDeploymentSpec.
func (in *SpringCloudActiveDeploymentSpec) DeepCopy() *SpringCloudActiveDeploymentSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudActiveDeploymentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudActiveDeploymentStatus) DeepCopyInto(out *SpringCloudActiveDeploymentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudActiveDeploymentStatus.
func (in *SpringCloudActiveDeploymentStatus) DeepCopy() *SpringCloudActiveDeploymentStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudActiveDeploymentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudApp) DeepCopyInto(out *SpringCloudApp) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudApp.
func (in *SpringCloudApp) DeepCopy() *SpringCloudApp {
	if in == nil {
		return nil
	}
	out := new(SpringCloudApp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudApp) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppCosmosDBAssociation) DeepCopyInto(out *SpringCloudAppCosmosDBAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppCosmosDBAssociation.
func (in *SpringCloudAppCosmosDBAssociation) DeepCopy() *SpringCloudAppCosmosDBAssociation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppCosmosDBAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudAppCosmosDBAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppCosmosDBAssociationList) DeepCopyInto(out *SpringCloudAppCosmosDBAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudAppCosmosDBAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppCosmosDBAssociationList.
func (in *SpringCloudAppCosmosDBAssociationList) DeepCopy() *SpringCloudAppCosmosDBAssociationList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppCosmosDBAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudAppCosmosDBAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppCosmosDBAssociationObservation) DeepCopyInto(out *SpringCloudAppCosmosDBAssociationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppCosmosDBAssociationObservation.
func (in *SpringCloudAppCosmosDBAssociationObservation) DeepCopy() *SpringCloudAppCosmosDBAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppCosmosDBAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppCosmosDBAssociationParameters) DeepCopyInto(out *SpringCloudAppCosmosDBAssociationParameters) {
	*out = *in
	if in.APIType != nil {
		in, out := &in.APIType, &out.APIType
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBAccessKey != nil {
		in, out := &in.CosmosDBAccessKey, &out.CosmosDBAccessKey
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBAccessKeyRef != nil {
		in, out := &in.CosmosDBAccessKeyRef, &out.CosmosDBAccessKeyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CosmosDBAccessKeySelector != nil {
		in, out := &in.CosmosDBAccessKeySelector, &out.CosmosDBAccessKeySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CosmosDBAccountID != nil {
		in, out := &in.CosmosDBAccountID, &out.CosmosDBAccountID
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBAccountIDRef != nil {
		in, out := &in.CosmosDBAccountIDRef, &out.CosmosDBAccountIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CosmosDBAccountIDSelector != nil {
		in, out := &in.CosmosDBAccountIDSelector, &out.CosmosDBAccountIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CosmosDBCassandraKeySpaceName != nil {
		in, out := &in.CosmosDBCassandraKeySpaceName, &out.CosmosDBCassandraKeySpaceName
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBGremlinDatabaseName != nil {
		in, out := &in.CosmosDBGremlinDatabaseName, &out.CosmosDBGremlinDatabaseName
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBGremlinGraphName != nil {
		in, out := &in.CosmosDBGremlinGraphName, &out.CosmosDBGremlinGraphName
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBMongoDatabaseName != nil {
		in, out := &in.CosmosDBMongoDatabaseName, &out.CosmosDBMongoDatabaseName
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBSQLDatabaseName != nil {
		in, out := &in.CosmosDBSQLDatabaseName, &out.CosmosDBSQLDatabaseName
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppID != nil {
		in, out := &in.SpringCloudAppID, &out.SpringCloudAppID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppIDRef != nil {
		in, out := &in.SpringCloudAppIDRef, &out.SpringCloudAppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudAppIDSelector != nil {
		in, out := &in.SpringCloudAppIDSelector, &out.SpringCloudAppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppCosmosDBAssociationParameters.
func (in *SpringCloudAppCosmosDBAssociationParameters) DeepCopy() *SpringCloudAppCosmosDBAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppCosmosDBAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppCosmosDBAssociationSpec) DeepCopyInto(out *SpringCloudAppCosmosDBAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppCosmosDBAssociationSpec.
func (in *SpringCloudAppCosmosDBAssociationSpec) DeepCopy() *SpringCloudAppCosmosDBAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppCosmosDBAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppCosmosDBAssociationStatus) DeepCopyInto(out *SpringCloudAppCosmosDBAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppCosmosDBAssociationStatus.
func (in *SpringCloudAppCosmosDBAssociationStatus) DeepCopy() *SpringCloudAppCosmosDBAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppCosmosDBAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppList) DeepCopyInto(out *SpringCloudAppList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudApp, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppList.
func (in *SpringCloudAppList) DeepCopy() *SpringCloudAppList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudAppList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppMySQLAssociation) DeepCopyInto(out *SpringCloudAppMySQLAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppMySQLAssociation.
func (in *SpringCloudAppMySQLAssociation) DeepCopy() *SpringCloudAppMySQLAssociation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppMySQLAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudAppMySQLAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppMySQLAssociationList) DeepCopyInto(out *SpringCloudAppMySQLAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudAppMySQLAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppMySQLAssociationList.
func (in *SpringCloudAppMySQLAssociationList) DeepCopy() *SpringCloudAppMySQLAssociationList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppMySQLAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudAppMySQLAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppMySQLAssociationObservation) DeepCopyInto(out *SpringCloudAppMySQLAssociationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppMySQLAssociationObservation.
func (in *SpringCloudAppMySQLAssociationObservation) DeepCopy() *SpringCloudAppMySQLAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppMySQLAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppMySQLAssociationParameters) DeepCopyInto(out *SpringCloudAppMySQLAssociationParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.MySQLServerID != nil {
		in, out := &in.MySQLServerID, &out.MySQLServerID
		*out = new(string)
		**out = **in
	}
	if in.MySQLServerIDRef != nil {
		in, out := &in.MySQLServerIDRef, &out.MySQLServerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MySQLServerIDSelector != nil {
		in, out := &in.MySQLServerIDSelector, &out.MySQLServerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.SpringCloudAppID != nil {
		in, out := &in.SpringCloudAppID, &out.SpringCloudAppID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppIDRef != nil {
		in, out := &in.SpringCloudAppIDRef, &out.SpringCloudAppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudAppIDSelector != nil {
		in, out := &in.SpringCloudAppIDSelector, &out.SpringCloudAppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.UsernameRef != nil {
		in, out := &in.UsernameRef, &out.UsernameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UsernameSelector != nil {
		in, out := &in.UsernameSelector, &out.UsernameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppMySQLAssociationParameters.
func (in *SpringCloudAppMySQLAssociationParameters) DeepCopy() *SpringCloudAppMySQLAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppMySQLAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppMySQLAssociationSpec) DeepCopyInto(out *SpringCloudAppMySQLAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppMySQLAssociationSpec.
func (in *SpringCloudAppMySQLAssociationSpec) DeepCopy() *SpringCloudAppMySQLAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppMySQLAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppMySQLAssociationStatus) DeepCopyInto(out *SpringCloudAppMySQLAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppMySQLAssociationStatus.
func (in *SpringCloudAppMySQLAssociationStatus) DeepCopy() *SpringCloudAppMySQLAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppMySQLAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppObservation) DeepCopyInto(out *SpringCloudAppObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppObservation.
func (in *SpringCloudAppObservation) DeepCopy() *SpringCloudAppObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppParameters) DeepCopyInto(out *SpringCloudAppParameters) {
	*out = *in
	if in.AddonJSON != nil {
		in, out := &in.AddonJSON, &out.AddonJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomPersistentDisk != nil {
		in, out := &in.CustomPersistentDisk, &out.CustomPersistentDisk
		*out = make([]CustomPersistentDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IngressSettings != nil {
		in, out := &in.IngressSettings, &out.IngressSettings
		*out = make([]IngressSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsPublic != nil {
		in, out := &in.IsPublic, &out.IsPublic
		*out = new(bool)
		**out = **in
	}
	if in.PersistentDisk != nil {
		in, out := &in.PersistentDisk, &out.PersistentDisk
		*out = make([]PersistentDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PublicEndpointEnabled != nil {
		in, out := &in.PublicEndpointEnabled, &out.PublicEndpointEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.ServiceNameRef != nil {
		in, out := &in.ServiceNameRef, &out.ServiceNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceNameSelector != nil {
		in, out := &in.ServiceNameSelector, &out.ServiceNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSEnabled != nil {
		in, out := &in.TLSEnabled, &out.TLSEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppParameters.
func (in *SpringCloudAppParameters) DeepCopy() *SpringCloudAppParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppRedisAssociation) DeepCopyInto(out *SpringCloudAppRedisAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppRedisAssociation.
func (in *SpringCloudAppRedisAssociation) DeepCopy() *SpringCloudAppRedisAssociation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppRedisAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudAppRedisAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppRedisAssociationList) DeepCopyInto(out *SpringCloudAppRedisAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudAppRedisAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppRedisAssociationList.
func (in *SpringCloudAppRedisAssociationList) DeepCopy() *SpringCloudAppRedisAssociationList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppRedisAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudAppRedisAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppRedisAssociationObservation) DeepCopyInto(out *SpringCloudAppRedisAssociationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppRedisAssociationObservation.
func (in *SpringCloudAppRedisAssociationObservation) DeepCopy() *SpringCloudAppRedisAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppRedisAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppRedisAssociationParameters) DeepCopyInto(out *SpringCloudAppRedisAssociationParameters) {
	*out = *in
	if in.RedisAccessKey != nil {
		in, out := &in.RedisAccessKey, &out.RedisAccessKey
		*out = new(string)
		**out = **in
	}
	if in.RedisAccessKeyRef != nil {
		in, out := &in.RedisAccessKeyRef, &out.RedisAccessKeyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RedisAccessKeySelector != nil {
		in, out := &in.RedisAccessKeySelector, &out.RedisAccessKeySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RedisCacheID != nil {
		in, out := &in.RedisCacheID, &out.RedisCacheID
		*out = new(string)
		**out = **in
	}
	if in.RedisCacheIDRef != nil {
		in, out := &in.RedisCacheIDRef, &out.RedisCacheIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RedisCacheIDSelector != nil {
		in, out := &in.RedisCacheIDSelector, &out.RedisCacheIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SSLEnabled != nil {
		in, out := &in.SSLEnabled, &out.SSLEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpringCloudAppID != nil {
		in, out := &in.SpringCloudAppID, &out.SpringCloudAppID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppIDRef != nil {
		in, out := &in.SpringCloudAppIDRef, &out.SpringCloudAppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudAppIDSelector != nil {
		in, out := &in.SpringCloudAppIDSelector, &out.SpringCloudAppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppRedisAssociationParameters.
func (in *SpringCloudAppRedisAssociationParameters) DeepCopy() *SpringCloudAppRedisAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppRedisAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppRedisAssociationSpec) DeepCopyInto(out *SpringCloudAppRedisAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppRedisAssociationSpec.
func (in *SpringCloudAppRedisAssociationSpec) DeepCopy() *SpringCloudAppRedisAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppRedisAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppRedisAssociationStatus) DeepCopyInto(out *SpringCloudAppRedisAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppRedisAssociationStatus.
func (in *SpringCloudAppRedisAssociationStatus) DeepCopy() *SpringCloudAppRedisAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppRedisAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppSpec) DeepCopyInto(out *SpringCloudAppSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppSpec.
func (in *SpringCloudAppSpec) DeepCopy() *SpringCloudAppSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppStatus) DeepCopyInto(out *SpringCloudAppStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppStatus.
func (in *SpringCloudAppStatus) DeepCopy() *SpringCloudAppStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCertificate) DeepCopyInto(out *SpringCloudCertificate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCertificate.
func (in *SpringCloudCertificate) DeepCopy() *SpringCloudCertificate {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudCertificate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCertificateList) DeepCopyInto(out *SpringCloudCertificateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudCertificate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCertificateList.
func (in *SpringCloudCertificateList) DeepCopy() *SpringCloudCertificateList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCertificateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudCertificateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCertificateObservation) DeepCopyInto(out *SpringCloudCertificateObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCertificateObservation.
func (in *SpringCloudCertificateObservation) DeepCopy() *SpringCloudCertificateObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCertificateParameters) DeepCopyInto(out *SpringCloudCertificateParameters) {
	*out = *in
	if in.CertificateContent != nil {
		in, out := &in.CertificateContent, &out.CertificateContent
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultCertificateID != nil {
		in, out := &in.KeyVaultCertificateID, &out.KeyVaultCertificateID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultCertificateIDRef != nil {
		in, out := &in.KeyVaultCertificateIDRef, &out.KeyVaultCertificateIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyVaultCertificateIDSelector != nil {
		in, out := &in.KeyVaultCertificateIDSelector, &out.KeyVaultCertificateIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.ServiceNameRef != nil {
		in, out := &in.ServiceNameRef, &out.ServiceNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceNameSelector != nil {
		in, out := &in.ServiceNameSelector, &out.ServiceNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCertificateParameters.
func (in *SpringCloudCertificateParameters) DeepCopy() *SpringCloudCertificateParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCertificateSpec) DeepCopyInto(out *SpringCloudCertificateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCertificateSpec.
func (in *SpringCloudCertificateSpec) DeepCopy() *SpringCloudCertificateSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCertificateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCertificateStatus) DeepCopyInto(out *SpringCloudCertificateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCertificateStatus.
func (in *SpringCloudCertificateStatus) DeepCopy() *SpringCloudCertificateStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCertificateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCustomDomain) DeepCopyInto(out *SpringCloudCustomDomain) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCustomDomain.
func (in *SpringCloudCustomDomain) DeepCopy() *SpringCloudCustomDomain {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCustomDomain)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudCustomDomain) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCustomDomainList) DeepCopyInto(out *SpringCloudCustomDomainList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudCustomDomain, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCustomDomainList.
func (in *SpringCloudCustomDomainList) DeepCopy() *SpringCloudCustomDomainList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCustomDomainList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudCustomDomainList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCustomDomainObservation) DeepCopyInto(out *SpringCloudCustomDomainObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCustomDomainObservation.
func (in *SpringCloudCustomDomainObservation) DeepCopy() *SpringCloudCustomDomainObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCustomDomainObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCustomDomainParameters) DeepCopyInto(out *SpringCloudCustomDomainParameters) {
	*out = *in
	if in.CertificateName != nil {
		in, out := &in.CertificateName, &out.CertificateName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppID != nil {
		in, out := &in.SpringCloudAppID, &out.SpringCloudAppID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppIDRef != nil {
		in, out := &in.SpringCloudAppIDRef, &out.SpringCloudAppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudAppIDSelector != nil {
		in, out := &in.SpringCloudAppIDSelector, &out.SpringCloudAppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCustomDomainParameters.
func (in *SpringCloudCustomDomainParameters) DeepCopy() *SpringCloudCustomDomainParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCustomDomainParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCustomDomainSpec) DeepCopyInto(out *SpringCloudCustomDomainSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCustomDomainSpec.
func (in *SpringCloudCustomDomainSpec) DeepCopy() *SpringCloudCustomDomainSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCustomDomainSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCustomDomainStatus) DeepCopyInto(out *SpringCloudCustomDomainStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCustomDomainStatus.
func (in *SpringCloudCustomDomainStatus) DeepCopy() *SpringCloudCustomDomainStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCustomDomainStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudJavaDeployment) DeepCopyInto(out *SpringCloudJavaDeployment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudJavaDeployment.
func (in *SpringCloudJavaDeployment) DeepCopy() *SpringCloudJavaDeployment {
	if in == nil {
		return nil
	}
	out := new(SpringCloudJavaDeployment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudJavaDeployment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudJavaDeploymentList) DeepCopyInto(out *SpringCloudJavaDeploymentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudJavaDeployment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudJavaDeploymentList.
func (in *SpringCloudJavaDeploymentList) DeepCopy() *SpringCloudJavaDeploymentList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudJavaDeploymentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudJavaDeploymentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudJavaDeploymentObservation) DeepCopyInto(out *SpringCloudJavaDeploymentObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudJavaDeploymentObservation.
func (in *SpringCloudJavaDeploymentObservation) DeepCopy() *SpringCloudJavaDeploymentObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudJavaDeploymentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudJavaDeploymentParameters) DeepCopyInto(out *SpringCloudJavaDeploymentParameters) {
	*out = *in
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.JvmOptions != nil {
		in, out := &in.JvmOptions, &out.JvmOptions
		*out = new(string)
		**out = **in
	}
	if in.Quota != nil {
		in, out := &in.Quota, &out.Quota
		*out = make([]QuotaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppID != nil {
		in, out := &in.SpringCloudAppID, &out.SpringCloudAppID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppIDRef != nil {
		in, out := &in.SpringCloudAppIDRef, &out.SpringCloudAppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudAppIDSelector != nil {
		in, out := &in.SpringCloudAppIDSelector, &out.SpringCloudAppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudJavaDeploymentParameters.
func (in *SpringCloudJavaDeploymentParameters) DeepCopy() *SpringCloudJavaDeploymentParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudJavaDeploymentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudJavaDeploymentSpec) DeepCopyInto(out *SpringCloudJavaDeploymentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudJavaDeploymentSpec.
func (in *SpringCloudJavaDeploymentSpec) DeepCopy() *SpringCloudJavaDeploymentSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudJavaDeploymentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudJavaDeploymentStatus) DeepCopyInto(out *SpringCloudJavaDeploymentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudJavaDeploymentStatus.
func (in *SpringCloudJavaDeploymentStatus) DeepCopy() *SpringCloudJavaDeploymentStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudJavaDeploymentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudService) DeepCopyInto(out *SpringCloudService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudService.
func (in *SpringCloudService) DeepCopy() *SpringCloudService {
	if in == nil {
		return nil
	}
	out := new(SpringCloudService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudServiceList) DeepCopyInto(out *SpringCloudServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudServiceList.
func (in *SpringCloudServiceList) DeepCopy() *SpringCloudServiceList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudServiceObservation) DeepCopyInto(out *SpringCloudServiceObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OutboundPublicIPAddresses != nil {
		in, out := &in.OutboundPublicIPAddresses, &out.OutboundPublicIPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RequiredNetworkTrafficRules != nil {
		in, out := &in.RequiredNetworkTrafficRules, &out.RequiredNetworkTrafficRules
		*out = make([]RequiredNetworkTrafficRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceRegistryID != nil {
		in, out := &in.ServiceRegistryID, &out.ServiceRegistryID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudServiceObservation.
func (in *SpringCloudServiceObservation) DeepCopy() *SpringCloudServiceObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudServiceParameters) DeepCopyInto(out *SpringCloudServiceParameters) {
	*out = *in
	if in.BuildAgentPoolSize != nil {
		in, out := &in.BuildAgentPoolSize, &out.BuildAgentPoolSize
		*out = new(string)
		**out = **in
	}
	if in.ConfigServerGitSetting != nil {
		in, out := &in.ConfigServerGitSetting, &out.ConfigServerGitSetting
		*out = make([]ConfigServerGitSettingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.LogStreamPublicEndpointEnabled != nil {
		in, out := &in.LogStreamPublicEndpointEnabled, &out.LogStreamPublicEndpointEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceRegistryEnabled != nil {
		in, out := &in.ServiceRegistryEnabled, &out.ServiceRegistryEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Trace != nil {
		in, out := &in.Trace, &out.Trace
		*out = make([]TraceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudServiceParameters.
func (in *SpringCloudServiceParameters) DeepCopy() *SpringCloudServiceParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudServiceSpec) DeepCopyInto(out *SpringCloudServiceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudServiceSpec.
func (in *SpringCloudServiceSpec) DeepCopy() *SpringCloudServiceSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudServiceStatus) DeepCopyInto(out *SpringCloudServiceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudServiceStatus.
func (in *SpringCloudServiceStatus) DeepCopy() *SpringCloudServiceStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudStorage) DeepCopyInto(out *SpringCloudStorage) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudStorage.
func (in *SpringCloudStorage) DeepCopy() *SpringCloudStorage {
	if in == nil {
		return nil
	}
	out := new(SpringCloudStorage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudStorage) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudStorageList) DeepCopyInto(out *SpringCloudStorageList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudStorage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudStorageList.
func (in *SpringCloudStorageList) DeepCopy() *SpringCloudStorageList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudStorageList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudStorageList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudStorageObservation) DeepCopyInto(out *SpringCloudStorageObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudStorageObservation.
func (in *SpringCloudStorageObservation) DeepCopy() *SpringCloudStorageObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudStorageParameters) DeepCopyInto(out *SpringCloudStorageParameters) {
	*out = *in
	if in.SpringCloudServiceID != nil {
		in, out := &in.SpringCloudServiceID, &out.SpringCloudServiceID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudServiceIDRef != nil {
		in, out := &in.SpringCloudServiceIDRef, &out.SpringCloudServiceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudServiceIDSelector != nil {
		in, out := &in.SpringCloudServiceIDSelector, &out.SpringCloudServiceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountKey != nil {
		in, out := &in.StorageAccountKey, &out.StorageAccountKey
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountKeyRef != nil {
		in, out := &in.StorageAccountKeyRef, &out.StorageAccountKeyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountKeySelector != nil {
		in, out := &in.StorageAccountKeySelector, &out.StorageAccountKeySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountNameRef != nil {
		in, out := &in.StorageAccountNameRef, &out.StorageAccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountNameSelector != nil {
		in, out := &in.StorageAccountNameSelector, &out.StorageAccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudStorageParameters.
func (in *SpringCloudStorageParameters) DeepCopy() *SpringCloudStorageParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudStorageSpec) DeepCopyInto(out *SpringCloudStorageSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudStorageSpec.
func (in *SpringCloudStorageSpec) DeepCopy() *SpringCloudStorageSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudStorageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudStorageStatus) DeepCopyInto(out *SpringCloudStorageStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudStorageStatus.
func (in *SpringCloudStorageStatus) DeepCopy() *SpringCloudStorageStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudStorageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TraceObservation) DeepCopyInto(out *TraceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TraceObservation.
func (in *TraceObservation) DeepCopy() *TraceObservation {
	if in == nil {
		return nil
	}
	out := new(TraceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TraceParameters) DeepCopyInto(out *TraceParameters) {
	*out = *in
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = new(string)
		**out = **in
	}
	if in.ConnectionStringRef != nil {
		in, out := &in.ConnectionStringRef, &out.ConnectionStringRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionStringSelector != nil {
		in, out := &in.ConnectionStringSelector, &out.ConnectionStringSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SampleRate != nil {
		in, out := &in.SampleRate, &out.SampleRate
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TraceParameters.
func (in *TraceParameters) DeepCopy() *TraceParameters {
	if in == nil {
		return nil
	}
	out := new(TraceParameters)
	in.DeepCopyInto(out)
	return out
}
