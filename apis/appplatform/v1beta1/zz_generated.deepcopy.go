//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIMetadataInitParameters) DeepCopyInto(out *APIMetadataInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DocumentationURL != nil {
		in, out := &in.DocumentationURL, &out.DocumentationURL
		*out = new(string)
		**out = **in
	}
	if in.ServerURL != nil {
		in, out := &in.ServerURL, &out.ServerURL
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIMetadataInitParameters.
func (in *APIMetadataInitParameters) DeepCopy() *APIMetadataInitParameters {
	if in == nil {
		return nil
	}
	out := new(APIMetadataInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIMetadataObservation) DeepCopyInto(out *APIMetadataObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DocumentationURL != nil {
		in, out := &in.DocumentationURL, &out.DocumentationURL
		*out = new(string)
		**out = **in
	}
	if in.ServerURL != nil {
		in, out := &in.ServerURL, &out.ServerURL
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIMetadataObservation.
func (in *APIMetadataObservation) DeepCopy() *APIMetadataObservation {
	if in == nil {
		return nil
	}
	out := new(APIMetadataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIMetadataParameters) DeepCopyInto(out *APIMetadataParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DocumentationURL != nil {
		in, out := &in.DocumentationURL, &out.DocumentationURL
		*out = new(string)
		**out = **in
	}
	if in.ServerURL != nil {
		in, out := &in.ServerURL, &out.ServerURL
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIMetadataParameters.
func (in *APIMetadataParameters) DeepCopy() *APIMetadataParameters {
	if in == nil {
		return nil
	}
	out := new(APIMetadataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthInitParameters) DeepCopyInto(out *BasicAuthInitParameters) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthInitParameters.
func (in *BasicAuthInitParameters) DeepCopy() *BasicAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(BasicAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthObservation) DeepCopyInto(out *BasicAuthObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthObservation.
func (in *BasicAuthObservation) DeepCopy() *BasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(BasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthParameters) DeepCopyInto(out *BasicAuthParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthParameters.
func (in *BasicAuthParameters) DeepCopy() *BasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(BasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildPackGroupInitParameters) DeepCopyInto(out *BuildPackGroupInitParameters) {
	*out = *in
	if in.BuildPackIds != nil {
		in, out := &in.BuildPackIds, &out.BuildPackIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildPackGroupInitParameters.
func (in *BuildPackGroupInitParameters) DeepCopy() *BuildPackGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(BuildPackGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildPackGroupObservation) DeepCopyInto(out *BuildPackGroupObservation) {
	*out = *in
	if in.BuildPackIds != nil {
		in, out := &in.BuildPackIds, &out.BuildPackIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildPackGroupObservation.
func (in *BuildPackGroupObservation) DeepCopy() *BuildPackGroupObservation {
	if in == nil {
		return nil
	}
	out := new(BuildPackGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildPackGroupParameters) DeepCopyInto(out *BuildPackGroupParameters) {
	*out = *in
	if in.BuildPackIds != nil {
		in, out := &in.BuildPackIds, &out.BuildPackIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildPackGroupParameters.
func (in *BuildPackGroupParameters) DeepCopy() *BuildPackGroupParameters {
	if in == nil {
		return nil
	}
	out := new(BuildPackGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigServerGitSettingInitParameters) DeepCopyInto(out *ConfigServerGitSettingInitParameters) {
	*out = *in
	if in.HTTPBasicAuth != nil {
		in, out := &in.HTTPBasicAuth, &out.HTTPBasicAuth
		*out = make([]HTTPBasicAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = make([]ConfigServerGitSettingRepositoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHAuth != nil {
		in, out := &in.SSHAuth, &out.SSHAuth
		*out = make([]ConfigServerGitSettingSSHAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SearchPaths != nil {
		in, out := &in.SearchPaths, &out.SearchPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigServerGitSettingInitParameters.
func (in *ConfigServerGitSettingInitParameters) DeepCopy() *ConfigServerGitSettingInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigServerGitSettingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigServerGitSettingObservation) DeepCopyInto(out *ConfigServerGitSettingObservation) {
	*out = *in
	if in.HTTPBasicAuth != nil {
		in, out := &in.HTTPBasicAuth, &out.HTTPBasicAuth
		*out = make([]HTTPBasicAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = make([]ConfigServerGitSettingRepositoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHAuth != nil {
		in, out := &in.SSHAuth, &out.SSHAuth
		*out = make([]ConfigServerGitSettingSSHAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SearchPaths != nil {
		in, out := &in.SearchPaths, &out.SearchPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigServerGitSettingObservation.
func (in *ConfigServerGitSettingObservation) DeepCopy() *ConfigServerGitSettingObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigServerGitSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigServerGitSettingParameters) DeepCopyInto(out *ConfigServerGitSettingParameters) {
	*out = *in
	if in.HTTPBasicAuth != nil {
		in, out := &in.HTTPBasicAuth, &out.HTTPBasicAuth
		*out = make([]HTTPBasicAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = make([]ConfigServerGitSettingRepositoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHAuth != nil {
		in, out := &in.SSHAuth, &out.SSHAuth
		*out = make([]ConfigServerGitSettingSSHAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SearchPaths != nil {
		in, out := &in.SearchPaths, &out.SearchPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigServerGitSettingParameters.
func (in *ConfigServerGitSettingParameters) DeepCopy() *ConfigServerGitSettingParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigServerGitSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigServerGitSettingRepositoryInitParameters) DeepCopyInto(out *ConfigServerGitSettingRepositoryInitParameters) {
	*out = *in
	if in.HTTPBasicAuth != nil {
		in, out := &in.HTTPBasicAuth, &out.HTTPBasicAuth
		*out = make([]RepositoryHTTPBasicAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHAuth != nil {
		in, out := &in.SSHAuth, &out.SSHAuth
		*out = make([]RepositorySSHAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SearchPaths != nil {
		in, out := &in.SearchPaths, &out.SearchPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigServerGitSettingRepositoryInitParameters.
func (in *ConfigServerGitSettingRepositoryInitParameters) DeepCopy() *ConfigServerGitSettingRepositoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigServerGitSettingRepositoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigServerGitSettingRepositoryObservation) DeepCopyInto(out *ConfigServerGitSettingRepositoryObservation) {
	*out = *in
	if in.HTTPBasicAuth != nil {
		in, out := &in.HTTPBasicAuth, &out.HTTPBasicAuth
		*out = make([]RepositoryHTTPBasicAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHAuth != nil {
		in, out := &in.SSHAuth, &out.SSHAuth
		*out = make([]RepositorySSHAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SearchPaths != nil {
		in, out := &in.SearchPaths, &out.SearchPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigServerGitSettingRepositoryObservation.
func (in *ConfigServerGitSettingRepositoryObservation) DeepCopy() *ConfigServerGitSettingRepositoryObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigServerGitSettingRepositoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigServerGitSettingRepositoryParameters) DeepCopyInto(out *ConfigServerGitSettingRepositoryParameters) {
	*out = *in
	if in.HTTPBasicAuth != nil {
		in, out := &in.HTTPBasicAuth, &out.HTTPBasicAuth
		*out = make([]RepositoryHTTPBasicAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHAuth != nil {
		in, out := &in.SSHAuth, &out.SSHAuth
		*out = make([]RepositorySSHAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SearchPaths != nil {
		in, out := &in.SearchPaths, &out.SearchPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigServerGitSettingRepositoryParameters.
func (in *ConfigServerGitSettingRepositoryParameters) DeepCopy() *ConfigServerGitSettingRepositoryParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigServerGitSettingRepositoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigServerGitSettingSSHAuthInitParameters) DeepCopyInto(out *ConfigServerGitSettingSSHAuthInitParameters) {
	*out = *in
	if in.HostKeyAlgorithm != nil {
		in, out := &in.HostKeyAlgorithm, &out.HostKeyAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.StrictHostKeyCheckingEnabled != nil {
		in, out := &in.StrictHostKeyCheckingEnabled, &out.StrictHostKeyCheckingEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigServerGitSettingSSHAuthInitParameters.
func (in *ConfigServerGitSettingSSHAuthInitParameters) DeepCopy() *ConfigServerGitSettingSSHAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigServerGitSettingSSHAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigServerGitSettingSSHAuthObservation) DeepCopyInto(out *ConfigServerGitSettingSSHAuthObservation) {
	*out = *in
	if in.HostKeyAlgorithm != nil {
		in, out := &in.HostKeyAlgorithm, &out.HostKeyAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.StrictHostKeyCheckingEnabled != nil {
		in, out := &in.StrictHostKeyCheckingEnabled, &out.StrictHostKeyCheckingEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigServerGitSettingSSHAuthObservation.
func (in *ConfigServerGitSettingSSHAuthObservation) DeepCopy() *ConfigServerGitSettingSSHAuthObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigServerGitSettingSSHAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigServerGitSettingSSHAuthParameters) DeepCopyInto(out *ConfigServerGitSettingSSHAuthParameters) {
	*out = *in
	if in.HostKeyAlgorithm != nil {
		in, out := &in.HostKeyAlgorithm, &out.HostKeyAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.HostKeySecretRef != nil {
		in, out := &in.HostKeySecretRef, &out.HostKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	out.PrivateKeySecretRef = in.PrivateKeySecretRef
	if in.StrictHostKeyCheckingEnabled != nil {
		in, out := &in.StrictHostKeyCheckingEnabled, &out.StrictHostKeyCheckingEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigServerGitSettingSSHAuthParameters.
func (in *ConfigServerGitSettingSSHAuthParameters) DeepCopy() *ConfigServerGitSettingSSHAuthParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigServerGitSettingSSHAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsInitParameters) DeepCopyInto(out *CorsInitParameters) {
	*out = *in
	if in.AllowedHeaders != nil {
		in, out := &in.AllowedHeaders, &out.AllowedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CredentialsAllowed != nil {
		in, out := &in.CredentialsAllowed, &out.CredentialsAllowed
		*out = new(bool)
		**out = **in
	}
	if in.ExposedHeaders != nil {
		in, out := &in.ExposedHeaders, &out.ExposedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAgeSeconds != nil {
		in, out := &in.MaxAgeSeconds, &out.MaxAgeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsInitParameters.
func (in *CorsInitParameters) DeepCopy() *CorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsObservation) DeepCopyInto(out *CorsObservation) {
	*out = *in
	if in.AllowedHeaders != nil {
		in, out := &in.AllowedHeaders, &out.AllowedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CredentialsAllowed != nil {
		in, out := &in.CredentialsAllowed, &out.CredentialsAllowed
		*out = new(bool)
		**out = **in
	}
	if in.ExposedHeaders != nil {
		in, out := &in.ExposedHeaders, &out.ExposedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAgeSeconds != nil {
		in, out := &in.MaxAgeSeconds, &out.MaxAgeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsObservation.
func (in *CorsObservation) DeepCopy() *CorsObservation {
	if in == nil {
		return nil
	}
	out := new(CorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsParameters) DeepCopyInto(out *CorsParameters) {
	*out = *in
	if in.AllowedHeaders != nil {
		in, out := &in.AllowedHeaders, &out.AllowedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CredentialsAllowed != nil {
		in, out := &in.CredentialsAllowed, &out.CredentialsAllowed
		*out = new(bool)
		**out = **in
	}
	if in.ExposedHeaders != nil {
		in, out := &in.ExposedHeaders, &out.ExposedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAgeSeconds != nil {
		in, out := &in.MaxAgeSeconds, &out.MaxAgeSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsParameters.
func (in *CorsParameters) DeepCopy() *CorsParameters {
	if in == nil {
		return nil
	}
	out := new(CorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPersistentDiskInitParameters) DeepCopyInto(out *CustomPersistentDiskInitParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.ReadOnlyEnabled != nil {
		in, out := &in.ReadOnlyEnabled, &out.ReadOnlyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.StorageName != nil {
		in, out := &in.StorageName, &out.StorageName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPersistentDiskInitParameters.
func (in *CustomPersistentDiskInitParameters) DeepCopy() *CustomPersistentDiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomPersistentDiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPersistentDiskObservation) DeepCopyInto(out *CustomPersistentDiskObservation) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.ReadOnlyEnabled != nil {
		in, out := &in.ReadOnlyEnabled, &out.ReadOnlyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.StorageName != nil {
		in, out := &in.StorageName, &out.StorageName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPersistentDiskObservation.
func (in *CustomPersistentDiskObservation) DeepCopy() *CustomPersistentDiskObservation {
	if in == nil {
		return nil
	}
	out := new(CustomPersistentDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPersistentDiskParameters) DeepCopyInto(out *CustomPersistentDiskParameters) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.ReadOnlyEnabled != nil {
		in, out := &in.ReadOnlyEnabled, &out.ReadOnlyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.StorageName != nil {
		in, out := &in.StorageName, &out.StorageName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPersistentDiskParameters.
func (in *CustomPersistentDiskParameters) DeepCopy() *CustomPersistentDiskParameters {
	if in == nil {
		return nil
	}
	out := new(CustomPersistentDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepositoryInitParameters) DeepCopyInto(out *GitRepositoryInitParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]BasicAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Commit != nil {
		in, out := &in.Commit, &out.Commit
		*out = new(string)
		**out = **in
	}
	if in.GitTag != nil {
		in, out := &in.GitTag, &out.GitTag
		*out = new(string)
		**out = **in
	}
	if in.IntervalInSeconds != nil {
		in, out := &in.IntervalInSeconds, &out.IntervalInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.SSHAuth != nil {
		in, out := &in.SSHAuth, &out.SSHAuth
		*out = make([]SSHAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepositoryInitParameters.
func (in *GitRepositoryInitParameters) DeepCopy() *GitRepositoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(GitRepositoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepositoryObservation) DeepCopyInto(out *GitRepositoryObservation) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]BasicAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Commit != nil {
		in, out := &in.Commit, &out.Commit
		*out = new(string)
		**out = **in
	}
	if in.GitTag != nil {
		in, out := &in.GitTag, &out.GitTag
		*out = new(string)
		**out = **in
	}
	if in.IntervalInSeconds != nil {
		in, out := &in.IntervalInSeconds, &out.IntervalInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.SSHAuth != nil {
		in, out := &in.SSHAuth, &out.SSHAuth
		*out = make([]SSHAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepositoryObservation.
func (in *GitRepositoryObservation) DeepCopy() *GitRepositoryObservation {
	if in == nil {
		return nil
	}
	out := new(GitRepositoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepositoryParameters) DeepCopyInto(out *GitRepositoryParameters) {
	*out = *in
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = make([]BasicAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Commit != nil {
		in, out := &in.Commit, &out.Commit
		*out = new(string)
		**out = **in
	}
	if in.GitTag != nil {
		in, out := &in.GitTag, &out.GitTag
		*out = new(string)
		**out = **in
	}
	if in.IntervalInSeconds != nil {
		in, out := &in.IntervalInSeconds, &out.IntervalInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.SSHAuth != nil {
		in, out := &in.SSHAuth, &out.SSHAuth
		*out = make([]SSHAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepositoryParameters.
func (in *GitRepositoryParameters) DeepCopy() *GitRepositoryParameters {
	if in == nil {
		return nil
	}
	out := new(GitRepositoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPBasicAuthInitParameters) DeepCopyInto(out *HTTPBasicAuthInitParameters) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPBasicAuthInitParameters.
func (in *HTTPBasicAuthInitParameters) DeepCopy() *HTTPBasicAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPBasicAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPBasicAuthObservation) DeepCopyInto(out *HTTPBasicAuthObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPBasicAuthObservation.
func (in *HTTPBasicAuthObservation) DeepCopy() *HTTPBasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPBasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPBasicAuthParameters) DeepCopyInto(out *HTTPBasicAuthParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPBasicAuthParameters.
func (in *HTTPBasicAuthParameters) DeepCopy() *HTTPBasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPBasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityInitParameters) DeepCopyInto(out *IdentityInitParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityInitParameters.
func (in *IdentityInitParameters) DeepCopy() *IdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityObservation) DeepCopyInto(out *IdentityObservation) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityObservation.
func (in *IdentityObservation) DeepCopy() *IdentityObservation {
	if in == nil {
		return nil
	}
	out := new(IdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityParameters) DeepCopyInto(out *IdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityParameters.
func (in *IdentityParameters) DeepCopy() *IdentityParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSettingsInitParameters) DeepCopyInto(out *IngressSettingsInitParameters) {
	*out = *in
	if in.BackendProtocol != nil {
		in, out := &in.BackendProtocol, &out.BackendProtocol
		*out = new(string)
		**out = **in
	}
	if in.ReadTimeoutInSeconds != nil {
		in, out := &in.ReadTimeoutInSeconds, &out.ReadTimeoutInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.SendTimeoutInSeconds != nil {
		in, out := &in.SendTimeoutInSeconds, &out.SendTimeoutInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(string)
		**out = **in
	}
	if in.SessionCookieMaxAge != nil {
		in, out := &in.SessionCookieMaxAge, &out.SessionCookieMaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSettingsInitParameters.
func (in *IngressSettingsInitParameters) DeepCopy() *IngressSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(IngressSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSettingsObservation) DeepCopyInto(out *IngressSettingsObservation) {
	*out = *in
	if in.BackendProtocol != nil {
		in, out := &in.BackendProtocol, &out.BackendProtocol
		*out = new(string)
		**out = **in
	}
	if in.ReadTimeoutInSeconds != nil {
		in, out := &in.ReadTimeoutInSeconds, &out.ReadTimeoutInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.SendTimeoutInSeconds != nil {
		in, out := &in.SendTimeoutInSeconds, &out.SendTimeoutInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(string)
		**out = **in
	}
	if in.SessionCookieMaxAge != nil {
		in, out := &in.SessionCookieMaxAge, &out.SessionCookieMaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSettingsObservation.
func (in *IngressSettingsObservation) DeepCopy() *IngressSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(IngressSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSettingsParameters) DeepCopyInto(out *IngressSettingsParameters) {
	*out = *in
	if in.BackendProtocol != nil {
		in, out := &in.BackendProtocol, &out.BackendProtocol
		*out = new(string)
		**out = **in
	}
	if in.ReadTimeoutInSeconds != nil {
		in, out := &in.ReadTimeoutInSeconds, &out.ReadTimeoutInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.SendTimeoutInSeconds != nil {
		in, out := &in.SendTimeoutInSeconds, &out.SendTimeoutInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(string)
		**out = **in
	}
	if in.SessionCookieMaxAge != nil {
		in, out := &in.SessionCookieMaxAge, &out.SessionCookieMaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSettingsParameters.
func (in *IngressSettingsParameters) DeepCopy() *IngressSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(IngressSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchInitParameters) DeepCopyInto(out *LaunchInitParameters) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Secrets != nil {
		in, out := &in.Secrets, &out.Secrets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchInitParameters.
func (in *LaunchInitParameters) DeepCopy() *LaunchInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchObservation) DeepCopyInto(out *LaunchObservation) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Secrets != nil {
		in, out := &in.Secrets, &out.Secrets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchObservation.
func (in *LaunchObservation) DeepCopy() *LaunchObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchParameters) DeepCopyInto(out *LaunchParameters) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Secrets != nil {
		in, out := &in.Secrets, &out.Secrets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchParameters.
func (in *LaunchParameters) DeepCopy() *LaunchParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInitParameters) DeepCopyInto(out *NetworkInitParameters) {
	*out = *in
	if in.AppNetworkResourceGroup != nil {
		in, out := &in.AppNetworkResourceGroup, &out.AppNetworkResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.CidrRanges != nil {
		in, out := &in.CidrRanges, &out.CidrRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ReadTimeoutSeconds != nil {
		in, out := &in.ReadTimeoutSeconds, &out.ReadTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.ServiceRuntimeNetworkResourceGroup != nil {
		in, out := &in.ServiceRuntimeNetworkResourceGroup, &out.ServiceRuntimeNetworkResourceGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInitParameters.
func (in *NetworkInitParameters) DeepCopy() *NetworkInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkObservation) DeepCopyInto(out *NetworkObservation) {
	*out = *in
	if in.AppNetworkResourceGroup != nil {
		in, out := &in.AppNetworkResourceGroup, &out.AppNetworkResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.AppSubnetID != nil {
		in, out := &in.AppSubnetID, &out.AppSubnetID
		*out = new(string)
		**out = **in
	}
	if in.CidrRanges != nil {
		in, out := &in.CidrRanges, &out.CidrRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ReadTimeoutSeconds != nil {
		in, out := &in.ReadTimeoutSeconds, &out.ReadTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.ServiceRuntimeNetworkResourceGroup != nil {
		in, out := &in.ServiceRuntimeNetworkResourceGroup, &out.ServiceRuntimeNetworkResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.ServiceRuntimeSubnetID != nil {
		in, out := &in.ServiceRuntimeSubnetID, &out.ServiceRuntimeSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkObservation.
func (in *NetworkObservation) DeepCopy() *NetworkObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkParameters) DeepCopyInto(out *NetworkParameters) {
	*out = *in
	if in.AppNetworkResourceGroup != nil {
		in, out := &in.AppNetworkResourceGroup, &out.AppNetworkResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.AppSubnetID != nil {
		in, out := &in.AppSubnetID, &out.AppSubnetID
		*out = new(string)
		**out = **in
	}
	if in.AppSubnetIDRef != nil {
		in, out := &in.AppSubnetIDRef, &out.AppSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AppSubnetIDSelector != nil {
		in, out := &in.AppSubnetIDSelector, &out.AppSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CidrRanges != nil {
		in, out := &in.CidrRanges, &out.CidrRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ReadTimeoutSeconds != nil {
		in, out := &in.ReadTimeoutSeconds, &out.ReadTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.ServiceRuntimeNetworkResourceGroup != nil {
		in, out := &in.ServiceRuntimeNetworkResourceGroup, &out.ServiceRuntimeNetworkResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.ServiceRuntimeSubnetID != nil {
		in, out := &in.ServiceRuntimeSubnetID, &out.ServiceRuntimeSubnetID
		*out = new(string)
		**out = **in
	}
	if in.ServiceRuntimeSubnetIDRef != nil {
		in, out := &in.ServiceRuntimeSubnetIDRef, &out.ServiceRuntimeSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceRuntimeSubnetIDSelector != nil {
		in, out := &in.ServiceRuntimeSubnetIDSelector, &out.ServiceRuntimeSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkParameters.
func (in *NetworkParameters) DeepCopy() *NetworkParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistentDiskInitParameters) DeepCopyInto(out *PersistentDiskInitParameters) {
	*out = *in
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.SizeInGb != nil {
		in, out := &in.SizeInGb, &out.SizeInGb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistentDiskInitParameters.
func (in *PersistentDiskInitParameters) DeepCopy() *PersistentDiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(PersistentDiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistentDiskObservation) DeepCopyInto(out *PersistentDiskObservation) {
	*out = *in
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.SizeInGb != nil {
		in, out := &in.SizeInGb, &out.SizeInGb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistentDiskObservation.
func (in *PersistentDiskObservation) DeepCopy() *PersistentDiskObservation {
	if in == nil {
		return nil
	}
	out := new(PersistentDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistentDiskParameters) DeepCopyInto(out *PersistentDiskParameters) {
	*out = *in
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.SizeInGb != nil {
		in, out := &in.SizeInGb, &out.SizeInGb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistentDiskParameters.
func (in *PersistentDiskParameters) DeepCopy() *PersistentDiskParameters {
	if in == nil {
		return nil
	}
	out := new(PersistentDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuotaInitParameters) DeepCopyInto(out *QuotaInitParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuotaInitParameters.
func (in *QuotaInitParameters) DeepCopy() *QuotaInitParameters {
	if in == nil {
		return nil
	}
	out := new(QuotaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuotaObservation) DeepCopyInto(out *QuotaObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuotaObservation.
func (in *QuotaObservation) DeepCopy() *QuotaObservation {
	if in == nil {
		return nil
	}
	out := new(QuotaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuotaParameters) DeepCopyInto(out *QuotaParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuotaParameters.
func (in *QuotaParameters) DeepCopy() *QuotaParameters {
	if in == nil {
		return nil
	}
	out := new(QuotaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryHTTPBasicAuthInitParameters) DeepCopyInto(out *RepositoryHTTPBasicAuthInitParameters) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryHTTPBasicAuthInitParameters.
func (in *RepositoryHTTPBasicAuthInitParameters) DeepCopy() *RepositoryHTTPBasicAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryHTTPBasicAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryHTTPBasicAuthObservation) DeepCopyInto(out *RepositoryHTTPBasicAuthObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryHTTPBasicAuthObservation.
func (in *RepositoryHTTPBasicAuthObservation) DeepCopy() *RepositoryHTTPBasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(RepositoryHTTPBasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryHTTPBasicAuthParameters) DeepCopyInto(out *RepositoryHTTPBasicAuthParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryHTTPBasicAuthParameters.
func (in *RepositoryHTTPBasicAuthParameters) DeepCopy() *RepositoryHTTPBasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryHTTPBasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryInitParameters) DeepCopyInto(out *RepositoryInitParameters) {
	*out = *in
	if in.HostKey != nil {
		in, out := &in.HostKey, &out.HostKey
		*out = new(string)
		**out = **in
	}
	if in.HostKeyAlgorithm != nil {
		in, out := &in.HostKeyAlgorithm, &out.HostKeyAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Patterns != nil {
		in, out := &in.Patterns, &out.Patterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SearchPaths != nil {
		in, out := &in.SearchPaths, &out.SearchPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StrictHostKeyChecking != nil {
		in, out := &in.StrictHostKeyChecking, &out.StrictHostKeyChecking
		*out = new(bool)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryInitParameters.
func (in *RepositoryInitParameters) DeepCopy() *RepositoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryObservation) DeepCopyInto(out *RepositoryObservation) {
	*out = *in
	if in.HostKey != nil {
		in, out := &in.HostKey, &out.HostKey
		*out = new(string)
		**out = **in
	}
	if in.HostKeyAlgorithm != nil {
		in, out := &in.HostKeyAlgorithm, &out.HostKeyAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Patterns != nil {
		in, out := &in.Patterns, &out.Patterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SearchPaths != nil {
		in, out := &in.SearchPaths, &out.SearchPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StrictHostKeyChecking != nil {
		in, out := &in.StrictHostKeyChecking, &out.StrictHostKeyChecking
		*out = new(bool)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryObservation.
func (in *RepositoryObservation) DeepCopy() *RepositoryObservation {
	if in == nil {
		return nil
	}
	out := new(RepositoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryParameters) DeepCopyInto(out *RepositoryParameters) {
	*out = *in
	if in.HostKey != nil {
		in, out := &in.HostKey, &out.HostKey
		*out = new(string)
		**out = **in
	}
	if in.HostKeyAlgorithm != nil {
		in, out := &in.HostKeyAlgorithm, &out.HostKeyAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Patterns != nil {
		in, out := &in.Patterns, &out.Patterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateKeySecretRef != nil {
		in, out := &in.PrivateKeySecretRef, &out.PrivateKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SearchPaths != nil {
		in, out := &in.SearchPaths, &out.SearchPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StrictHostKeyChecking != nil {
		in, out := &in.StrictHostKeyChecking, &out.StrictHostKeyChecking
		*out = new(bool)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryParameters.
func (in *RepositoryParameters) DeepCopy() *RepositoryParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositorySSHAuthInitParameters) DeepCopyInto(out *RepositorySSHAuthInitParameters) {
	*out = *in
	if in.HostKeyAlgorithm != nil {
		in, out := &in.HostKeyAlgorithm, &out.HostKeyAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.StrictHostKeyCheckingEnabled != nil {
		in, out := &in.StrictHostKeyCheckingEnabled, &out.StrictHostKeyCheckingEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositorySSHAuthInitParameters.
func (in *RepositorySSHAuthInitParameters) DeepCopy() *RepositorySSHAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(RepositorySSHAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositorySSHAuthObservation) DeepCopyInto(out *RepositorySSHAuthObservation) {
	*out = *in
	if in.HostKeyAlgorithm != nil {
		in, out := &in.HostKeyAlgorithm, &out.HostKeyAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.StrictHostKeyCheckingEnabled != nil {
		in, out := &in.StrictHostKeyCheckingEnabled, &out.StrictHostKeyCheckingEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositorySSHAuthObservation.
func (in *RepositorySSHAuthObservation) DeepCopy() *RepositorySSHAuthObservation {
	if in == nil {
		return nil
	}
	out := new(RepositorySSHAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositorySSHAuthParameters) DeepCopyInto(out *RepositorySSHAuthParameters) {
	*out = *in
	if in.HostKeyAlgorithm != nil {
		in, out := &in.HostKeyAlgorithm, &out.HostKeyAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.HostKeySecretRef != nil {
		in, out := &in.HostKeySecretRef, &out.HostKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	out.PrivateKeySecretRef = in.PrivateKeySecretRef
	if in.StrictHostKeyCheckingEnabled != nil {
		in, out := &in.StrictHostKeyCheckingEnabled, &out.StrictHostKeyCheckingEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositorySSHAuthParameters.
func (in *RepositorySSHAuthParameters) DeepCopy() *RepositorySSHAuthParameters {
	if in == nil {
		return nil
	}
	out := new(RepositorySSHAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredNetworkTrafficRulesInitParameters) DeepCopyInto(out *RequiredNetworkTrafficRulesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredNetworkTrafficRulesInitParameters.
func (in *RequiredNetworkTrafficRulesInitParameters) DeepCopy() *RequiredNetworkTrafficRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredNetworkTrafficRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredNetworkTrafficRulesObservation) DeepCopyInto(out *RequiredNetworkTrafficRulesObservation) {
	*out = *in
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.Fqdns != nil {
		in, out := &in.Fqdns, &out.Fqdns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPAddresses != nil {
		in, out := &in.IPAddresses, &out.IPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredNetworkTrafficRulesObservation.
func (in *RequiredNetworkTrafficRulesObservation) DeepCopy() *RequiredNetworkTrafficRulesObservation {
	if in == nil {
		return nil
	}
	out := new(RequiredNetworkTrafficRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredNetworkTrafficRulesParameters) DeepCopyInto(out *RequiredNetworkTrafficRulesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredNetworkTrafficRulesParameters.
func (in *RequiredNetworkTrafficRulesParameters) DeepCopy() *RequiredNetworkTrafficRulesParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredNetworkTrafficRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSHAuthInitParameters) DeepCopyInto(out *SSHAuthInitParameters) {
	*out = *in
	if in.HostKeyAlgorithm != nil {
		in, out := &in.HostKeyAlgorithm, &out.HostKeyAlgorithm
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSHAuthInitParameters.
func (in *SSHAuthInitParameters) DeepCopy() *SSHAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(SSHAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSHAuthObservation) DeepCopyInto(out *SSHAuthObservation) {
	*out = *in
	if in.HostKeyAlgorithm != nil {
		in, out := &in.HostKeyAlgorithm, &out.HostKeyAlgorithm
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSHAuthObservation.
func (in *SSHAuthObservation) DeepCopy() *SSHAuthObservation {
	if in == nil {
		return nil
	}
	out := new(SSHAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSHAuthParameters) DeepCopyInto(out *SSHAuthParameters) {
	*out = *in
	if in.HostKeyAlgorithm != nil {
		in, out := &in.HostKeyAlgorithm, &out.HostKeyAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.HostKeySecretRef != nil {
		in, out := &in.HostKeySecretRef, &out.HostKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	out.PrivateKeySecretRef = in.PrivateKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSHAuthParameters.
func (in *SSHAuthParameters) DeepCopy() *SSHAuthParameters {
	if in == nil {
		return nil
	}
	out := new(SSHAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAPIPortal) DeepCopyInto(out *SpringCloudAPIPortal) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAPIPortal.
func (in *SpringCloudAPIPortal) DeepCopy() *SpringCloudAPIPortal {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAPIPortal)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudAPIPortal) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAPIPortalCustomDomain) DeepCopyInto(out *SpringCloudAPIPortalCustomDomain) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAPIPortalCustomDomain.
func (in *SpringCloudAPIPortalCustomDomain) DeepCopy() *SpringCloudAPIPortalCustomDomain {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAPIPortalCustomDomain)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudAPIPortalCustomDomain) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAPIPortalCustomDomainInitParameters) DeepCopyInto(out *SpringCloudAPIPortalCustomDomainInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAPIPortalCustomDomainInitParameters.
func (in *SpringCloudAPIPortalCustomDomainInitParameters) DeepCopy() *SpringCloudAPIPortalCustomDomainInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAPIPortalCustomDomainInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAPIPortalCustomDomainList) DeepCopyInto(out *SpringCloudAPIPortalCustomDomainList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudAPIPortalCustomDomain, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAPIPortalCustomDomainList.
func (in *SpringCloudAPIPortalCustomDomainList) DeepCopy() *SpringCloudAPIPortalCustomDomainList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAPIPortalCustomDomainList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudAPIPortalCustomDomainList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAPIPortalCustomDomainObservation) DeepCopyInto(out *SpringCloudAPIPortalCustomDomainObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAPIPortalID != nil {
		in, out := &in.SpringCloudAPIPortalID, &out.SpringCloudAPIPortalID
		*out = new(string)
		**out = **in
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAPIPortalCustomDomainObservation.
func (in *SpringCloudAPIPortalCustomDomainObservation) DeepCopy() *SpringCloudAPIPortalCustomDomainObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAPIPortalCustomDomainObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAPIPortalCustomDomainParameters) DeepCopyInto(out *SpringCloudAPIPortalCustomDomainParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAPIPortalID != nil {
		in, out := &in.SpringCloudAPIPortalID, &out.SpringCloudAPIPortalID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAPIPortalIDRef != nil {
		in, out := &in.SpringCloudAPIPortalIDRef, &out.SpringCloudAPIPortalIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudAPIPortalIDSelector != nil {
		in, out := &in.SpringCloudAPIPortalIDSelector, &out.SpringCloudAPIPortalIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAPIPortalCustomDomainParameters.
func (in *SpringCloudAPIPortalCustomDomainParameters) DeepCopy() *SpringCloudAPIPortalCustomDomainParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAPIPortalCustomDomainParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAPIPortalCustomDomainSpec) DeepCopyInto(out *SpringCloudAPIPortalCustomDomainSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAPIPortalCustomDomainSpec.
func (in *SpringCloudAPIPortalCustomDomainSpec) DeepCopy() *SpringCloudAPIPortalCustomDomainSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAPIPortalCustomDomainSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAPIPortalCustomDomainStatus) DeepCopyInto(out *SpringCloudAPIPortalCustomDomainStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAPIPortalCustomDomainStatus.
func (in *SpringCloudAPIPortalCustomDomainStatus) DeepCopy() *SpringCloudAPIPortalCustomDomainStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAPIPortalCustomDomainStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAPIPortalInitParameters) DeepCopyInto(out *SpringCloudAPIPortalInitParameters) {
	*out = *in
	if in.HTTPSOnlyEnabled != nil {
		in, out := &in.HTTPSOnlyEnabled, &out.HTTPSOnlyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Sso != nil {
		in, out := &in.Sso, &out.Sso
		*out = make([]SsoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAPIPortalInitParameters.
func (in *SpringCloudAPIPortalInitParameters) DeepCopy() *SpringCloudAPIPortalInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAPIPortalInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAPIPortalList) DeepCopyInto(out *SpringCloudAPIPortalList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudAPIPortal, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAPIPortalList.
func (in *SpringCloudAPIPortalList) DeepCopy() *SpringCloudAPIPortalList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAPIPortalList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudAPIPortalList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAPIPortalObservation) DeepCopyInto(out *SpringCloudAPIPortalObservation) {
	*out = *in
	if in.GatewayIds != nil {
		in, out := &in.GatewayIds, &out.GatewayIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HTTPSOnlyEnabled != nil {
		in, out := &in.HTTPSOnlyEnabled, &out.HTTPSOnlyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpringCloudServiceID != nil {
		in, out := &in.SpringCloudServiceID, &out.SpringCloudServiceID
		*out = new(string)
		**out = **in
	}
	if in.Sso != nil {
		in, out := &in.Sso, &out.Sso
		*out = make([]SsoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAPIPortalObservation.
func (in *SpringCloudAPIPortalObservation) DeepCopy() *SpringCloudAPIPortalObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAPIPortalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAPIPortalParameters) DeepCopyInto(out *SpringCloudAPIPortalParameters) {
	*out = *in
	if in.GatewayIds != nil {
		in, out := &in.GatewayIds, &out.GatewayIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GatewayIdsRefs != nil {
		in, out := &in.GatewayIdsRefs, &out.GatewayIdsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GatewayIdsSelector != nil {
		in, out := &in.GatewayIdsSelector, &out.GatewayIdsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.HTTPSOnlyEnabled != nil {
		in, out := &in.HTTPSOnlyEnabled, &out.HTTPSOnlyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpringCloudServiceID != nil {
		in, out := &in.SpringCloudServiceID, &out.SpringCloudServiceID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudServiceIDRef != nil {
		in, out := &in.SpringCloudServiceIDRef, &out.SpringCloudServiceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudServiceIDSelector != nil {
		in, out := &in.SpringCloudServiceIDSelector, &out.SpringCloudServiceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Sso != nil {
		in, out := &in.Sso, &out.Sso
		*out = make([]SsoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAPIPortalParameters.
func (in *SpringCloudAPIPortalParameters) DeepCopy() *SpringCloudAPIPortalParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAPIPortalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAPIPortalSpec) DeepCopyInto(out *SpringCloudAPIPortalSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAPIPortalSpec.
func (in *SpringCloudAPIPortalSpec) DeepCopy() *SpringCloudAPIPortalSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAPIPortalSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAPIPortalStatus) DeepCopyInto(out *SpringCloudAPIPortalStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAPIPortalStatus.
func (in *SpringCloudAPIPortalStatus) DeepCopy() *SpringCloudAPIPortalStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAPIPortalStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAccelerator) DeepCopyInto(out *SpringCloudAccelerator) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAccelerator.
func (in *SpringCloudAccelerator) DeepCopy() *SpringCloudAccelerator {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAccelerator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudAccelerator) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAcceleratorInitParameters) DeepCopyInto(out *SpringCloudAcceleratorInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAcceleratorInitParameters.
func (in *SpringCloudAcceleratorInitParameters) DeepCopy() *SpringCloudAcceleratorInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAcceleratorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAcceleratorList) DeepCopyInto(out *SpringCloudAcceleratorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudAccelerator, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAcceleratorList.
func (in *SpringCloudAcceleratorList) DeepCopy() *SpringCloudAcceleratorList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAcceleratorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudAcceleratorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAcceleratorObservation) DeepCopyInto(out *SpringCloudAcceleratorObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudServiceID != nil {
		in, out := &in.SpringCloudServiceID, &out.SpringCloudServiceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAcceleratorObservation.
func (in *SpringCloudAcceleratorObservation) DeepCopy() *SpringCloudAcceleratorObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAcceleratorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAcceleratorParameters) DeepCopyInto(out *SpringCloudAcceleratorParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudServiceID != nil {
		in, out := &in.SpringCloudServiceID, &out.SpringCloudServiceID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudServiceIDRef != nil {
		in, out := &in.SpringCloudServiceIDRef, &out.SpringCloudServiceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudServiceIDSelector != nil {
		in, out := &in.SpringCloudServiceIDSelector, &out.SpringCloudServiceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAcceleratorParameters.
func (in *SpringCloudAcceleratorParameters) DeepCopy() *SpringCloudAcceleratorParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAcceleratorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAcceleratorSpec) DeepCopyInto(out *SpringCloudAcceleratorSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAcceleratorSpec.
func (in *SpringCloudAcceleratorSpec) DeepCopy() *SpringCloudAcceleratorSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAcceleratorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAcceleratorStatus) DeepCopyInto(out *SpringCloudAcceleratorStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAcceleratorStatus.
func (in *SpringCloudAcceleratorStatus) DeepCopy() *SpringCloudAcceleratorStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAcceleratorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudActiveDeployment) DeepCopyInto(out *SpringCloudActiveDeployment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudActiveDeployment.
func (in *SpringCloudActiveDeployment) DeepCopy() *SpringCloudActiveDeployment {
	if in == nil {
		return nil
	}
	out := new(SpringCloudActiveDeployment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudActiveDeployment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudActiveDeploymentInitParameters) DeepCopyInto(out *SpringCloudActiveDeploymentInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudActiveDeploymentInitParameters.
func (in *SpringCloudActiveDeploymentInitParameters) DeepCopy() *SpringCloudActiveDeploymentInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudActiveDeploymentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudActiveDeploymentList) DeepCopyInto(out *SpringCloudActiveDeploymentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudActiveDeployment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudActiveDeploymentList.
func (in *SpringCloudActiveDeploymentList) DeepCopy() *SpringCloudActiveDeploymentList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudActiveDeploymentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudActiveDeploymentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudActiveDeploymentObservation) DeepCopyInto(out *SpringCloudActiveDeploymentObservation) {
	*out = *in
	if in.DeploymentName != nil {
		in, out := &in.DeploymentName, &out.DeploymentName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppID != nil {
		in, out := &in.SpringCloudAppID, &out.SpringCloudAppID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudActiveDeploymentObservation.
func (in *SpringCloudActiveDeploymentObservation) DeepCopy() *SpringCloudActiveDeploymentObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudActiveDeploymentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudActiveDeploymentParameters) DeepCopyInto(out *SpringCloudActiveDeploymentParameters) {
	*out = *in
	if in.DeploymentName != nil {
		in, out := &in.DeploymentName, &out.DeploymentName
		*out = new(string)
		**out = **in
	}
	if in.DeploymentNameRef != nil {
		in, out := &in.DeploymentNameRef, &out.DeploymentNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DeploymentNameSelector != nil {
		in, out := &in.DeploymentNameSelector, &out.DeploymentNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudAppID != nil {
		in, out := &in.SpringCloudAppID, &out.SpringCloudAppID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppIDRef != nil {
		in, out := &in.SpringCloudAppIDRef, &out.SpringCloudAppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudAppIDSelector != nil {
		in, out := &in.SpringCloudAppIDSelector, &out.SpringCloudAppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudActiveDeploymentParameters.
func (in *SpringCloudActiveDeploymentParameters) DeepCopy() *SpringCloudActiveDeploymentParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudActiveDeploymentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudActiveDeploymentSpec) DeepCopyInto(out *SpringCloudActiveDeploymentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	out.InitProvider = in.InitProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudActiveDeploymentSpec.
func (in *SpringCloudActiveDeploymentSpec) DeepCopy() *SpringCloudActiveDeploymentSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudActiveDeploymentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudActiveDeploymentStatus) DeepCopyInto(out *SpringCloudActiveDeploymentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudActiveDeploymentStatus.
func (in *SpringCloudActiveDeploymentStatus) DeepCopy() *SpringCloudActiveDeploymentStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudActiveDeploymentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudApp) DeepCopyInto(out *SpringCloudApp) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudApp.
func (in *SpringCloudApp) DeepCopy() *SpringCloudApp {
	if in == nil {
		return nil
	}
	out := new(SpringCloudApp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudApp) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppCosmosDBAssociation) DeepCopyInto(out *SpringCloudAppCosmosDBAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppCosmosDBAssociation.
func (in *SpringCloudAppCosmosDBAssociation) DeepCopy() *SpringCloudAppCosmosDBAssociation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppCosmosDBAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudAppCosmosDBAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppCosmosDBAssociationInitParameters) DeepCopyInto(out *SpringCloudAppCosmosDBAssociationInitParameters) {
	*out = *in
	if in.APIType != nil {
		in, out := &in.APIType, &out.APIType
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBCassandraKeySpaceName != nil {
		in, out := &in.CosmosDBCassandraKeySpaceName, &out.CosmosDBCassandraKeySpaceName
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBGremlinDatabaseName != nil {
		in, out := &in.CosmosDBGremlinDatabaseName, &out.CosmosDBGremlinDatabaseName
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBGremlinGraphName != nil {
		in, out := &in.CosmosDBGremlinGraphName, &out.CosmosDBGremlinGraphName
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBMongoDatabaseName != nil {
		in, out := &in.CosmosDBMongoDatabaseName, &out.CosmosDBMongoDatabaseName
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBSQLDatabaseName != nil {
		in, out := &in.CosmosDBSQLDatabaseName, &out.CosmosDBSQLDatabaseName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppCosmosDBAssociationInitParameters.
func (in *SpringCloudAppCosmosDBAssociationInitParameters) DeepCopy() *SpringCloudAppCosmosDBAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppCosmosDBAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppCosmosDBAssociationList) DeepCopyInto(out *SpringCloudAppCosmosDBAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudAppCosmosDBAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppCosmosDBAssociationList.
func (in *SpringCloudAppCosmosDBAssociationList) DeepCopy() *SpringCloudAppCosmosDBAssociationList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppCosmosDBAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudAppCosmosDBAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppCosmosDBAssociationObservation) DeepCopyInto(out *SpringCloudAppCosmosDBAssociationObservation) {
	*out = *in
	if in.APIType != nil {
		in, out := &in.APIType, &out.APIType
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBAccessKey != nil {
		in, out := &in.CosmosDBAccessKey, &out.CosmosDBAccessKey
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBAccountID != nil {
		in, out := &in.CosmosDBAccountID, &out.CosmosDBAccountID
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBCassandraKeySpaceName != nil {
		in, out := &in.CosmosDBCassandraKeySpaceName, &out.CosmosDBCassandraKeySpaceName
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBGremlinDatabaseName != nil {
		in, out := &in.CosmosDBGremlinDatabaseName, &out.CosmosDBGremlinDatabaseName
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBGremlinGraphName != nil {
		in, out := &in.CosmosDBGremlinGraphName, &out.CosmosDBGremlinGraphName
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBMongoDatabaseName != nil {
		in, out := &in.CosmosDBMongoDatabaseName, &out.CosmosDBMongoDatabaseName
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBSQLDatabaseName != nil {
		in, out := &in.CosmosDBSQLDatabaseName, &out.CosmosDBSQLDatabaseName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppID != nil {
		in, out := &in.SpringCloudAppID, &out.SpringCloudAppID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppCosmosDBAssociationObservation.
func (in *SpringCloudAppCosmosDBAssociationObservation) DeepCopy() *SpringCloudAppCosmosDBAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppCosmosDBAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppCosmosDBAssociationParameters) DeepCopyInto(out *SpringCloudAppCosmosDBAssociationParameters) {
	*out = *in
	if in.APIType != nil {
		in, out := &in.APIType, &out.APIType
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBAccessKey != nil {
		in, out := &in.CosmosDBAccessKey, &out.CosmosDBAccessKey
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBAccessKeyRef != nil {
		in, out := &in.CosmosDBAccessKeyRef, &out.CosmosDBAccessKeyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CosmosDBAccessKeySelector != nil {
		in, out := &in.CosmosDBAccessKeySelector, &out.CosmosDBAccessKeySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CosmosDBAccountID != nil {
		in, out := &in.CosmosDBAccountID, &out.CosmosDBAccountID
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBAccountIDRef != nil {
		in, out := &in.CosmosDBAccountIDRef, &out.CosmosDBAccountIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CosmosDBAccountIDSelector != nil {
		in, out := &in.CosmosDBAccountIDSelector, &out.CosmosDBAccountIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CosmosDBCassandraKeySpaceName != nil {
		in, out := &in.CosmosDBCassandraKeySpaceName, &out.CosmosDBCassandraKeySpaceName
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBGremlinDatabaseName != nil {
		in, out := &in.CosmosDBGremlinDatabaseName, &out.CosmosDBGremlinDatabaseName
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBGremlinGraphName != nil {
		in, out := &in.CosmosDBGremlinGraphName, &out.CosmosDBGremlinGraphName
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBMongoDatabaseName != nil {
		in, out := &in.CosmosDBMongoDatabaseName, &out.CosmosDBMongoDatabaseName
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBSQLDatabaseName != nil {
		in, out := &in.CosmosDBSQLDatabaseName, &out.CosmosDBSQLDatabaseName
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppID != nil {
		in, out := &in.SpringCloudAppID, &out.SpringCloudAppID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppIDRef != nil {
		in, out := &in.SpringCloudAppIDRef, &out.SpringCloudAppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudAppIDSelector != nil {
		in, out := &in.SpringCloudAppIDSelector, &out.SpringCloudAppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppCosmosDBAssociationParameters.
func (in *SpringCloudAppCosmosDBAssociationParameters) DeepCopy() *SpringCloudAppCosmosDBAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppCosmosDBAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppCosmosDBAssociationSpec) DeepCopyInto(out *SpringCloudAppCosmosDBAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppCosmosDBAssociationSpec.
func (in *SpringCloudAppCosmosDBAssociationSpec) DeepCopy() *SpringCloudAppCosmosDBAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppCosmosDBAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppCosmosDBAssociationStatus) DeepCopyInto(out *SpringCloudAppCosmosDBAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppCosmosDBAssociationStatus.
func (in *SpringCloudAppCosmosDBAssociationStatus) DeepCopy() *SpringCloudAppCosmosDBAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppCosmosDBAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppInitParameters) DeepCopyInto(out *SpringCloudAppInitParameters) {
	*out = *in
	if in.AddonJSON != nil {
		in, out := &in.AddonJSON, &out.AddonJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomPersistentDisk != nil {
		in, out := &in.CustomPersistentDisk, &out.CustomPersistentDisk
		*out = make([]CustomPersistentDiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IngressSettings != nil {
		in, out := &in.IngressSettings, &out.IngressSettings
		*out = make([]IngressSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsPublic != nil {
		in, out := &in.IsPublic, &out.IsPublic
		*out = new(bool)
		**out = **in
	}
	if in.PersistentDisk != nil {
		in, out := &in.PersistentDisk, &out.PersistentDisk
		*out = make([]PersistentDiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PublicEndpointEnabled != nil {
		in, out := &in.PublicEndpointEnabled, &out.PublicEndpointEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TLSEnabled != nil {
		in, out := &in.TLSEnabled, &out.TLSEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppInitParameters.
func (in *SpringCloudAppInitParameters) DeepCopy() *SpringCloudAppInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppList) DeepCopyInto(out *SpringCloudAppList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudApp, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppList.
func (in *SpringCloudAppList) DeepCopy() *SpringCloudAppList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudAppList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppMySQLAssociation) DeepCopyInto(out *SpringCloudAppMySQLAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppMySQLAssociation.
func (in *SpringCloudAppMySQLAssociation) DeepCopy() *SpringCloudAppMySQLAssociation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppMySQLAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudAppMySQLAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppMySQLAssociationInitParameters) DeepCopyInto(out *SpringCloudAppMySQLAssociationInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppMySQLAssociationInitParameters.
func (in *SpringCloudAppMySQLAssociationInitParameters) DeepCopy() *SpringCloudAppMySQLAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppMySQLAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppMySQLAssociationList) DeepCopyInto(out *SpringCloudAppMySQLAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudAppMySQLAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppMySQLAssociationList.
func (in *SpringCloudAppMySQLAssociationList) DeepCopy() *SpringCloudAppMySQLAssociationList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppMySQLAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudAppMySQLAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppMySQLAssociationObservation) DeepCopyInto(out *SpringCloudAppMySQLAssociationObservation) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MySQLServerID != nil {
		in, out := &in.MySQLServerID, &out.MySQLServerID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppID != nil {
		in, out := &in.SpringCloudAppID, &out.SpringCloudAppID
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppMySQLAssociationObservation.
func (in *SpringCloudAppMySQLAssociationObservation) DeepCopy() *SpringCloudAppMySQLAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppMySQLAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppMySQLAssociationParameters) DeepCopyInto(out *SpringCloudAppMySQLAssociationParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseNameRef != nil {
		in, out := &in.DatabaseNameRef, &out.DatabaseNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseNameSelector != nil {
		in, out := &in.DatabaseNameSelector, &out.DatabaseNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MySQLServerID != nil {
		in, out := &in.MySQLServerID, &out.MySQLServerID
		*out = new(string)
		**out = **in
	}
	if in.MySQLServerIDRef != nil {
		in, out := &in.MySQLServerIDRef, &out.MySQLServerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MySQLServerIDSelector != nil {
		in, out := &in.MySQLServerIDSelector, &out.MySQLServerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.SpringCloudAppID != nil {
		in, out := &in.SpringCloudAppID, &out.SpringCloudAppID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppIDRef != nil {
		in, out := &in.SpringCloudAppIDRef, &out.SpringCloudAppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudAppIDSelector != nil {
		in, out := &in.SpringCloudAppIDSelector, &out.SpringCloudAppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.UsernameRef != nil {
		in, out := &in.UsernameRef, &out.UsernameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UsernameSelector != nil {
		in, out := &in.UsernameSelector, &out.UsernameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppMySQLAssociationParameters.
func (in *SpringCloudAppMySQLAssociationParameters) DeepCopy() *SpringCloudAppMySQLAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppMySQLAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppMySQLAssociationSpec) DeepCopyInto(out *SpringCloudAppMySQLAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	out.InitProvider = in.InitProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppMySQLAssociationSpec.
func (in *SpringCloudAppMySQLAssociationSpec) DeepCopy() *SpringCloudAppMySQLAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppMySQLAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppMySQLAssociationStatus) DeepCopyInto(out *SpringCloudAppMySQLAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppMySQLAssociationStatus.
func (in *SpringCloudAppMySQLAssociationStatus) DeepCopy() *SpringCloudAppMySQLAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppMySQLAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppObservation) DeepCopyInto(out *SpringCloudAppObservation) {
	*out = *in
	if in.AddonJSON != nil {
		in, out := &in.AddonJSON, &out.AddonJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomPersistentDisk != nil {
		in, out := &in.CustomPersistentDisk, &out.CustomPersistentDisk
		*out = make([]CustomPersistentDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IngressSettings != nil {
		in, out := &in.IngressSettings, &out.IngressSettings
		*out = make([]IngressSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsPublic != nil {
		in, out := &in.IsPublic, &out.IsPublic
		*out = new(bool)
		**out = **in
	}
	if in.PersistentDisk != nil {
		in, out := &in.PersistentDisk, &out.PersistentDisk
		*out = make([]PersistentDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PublicEndpointEnabled != nil {
		in, out := &in.PublicEndpointEnabled, &out.PublicEndpointEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.TLSEnabled != nil {
		in, out := &in.TLSEnabled, &out.TLSEnabled
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppObservation.
func (in *SpringCloudAppObservation) DeepCopy() *SpringCloudAppObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppParameters) DeepCopyInto(out *SpringCloudAppParameters) {
	*out = *in
	if in.AddonJSON != nil {
		in, out := &in.AddonJSON, &out.AddonJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomPersistentDisk != nil {
		in, out := &in.CustomPersistentDisk, &out.CustomPersistentDisk
		*out = make([]CustomPersistentDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IngressSettings != nil {
		in, out := &in.IngressSettings, &out.IngressSettings
		*out = make([]IngressSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsPublic != nil {
		in, out := &in.IsPublic, &out.IsPublic
		*out = new(bool)
		**out = **in
	}
	if in.PersistentDisk != nil {
		in, out := &in.PersistentDisk, &out.PersistentDisk
		*out = make([]PersistentDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PublicEndpointEnabled != nil {
		in, out := &in.PublicEndpointEnabled, &out.PublicEndpointEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.ServiceNameRef != nil {
		in, out := &in.ServiceNameRef, &out.ServiceNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceNameSelector != nil {
		in, out := &in.ServiceNameSelector, &out.ServiceNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSEnabled != nil {
		in, out := &in.TLSEnabled, &out.TLSEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppParameters.
func (in *SpringCloudAppParameters) DeepCopy() *SpringCloudAppParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppRedisAssociation) DeepCopyInto(out *SpringCloudAppRedisAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppRedisAssociation.
func (in *SpringCloudAppRedisAssociation) DeepCopy() *SpringCloudAppRedisAssociation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppRedisAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudAppRedisAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppRedisAssociationInitParameters) DeepCopyInto(out *SpringCloudAppRedisAssociationInitParameters) {
	*out = *in
	if in.SSLEnabled != nil {
		in, out := &in.SSLEnabled, &out.SSLEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppRedisAssociationInitParameters.
func (in *SpringCloudAppRedisAssociationInitParameters) DeepCopy() *SpringCloudAppRedisAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppRedisAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppRedisAssociationList) DeepCopyInto(out *SpringCloudAppRedisAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudAppRedisAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppRedisAssociationList.
func (in *SpringCloudAppRedisAssociationList) DeepCopy() *SpringCloudAppRedisAssociationList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppRedisAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudAppRedisAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppRedisAssociationObservation) DeepCopyInto(out *SpringCloudAppRedisAssociationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RedisAccessKey != nil {
		in, out := &in.RedisAccessKey, &out.RedisAccessKey
		*out = new(string)
		**out = **in
	}
	if in.RedisCacheID != nil {
		in, out := &in.RedisCacheID, &out.RedisCacheID
		*out = new(string)
		**out = **in
	}
	if in.SSLEnabled != nil {
		in, out := &in.SSLEnabled, &out.SSLEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpringCloudAppID != nil {
		in, out := &in.SpringCloudAppID, &out.SpringCloudAppID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppRedisAssociationObservation.
func (in *SpringCloudAppRedisAssociationObservation) DeepCopy() *SpringCloudAppRedisAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppRedisAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppRedisAssociationParameters) DeepCopyInto(out *SpringCloudAppRedisAssociationParameters) {
	*out = *in
	if in.RedisAccessKey != nil {
		in, out := &in.RedisAccessKey, &out.RedisAccessKey
		*out = new(string)
		**out = **in
	}
	if in.RedisAccessKeyRef != nil {
		in, out := &in.RedisAccessKeyRef, &out.RedisAccessKeyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RedisAccessKeySelector != nil {
		in, out := &in.RedisAccessKeySelector, &out.RedisAccessKeySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RedisCacheID != nil {
		in, out := &in.RedisCacheID, &out.RedisCacheID
		*out = new(string)
		**out = **in
	}
	if in.RedisCacheIDRef != nil {
		in, out := &in.RedisCacheIDRef, &out.RedisCacheIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RedisCacheIDSelector != nil {
		in, out := &in.RedisCacheIDSelector, &out.RedisCacheIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SSLEnabled != nil {
		in, out := &in.SSLEnabled, &out.SSLEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpringCloudAppID != nil {
		in, out := &in.SpringCloudAppID, &out.SpringCloudAppID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppIDRef != nil {
		in, out := &in.SpringCloudAppIDRef, &out.SpringCloudAppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudAppIDSelector != nil {
		in, out := &in.SpringCloudAppIDSelector, &out.SpringCloudAppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppRedisAssociationParameters.
func (in *SpringCloudAppRedisAssociationParameters) DeepCopy() *SpringCloudAppRedisAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppRedisAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppRedisAssociationSpec) DeepCopyInto(out *SpringCloudAppRedisAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppRedisAssociationSpec.
func (in *SpringCloudAppRedisAssociationSpec) DeepCopy() *SpringCloudAppRedisAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppRedisAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppRedisAssociationStatus) DeepCopyInto(out *SpringCloudAppRedisAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppRedisAssociationStatus.
func (in *SpringCloudAppRedisAssociationStatus) DeepCopy() *SpringCloudAppRedisAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppRedisAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppSpec) DeepCopyInto(out *SpringCloudAppSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppSpec.
func (in *SpringCloudAppSpec) DeepCopy() *SpringCloudAppSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudAppStatus) DeepCopyInto(out *SpringCloudAppStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudAppStatus.
func (in *SpringCloudAppStatus) DeepCopy() *SpringCloudAppStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudAppStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudBuildDeployment) DeepCopyInto(out *SpringCloudBuildDeployment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudBuildDeployment.
func (in *SpringCloudBuildDeployment) DeepCopy() *SpringCloudBuildDeployment {
	if in == nil {
		return nil
	}
	out := new(SpringCloudBuildDeployment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudBuildDeployment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudBuildDeploymentInitParameters) DeepCopyInto(out *SpringCloudBuildDeploymentInitParameters) {
	*out = *in
	if in.AddonJSON != nil {
		in, out := &in.AddonJSON, &out.AddonJSON
		*out = new(string)
		**out = **in
	}
	if in.BuildResultID != nil {
		in, out := &in.BuildResultID, &out.BuildResultID
		*out = new(string)
		**out = **in
	}
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Quota != nil {
		in, out := &in.Quota, &out.Quota
		*out = make([]QuotaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudBuildDeploymentInitParameters.
func (in *SpringCloudBuildDeploymentInitParameters) DeepCopy() *SpringCloudBuildDeploymentInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudBuildDeploymentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudBuildDeploymentList) DeepCopyInto(out *SpringCloudBuildDeploymentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudBuildDeployment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudBuildDeploymentList.
func (in *SpringCloudBuildDeploymentList) DeepCopy() *SpringCloudBuildDeploymentList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudBuildDeploymentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudBuildDeploymentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudBuildDeploymentObservation) DeepCopyInto(out *SpringCloudBuildDeploymentObservation) {
	*out = *in
	if in.AddonJSON != nil {
		in, out := &in.AddonJSON, &out.AddonJSON
		*out = new(string)
		**out = **in
	}
	if in.BuildResultID != nil {
		in, out := &in.BuildResultID, &out.BuildResultID
		*out = new(string)
		**out = **in
	}
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Quota != nil {
		in, out := &in.Quota, &out.Quota
		*out = make([]QuotaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpringCloudAppID != nil {
		in, out := &in.SpringCloudAppID, &out.SpringCloudAppID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudBuildDeploymentObservation.
func (in *SpringCloudBuildDeploymentObservation) DeepCopy() *SpringCloudBuildDeploymentObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudBuildDeploymentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudBuildDeploymentParameters) DeepCopyInto(out *SpringCloudBuildDeploymentParameters) {
	*out = *in
	if in.AddonJSON != nil {
		in, out := &in.AddonJSON, &out.AddonJSON
		*out = new(string)
		**out = **in
	}
	if in.BuildResultID != nil {
		in, out := &in.BuildResultID, &out.BuildResultID
		*out = new(string)
		**out = **in
	}
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Quota != nil {
		in, out := &in.Quota, &out.Quota
		*out = make([]QuotaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpringCloudAppID != nil {
		in, out := &in.SpringCloudAppID, &out.SpringCloudAppID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppIDRef != nil {
		in, out := &in.SpringCloudAppIDRef, &out.SpringCloudAppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudAppIDSelector != nil {
		in, out := &in.SpringCloudAppIDSelector, &out.SpringCloudAppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudBuildDeploymentParameters.
func (in *SpringCloudBuildDeploymentParameters) DeepCopy() *SpringCloudBuildDeploymentParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudBuildDeploymentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudBuildDeploymentSpec) DeepCopyInto(out *SpringCloudBuildDeploymentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudBuildDeploymentSpec.
func (in *SpringCloudBuildDeploymentSpec) DeepCopy() *SpringCloudBuildDeploymentSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudBuildDeploymentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudBuildDeploymentStatus) DeepCopyInto(out *SpringCloudBuildDeploymentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudBuildDeploymentStatus.
func (in *SpringCloudBuildDeploymentStatus) DeepCopy() *SpringCloudBuildDeploymentStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudBuildDeploymentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudBuildPackBinding) DeepCopyInto(out *SpringCloudBuildPackBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudBuildPackBinding.
func (in *SpringCloudBuildPackBinding) DeepCopy() *SpringCloudBuildPackBinding {
	if in == nil {
		return nil
	}
	out := new(SpringCloudBuildPackBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudBuildPackBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudBuildPackBindingInitParameters) DeepCopyInto(out *SpringCloudBuildPackBindingInitParameters) {
	*out = *in
	if in.BindingType != nil {
		in, out := &in.BindingType, &out.BindingType
		*out = new(string)
		**out = **in
	}
	if in.Launch != nil {
		in, out := &in.Launch, &out.Launch
		*out = make([]LaunchInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudBuildPackBindingInitParameters.
func (in *SpringCloudBuildPackBindingInitParameters) DeepCopy() *SpringCloudBuildPackBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudBuildPackBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudBuildPackBindingList) DeepCopyInto(out *SpringCloudBuildPackBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudBuildPackBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudBuildPackBindingList.
func (in *SpringCloudBuildPackBindingList) DeepCopy() *SpringCloudBuildPackBindingList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudBuildPackBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudBuildPackBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudBuildPackBindingObservation) DeepCopyInto(out *SpringCloudBuildPackBindingObservation) {
	*out = *in
	if in.BindingType != nil {
		in, out := &in.BindingType, &out.BindingType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Launch != nil {
		in, out := &in.Launch, &out.Launch
		*out = make([]LaunchObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpringCloudBuilderID != nil {
		in, out := &in.SpringCloudBuilderID, &out.SpringCloudBuilderID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudBuildPackBindingObservation.
func (in *SpringCloudBuildPackBindingObservation) DeepCopy() *SpringCloudBuildPackBindingObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudBuildPackBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudBuildPackBindingParameters) DeepCopyInto(out *SpringCloudBuildPackBindingParameters) {
	*out = *in
	if in.BindingType != nil {
		in, out := &in.BindingType, &out.BindingType
		*out = new(string)
		**out = **in
	}
	if in.Launch != nil {
		in, out := &in.Launch, &out.Launch
		*out = make([]LaunchParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpringCloudBuilderID != nil {
		in, out := &in.SpringCloudBuilderID, &out.SpringCloudBuilderID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudBuilderIDRef != nil {
		in, out := &in.SpringCloudBuilderIDRef, &out.SpringCloudBuilderIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudBuilderIDSelector != nil {
		in, out := &in.SpringCloudBuilderIDSelector, &out.SpringCloudBuilderIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudBuildPackBindingParameters.
func (in *SpringCloudBuildPackBindingParameters) DeepCopy() *SpringCloudBuildPackBindingParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudBuildPackBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudBuildPackBindingSpec) DeepCopyInto(out *SpringCloudBuildPackBindingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudBuildPackBindingSpec.
func (in *SpringCloudBuildPackBindingSpec) DeepCopy() *SpringCloudBuildPackBindingSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudBuildPackBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudBuildPackBindingStatus) DeepCopyInto(out *SpringCloudBuildPackBindingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudBuildPackBindingStatus.
func (in *SpringCloudBuildPackBindingStatus) DeepCopy() *SpringCloudBuildPackBindingStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudBuildPackBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudBuilder) DeepCopyInto(out *SpringCloudBuilder) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudBuilder.
func (in *SpringCloudBuilder) DeepCopy() *SpringCloudBuilder {
	if in == nil {
		return nil
	}
	out := new(SpringCloudBuilder)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudBuilder) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudBuilderInitParameters) DeepCopyInto(out *SpringCloudBuilderInitParameters) {
	*out = *in
	if in.BuildPackGroup != nil {
		in, out := &in.BuildPackGroup, &out.BuildPackGroup
		*out = make([]BuildPackGroupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Stack != nil {
		in, out := &in.Stack, &out.Stack
		*out = make([]StackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudBuilderInitParameters.
func (in *SpringCloudBuilderInitParameters) DeepCopy() *SpringCloudBuilderInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudBuilderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudBuilderList) DeepCopyInto(out *SpringCloudBuilderList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudBuilder, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudBuilderList.
func (in *SpringCloudBuilderList) DeepCopy() *SpringCloudBuilderList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudBuilderList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudBuilderList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudBuilderObservation) DeepCopyInto(out *SpringCloudBuilderObservation) {
	*out = *in
	if in.BuildPackGroup != nil {
		in, out := &in.BuildPackGroup, &out.BuildPackGroup
		*out = make([]BuildPackGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudServiceID != nil {
		in, out := &in.SpringCloudServiceID, &out.SpringCloudServiceID
		*out = new(string)
		**out = **in
	}
	if in.Stack != nil {
		in, out := &in.Stack, &out.Stack
		*out = make([]StackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudBuilderObservation.
func (in *SpringCloudBuilderObservation) DeepCopy() *SpringCloudBuilderObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudBuilderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudBuilderParameters) DeepCopyInto(out *SpringCloudBuilderParameters) {
	*out = *in
	if in.BuildPackGroup != nil {
		in, out := &in.BuildPackGroup, &out.BuildPackGroup
		*out = make([]BuildPackGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudServiceID != nil {
		in, out := &in.SpringCloudServiceID, &out.SpringCloudServiceID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudServiceIDRef != nil {
		in, out := &in.SpringCloudServiceIDRef, &out.SpringCloudServiceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudServiceIDSelector != nil {
		in, out := &in.SpringCloudServiceIDSelector, &out.SpringCloudServiceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Stack != nil {
		in, out := &in.Stack, &out.Stack
		*out = make([]StackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudBuilderParameters.
func (in *SpringCloudBuilderParameters) DeepCopy() *SpringCloudBuilderParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudBuilderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudBuilderSpec) DeepCopyInto(out *SpringCloudBuilderSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudBuilderSpec.
func (in *SpringCloudBuilderSpec) DeepCopy() *SpringCloudBuilderSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudBuilderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudBuilderStatus) DeepCopyInto(out *SpringCloudBuilderStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudBuilderStatus.
func (in *SpringCloudBuilderStatus) DeepCopy() *SpringCloudBuilderStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudBuilderStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCertificate) DeepCopyInto(out *SpringCloudCertificate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCertificate.
func (in *SpringCloudCertificate) DeepCopy() *SpringCloudCertificate {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudCertificate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCertificateInitParameters) DeepCopyInto(out *SpringCloudCertificateInitParameters) {
	*out = *in
	if in.CertificateContent != nil {
		in, out := &in.CertificateContent, &out.CertificateContent
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCertificateInitParameters.
func (in *SpringCloudCertificateInitParameters) DeepCopy() *SpringCloudCertificateInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCertificateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCertificateList) DeepCopyInto(out *SpringCloudCertificateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudCertificate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCertificateList.
func (in *SpringCloudCertificateList) DeepCopy() *SpringCloudCertificateList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCertificateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudCertificateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCertificateObservation) DeepCopyInto(out *SpringCloudCertificateObservation) {
	*out = *in
	if in.CertificateContent != nil {
		in, out := &in.CertificateContent, &out.CertificateContent
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultCertificateID != nil {
		in, out := &in.KeyVaultCertificateID, &out.KeyVaultCertificateID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCertificateObservation.
func (in *SpringCloudCertificateObservation) DeepCopy() *SpringCloudCertificateObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCertificateParameters) DeepCopyInto(out *SpringCloudCertificateParameters) {
	*out = *in
	if in.CertificateContent != nil {
		in, out := &in.CertificateContent, &out.CertificateContent
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultCertificateID != nil {
		in, out := &in.KeyVaultCertificateID, &out.KeyVaultCertificateID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultCertificateIDRef != nil {
		in, out := &in.KeyVaultCertificateIDRef, &out.KeyVaultCertificateIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyVaultCertificateIDSelector != nil {
		in, out := &in.KeyVaultCertificateIDSelector, &out.KeyVaultCertificateIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.ServiceNameRef != nil {
		in, out := &in.ServiceNameRef, &out.ServiceNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceNameSelector != nil {
		in, out := &in.ServiceNameSelector, &out.ServiceNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCertificateParameters.
func (in *SpringCloudCertificateParameters) DeepCopy() *SpringCloudCertificateParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCertificateSpec) DeepCopyInto(out *SpringCloudCertificateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCertificateSpec.
func (in *SpringCloudCertificateSpec) DeepCopy() *SpringCloudCertificateSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCertificateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCertificateStatus) DeepCopyInto(out *SpringCloudCertificateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCertificateStatus.
func (in *SpringCloudCertificateStatus) DeepCopy() *SpringCloudCertificateStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCertificateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudConfigurationService) DeepCopyInto(out *SpringCloudConfigurationService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudConfigurationService.
func (in *SpringCloudConfigurationService) DeepCopy() *SpringCloudConfigurationService {
	if in == nil {
		return nil
	}
	out := new(SpringCloudConfigurationService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudConfigurationService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudConfigurationServiceInitParameters) DeepCopyInto(out *SpringCloudConfigurationServiceInitParameters) {
	*out = *in
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = make([]RepositoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudConfigurationServiceInitParameters.
func (in *SpringCloudConfigurationServiceInitParameters) DeepCopy() *SpringCloudConfigurationServiceInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudConfigurationServiceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudConfigurationServiceList) DeepCopyInto(out *SpringCloudConfigurationServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudConfigurationService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudConfigurationServiceList.
func (in *SpringCloudConfigurationServiceList) DeepCopy() *SpringCloudConfigurationServiceList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudConfigurationServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudConfigurationServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudConfigurationServiceObservation) DeepCopyInto(out *SpringCloudConfigurationServiceObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = make([]RepositoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpringCloudServiceID != nil {
		in, out := &in.SpringCloudServiceID, &out.SpringCloudServiceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudConfigurationServiceObservation.
func (in *SpringCloudConfigurationServiceObservation) DeepCopy() *SpringCloudConfigurationServiceObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudConfigurationServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudConfigurationServiceParameters) DeepCopyInto(out *SpringCloudConfigurationServiceParameters) {
	*out = *in
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = make([]RepositoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpringCloudServiceID != nil {
		in, out := &in.SpringCloudServiceID, &out.SpringCloudServiceID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudServiceIDRef != nil {
		in, out := &in.SpringCloudServiceIDRef, &out.SpringCloudServiceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudServiceIDSelector != nil {
		in, out := &in.SpringCloudServiceIDSelector, &out.SpringCloudServiceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudConfigurationServiceParameters.
func (in *SpringCloudConfigurationServiceParameters) DeepCopy() *SpringCloudConfigurationServiceParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudConfigurationServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudConfigurationServiceSpec) DeepCopyInto(out *SpringCloudConfigurationServiceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudConfigurationServiceSpec.
func (in *SpringCloudConfigurationServiceSpec) DeepCopy() *SpringCloudConfigurationServiceSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudConfigurationServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudConfigurationServiceStatus) DeepCopyInto(out *SpringCloudConfigurationServiceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudConfigurationServiceStatus.
func (in *SpringCloudConfigurationServiceStatus) DeepCopy() *SpringCloudConfigurationServiceStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudConfigurationServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudContainerDeployment) DeepCopyInto(out *SpringCloudContainerDeployment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudContainerDeployment.
func (in *SpringCloudContainerDeployment) DeepCopy() *SpringCloudContainerDeployment {
	if in == nil {
		return nil
	}
	out := new(SpringCloudContainerDeployment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudContainerDeployment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudContainerDeploymentInitParameters) DeepCopyInto(out *SpringCloudContainerDeploymentInitParameters) {
	*out = *in
	if in.AddonJSON != nil {
		in, out := &in.AddonJSON, &out.AddonJSON
		*out = new(string)
		**out = **in
	}
	if in.Arguments != nil {
		in, out := &in.Arguments, &out.Arguments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LanguageFramework != nil {
		in, out := &in.LanguageFramework, &out.LanguageFramework
		*out = new(string)
		**out = **in
	}
	if in.Quota != nil {
		in, out := &in.Quota, &out.Quota
		*out = make([]SpringCloudContainerDeploymentQuotaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudContainerDeploymentInitParameters.
func (in *SpringCloudContainerDeploymentInitParameters) DeepCopy() *SpringCloudContainerDeploymentInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudContainerDeploymentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudContainerDeploymentList) DeepCopyInto(out *SpringCloudContainerDeploymentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudContainerDeployment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudContainerDeploymentList.
func (in *SpringCloudContainerDeploymentList) DeepCopy() *SpringCloudContainerDeploymentList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudContainerDeploymentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudContainerDeploymentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudContainerDeploymentObservation) DeepCopyInto(out *SpringCloudContainerDeploymentObservation) {
	*out = *in
	if in.AddonJSON != nil {
		in, out := &in.AddonJSON, &out.AddonJSON
		*out = new(string)
		**out = **in
	}
	if in.Arguments != nil {
		in, out := &in.Arguments, &out.Arguments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LanguageFramework != nil {
		in, out := &in.LanguageFramework, &out.LanguageFramework
		*out = new(string)
		**out = **in
	}
	if in.Quota != nil {
		in, out := &in.Quota, &out.Quota
		*out = make([]SpringCloudContainerDeploymentQuotaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppID != nil {
		in, out := &in.SpringCloudAppID, &out.SpringCloudAppID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudContainerDeploymentObservation.
func (in *SpringCloudContainerDeploymentObservation) DeepCopy() *SpringCloudContainerDeploymentObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudContainerDeploymentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudContainerDeploymentParameters) DeepCopyInto(out *SpringCloudContainerDeploymentParameters) {
	*out = *in
	if in.AddonJSON != nil {
		in, out := &in.AddonJSON, &out.AddonJSON
		*out = new(string)
		**out = **in
	}
	if in.Arguments != nil {
		in, out := &in.Arguments, &out.Arguments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LanguageFramework != nil {
		in, out := &in.LanguageFramework, &out.LanguageFramework
		*out = new(string)
		**out = **in
	}
	if in.Quota != nil {
		in, out := &in.Quota, &out.Quota
		*out = make([]SpringCloudContainerDeploymentQuotaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppID != nil {
		in, out := &in.SpringCloudAppID, &out.SpringCloudAppID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppIDRef != nil {
		in, out := &in.SpringCloudAppIDRef, &out.SpringCloudAppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudAppIDSelector != nil {
		in, out := &in.SpringCloudAppIDSelector, &out.SpringCloudAppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudContainerDeploymentParameters.
func (in *SpringCloudContainerDeploymentParameters) DeepCopy() *SpringCloudContainerDeploymentParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudContainerDeploymentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudContainerDeploymentQuotaInitParameters) DeepCopyInto(out *SpringCloudContainerDeploymentQuotaInitParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudContainerDeploymentQuotaInitParameters.
func (in *SpringCloudContainerDeploymentQuotaInitParameters) DeepCopy() *SpringCloudContainerDeploymentQuotaInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudContainerDeploymentQuotaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudContainerDeploymentQuotaObservation) DeepCopyInto(out *SpringCloudContainerDeploymentQuotaObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudContainerDeploymentQuotaObservation.
func (in *SpringCloudContainerDeploymentQuotaObservation) DeepCopy() *SpringCloudContainerDeploymentQuotaObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudContainerDeploymentQuotaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudContainerDeploymentQuotaParameters) DeepCopyInto(out *SpringCloudContainerDeploymentQuotaParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudContainerDeploymentQuotaParameters.
func (in *SpringCloudContainerDeploymentQuotaParameters) DeepCopy() *SpringCloudContainerDeploymentQuotaParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudContainerDeploymentQuotaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudContainerDeploymentSpec) DeepCopyInto(out *SpringCloudContainerDeploymentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudContainerDeploymentSpec.
func (in *SpringCloudContainerDeploymentSpec) DeepCopy() *SpringCloudContainerDeploymentSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudContainerDeploymentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudContainerDeploymentStatus) DeepCopyInto(out *SpringCloudContainerDeploymentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudContainerDeploymentStatus.
func (in *SpringCloudContainerDeploymentStatus) DeepCopy() *SpringCloudContainerDeploymentStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudContainerDeploymentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCustomDomain) DeepCopyInto(out *SpringCloudCustomDomain) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCustomDomain.
func (in *SpringCloudCustomDomain) DeepCopy() *SpringCloudCustomDomain {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCustomDomain)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudCustomDomain) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCustomDomainInitParameters) DeepCopyInto(out *SpringCloudCustomDomainInitParameters) {
	*out = *in
	if in.CertificateName != nil {
		in, out := &in.CertificateName, &out.CertificateName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCustomDomainInitParameters.
func (in *SpringCloudCustomDomainInitParameters) DeepCopy() *SpringCloudCustomDomainInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCustomDomainInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCustomDomainList) DeepCopyInto(out *SpringCloudCustomDomainList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudCustomDomain, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCustomDomainList.
func (in *SpringCloudCustomDomainList) DeepCopy() *SpringCloudCustomDomainList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCustomDomainList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudCustomDomainList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCustomDomainObservation) DeepCopyInto(out *SpringCloudCustomDomainObservation) {
	*out = *in
	if in.CertificateName != nil {
		in, out := &in.CertificateName, &out.CertificateName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppID != nil {
		in, out := &in.SpringCloudAppID, &out.SpringCloudAppID
		*out = new(string)
		**out = **in
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCustomDomainObservation.
func (in *SpringCloudCustomDomainObservation) DeepCopy() *SpringCloudCustomDomainObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCustomDomainObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCustomDomainParameters) DeepCopyInto(out *SpringCloudCustomDomainParameters) {
	*out = *in
	if in.CertificateName != nil {
		in, out := &in.CertificateName, &out.CertificateName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppID != nil {
		in, out := &in.SpringCloudAppID, &out.SpringCloudAppID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppIDRef != nil {
		in, out := &in.SpringCloudAppIDRef, &out.SpringCloudAppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudAppIDSelector != nil {
		in, out := &in.SpringCloudAppIDSelector, &out.SpringCloudAppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCustomDomainParameters.
func (in *SpringCloudCustomDomainParameters) DeepCopy() *SpringCloudCustomDomainParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCustomDomainParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCustomDomainSpec) DeepCopyInto(out *SpringCloudCustomDomainSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCustomDomainSpec.
func (in *SpringCloudCustomDomainSpec) DeepCopy() *SpringCloudCustomDomainSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCustomDomainSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCustomDomainStatus) DeepCopyInto(out *SpringCloudCustomDomainStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCustomDomainStatus.
func (in *SpringCloudCustomDomainStatus) DeepCopy() *SpringCloudCustomDomainStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCustomDomainStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCustomizedAccelerator) DeepCopyInto(out *SpringCloudCustomizedAccelerator) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCustomizedAccelerator.
func (in *SpringCloudCustomizedAccelerator) DeepCopy() *SpringCloudCustomizedAccelerator {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCustomizedAccelerator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudCustomizedAccelerator) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCustomizedAcceleratorInitParameters) DeepCopyInto(out *SpringCloudCustomizedAcceleratorInitParameters) {
	*out = *in
	if in.AcceleratorTags != nil {
		in, out := &in.AcceleratorTags, &out.AcceleratorTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.GitRepository != nil {
		in, out := &in.GitRepository, &out.GitRepository
		*out = make([]GitRepositoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IconURL != nil {
		in, out := &in.IconURL, &out.IconURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCustomizedAcceleratorInitParameters.
func (in *SpringCloudCustomizedAcceleratorInitParameters) DeepCopy() *SpringCloudCustomizedAcceleratorInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCustomizedAcceleratorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCustomizedAcceleratorList) DeepCopyInto(out *SpringCloudCustomizedAcceleratorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudCustomizedAccelerator, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCustomizedAcceleratorList.
func (in *SpringCloudCustomizedAcceleratorList) DeepCopy() *SpringCloudCustomizedAcceleratorList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCustomizedAcceleratorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudCustomizedAcceleratorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCustomizedAcceleratorObservation) DeepCopyInto(out *SpringCloudCustomizedAcceleratorObservation) {
	*out = *in
	if in.AcceleratorTags != nil {
		in, out := &in.AcceleratorTags, &out.AcceleratorTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.GitRepository != nil {
		in, out := &in.GitRepository, &out.GitRepository
		*out = make([]GitRepositoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IconURL != nil {
		in, out := &in.IconURL, &out.IconURL
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAcceleratorID != nil {
		in, out := &in.SpringCloudAcceleratorID, &out.SpringCloudAcceleratorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCustomizedAcceleratorObservation.
func (in *SpringCloudCustomizedAcceleratorObservation) DeepCopy() *SpringCloudCustomizedAcceleratorObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCustomizedAcceleratorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCustomizedAcceleratorParameters) DeepCopyInto(out *SpringCloudCustomizedAcceleratorParameters) {
	*out = *in
	if in.AcceleratorTags != nil {
		in, out := &in.AcceleratorTags, &out.AcceleratorTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.GitRepository != nil {
		in, out := &in.GitRepository, &out.GitRepository
		*out = make([]GitRepositoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IconURL != nil {
		in, out := &in.IconURL, &out.IconURL
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAcceleratorID != nil {
		in, out := &in.SpringCloudAcceleratorID, &out.SpringCloudAcceleratorID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAcceleratorIDRef != nil {
		in, out := &in.SpringCloudAcceleratorIDRef, &out.SpringCloudAcceleratorIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudAcceleratorIDSelector != nil {
		in, out := &in.SpringCloudAcceleratorIDSelector, &out.SpringCloudAcceleratorIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCustomizedAcceleratorParameters.
func (in *SpringCloudCustomizedAcceleratorParameters) DeepCopy() *SpringCloudCustomizedAcceleratorParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCustomizedAcceleratorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCustomizedAcceleratorSpec) DeepCopyInto(out *SpringCloudCustomizedAcceleratorSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCustomizedAcceleratorSpec.
func (in *SpringCloudCustomizedAcceleratorSpec) DeepCopy() *SpringCloudCustomizedAcceleratorSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCustomizedAcceleratorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudCustomizedAcceleratorStatus) DeepCopyInto(out *SpringCloudCustomizedAcceleratorStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudCustomizedAcceleratorStatus.
func (in *SpringCloudCustomizedAcceleratorStatus) DeepCopy() *SpringCloudCustomizedAcceleratorStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudCustomizedAcceleratorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudDevToolPortal) DeepCopyInto(out *SpringCloudDevToolPortal) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudDevToolPortal.
func (in *SpringCloudDevToolPortal) DeepCopy() *SpringCloudDevToolPortal {
	if in == nil {
		return nil
	}
	out := new(SpringCloudDevToolPortal)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudDevToolPortal) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudDevToolPortalInitParameters) DeepCopyInto(out *SpringCloudDevToolPortalInitParameters) {
	*out = *in
	if in.ApplicationAcceleratorEnabled != nil {
		in, out := &in.ApplicationAcceleratorEnabled, &out.ApplicationAcceleratorEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ApplicationLiveViewEnabled != nil {
		in, out := &in.ApplicationLiveViewEnabled, &out.ApplicationLiveViewEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Sso != nil {
		in, out := &in.Sso, &out.Sso
		*out = make([]SpringCloudDevToolPortalSsoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudDevToolPortalInitParameters.
func (in *SpringCloudDevToolPortalInitParameters) DeepCopy() *SpringCloudDevToolPortalInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudDevToolPortalInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudDevToolPortalList) DeepCopyInto(out *SpringCloudDevToolPortalList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudDevToolPortal, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudDevToolPortalList.
func (in *SpringCloudDevToolPortalList) DeepCopy() *SpringCloudDevToolPortalList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudDevToolPortalList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudDevToolPortalList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudDevToolPortalObservation) DeepCopyInto(out *SpringCloudDevToolPortalObservation) {
	*out = *in
	if in.ApplicationAcceleratorEnabled != nil {
		in, out := &in.ApplicationAcceleratorEnabled, &out.ApplicationAcceleratorEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ApplicationLiveViewEnabled != nil {
		in, out := &in.ApplicationLiveViewEnabled, &out.ApplicationLiveViewEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpringCloudServiceID != nil {
		in, out := &in.SpringCloudServiceID, &out.SpringCloudServiceID
		*out = new(string)
		**out = **in
	}
	if in.Sso != nil {
		in, out := &in.Sso, &out.Sso
		*out = make([]SpringCloudDevToolPortalSsoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudDevToolPortalObservation.
func (in *SpringCloudDevToolPortalObservation) DeepCopy() *SpringCloudDevToolPortalObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudDevToolPortalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudDevToolPortalParameters) DeepCopyInto(out *SpringCloudDevToolPortalParameters) {
	*out = *in
	if in.ApplicationAcceleratorEnabled != nil {
		in, out := &in.ApplicationAcceleratorEnabled, &out.ApplicationAcceleratorEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ApplicationLiveViewEnabled != nil {
		in, out := &in.ApplicationLiveViewEnabled, &out.ApplicationLiveViewEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpringCloudServiceID != nil {
		in, out := &in.SpringCloudServiceID, &out.SpringCloudServiceID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudServiceIDRef != nil {
		in, out := &in.SpringCloudServiceIDRef, &out.SpringCloudServiceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudServiceIDSelector != nil {
		in, out := &in.SpringCloudServiceIDSelector, &out.SpringCloudServiceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Sso != nil {
		in, out := &in.Sso, &out.Sso
		*out = make([]SpringCloudDevToolPortalSsoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudDevToolPortalParameters.
func (in *SpringCloudDevToolPortalParameters) DeepCopy() *SpringCloudDevToolPortalParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudDevToolPortalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudDevToolPortalSpec) DeepCopyInto(out *SpringCloudDevToolPortalSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudDevToolPortalSpec.
func (in *SpringCloudDevToolPortalSpec) DeepCopy() *SpringCloudDevToolPortalSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudDevToolPortalSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudDevToolPortalSsoInitParameters) DeepCopyInto(out *SpringCloudDevToolPortalSsoInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecret != nil {
		in, out := &in.ClientSecret, &out.ClientSecret
		*out = new(string)
		**out = **in
	}
	if in.MetadataURL != nil {
		in, out := &in.MetadataURL, &out.MetadataURL
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudDevToolPortalSsoInitParameters.
func (in *SpringCloudDevToolPortalSsoInitParameters) DeepCopy() *SpringCloudDevToolPortalSsoInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudDevToolPortalSsoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudDevToolPortalSsoObservation) DeepCopyInto(out *SpringCloudDevToolPortalSsoObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecret != nil {
		in, out := &in.ClientSecret, &out.ClientSecret
		*out = new(string)
		**out = **in
	}
	if in.MetadataURL != nil {
		in, out := &in.MetadataURL, &out.MetadataURL
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudDevToolPortalSsoObservation.
func (in *SpringCloudDevToolPortalSsoObservation) DeepCopy() *SpringCloudDevToolPortalSsoObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudDevToolPortalSsoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudDevToolPortalSsoParameters) DeepCopyInto(out *SpringCloudDevToolPortalSsoParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecret != nil {
		in, out := &in.ClientSecret, &out.ClientSecret
		*out = new(string)
		**out = **in
	}
	if in.MetadataURL != nil {
		in, out := &in.MetadataURL, &out.MetadataURL
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudDevToolPortalSsoParameters.
func (in *SpringCloudDevToolPortalSsoParameters) DeepCopy() *SpringCloudDevToolPortalSsoParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudDevToolPortalSsoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudDevToolPortalStatus) DeepCopyInto(out *SpringCloudDevToolPortalStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudDevToolPortalStatus.
func (in *SpringCloudDevToolPortalStatus) DeepCopy() *SpringCloudDevToolPortalStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudDevToolPortalStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudGateway) DeepCopyInto(out *SpringCloudGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudGateway.
func (in *SpringCloudGateway) DeepCopy() *SpringCloudGateway {
	if in == nil {
		return nil
	}
	out := new(SpringCloudGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudGatewayCustomDomain) DeepCopyInto(out *SpringCloudGatewayCustomDomain) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudGatewayCustomDomain.
func (in *SpringCloudGatewayCustomDomain) DeepCopy() *SpringCloudGatewayCustomDomain {
	if in == nil {
		return nil
	}
	out := new(SpringCloudGatewayCustomDomain)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudGatewayCustomDomain) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudGatewayCustomDomainInitParameters) DeepCopyInto(out *SpringCloudGatewayCustomDomainInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudGatewayCustomDomainInitParameters.
func (in *SpringCloudGatewayCustomDomainInitParameters) DeepCopy() *SpringCloudGatewayCustomDomainInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudGatewayCustomDomainInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudGatewayCustomDomainList) DeepCopyInto(out *SpringCloudGatewayCustomDomainList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudGatewayCustomDomain, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudGatewayCustomDomainList.
func (in *SpringCloudGatewayCustomDomainList) DeepCopy() *SpringCloudGatewayCustomDomainList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudGatewayCustomDomainList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudGatewayCustomDomainList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudGatewayCustomDomainObservation) DeepCopyInto(out *SpringCloudGatewayCustomDomainObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudGatewayID != nil {
		in, out := &in.SpringCloudGatewayID, &out.SpringCloudGatewayID
		*out = new(string)
		**out = **in
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudGatewayCustomDomainObservation.
func (in *SpringCloudGatewayCustomDomainObservation) DeepCopy() *SpringCloudGatewayCustomDomainObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudGatewayCustomDomainObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudGatewayCustomDomainParameters) DeepCopyInto(out *SpringCloudGatewayCustomDomainParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudGatewayID != nil {
		in, out := &in.SpringCloudGatewayID, &out.SpringCloudGatewayID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudGatewayIDRef != nil {
		in, out := &in.SpringCloudGatewayIDRef, &out.SpringCloudGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudGatewayIDSelector != nil {
		in, out := &in.SpringCloudGatewayIDSelector, &out.SpringCloudGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudGatewayCustomDomainParameters.
func (in *SpringCloudGatewayCustomDomainParameters) DeepCopy() *SpringCloudGatewayCustomDomainParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudGatewayCustomDomainParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudGatewayCustomDomainSpec) DeepCopyInto(out *SpringCloudGatewayCustomDomainSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudGatewayCustomDomainSpec.
func (in *SpringCloudGatewayCustomDomainSpec) DeepCopy() *SpringCloudGatewayCustomDomainSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudGatewayCustomDomainSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudGatewayCustomDomainStatus) DeepCopyInto(out *SpringCloudGatewayCustomDomainStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudGatewayCustomDomainStatus.
func (in *SpringCloudGatewayCustomDomainStatus) DeepCopy() *SpringCloudGatewayCustomDomainStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudGatewayCustomDomainStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudGatewayInitParameters) DeepCopyInto(out *SpringCloudGatewayInitParameters) {
	*out = *in
	if in.APIMetadata != nil {
		in, out := &in.APIMetadata, &out.APIMetadata
		*out = make([]APIMetadataInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationPerformanceMonitoringTypes != nil {
		in, out := &in.ApplicationPerformanceMonitoringTypes, &out.ApplicationPerformanceMonitoringTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]CorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Quota != nil {
		in, out := &in.Quota, &out.Quota
		*out = make([]SpringCloudGatewayQuotaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sso != nil {
		in, out := &in.Sso, &out.Sso
		*out = make([]SpringCloudGatewaySsoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudGatewayInitParameters.
func (in *SpringCloudGatewayInitParameters) DeepCopy() *SpringCloudGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudGatewayList) DeepCopyInto(out *SpringCloudGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudGatewayList.
func (in *SpringCloudGatewayList) DeepCopy() *SpringCloudGatewayList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudGatewayObservation) DeepCopyInto(out *SpringCloudGatewayObservation) {
	*out = *in
	if in.APIMetadata != nil {
		in, out := &in.APIMetadata, &out.APIMetadata
		*out = make([]APIMetadataObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationPerformanceMonitoringTypes != nil {
		in, out := &in.ApplicationPerformanceMonitoringTypes, &out.ApplicationPerformanceMonitoringTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]CorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Quota != nil {
		in, out := &in.Quota, &out.Quota
		*out = make([]SpringCloudGatewayQuotaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpringCloudServiceID != nil {
		in, out := &in.SpringCloudServiceID, &out.SpringCloudServiceID
		*out = new(string)
		**out = **in
	}
	if in.Sso != nil {
		in, out := &in.Sso, &out.Sso
		*out = make([]SpringCloudGatewaySsoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudGatewayObservation.
func (in *SpringCloudGatewayObservation) DeepCopy() *SpringCloudGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudGatewayParameters) DeepCopyInto(out *SpringCloudGatewayParameters) {
	*out = *in
	if in.APIMetadata != nil {
		in, out := &in.APIMetadata, &out.APIMetadata
		*out = make([]APIMetadataParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationPerformanceMonitoringTypes != nil {
		in, out := &in.ApplicationPerformanceMonitoringTypes, &out.ApplicationPerformanceMonitoringTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]CorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Quota != nil {
		in, out := &in.Quota, &out.Quota
		*out = make([]SpringCloudGatewayQuotaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SensitiveEnvironmentVariablesSecretRef != nil {
		in, out := &in.SensitiveEnvironmentVariablesSecretRef, &out.SensitiveEnvironmentVariablesSecretRef
		*out = new(v1.SecretReference)
		**out = **in
	}
	if in.SpringCloudServiceID != nil {
		in, out := &in.SpringCloudServiceID, &out.SpringCloudServiceID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudServiceIDRef != nil {
		in, out := &in.SpringCloudServiceIDRef, &out.SpringCloudServiceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudServiceIDSelector != nil {
		in, out := &in.SpringCloudServiceIDSelector, &out.SpringCloudServiceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Sso != nil {
		in, out := &in.Sso, &out.Sso
		*out = make([]SpringCloudGatewaySsoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudGatewayParameters.
func (in *SpringCloudGatewayParameters) DeepCopy() *SpringCloudGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudGatewayQuotaInitParameters) DeepCopyInto(out *SpringCloudGatewayQuotaInitParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudGatewayQuotaInitParameters.
func (in *SpringCloudGatewayQuotaInitParameters) DeepCopy() *SpringCloudGatewayQuotaInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudGatewayQuotaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudGatewayQuotaObservation) DeepCopyInto(out *SpringCloudGatewayQuotaObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudGatewayQuotaObservation.
func (in *SpringCloudGatewayQuotaObservation) DeepCopy() *SpringCloudGatewayQuotaObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudGatewayQuotaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudGatewayQuotaParameters) DeepCopyInto(out *SpringCloudGatewayQuotaParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudGatewayQuotaParameters.
func (in *SpringCloudGatewayQuotaParameters) DeepCopy() *SpringCloudGatewayQuotaParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudGatewayQuotaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudGatewaySpec) DeepCopyInto(out *SpringCloudGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudGatewaySpec.
func (in *SpringCloudGatewaySpec) DeepCopy() *SpringCloudGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudGatewaySsoInitParameters) DeepCopyInto(out *SpringCloudGatewaySsoInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecret != nil {
		in, out := &in.ClientSecret, &out.ClientSecret
		*out = new(string)
		**out = **in
	}
	if in.IssuerURI != nil {
		in, out := &in.IssuerURI, &out.IssuerURI
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudGatewaySsoInitParameters.
func (in *SpringCloudGatewaySsoInitParameters) DeepCopy() *SpringCloudGatewaySsoInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudGatewaySsoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudGatewaySsoObservation) DeepCopyInto(out *SpringCloudGatewaySsoObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecret != nil {
		in, out := &in.ClientSecret, &out.ClientSecret
		*out = new(string)
		**out = **in
	}
	if in.IssuerURI != nil {
		in, out := &in.IssuerURI, &out.IssuerURI
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudGatewaySsoObservation.
func (in *SpringCloudGatewaySsoObservation) DeepCopy() *SpringCloudGatewaySsoObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudGatewaySsoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudGatewaySsoParameters) DeepCopyInto(out *SpringCloudGatewaySsoParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecret != nil {
		in, out := &in.ClientSecret, &out.ClientSecret
		*out = new(string)
		**out = **in
	}
	if in.IssuerURI != nil {
		in, out := &in.IssuerURI, &out.IssuerURI
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudGatewaySsoParameters.
func (in *SpringCloudGatewaySsoParameters) DeepCopy() *SpringCloudGatewaySsoParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudGatewaySsoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudGatewayStatus) DeepCopyInto(out *SpringCloudGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudGatewayStatus.
func (in *SpringCloudGatewayStatus) DeepCopy() *SpringCloudGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudJavaDeployment) DeepCopyInto(out *SpringCloudJavaDeployment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudJavaDeployment.
func (in *SpringCloudJavaDeployment) DeepCopy() *SpringCloudJavaDeployment {
	if in == nil {
		return nil
	}
	out := new(SpringCloudJavaDeployment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudJavaDeployment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudJavaDeploymentInitParameters) DeepCopyInto(out *SpringCloudJavaDeploymentInitParameters) {
	*out = *in
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.JvmOptions != nil {
		in, out := &in.JvmOptions, &out.JvmOptions
		*out = new(string)
		**out = **in
	}
	if in.Quota != nil {
		in, out := &in.Quota, &out.Quota
		*out = make([]SpringCloudJavaDeploymentQuotaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudJavaDeploymentInitParameters.
func (in *SpringCloudJavaDeploymentInitParameters) DeepCopy() *SpringCloudJavaDeploymentInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudJavaDeploymentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudJavaDeploymentList) DeepCopyInto(out *SpringCloudJavaDeploymentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudJavaDeployment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudJavaDeploymentList.
func (in *SpringCloudJavaDeploymentList) DeepCopy() *SpringCloudJavaDeploymentList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudJavaDeploymentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudJavaDeploymentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudJavaDeploymentObservation) DeepCopyInto(out *SpringCloudJavaDeploymentObservation) {
	*out = *in
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.JvmOptions != nil {
		in, out := &in.JvmOptions, &out.JvmOptions
		*out = new(string)
		**out = **in
	}
	if in.Quota != nil {
		in, out := &in.Quota, &out.Quota
		*out = make([]SpringCloudJavaDeploymentQuotaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppID != nil {
		in, out := &in.SpringCloudAppID, &out.SpringCloudAppID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudJavaDeploymentObservation.
func (in *SpringCloudJavaDeploymentObservation) DeepCopy() *SpringCloudJavaDeploymentObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudJavaDeploymentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudJavaDeploymentParameters) DeepCopyInto(out *SpringCloudJavaDeploymentParameters) {
	*out = *in
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.JvmOptions != nil {
		in, out := &in.JvmOptions, &out.JvmOptions
		*out = new(string)
		**out = **in
	}
	if in.Quota != nil {
		in, out := &in.Quota, &out.Quota
		*out = make([]SpringCloudJavaDeploymentQuotaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppID != nil {
		in, out := &in.SpringCloudAppID, &out.SpringCloudAppID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudAppIDRef != nil {
		in, out := &in.SpringCloudAppIDRef, &out.SpringCloudAppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudAppIDSelector != nil {
		in, out := &in.SpringCloudAppIDSelector, &out.SpringCloudAppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudJavaDeploymentParameters.
func (in *SpringCloudJavaDeploymentParameters) DeepCopy() *SpringCloudJavaDeploymentParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudJavaDeploymentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudJavaDeploymentQuotaInitParameters) DeepCopyInto(out *SpringCloudJavaDeploymentQuotaInitParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudJavaDeploymentQuotaInitParameters.
func (in *SpringCloudJavaDeploymentQuotaInitParameters) DeepCopy() *SpringCloudJavaDeploymentQuotaInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudJavaDeploymentQuotaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudJavaDeploymentQuotaObservation) DeepCopyInto(out *SpringCloudJavaDeploymentQuotaObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudJavaDeploymentQuotaObservation.
func (in *SpringCloudJavaDeploymentQuotaObservation) DeepCopy() *SpringCloudJavaDeploymentQuotaObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudJavaDeploymentQuotaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudJavaDeploymentQuotaParameters) DeepCopyInto(out *SpringCloudJavaDeploymentQuotaParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudJavaDeploymentQuotaParameters.
func (in *SpringCloudJavaDeploymentQuotaParameters) DeepCopy() *SpringCloudJavaDeploymentQuotaParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudJavaDeploymentQuotaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudJavaDeploymentSpec) DeepCopyInto(out *SpringCloudJavaDeploymentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudJavaDeploymentSpec.
func (in *SpringCloudJavaDeploymentSpec) DeepCopy() *SpringCloudJavaDeploymentSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudJavaDeploymentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudJavaDeploymentStatus) DeepCopyInto(out *SpringCloudJavaDeploymentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudJavaDeploymentStatus.
func (in *SpringCloudJavaDeploymentStatus) DeepCopy() *SpringCloudJavaDeploymentStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudJavaDeploymentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudService) DeepCopyInto(out *SpringCloudService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudService.
func (in *SpringCloudService) DeepCopy() *SpringCloudService {
	if in == nil {
		return nil
	}
	out := new(SpringCloudService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudServiceInitParameters) DeepCopyInto(out *SpringCloudServiceInitParameters) {
	*out = *in
	if in.BuildAgentPoolSize != nil {
		in, out := &in.BuildAgentPoolSize, &out.BuildAgentPoolSize
		*out = new(string)
		**out = **in
	}
	if in.ConfigServerGitSetting != nil {
		in, out := &in.ConfigServerGitSetting, &out.ConfigServerGitSetting
		*out = make([]ConfigServerGitSettingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.LogStreamPublicEndpointEnabled != nil {
		in, out := &in.LogStreamPublicEndpointEnabled, &out.LogStreamPublicEndpointEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceRegistryEnabled != nil {
		in, out := &in.ServiceRegistryEnabled, &out.ServiceRegistryEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Trace != nil {
		in, out := &in.Trace, &out.Trace
		*out = make([]TraceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudServiceInitParameters.
func (in *SpringCloudServiceInitParameters) DeepCopy() *SpringCloudServiceInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudServiceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudServiceList) DeepCopyInto(out *SpringCloudServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudServiceList.
func (in *SpringCloudServiceList) DeepCopy() *SpringCloudServiceList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudServiceObservation) DeepCopyInto(out *SpringCloudServiceObservation) {
	*out = *in
	if in.BuildAgentPoolSize != nil {
		in, out := &in.BuildAgentPoolSize, &out.BuildAgentPoolSize
		*out = new(string)
		**out = **in
	}
	if in.ConfigServerGitSetting != nil {
		in, out := &in.ConfigServerGitSetting, &out.ConfigServerGitSetting
		*out = make([]ConfigServerGitSettingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.LogStreamPublicEndpointEnabled != nil {
		in, out := &in.LogStreamPublicEndpointEnabled, &out.LogStreamPublicEndpointEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutboundPublicIPAddresses != nil {
		in, out := &in.OutboundPublicIPAddresses, &out.OutboundPublicIPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RequiredNetworkTrafficRules != nil {
		in, out := &in.RequiredNetworkTrafficRules, &out.RequiredNetworkTrafficRules
		*out = make([]RequiredNetworkTrafficRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ServiceRegistryEnabled != nil {
		in, out := &in.ServiceRegistryEnabled, &out.ServiceRegistryEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ServiceRegistryID != nil {
		in, out := &in.ServiceRegistryID, &out.ServiceRegistryID
		*out = new(string)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Trace != nil {
		in, out := &in.Trace, &out.Trace
		*out = make([]TraceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudServiceObservation.
func (in *SpringCloudServiceObservation) DeepCopy() *SpringCloudServiceObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudServiceParameters) DeepCopyInto(out *SpringCloudServiceParameters) {
	*out = *in
	if in.BuildAgentPoolSize != nil {
		in, out := &in.BuildAgentPoolSize, &out.BuildAgentPoolSize
		*out = new(string)
		**out = **in
	}
	if in.ConfigServerGitSetting != nil {
		in, out := &in.ConfigServerGitSetting, &out.ConfigServerGitSetting
		*out = make([]ConfigServerGitSettingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.LogStreamPublicEndpointEnabled != nil {
		in, out := &in.LogStreamPublicEndpointEnabled, &out.LogStreamPublicEndpointEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceRegistryEnabled != nil {
		in, out := &in.ServiceRegistryEnabled, &out.ServiceRegistryEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Trace != nil {
		in, out := &in.Trace, &out.Trace
		*out = make([]TraceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudServiceParameters.
func (in *SpringCloudServiceParameters) DeepCopy() *SpringCloudServiceParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudServiceSpec) DeepCopyInto(out *SpringCloudServiceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudServiceSpec.
func (in *SpringCloudServiceSpec) DeepCopy() *SpringCloudServiceSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudServiceStatus) DeepCopyInto(out *SpringCloudServiceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudServiceStatus.
func (in *SpringCloudServiceStatus) DeepCopy() *SpringCloudServiceStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudStorage) DeepCopyInto(out *SpringCloudStorage) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudStorage.
func (in *SpringCloudStorage) DeepCopy() *SpringCloudStorage {
	if in == nil {
		return nil
	}
	out := new(SpringCloudStorage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudStorage) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudStorageInitParameters) DeepCopyInto(out *SpringCloudStorageInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudStorageInitParameters.
func (in *SpringCloudStorageInitParameters) DeepCopy() *SpringCloudStorageInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudStorageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudStorageList) DeepCopyInto(out *SpringCloudStorageList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpringCloudStorage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudStorageList.
func (in *SpringCloudStorageList) DeepCopy() *SpringCloudStorageList {
	if in == nil {
		return nil
	}
	out := new(SpringCloudStorageList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpringCloudStorageList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudStorageObservation) DeepCopyInto(out *SpringCloudStorageObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudServiceID != nil {
		in, out := &in.SpringCloudServiceID, &out.SpringCloudServiceID
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountKey != nil {
		in, out := &in.StorageAccountKey, &out.StorageAccountKey
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudStorageObservation.
func (in *SpringCloudStorageObservation) DeepCopy() *SpringCloudStorageObservation {
	if in == nil {
		return nil
	}
	out := new(SpringCloudStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudStorageParameters) DeepCopyInto(out *SpringCloudStorageParameters) {
	*out = *in
	if in.SpringCloudServiceID != nil {
		in, out := &in.SpringCloudServiceID, &out.SpringCloudServiceID
		*out = new(string)
		**out = **in
	}
	if in.SpringCloudServiceIDRef != nil {
		in, out := &in.SpringCloudServiceIDRef, &out.SpringCloudServiceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpringCloudServiceIDSelector != nil {
		in, out := &in.SpringCloudServiceIDSelector, &out.SpringCloudServiceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountKey != nil {
		in, out := &in.StorageAccountKey, &out.StorageAccountKey
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountKeyRef != nil {
		in, out := &in.StorageAccountKeyRef, &out.StorageAccountKeyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountKeySelector != nil {
		in, out := &in.StorageAccountKeySelector, &out.StorageAccountKeySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountNameRef != nil {
		in, out := &in.StorageAccountNameRef, &out.StorageAccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountNameSelector != nil {
		in, out := &in.StorageAccountNameSelector, &out.StorageAccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudStorageParameters.
func (in *SpringCloudStorageParameters) DeepCopy() *SpringCloudStorageParameters {
	if in == nil {
		return nil
	}
	out := new(SpringCloudStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudStorageSpec) DeepCopyInto(out *SpringCloudStorageSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	out.InitProvider = in.InitProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudStorageSpec.
func (in *SpringCloudStorageSpec) DeepCopy() *SpringCloudStorageSpec {
	if in == nil {
		return nil
	}
	out := new(SpringCloudStorageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpringCloudStorageStatus) DeepCopyInto(out *SpringCloudStorageStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpringCloudStorageStatus.
func (in *SpringCloudStorageStatus) DeepCopy() *SpringCloudStorageStatus {
	if in == nil {
		return nil
	}
	out := new(SpringCloudStorageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SsoInitParameters) DeepCopyInto(out *SsoInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecret != nil {
		in, out := &in.ClientSecret, &out.ClientSecret
		*out = new(string)
		**out = **in
	}
	if in.IssuerURI != nil {
		in, out := &in.IssuerURI, &out.IssuerURI
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SsoInitParameters.
func (in *SsoInitParameters) DeepCopy() *SsoInitParameters {
	if in == nil {
		return nil
	}
	out := new(SsoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SsoObservation) DeepCopyInto(out *SsoObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecret != nil {
		in, out := &in.ClientSecret, &out.ClientSecret
		*out = new(string)
		**out = **in
	}
	if in.IssuerURI != nil {
		in, out := &in.IssuerURI, &out.IssuerURI
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SsoObservation.
func (in *SsoObservation) DeepCopy() *SsoObservation {
	if in == nil {
		return nil
	}
	out := new(SsoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SsoParameters) DeepCopyInto(out *SsoParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecret != nil {
		in, out := &in.ClientSecret, &out.ClientSecret
		*out = new(string)
		**out = **in
	}
	if in.IssuerURI != nil {
		in, out := &in.IssuerURI, &out.IssuerURI
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SsoParameters.
func (in *SsoParameters) DeepCopy() *SsoParameters {
	if in == nil {
		return nil
	}
	out := new(SsoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackInitParameters) DeepCopyInto(out *StackInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackInitParameters.
func (in *StackInitParameters) DeepCopy() *StackInitParameters {
	if in == nil {
		return nil
	}
	out := new(StackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackObservation) DeepCopyInto(out *StackObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackObservation.
func (in *StackObservation) DeepCopy() *StackObservation {
	if in == nil {
		return nil
	}
	out := new(StackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackParameters) DeepCopyInto(out *StackParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackParameters.
func (in *StackParameters) DeepCopy() *StackParameters {
	if in == nil {
		return nil
	}
	out := new(StackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TraceInitParameters) DeepCopyInto(out *TraceInitParameters) {
	*out = *in
	if in.SampleRate != nil {
		in, out := &in.SampleRate, &out.SampleRate
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TraceInitParameters.
func (in *TraceInitParameters) DeepCopy() *TraceInitParameters {
	if in == nil {
		return nil
	}
	out := new(TraceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TraceObservation) DeepCopyInto(out *TraceObservation) {
	*out = *in
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = new(string)
		**out = **in
	}
	if in.SampleRate != nil {
		in, out := &in.SampleRate, &out.SampleRate
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TraceObservation.
func (in *TraceObservation) DeepCopy() *TraceObservation {
	if in == nil {
		return nil
	}
	out := new(TraceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TraceParameters) DeepCopyInto(out *TraceParameters) {
	*out = *in
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = new(string)
		**out = **in
	}
	if in.ConnectionStringRef != nil {
		in, out := &in.ConnectionStringRef, &out.ConnectionStringRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionStringSelector != nil {
		in, out := &in.ConnectionStringSelector, &out.ConnectionStringSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SampleRate != nil {
		in, out := &in.SampleRate, &out.SampleRate
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TraceParameters.
func (in *TraceParameters) DeepCopy() *TraceParameters {
	if in == nil {
		return nil
	}
	out := new(TraceParameters)
	in.DeepCopyInto(out)
	return out
}
