//go:build (keyvault || all) && !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta2

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyInitParameters) DeepCopyInto(out *AccessPolicyInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyInitParameters.
func (in *AccessPolicyInitParameters) DeepCopy() *AccessPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyObservation) DeepCopyInto(out *AccessPolicyObservation) {
	*out = *in
	if in.ApplicationID != nil {
		in, out := &in.ApplicationID, &out.ApplicationID
		*out = new(string)
		**out = **in
	}
	if in.CertificatePermissions != nil {
		in, out := &in.CertificatePermissions, &out.CertificatePermissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.KeyPermissions != nil {
		in, out := &in.KeyPermissions, &out.KeyPermissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(string)
		**out = **in
	}
	if in.SecretPermissions != nil {
		in, out := &in.SecretPermissions, &out.SecretPermissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StoragePermissions != nil {
		in, out := &in.StoragePermissions, &out.StoragePermissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyObservation.
func (in *AccessPolicyObservation) DeepCopy() *AccessPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyParameters) DeepCopyInto(out *AccessPolicyParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyParameters.
func (in *AccessPolicyParameters) DeepCopy() *AccessPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionInitParameters) DeepCopyInto(out *ActionInitParameters) {
	*out = *in
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionInitParameters.
func (in *ActionInitParameters) DeepCopy() *ActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionObservation) DeepCopyInto(out *ActionObservation) {
	*out = *in
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionObservation.
func (in *ActionObservation) DeepCopy() *ActionObservation {
	if in == nil {
		return nil
	}
	out := new(ActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionParameters) DeepCopyInto(out *ActionParameters) {
	*out = *in
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionParameters.
func (in *ActionParameters) DeepCopy() *ActionParameters {
	if in == nil {
		return nil
	}
	out := new(ActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomaticInitParameters) DeepCopyInto(out *AutomaticInitParameters) {
	*out = *in
	if in.TimeAfterCreation != nil {
		in, out := &in.TimeAfterCreation, &out.TimeAfterCreation
		*out = new(string)
		**out = **in
	}
	if in.TimeBeforeExpiry != nil {
		in, out := &in.TimeBeforeExpiry, &out.TimeBeforeExpiry
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomaticInitParameters.
func (in *AutomaticInitParameters) DeepCopy() *AutomaticInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutomaticInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomaticObservation) DeepCopyInto(out *AutomaticObservation) {
	*out = *in
	if in.TimeAfterCreation != nil {
		in, out := &in.TimeAfterCreation, &out.TimeAfterCreation
		*out = new(string)
		**out = **in
	}
	if in.TimeBeforeExpiry != nil {
		in, out := &in.TimeBeforeExpiry, &out.TimeBeforeExpiry
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomaticObservation.
func (in *AutomaticObservation) DeepCopy() *AutomaticObservation {
	if in == nil {
		return nil
	}
	out := new(AutomaticObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomaticParameters) DeepCopyInto(out *AutomaticParameters) {
	*out = *in
	if in.TimeAfterCreation != nil {
		in, out := &in.TimeAfterCreation, &out.TimeAfterCreation
		*out = new(string)
		**out = **in
	}
	if in.TimeBeforeExpiry != nil {
		in, out := &in.TimeBeforeExpiry, &out.TimeBeforeExpiry
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomaticParameters.
func (in *AutomaticParameters) DeepCopy() *AutomaticParameters {
	if in == nil {
		return nil
	}
	out := new(AutomaticParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Certificate) DeepCopyInto(out *Certificate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Certificate.
func (in *Certificate) DeepCopy() *Certificate {
	if in == nil {
		return nil
	}
	out := new(Certificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Certificate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateAttributeInitParameters) DeepCopyInto(out *CertificateAttributeInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateAttributeInitParameters.
func (in *CertificateAttributeInitParameters) DeepCopy() *CertificateAttributeInitParameters {
	if in == nil {
		return nil
	}
	out := new(CertificateAttributeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateAttributeObservation) DeepCopyInto(out *CertificateAttributeObservation) {
	*out = *in
	if in.Created != nil {
		in, out := &in.Created, &out.Created
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Expires != nil {
		in, out := &in.Expires, &out.Expires
		*out = new(string)
		**out = **in
	}
	if in.NotBefore != nil {
		in, out := &in.NotBefore, &out.NotBefore
		*out = new(string)
		**out = **in
	}
	if in.RecoveryLevel != nil {
		in, out := &in.RecoveryLevel, &out.RecoveryLevel
		*out = new(string)
		**out = **in
	}
	if in.Updated != nil {
		in, out := &in.Updated, &out.Updated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateAttributeObservation.
func (in *CertificateAttributeObservation) DeepCopy() *CertificateAttributeObservation {
	if in == nil {
		return nil
	}
	out := new(CertificateAttributeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateAttributeParameters) DeepCopyInto(out *CertificateAttributeParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateAttributeParameters.
func (in *CertificateAttributeParameters) DeepCopy() *CertificateAttributeParameters {
	if in == nil {
		return nil
	}
	out := new(CertificateAttributeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateCertificateInitParameters) DeepCopyInto(out *CertificateCertificateInitParameters) {
	*out = *in
	out.ContentsSecretRef = in.ContentsSecretRef
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateCertificateInitParameters.
func (in *CertificateCertificateInitParameters) DeepCopy() *CertificateCertificateInitParameters {
	if in == nil {
		return nil
	}
	out := new(CertificateCertificateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateCertificateObservation) DeepCopyInto(out *CertificateCertificateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateCertificateObservation.
func (in *CertificateCertificateObservation) DeepCopy() *CertificateCertificateObservation {
	if in == nil {
		return nil
	}
	out := new(CertificateCertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateCertificateParameters) DeepCopyInto(out *CertificateCertificateParameters) {
	*out = *in
	out.ContentsSecretRef = in.ContentsSecretRef
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateCertificateParameters.
func (in *CertificateCertificateParameters) DeepCopy() *CertificateCertificateParameters {
	if in == nil {
		return nil
	}
	out := new(CertificateCertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateInitParameters) DeepCopyInto(out *CertificateInitParameters) {
	*out = *in
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(CertificateCertificateInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CertificatePolicy != nil {
		in, out := &in.CertificatePolicy, &out.CertificatePolicy
		*out = new(CertificatePolicyInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyVaultID != nil {
		in, out := &in.KeyVaultID, &out.KeyVaultID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultIDRef != nil {
		in, out := &in.KeyVaultIDRef, &out.KeyVaultIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyVaultIDSelector != nil {
		in, out := &in.KeyVaultIDSelector, &out.KeyVaultIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateInitParameters.
func (in *CertificateInitParameters) DeepCopy() *CertificateInitParameters {
	if in == nil {
		return nil
	}
	out := new(CertificateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateList) DeepCopyInto(out *CertificateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Certificate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateList.
func (in *CertificateList) DeepCopy() *CertificateList {
	if in == nil {
		return nil
	}
	out := new(CertificateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CertificateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateObservation) DeepCopyInto(out *CertificateObservation) {
	*out = *in
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(CertificateCertificateParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CertificateAttribute != nil {
		in, out := &in.CertificateAttribute, &out.CertificateAttribute
		*out = make([]CertificateAttributeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CertificateData != nil {
		in, out := &in.CertificateData, &out.CertificateData
		*out = new(string)
		**out = **in
	}
	if in.CertificateDataBase64 != nil {
		in, out := &in.CertificateDataBase64, &out.CertificateDataBase64
		*out = new(string)
		**out = **in
	}
	if in.CertificatePolicy != nil {
		in, out := &in.CertificatePolicy, &out.CertificatePolicy
		*out = new(CertificatePolicyObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultID != nil {
		in, out := &in.KeyVaultID, &out.KeyVaultID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceManagerID != nil {
		in, out := &in.ResourceManagerID, &out.ResourceManagerID
		*out = new(string)
		**out = **in
	}
	if in.ResourceManagerVersionlessID != nil {
		in, out := &in.ResourceManagerVersionlessID, &out.ResourceManagerVersionlessID
		*out = new(string)
		**out = **in
	}
	if in.SecretID != nil {
		in, out := &in.SecretID, &out.SecretID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.VersionlessID != nil {
		in, out := &in.VersionlessID, &out.VersionlessID
		*out = new(string)
		**out = **in
	}
	if in.VersionlessSecretID != nil {
		in, out := &in.VersionlessSecretID, &out.VersionlessSecretID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateObservation.
func (in *CertificateObservation) DeepCopy() *CertificateObservation {
	if in == nil {
		return nil
	}
	out := new(CertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateParameters) DeepCopyInto(out *CertificateParameters) {
	*out = *in
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(CertificateCertificateParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CertificatePolicy != nil {
		in, out := &in.CertificatePolicy, &out.CertificatePolicy
		*out = new(CertificatePolicyParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyVaultID != nil {
		in, out := &in.KeyVaultID, &out.KeyVaultID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultIDRef != nil {
		in, out := &in.KeyVaultIDRef, &out.KeyVaultIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyVaultIDSelector != nil {
		in, out := &in.KeyVaultIDSelector, &out.KeyVaultIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateParameters.
func (in *CertificateParameters) DeepCopy() *CertificateParameters {
	if in == nil {
		return nil
	}
	out := new(CertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificatePolicyInitParameters) DeepCopyInto(out *CertificatePolicyInitParameters) {
	*out = *in
	if in.IssuerParameters != nil {
		in, out := &in.IssuerParameters, &out.IssuerParameters
		*out = new(IssuerParametersInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyProperties != nil {
		in, out := &in.KeyProperties, &out.KeyProperties
		*out = new(KeyPropertiesInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.LifetimeAction != nil {
		in, out := &in.LifetimeAction, &out.LifetimeAction
		*out = make([]LifetimeActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecretProperties != nil {
		in, out := &in.SecretProperties, &out.SecretProperties
		*out = new(SecretPropertiesInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.X509CertificateProperties != nil {
		in, out := &in.X509CertificateProperties, &out.X509CertificateProperties
		*out = new(X509CertificatePropertiesInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificatePolicyInitParameters.
func (in *CertificatePolicyInitParameters) DeepCopy() *CertificatePolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(CertificatePolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificatePolicyObservation) DeepCopyInto(out *CertificatePolicyObservation) {
	*out = *in
	if in.IssuerParameters != nil {
		in, out := &in.IssuerParameters, &out.IssuerParameters
		*out = new(IssuerParametersObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyProperties != nil {
		in, out := &in.KeyProperties, &out.KeyProperties
		*out = new(KeyPropertiesObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.LifetimeAction != nil {
		in, out := &in.LifetimeAction, &out.LifetimeAction
		*out = make([]LifetimeActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecretProperties != nil {
		in, out := &in.SecretProperties, &out.SecretProperties
		*out = new(SecretPropertiesObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.X509CertificateProperties != nil {
		in, out := &in.X509CertificateProperties, &out.X509CertificateProperties
		*out = new(X509CertificatePropertiesObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificatePolicyObservation.
func (in *CertificatePolicyObservation) DeepCopy() *CertificatePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(CertificatePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificatePolicyParameters) DeepCopyInto(out *CertificatePolicyParameters) {
	*out = *in
	if in.IssuerParameters != nil {
		in, out := &in.IssuerParameters, &out.IssuerParameters
		*out = new(IssuerParametersParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyProperties != nil {
		in, out := &in.KeyProperties, &out.KeyProperties
		*out = new(KeyPropertiesParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.LifetimeAction != nil {
		in, out := &in.LifetimeAction, &out.LifetimeAction
		*out = make([]LifetimeActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecretProperties != nil {
		in, out := &in.SecretProperties, &out.SecretProperties
		*out = new(SecretPropertiesParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.X509CertificateProperties != nil {
		in, out := &in.X509CertificateProperties, &out.X509CertificateProperties
		*out = new(X509CertificatePropertiesParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificatePolicyParameters.
func (in *CertificatePolicyParameters) DeepCopy() *CertificatePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(CertificatePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateSpec) DeepCopyInto(out *CertificateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateSpec.
func (in *CertificateSpec) DeepCopy() *CertificateSpec {
	if in == nil {
		return nil
	}
	out := new(CertificateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateStatus) DeepCopyInto(out *CertificateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateStatus.
func (in *CertificateStatus) DeepCopy() *CertificateStatus {
	if in == nil {
		return nil
	}
	out := new(CertificateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContactInitParameters) DeepCopyInto(out *ContactInitParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Phone != nil {
		in, out := &in.Phone, &out.Phone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContactInitParameters.
func (in *ContactInitParameters) DeepCopy() *ContactInitParameters {
	if in == nil {
		return nil
	}
	out := new(ContactInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContactObservation) DeepCopyInto(out *ContactObservation) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Phone != nil {
		in, out := &in.Phone, &out.Phone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContactObservation.
func (in *ContactObservation) DeepCopy() *ContactObservation {
	if in == nil {
		return nil
	}
	out := new(ContactObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContactParameters) DeepCopyInto(out *ContactParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Phone != nil {
		in, out := &in.Phone, &out.Phone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContactParameters.
func (in *ContactParameters) DeepCopy() *ContactParameters {
	if in == nil {
		return nil
	}
	out := new(ContactParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssuerParametersInitParameters) DeepCopyInto(out *IssuerParametersInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssuerParametersInitParameters.
func (in *IssuerParametersInitParameters) DeepCopy() *IssuerParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(IssuerParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssuerParametersObservation) DeepCopyInto(out *IssuerParametersObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssuerParametersObservation.
func (in *IssuerParametersObservation) DeepCopy() *IssuerParametersObservation {
	if in == nil {
		return nil
	}
	out := new(IssuerParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssuerParametersParameters) DeepCopyInto(out *IssuerParametersParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssuerParametersParameters.
func (in *IssuerParametersParameters) DeepCopy() *IssuerParametersParameters {
	if in == nil {
		return nil
	}
	out := new(IssuerParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Key) DeepCopyInto(out *Key) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Key.
func (in *Key) DeepCopy() *Key {
	if in == nil {
		return nil
	}
	out := new(Key)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Key) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyInitParameters) DeepCopyInto(out *KeyInitParameters) {
	*out = *in
	if in.Curve != nil {
		in, out := &in.Curve, &out.Curve
		*out = new(string)
		**out = **in
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.KeyOpts != nil {
		in, out := &in.KeyOpts, &out.KeyOpts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.KeySize != nil {
		in, out := &in.KeySize, &out.KeySize
		*out = new(float64)
		**out = **in
	}
	if in.KeyType != nil {
		in, out := &in.KeyType, &out.KeyType
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultID != nil {
		in, out := &in.KeyVaultID, &out.KeyVaultID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultIDRef != nil {
		in, out := &in.KeyVaultIDRef, &out.KeyVaultIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyVaultIDSelector != nil {
		in, out := &in.KeyVaultIDSelector, &out.KeyVaultIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NotBeforeDate != nil {
		in, out := &in.NotBeforeDate, &out.NotBeforeDate
		*out = new(string)
		**out = **in
	}
	if in.RotationPolicy != nil {
		in, out := &in.RotationPolicy, &out.RotationPolicy
		*out = new(RotationPolicyInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyInitParameters.
func (in *KeyInitParameters) DeepCopy() *KeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(KeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyList) DeepCopyInto(out *KeyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Key, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyList.
func (in *KeyList) DeepCopy() *KeyList {
	if in == nil {
		return nil
	}
	out := new(KeyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KeyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyObservation) DeepCopyInto(out *KeyObservation) {
	*out = *in
	if in.Curve != nil {
		in, out := &in.Curve, &out.Curve
		*out = new(string)
		**out = **in
	}
	if in.E != nil {
		in, out := &in.E, &out.E
		*out = new(string)
		**out = **in
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KeyOpts != nil {
		in, out := &in.KeyOpts, &out.KeyOpts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.KeySize != nil {
		in, out := &in.KeySize, &out.KeySize
		*out = new(float64)
		**out = **in
	}
	if in.KeyType != nil {
		in, out := &in.KeyType, &out.KeyType
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultID != nil {
		in, out := &in.KeyVaultID, &out.KeyVaultID
		*out = new(string)
		**out = **in
	}
	if in.N != nil {
		in, out := &in.N, &out.N
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NotBeforeDate != nil {
		in, out := &in.NotBeforeDate, &out.NotBeforeDate
		*out = new(string)
		**out = **in
	}
	if in.PublicKeyOpenssh != nil {
		in, out := &in.PublicKeyOpenssh, &out.PublicKeyOpenssh
		*out = new(string)
		**out = **in
	}
	if in.PublicKeyPem != nil {
		in, out := &in.PublicKeyPem, &out.PublicKeyPem
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.ResourceVersionlessID != nil {
		in, out := &in.ResourceVersionlessID, &out.ResourceVersionlessID
		*out = new(string)
		**out = **in
	}
	if in.RotationPolicy != nil {
		in, out := &in.RotationPolicy, &out.RotationPolicy
		*out = new(RotationPolicyObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.VersionlessID != nil {
		in, out := &in.VersionlessID, &out.VersionlessID
		*out = new(string)
		**out = **in
	}
	if in.X != nil {
		in, out := &in.X, &out.X
		*out = new(string)
		**out = **in
	}
	if in.Y != nil {
		in, out := &in.Y, &out.Y
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyObservation.
func (in *KeyObservation) DeepCopy() *KeyObservation {
	if in == nil {
		return nil
	}
	out := new(KeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyParameters) DeepCopyInto(out *KeyParameters) {
	*out = *in
	if in.Curve != nil {
		in, out := &in.Curve, &out.Curve
		*out = new(string)
		**out = **in
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.KeyOpts != nil {
		in, out := &in.KeyOpts, &out.KeyOpts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.KeySize != nil {
		in, out := &in.KeySize, &out.KeySize
		*out = new(float64)
		**out = **in
	}
	if in.KeyType != nil {
		in, out := &in.KeyType, &out.KeyType
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultID != nil {
		in, out := &in.KeyVaultID, &out.KeyVaultID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultIDRef != nil {
		in, out := &in.KeyVaultIDRef, &out.KeyVaultIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyVaultIDSelector != nil {
		in, out := &in.KeyVaultIDSelector, &out.KeyVaultIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NotBeforeDate != nil {
		in, out := &in.NotBeforeDate, &out.NotBeforeDate
		*out = new(string)
		**out = **in
	}
	if in.RotationPolicy != nil {
		in, out := &in.RotationPolicy, &out.RotationPolicy
		*out = new(RotationPolicyParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyParameters.
func (in *KeyParameters) DeepCopy() *KeyParameters {
	if in == nil {
		return nil
	}
	out := new(KeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyPropertiesInitParameters) DeepCopyInto(out *KeyPropertiesInitParameters) {
	*out = *in
	if in.Curve != nil {
		in, out := &in.Curve, &out.Curve
		*out = new(string)
		**out = **in
	}
	if in.Exportable != nil {
		in, out := &in.Exportable, &out.Exportable
		*out = new(bool)
		**out = **in
	}
	if in.KeySize != nil {
		in, out := &in.KeySize, &out.KeySize
		*out = new(float64)
		**out = **in
	}
	if in.KeyType != nil {
		in, out := &in.KeyType, &out.KeyType
		*out = new(string)
		**out = **in
	}
	if in.ReuseKey != nil {
		in, out := &in.ReuseKey, &out.ReuseKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyPropertiesInitParameters.
func (in *KeyPropertiesInitParameters) DeepCopy() *KeyPropertiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(KeyPropertiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyPropertiesObservation) DeepCopyInto(out *KeyPropertiesObservation) {
	*out = *in
	if in.Curve != nil {
		in, out := &in.Curve, &out.Curve
		*out = new(string)
		**out = **in
	}
	if in.Exportable != nil {
		in, out := &in.Exportable, &out.Exportable
		*out = new(bool)
		**out = **in
	}
	if in.KeySize != nil {
		in, out := &in.KeySize, &out.KeySize
		*out = new(float64)
		**out = **in
	}
	if in.KeyType != nil {
		in, out := &in.KeyType, &out.KeyType
		*out = new(string)
		**out = **in
	}
	if in.ReuseKey != nil {
		in, out := &in.ReuseKey, &out.ReuseKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyPropertiesObservation.
func (in *KeyPropertiesObservation) DeepCopy() *KeyPropertiesObservation {
	if in == nil {
		return nil
	}
	out := new(KeyPropertiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyPropertiesParameters) DeepCopyInto(out *KeyPropertiesParameters) {
	*out = *in
	if in.Curve != nil {
		in, out := &in.Curve, &out.Curve
		*out = new(string)
		**out = **in
	}
	if in.Exportable != nil {
		in, out := &in.Exportable, &out.Exportable
		*out = new(bool)
		**out = **in
	}
	if in.KeySize != nil {
		in, out := &in.KeySize, &out.KeySize
		*out = new(float64)
		**out = **in
	}
	if in.KeyType != nil {
		in, out := &in.KeyType, &out.KeyType
		*out = new(string)
		**out = **in
	}
	if in.ReuseKey != nil {
		in, out := &in.ReuseKey, &out.ReuseKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyPropertiesParameters.
func (in *KeyPropertiesParameters) DeepCopy() *KeyPropertiesParameters {
	if in == nil {
		return nil
	}
	out := new(KeyPropertiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeySpec) DeepCopyInto(out *KeySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeySpec.
func (in *KeySpec) DeepCopy() *KeySpec {
	if in == nil {
		return nil
	}
	out := new(KeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyStatus) DeepCopyInto(out *KeyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyStatus.
func (in *KeyStatus) DeepCopy() *KeyStatus {
	if in == nil {
		return nil
	}
	out := new(KeyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifetimeActionInitParameters) DeepCopyInto(out *LifetimeActionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(ActionInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = new(TriggerInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifetimeActionInitParameters.
func (in *LifetimeActionInitParameters) DeepCopy() *LifetimeActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(LifetimeActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifetimeActionObservation) DeepCopyInto(out *LifetimeActionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(ActionObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = new(TriggerObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifetimeActionObservation.
func (in *LifetimeActionObservation) DeepCopy() *LifetimeActionObservation {
	if in == nil {
		return nil
	}
	out := new(LifetimeActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifetimeActionParameters) DeepCopyInto(out *LifetimeActionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(ActionParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = new(TriggerParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifetimeActionParameters.
func (in *LifetimeActionParameters) DeepCopy() *LifetimeActionParameters {
	if in == nil {
		return nil
	}
	out := new(LifetimeActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedHardwareSecurityModule) DeepCopyInto(out *ManagedHardwareSecurityModule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedHardwareSecurityModule.
func (in *ManagedHardwareSecurityModule) DeepCopy() *ManagedHardwareSecurityModule {
	if in == nil {
		return nil
	}
	out := new(ManagedHardwareSecurityModule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedHardwareSecurityModule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedHardwareSecurityModuleInitParameters) DeepCopyInto(out *ManagedHardwareSecurityModuleInitParameters) {
	*out = *in
	if in.AdminObjectIds != nil {
		in, out := &in.AdminObjectIds, &out.AdminObjectIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NetworkAcls != nil {
		in, out := &in.NetworkAcls, &out.NetworkAcls
		*out = new(ManagedHardwareSecurityModuleNetworkAclsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PurgeProtectionEnabled != nil {
		in, out := &in.PurgeProtectionEnabled, &out.PurgeProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SecurityDomainKeyVaultCertificateIds != nil {
		in, out := &in.SecurityDomainKeyVaultCertificateIds, &out.SecurityDomainKeyVaultCertificateIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityDomainQuorum != nil {
		in, out := &in.SecurityDomainQuorum, &out.SecurityDomainQuorum
		*out = new(float64)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.SoftDeleteRetentionDays != nil {
		in, out := &in.SoftDeleteRetentionDays, &out.SoftDeleteRetentionDays
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedHardwareSecurityModuleInitParameters.
func (in *ManagedHardwareSecurityModuleInitParameters) DeepCopy() *ManagedHardwareSecurityModuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedHardwareSecurityModuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedHardwareSecurityModuleList) DeepCopyInto(out *ManagedHardwareSecurityModuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagedHardwareSecurityModule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedHardwareSecurityModuleList.
func (in *ManagedHardwareSecurityModuleList) DeepCopy() *ManagedHardwareSecurityModuleList {
	if in == nil {
		return nil
	}
	out := new(ManagedHardwareSecurityModuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedHardwareSecurityModuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedHardwareSecurityModuleNetworkAclsInitParameters) DeepCopyInto(out *ManagedHardwareSecurityModuleNetworkAclsInitParameters) {
	*out = *in
	if in.Bypass != nil {
		in, out := &in.Bypass, &out.Bypass
		*out = new(string)
		**out = **in
	}
	if in.DefaultAction != nil {
		in, out := &in.DefaultAction, &out.DefaultAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedHardwareSecurityModuleNetworkAclsInitParameters.
func (in *ManagedHardwareSecurityModuleNetworkAclsInitParameters) DeepCopy() *ManagedHardwareSecurityModuleNetworkAclsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedHardwareSecurityModuleNetworkAclsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedHardwareSecurityModuleNetworkAclsObservation) DeepCopyInto(out *ManagedHardwareSecurityModuleNetworkAclsObservation) {
	*out = *in
	if in.Bypass != nil {
		in, out := &in.Bypass, &out.Bypass
		*out = new(string)
		**out = **in
	}
	if in.DefaultAction != nil {
		in, out := &in.DefaultAction, &out.DefaultAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedHardwareSecurityModuleNetworkAclsObservation.
func (in *ManagedHardwareSecurityModuleNetworkAclsObservation) DeepCopy() *ManagedHardwareSecurityModuleNetworkAclsObservation {
	if in == nil {
		return nil
	}
	out := new(ManagedHardwareSecurityModuleNetworkAclsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedHardwareSecurityModuleNetworkAclsParameters) DeepCopyInto(out *ManagedHardwareSecurityModuleNetworkAclsParameters) {
	*out = *in
	if in.Bypass != nil {
		in, out := &in.Bypass, &out.Bypass
		*out = new(string)
		**out = **in
	}
	if in.DefaultAction != nil {
		in, out := &in.DefaultAction, &out.DefaultAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedHardwareSecurityModuleNetworkAclsParameters.
func (in *ManagedHardwareSecurityModuleNetworkAclsParameters) DeepCopy() *ManagedHardwareSecurityModuleNetworkAclsParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedHardwareSecurityModuleNetworkAclsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedHardwareSecurityModuleObservation) DeepCopyInto(out *ManagedHardwareSecurityModuleObservation) {
	*out = *in
	if in.AdminObjectIds != nil {
		in, out := &in.AdminObjectIds, &out.AdminObjectIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HSMURI != nil {
		in, out := &in.HSMURI, &out.HSMURI
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NetworkAcls != nil {
		in, out := &in.NetworkAcls, &out.NetworkAcls
		*out = new(ManagedHardwareSecurityModuleNetworkAclsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PurgeProtectionEnabled != nil {
		in, out := &in.PurgeProtectionEnabled, &out.PurgeProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SecurityDomainKeyVaultCertificateIds != nil {
		in, out := &in.SecurityDomainKeyVaultCertificateIds, &out.SecurityDomainKeyVaultCertificateIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityDomainQuorum != nil {
		in, out := &in.SecurityDomainQuorum, &out.SecurityDomainQuorum
		*out = new(float64)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.SoftDeleteRetentionDays != nil {
		in, out := &in.SoftDeleteRetentionDays, &out.SoftDeleteRetentionDays
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedHardwareSecurityModuleObservation.
func (in *ManagedHardwareSecurityModuleObservation) DeepCopy() *ManagedHardwareSecurityModuleObservation {
	if in == nil {
		return nil
	}
	out := new(ManagedHardwareSecurityModuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedHardwareSecurityModuleParameters) DeepCopyInto(out *ManagedHardwareSecurityModuleParameters) {
	*out = *in
	if in.AdminObjectIds != nil {
		in, out := &in.AdminObjectIds, &out.AdminObjectIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NetworkAcls != nil {
		in, out := &in.NetworkAcls, &out.NetworkAcls
		*out = new(ManagedHardwareSecurityModuleNetworkAclsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PurgeProtectionEnabled != nil {
		in, out := &in.PurgeProtectionEnabled, &out.PurgeProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityDomainKeyVaultCertificateIds != nil {
		in, out := &in.SecurityDomainKeyVaultCertificateIds, &out.SecurityDomainKeyVaultCertificateIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityDomainQuorum != nil {
		in, out := &in.SecurityDomainQuorum, &out.SecurityDomainQuorum
		*out = new(float64)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.SoftDeleteRetentionDays != nil {
		in, out := &in.SoftDeleteRetentionDays, &out.SoftDeleteRetentionDays
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedHardwareSecurityModuleParameters.
func (in *ManagedHardwareSecurityModuleParameters) DeepCopy() *ManagedHardwareSecurityModuleParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedHardwareSecurityModuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedHardwareSecurityModuleSpec) DeepCopyInto(out *ManagedHardwareSecurityModuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedHardwareSecurityModuleSpec.
func (in *ManagedHardwareSecurityModuleSpec) DeepCopy() *ManagedHardwareSecurityModuleSpec {
	if in == nil {
		return nil
	}
	out := new(ManagedHardwareSecurityModuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedHardwareSecurityModuleStatus) DeepCopyInto(out *ManagedHardwareSecurityModuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedHardwareSecurityModuleStatus.
func (in *ManagedHardwareSecurityModuleStatus) DeepCopy() *ManagedHardwareSecurityModuleStatus {
	if in == nil {
		return nil
	}
	out := new(ManagedHardwareSecurityModuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkAclsInitParameters) DeepCopyInto(out *NetworkAclsInitParameters) {
	*out = *in
	if in.Bypass != nil {
		in, out := &in.Bypass, &out.Bypass
		*out = new(string)
		**out = **in
	}
	if in.DefaultAction != nil {
		in, out := &in.DefaultAction, &out.DefaultAction
		*out = new(string)
		**out = **in
	}
	if in.IPRules != nil {
		in, out := &in.IPRules, &out.IPRules
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VirtualNetworkSubnetIds != nil {
		in, out := &in.VirtualNetworkSubnetIds, &out.VirtualNetworkSubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkAclsInitParameters.
func (in *NetworkAclsInitParameters) DeepCopy() *NetworkAclsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkAclsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkAclsObservation) DeepCopyInto(out *NetworkAclsObservation) {
	*out = *in
	if in.Bypass != nil {
		in, out := &in.Bypass, &out.Bypass
		*out = new(string)
		**out = **in
	}
	if in.DefaultAction != nil {
		in, out := &in.DefaultAction, &out.DefaultAction
		*out = new(string)
		**out = **in
	}
	if in.IPRules != nil {
		in, out := &in.IPRules, &out.IPRules
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VirtualNetworkSubnetIds != nil {
		in, out := &in.VirtualNetworkSubnetIds, &out.VirtualNetworkSubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkAclsObservation.
func (in *NetworkAclsObservation) DeepCopy() *NetworkAclsObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkAclsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkAclsParameters) DeepCopyInto(out *NetworkAclsParameters) {
	*out = *in
	if in.Bypass != nil {
		in, out := &in.Bypass, &out.Bypass
		*out = new(string)
		**out = **in
	}
	if in.DefaultAction != nil {
		in, out := &in.DefaultAction, &out.DefaultAction
		*out = new(string)
		**out = **in
	}
	if in.IPRules != nil {
		in, out := &in.IPRules, &out.IPRules
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VirtualNetworkSubnetIds != nil {
		in, out := &in.VirtualNetworkSubnetIds, &out.VirtualNetworkSubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkAclsParameters.
func (in *NetworkAclsParameters) DeepCopy() *NetworkAclsParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkAclsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RotationPolicyInitParameters) DeepCopyInto(out *RotationPolicyInitParameters) {
	*out = *in
	if in.Automatic != nil {
		in, out := &in.Automatic, &out.Automatic
		*out = new(AutomaticInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ExpireAfter != nil {
		in, out := &in.ExpireAfter, &out.ExpireAfter
		*out = new(string)
		**out = **in
	}
	if in.NotifyBeforeExpiry != nil {
		in, out := &in.NotifyBeforeExpiry, &out.NotifyBeforeExpiry
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RotationPolicyInitParameters.
func (in *RotationPolicyInitParameters) DeepCopy() *RotationPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RotationPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RotationPolicyObservation) DeepCopyInto(out *RotationPolicyObservation) {
	*out = *in
	if in.Automatic != nil {
		in, out := &in.Automatic, &out.Automatic
		*out = new(AutomaticObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ExpireAfter != nil {
		in, out := &in.ExpireAfter, &out.ExpireAfter
		*out = new(string)
		**out = **in
	}
	if in.NotifyBeforeExpiry != nil {
		in, out := &in.NotifyBeforeExpiry, &out.NotifyBeforeExpiry
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RotationPolicyObservation.
func (in *RotationPolicyObservation) DeepCopy() *RotationPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RotationPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RotationPolicyParameters) DeepCopyInto(out *RotationPolicyParameters) {
	*out = *in
	if in.Automatic != nil {
		in, out := &in.Automatic, &out.Automatic
		*out = new(AutomaticParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ExpireAfter != nil {
		in, out := &in.ExpireAfter, &out.ExpireAfter
		*out = new(string)
		**out = **in
	}
	if in.NotifyBeforeExpiry != nil {
		in, out := &in.NotifyBeforeExpiry, &out.NotifyBeforeExpiry
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RotationPolicyParameters.
func (in *RotationPolicyParameters) DeepCopy() *RotationPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RotationPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretPropertiesInitParameters) DeepCopyInto(out *SecretPropertiesInitParameters) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretPropertiesInitParameters.
func (in *SecretPropertiesInitParameters) DeepCopy() *SecretPropertiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecretPropertiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretPropertiesObservation) DeepCopyInto(out *SecretPropertiesObservation) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretPropertiesObservation.
func (in *SecretPropertiesObservation) DeepCopy() *SecretPropertiesObservation {
	if in == nil {
		return nil
	}
	out := new(SecretPropertiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretPropertiesParameters) DeepCopyInto(out *SecretPropertiesParameters) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretPropertiesParameters.
func (in *SecretPropertiesParameters) DeepCopy() *SecretPropertiesParameters {
	if in == nil {
		return nil
	}
	out := new(SecretPropertiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubjectAlternativeNamesInitParameters) DeepCopyInto(out *SubjectAlternativeNamesInitParameters) {
	*out = *in
	if in.DNSNames != nil {
		in, out := &in.DNSNames, &out.DNSNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Emails != nil {
		in, out := &in.Emails, &out.Emails
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Upns != nil {
		in, out := &in.Upns, &out.Upns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubjectAlternativeNamesInitParameters.
func (in *SubjectAlternativeNamesInitParameters) DeepCopy() *SubjectAlternativeNamesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubjectAlternativeNamesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubjectAlternativeNamesObservation) DeepCopyInto(out *SubjectAlternativeNamesObservation) {
	*out = *in
	if in.DNSNames != nil {
		in, out := &in.DNSNames, &out.DNSNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Emails != nil {
		in, out := &in.Emails, &out.Emails
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Upns != nil {
		in, out := &in.Upns, &out.Upns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubjectAlternativeNamesObservation.
func (in *SubjectAlternativeNamesObservation) DeepCopy() *SubjectAlternativeNamesObservation {
	if in == nil {
		return nil
	}
	out := new(SubjectAlternativeNamesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubjectAlternativeNamesParameters) DeepCopyInto(out *SubjectAlternativeNamesParameters) {
	*out = *in
	if in.DNSNames != nil {
		in, out := &in.DNSNames, &out.DNSNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Emails != nil {
		in, out := &in.Emails, &out.Emails
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Upns != nil {
		in, out := &in.Upns, &out.Upns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubjectAlternativeNamesParameters.
func (in *SubjectAlternativeNamesParameters) DeepCopy() *SubjectAlternativeNamesParameters {
	if in == nil {
		return nil
	}
	out := new(SubjectAlternativeNamesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerInitParameters) DeepCopyInto(out *TriggerInitParameters) {
	*out = *in
	if in.DaysBeforeExpiry != nil {
		in, out := &in.DaysBeforeExpiry, &out.DaysBeforeExpiry
		*out = new(float64)
		**out = **in
	}
	if in.LifetimePercentage != nil {
		in, out := &in.LifetimePercentage, &out.LifetimePercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerInitParameters.
func (in *TriggerInitParameters) DeepCopy() *TriggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerObservation) DeepCopyInto(out *TriggerObservation) {
	*out = *in
	if in.DaysBeforeExpiry != nil {
		in, out := &in.DaysBeforeExpiry, &out.DaysBeforeExpiry
		*out = new(float64)
		**out = **in
	}
	if in.LifetimePercentage != nil {
		in, out := &in.LifetimePercentage, &out.LifetimePercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerObservation.
func (in *TriggerObservation) DeepCopy() *TriggerObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerParameters) DeepCopyInto(out *TriggerParameters) {
	*out = *in
	if in.DaysBeforeExpiry != nil {
		in, out := &in.DaysBeforeExpiry, &out.DaysBeforeExpiry
		*out = new(float64)
		**out = **in
	}
	if in.LifetimePercentage != nil {
		in, out := &in.LifetimePercentage, &out.LifetimePercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerParameters.
func (in *TriggerParameters) DeepCopy() *TriggerParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Vault) DeepCopyInto(out *Vault) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Vault.
func (in *Vault) DeepCopy() *Vault {
	if in == nil {
		return nil
	}
	out := new(Vault)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Vault) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VaultInitParameters) DeepCopyInto(out *VaultInitParameters) {
	*out = *in
	if in.Contact != nil {
		in, out := &in.Contact, &out.Contact
		*out = make([]ContactInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableRbacAuthorization != nil {
		in, out := &in.EnableRbacAuthorization, &out.EnableRbacAuthorization
		*out = new(bool)
		**out = **in
	}
	if in.EnabledForDeployment != nil {
		in, out := &in.EnabledForDeployment, &out.EnabledForDeployment
		*out = new(bool)
		**out = **in
	}
	if in.EnabledForDiskEncryption != nil {
		in, out := &in.EnabledForDiskEncryption, &out.EnabledForDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EnabledForTemplateDeployment != nil {
		in, out := &in.EnabledForTemplateDeployment, &out.EnabledForTemplateDeployment
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NetworkAcls != nil {
		in, out := &in.NetworkAcls, &out.NetworkAcls
		*out = new(NetworkAclsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PurgeProtectionEnabled != nil {
		in, out := &in.PurgeProtectionEnabled, &out.PurgeProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.SoftDeleteRetentionDays != nil {
		in, out := &in.SoftDeleteRetentionDays, &out.SoftDeleteRetentionDays
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VaultInitParameters.
func (in *VaultInitParameters) DeepCopy() *VaultInitParameters {
	if in == nil {
		return nil
	}
	out := new(VaultInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VaultList) DeepCopyInto(out *VaultList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Vault, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VaultList.
func (in *VaultList) DeepCopy() *VaultList {
	if in == nil {
		return nil
	}
	out := new(VaultList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VaultList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VaultObservation) DeepCopyInto(out *VaultObservation) {
	*out = *in
	if in.AccessPolicy != nil {
		in, out := &in.AccessPolicy, &out.AccessPolicy
		*out = make([]AccessPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Contact != nil {
		in, out := &in.Contact, &out.Contact
		*out = make([]ContactObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableRbacAuthorization != nil {
		in, out := &in.EnableRbacAuthorization, &out.EnableRbacAuthorization
		*out = new(bool)
		**out = **in
	}
	if in.EnabledForDeployment != nil {
		in, out := &in.EnabledForDeployment, &out.EnabledForDeployment
		*out = new(bool)
		**out = **in
	}
	if in.EnabledForDiskEncryption != nil {
		in, out := &in.EnabledForDiskEncryption, &out.EnabledForDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EnabledForTemplateDeployment != nil {
		in, out := &in.EnabledForTemplateDeployment, &out.EnabledForTemplateDeployment
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NetworkAcls != nil {
		in, out := &in.NetworkAcls, &out.NetworkAcls
		*out = new(NetworkAclsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PurgeProtectionEnabled != nil {
		in, out := &in.PurgeProtectionEnabled, &out.PurgeProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.SoftDeleteRetentionDays != nil {
		in, out := &in.SoftDeleteRetentionDays, &out.SoftDeleteRetentionDays
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.VaultURI != nil {
		in, out := &in.VaultURI, &out.VaultURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VaultObservation.
func (in *VaultObservation) DeepCopy() *VaultObservation {
	if in == nil {
		return nil
	}
	out := new(VaultObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VaultParameters) DeepCopyInto(out *VaultParameters) {
	*out = *in
	if in.Contact != nil {
		in, out := &in.Contact, &out.Contact
		*out = make([]ContactParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableRbacAuthorization != nil {
		in, out := &in.EnableRbacAuthorization, &out.EnableRbacAuthorization
		*out = new(bool)
		**out = **in
	}
	if in.EnabledForDeployment != nil {
		in, out := &in.EnabledForDeployment, &out.EnabledForDeployment
		*out = new(bool)
		**out = **in
	}
	if in.EnabledForDiskEncryption != nil {
		in, out := &in.EnabledForDiskEncryption, &out.EnabledForDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EnabledForTemplateDeployment != nil {
		in, out := &in.EnabledForTemplateDeployment, &out.EnabledForTemplateDeployment
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NetworkAcls != nil {
		in, out := &in.NetworkAcls, &out.NetworkAcls
		*out = new(NetworkAclsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PurgeProtectionEnabled != nil {
		in, out := &in.PurgeProtectionEnabled, &out.PurgeProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.SoftDeleteRetentionDays != nil {
		in, out := &in.SoftDeleteRetentionDays, &out.SoftDeleteRetentionDays
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VaultParameters.
func (in *VaultParameters) DeepCopy() *VaultParameters {
	if in == nil {
		return nil
	}
	out := new(VaultParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VaultSpec) DeepCopyInto(out *VaultSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VaultSpec.
func (in *VaultSpec) DeepCopy() *VaultSpec {
	if in == nil {
		return nil
	}
	out := new(VaultSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VaultStatus) DeepCopyInto(out *VaultStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VaultStatus.
func (in *VaultStatus) DeepCopy() *VaultStatus {
	if in == nil {
		return nil
	}
	out := new(VaultStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *X509CertificatePropertiesInitParameters) DeepCopyInto(out *X509CertificatePropertiesInitParameters) {
	*out = *in
	if in.ExtendedKeyUsage != nil {
		in, out := &in.ExtendedKeyUsage, &out.ExtendedKeyUsage
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.KeyUsage != nil {
		in, out := &in.KeyUsage, &out.KeyUsage
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(string)
		**out = **in
	}
	if in.SubjectAlternativeNames != nil {
		in, out := &in.SubjectAlternativeNames, &out.SubjectAlternativeNames
		*out = new(SubjectAlternativeNamesInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ValidityInMonths != nil {
		in, out := &in.ValidityInMonths, &out.ValidityInMonths
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new X509CertificatePropertiesInitParameters.
func (in *X509CertificatePropertiesInitParameters) DeepCopy() *X509CertificatePropertiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(X509CertificatePropertiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *X509CertificatePropertiesObservation) DeepCopyInto(out *X509CertificatePropertiesObservation) {
	*out = *in
	if in.ExtendedKeyUsage != nil {
		in, out := &in.ExtendedKeyUsage, &out.ExtendedKeyUsage
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.KeyUsage != nil {
		in, out := &in.KeyUsage, &out.KeyUsage
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(string)
		**out = **in
	}
	if in.SubjectAlternativeNames != nil {
		in, out := &in.SubjectAlternativeNames, &out.SubjectAlternativeNames
		*out = new(SubjectAlternativeNamesObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ValidityInMonths != nil {
		in, out := &in.ValidityInMonths, &out.ValidityInMonths
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new X509CertificatePropertiesObservation.
func (in *X509CertificatePropertiesObservation) DeepCopy() *X509CertificatePropertiesObservation {
	if in == nil {
		return nil
	}
	out := new(X509CertificatePropertiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *X509CertificatePropertiesParameters) DeepCopyInto(out *X509CertificatePropertiesParameters) {
	*out = *in
	if in.ExtendedKeyUsage != nil {
		in, out := &in.ExtendedKeyUsage, &out.ExtendedKeyUsage
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.KeyUsage != nil {
		in, out := &in.KeyUsage, &out.KeyUsage
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(string)
		**out = **in
	}
	if in.SubjectAlternativeNames != nil {
		in, out := &in.SubjectAlternativeNames, &out.SubjectAlternativeNames
		*out = new(SubjectAlternativeNamesParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ValidityInMonths != nil {
		in, out := &in.ValidityInMonths, &out.ValidityInMonths
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new X509CertificatePropertiesParameters.
func (in *X509CertificatePropertiesParameters) DeepCopy() *X509CertificatePropertiesParameters {
	if in == nil {
		return nil
	}
	out := new(X509CertificatePropertiesParameters)
	in.DeepCopyInto(out)
	return out
}
