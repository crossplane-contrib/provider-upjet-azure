// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ActionGroupInitParameters struct {

	// Specifies a custom email subject if Email Receiver is specified in Monitor Action Group resource.
	EmailSubject *string `json:"emailSubject,omitempty" tf:"email_subject,omitempty"`

	// A JSON String which Specifies the custom webhook payload if Webhook Receiver is specified in Monitor Action Group resource.
	WebhookPayload *string `json:"webhookPayload,omitempty" tf:"webhook_payload,omitempty"`
}

type ActionGroupObservation struct {

	// Specifies a custom email subject if Email Receiver is specified in Monitor Action Group resource.
	EmailSubject *string `json:"emailSubject,omitempty" tf:"email_subject,omitempty"`

	// Specifies the action group ids.
	Ids []*string `json:"ids,omitempty" tf:"ids,omitempty"`

	// A JSON String which Specifies the custom webhook payload if Webhook Receiver is specified in Monitor Action Group resource.
	WebhookPayload *string `json:"webhookPayload,omitempty" tf:"webhook_payload,omitempty"`
}

type ActionGroupParameters struct {

	// Specifies a custom email subject if Email Receiver is specified in Monitor Action Group resource.
	// +kubebuilder:validation:Optional
	EmailSubject *string `json:"emailSubject,omitempty" tf:"email_subject,omitempty"`

	// Specifies the action group ids.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/insights/v1beta1.MonitorActionGroup
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	Ids []*string `json:"ids,omitempty" tf:"ids,omitempty"`

	// References to MonitorActionGroup in insights to populate ids.
	// +kubebuilder:validation:Optional
	IdsRefs []v1.Reference `json:"idsRefs,omitempty" tf:"-"`

	// Selector for a list of MonitorActionGroup in insights to populate ids.
	// +kubebuilder:validation:Optional
	IdsSelector *v1.Selector `json:"idsSelector,omitempty" tf:"-"`

	// A JSON String which Specifies the custom webhook payload if Webhook Receiver is specified in Monitor Action Group resource.
	// +kubebuilder:validation:Optional
	WebhookPayload *string `json:"webhookPayload,omitempty" tf:"webhook_payload,omitempty"`
}

type MonitorSmartDetectorAlertRuleInitParameters struct {

	// An action_group block as defined below.
	ActionGroup []ActionGroupInitParameters `json:"actionGroup,omitempty" tf:"action_group,omitempty"`

	// Specifies a description for the Smart Detector Alert Rule.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the Built-In Smart Detector type that this alert rule will use. Currently the only possible values are FailureAnomaliesDetector, RequestPerformanceDegradationDetector, DependencyPerformanceDegradationDetector, ExceptionVolumeChangedDetector, TraceSeverityDetector, MemoryLeakDetector.
	DetectorType *string `json:"detectorType,omitempty" tf:"detector_type,omitempty"`

	// Is the Smart Detector Alert Rule enabled? Defaults to true.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Specifies the frequency of this Smart Detector Alert Rule in ISO8601 format.
	Frequency *string `json:"frequency,omitempty" tf:"frequency,omitempty"`

	// Specifies the name of the Monitor Smart Detector Alert Rule. Changing this forces a new resource to be created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the severity of this Smart Detector Alert Rule. Possible values are Sev0, Sev1, Sev2, Sev3 or Sev4.
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`

	// A mapping of tags to assign to the resource.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the duration (in ISO8601 format) to wait before notifying on the alert rule again.
	ThrottlingDuration *string `json:"throttlingDuration,omitempty" tf:"throttling_duration,omitempty"`
}

type MonitorSmartDetectorAlertRuleObservation struct {

	// An action_group block as defined below.
	ActionGroup []ActionGroupObservation `json:"actionGroup,omitempty" tf:"action_group,omitempty"`

	// Specifies a description for the Smart Detector Alert Rule.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the Built-In Smart Detector type that this alert rule will use. Currently the only possible values are FailureAnomaliesDetector, RequestPerformanceDegradationDetector, DependencyPerformanceDegradationDetector, ExceptionVolumeChangedDetector, TraceSeverityDetector, MemoryLeakDetector.
	DetectorType *string `json:"detectorType,omitempty" tf:"detector_type,omitempty"`

	// Is the Smart Detector Alert Rule enabled? Defaults to true.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Specifies the frequency of this Smart Detector Alert Rule in ISO8601 format.
	Frequency *string `json:"frequency,omitempty" tf:"frequency,omitempty"`

	// The ID of the Monitor Smart Detector Alert Rule.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the name of the Monitor Smart Detector Alert Rule. Changing this forces a new resource to be created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the name of the resource group in which the Monitor Smart Detector Alert Rule should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Specifies the scopes of this Smart Detector Alert Rule.
	ScopeResourceIds []*string `json:"scopeResourceIds,omitempty" tf:"scope_resource_ids,omitempty"`

	// Specifies the severity of this Smart Detector Alert Rule. Possible values are Sev0, Sev1, Sev2, Sev3 or Sev4.
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`

	// A mapping of tags to assign to the resource.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the duration (in ISO8601 format) to wait before notifying on the alert rule again.
	ThrottlingDuration *string `json:"throttlingDuration,omitempty" tf:"throttling_duration,omitempty"`
}

type MonitorSmartDetectorAlertRuleParameters struct {

	// An action_group block as defined below.
	// +kubebuilder:validation:Optional
	ActionGroup []ActionGroupParameters `json:"actionGroup,omitempty" tf:"action_group,omitempty"`

	// Specifies a description for the Smart Detector Alert Rule.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the Built-In Smart Detector type that this alert rule will use. Currently the only possible values are FailureAnomaliesDetector, RequestPerformanceDegradationDetector, DependencyPerformanceDegradationDetector, ExceptionVolumeChangedDetector, TraceSeverityDetector, MemoryLeakDetector.
	// +kubebuilder:validation:Optional
	DetectorType *string `json:"detectorType,omitempty" tf:"detector_type,omitempty"`

	// Is the Smart Detector Alert Rule enabled? Defaults to true.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Specifies the frequency of this Smart Detector Alert Rule in ISO8601 format.
	// +kubebuilder:validation:Optional
	Frequency *string `json:"frequency,omitempty" tf:"frequency,omitempty"`

	// Specifies the name of the Monitor Smart Detector Alert Rule. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the name of the resource group in which the Monitor Smart Detector Alert Rule should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// Specifies the scopes of this Smart Detector Alert Rule.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/insights/v1beta1.ApplicationInsights
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ScopeResourceIds []*string `json:"scopeResourceIds,omitempty" tf:"scope_resource_ids,omitempty"`

	// References to ApplicationInsights in insights to populate scopeResourceIds.
	// +kubebuilder:validation:Optional
	ScopeResourceIdsRefs []v1.Reference `json:"scopeResourceIdsRefs,omitempty" tf:"-"`

	// Selector for a list of ApplicationInsights in insights to populate scopeResourceIds.
	// +kubebuilder:validation:Optional
	ScopeResourceIdsSelector *v1.Selector `json:"scopeResourceIdsSelector,omitempty" tf:"-"`

	// Specifies the severity of this Smart Detector Alert Rule. Possible values are Sev0, Sev1, Sev2, Sev3 or Sev4.
	// +kubebuilder:validation:Optional
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the duration (in ISO8601 format) to wait before notifying on the alert rule again.
	// +kubebuilder:validation:Optional
	ThrottlingDuration *string `json:"throttlingDuration,omitempty" tf:"throttling_duration,omitempty"`
}

// MonitorSmartDetectorAlertRuleSpec defines the desired state of MonitorSmartDetectorAlertRule
type MonitorSmartDetectorAlertRuleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MonitorSmartDetectorAlertRuleParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider MonitorSmartDetectorAlertRuleInitParameters `json:"initProvider,omitempty"`
}

// MonitorSmartDetectorAlertRuleStatus defines the observed state of MonitorSmartDetectorAlertRule.
type MonitorSmartDetectorAlertRuleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MonitorSmartDetectorAlertRuleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// MonitorSmartDetectorAlertRule is the Schema for the MonitorSmartDetectorAlertRules API. Manages an Monitor Smart Detector Alert Rule.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type MonitorSmartDetectorAlertRule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.actionGroup) || (has(self.initProvider) && has(self.initProvider.actionGroup))",message="spec.forProvider.actionGroup is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.detectorType) || (has(self.initProvider) && has(self.initProvider.detectorType))",message="spec.forProvider.detectorType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.frequency) || (has(self.initProvider) && has(self.initProvider.frequency))",message="spec.forProvider.frequency is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.severity) || (has(self.initProvider) && has(self.initProvider.severity))",message="spec.forProvider.severity is a required parameter"
	Spec   MonitorSmartDetectorAlertRuleSpec   `json:"spec"`
	Status MonitorSmartDetectorAlertRuleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MonitorSmartDetectorAlertRuleList contains a list of MonitorSmartDetectorAlertRules
type MonitorSmartDetectorAlertRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MonitorSmartDetectorAlertRule `json:"items"`
}

// Repository type metadata.
var (
	MonitorSmartDetectorAlertRule_Kind             = "MonitorSmartDetectorAlertRule"
	MonitorSmartDetectorAlertRule_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MonitorSmartDetectorAlertRule_Kind}.String()
	MonitorSmartDetectorAlertRule_KindAPIVersion   = MonitorSmartDetectorAlertRule_Kind + "." + CRDGroupVersion.String()
	MonitorSmartDetectorAlertRule_GroupVersionKind = CRDGroupVersion.WithKind(MonitorSmartDetectorAlertRule_Kind)
)

func init() {
	SchemeBuilder.Register(&MonitorSmartDetectorAlertRule{}, &MonitorSmartDetectorAlertRuleList{})
}
