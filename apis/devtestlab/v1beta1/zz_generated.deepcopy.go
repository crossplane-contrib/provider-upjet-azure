//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DailyRecurrenceObservation) DeepCopyInto(out *DailyRecurrenceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DailyRecurrenceObservation.
func (in *DailyRecurrenceObservation) DeepCopy() *DailyRecurrenceObservation {
	if in == nil {
		return nil
	}
	out := new(DailyRecurrenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DailyRecurrenceParameters) DeepCopyInto(out *DailyRecurrenceParameters) {
	*out = *in
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DailyRecurrenceParameters.
func (in *DailyRecurrenceParameters) DeepCopy() *DailyRecurrenceParameters {
	if in == nil {
		return nil
	}
	out := new(DailyRecurrenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GalleryImageReferenceObservation) DeepCopyInto(out *GalleryImageReferenceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GalleryImageReferenceObservation.
func (in *GalleryImageReferenceObservation) DeepCopy() *GalleryImageReferenceObservation {
	if in == nil {
		return nil
	}
	out := new(GalleryImageReferenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GalleryImageReferenceParameters) DeepCopyInto(out *GalleryImageReferenceParameters) {
	*out = *in
	if in.Offer != nil {
		in, out := &in.Offer, &out.Offer
		*out = new(string)
		**out = **in
	}
	if in.Publisher != nil {
		in, out := &in.Publisher, &out.Publisher
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GalleryImageReferenceParameters.
func (in *GalleryImageReferenceParameters) DeepCopy() *GalleryImageReferenceParameters {
	if in == nil {
		return nil
	}
	out := new(GalleryImageReferenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalVMShutdownSchedule) DeepCopyInto(out *GlobalVMShutdownSchedule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalVMShutdownSchedule.
func (in *GlobalVMShutdownSchedule) DeepCopy() *GlobalVMShutdownSchedule {
	if in == nil {
		return nil
	}
	out := new(GlobalVMShutdownSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalVMShutdownSchedule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalVMShutdownScheduleList) DeepCopyInto(out *GlobalVMShutdownScheduleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GlobalVMShutdownSchedule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalVMShutdownScheduleList.
func (in *GlobalVMShutdownScheduleList) DeepCopy() *GlobalVMShutdownScheduleList {
	if in == nil {
		return nil
	}
	out := new(GlobalVMShutdownScheduleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalVMShutdownScheduleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalVMShutdownScheduleObservation) DeepCopyInto(out *GlobalVMShutdownScheduleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalVMShutdownScheduleObservation.
func (in *GlobalVMShutdownScheduleObservation) DeepCopy() *GlobalVMShutdownScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalVMShutdownScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalVMShutdownScheduleParameters) DeepCopyInto(out *GlobalVMShutdownScheduleParameters) {
	*out = *in
	if in.DailyRecurrenceTime != nil {
		in, out := &in.DailyRecurrenceTime, &out.DailyRecurrenceTime
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]NotificationSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.VirtualMachineID != nil {
		in, out := &in.VirtualMachineID, &out.VirtualMachineID
		*out = new(string)
		**out = **in
	}
	if in.VirtualMachineIDRef != nil {
		in, out := &in.VirtualMachineIDRef, &out.VirtualMachineIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualMachineIDSelector != nil {
		in, out := &in.VirtualMachineIDSelector, &out.VirtualMachineIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalVMShutdownScheduleParameters.
func (in *GlobalVMShutdownScheduleParameters) DeepCopy() *GlobalVMShutdownScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalVMShutdownScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalVMShutdownScheduleSpec) DeepCopyInto(out *GlobalVMShutdownScheduleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalVMShutdownScheduleSpec.
func (in *GlobalVMShutdownScheduleSpec) DeepCopy() *GlobalVMShutdownScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(GlobalVMShutdownScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalVMShutdownScheduleStatus) DeepCopyInto(out *GlobalVMShutdownScheduleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalVMShutdownScheduleStatus.
func (in *GlobalVMShutdownScheduleStatus) DeepCopy() *GlobalVMShutdownScheduleStatus {
	if in == nil {
		return nil
	}
	out := new(GlobalVMShutdownScheduleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HourlyRecurrenceObservation) DeepCopyInto(out *HourlyRecurrenceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HourlyRecurrenceObservation.
func (in *HourlyRecurrenceObservation) DeepCopy() *HourlyRecurrenceObservation {
	if in == nil {
		return nil
	}
	out := new(HourlyRecurrenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HourlyRecurrenceParameters) DeepCopyInto(out *HourlyRecurrenceParameters) {
	*out = *in
	if in.Minute != nil {
		in, out := &in.Minute, &out.Minute
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HourlyRecurrenceParameters.
func (in *HourlyRecurrenceParameters) DeepCopy() *HourlyRecurrenceParameters {
	if in == nil {
		return nil
	}
	out := new(HourlyRecurrenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InboundNATRuleObservation) DeepCopyInto(out *InboundNATRuleObservation) {
	*out = *in
	if in.FrontendPort != nil {
		in, out := &in.FrontendPort, &out.FrontendPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InboundNATRuleObservation.
func (in *InboundNATRuleObservation) DeepCopy() *InboundNATRuleObservation {
	if in == nil {
		return nil
	}
	out := new(InboundNATRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InboundNATRuleParameters) DeepCopyInto(out *InboundNATRuleParameters) {
	*out = *in
	if in.BackendPort != nil {
		in, out := &in.BackendPort, &out.BackendPort
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InboundNATRuleParameters.
func (in *InboundNATRuleParameters) DeepCopy() *InboundNATRuleParameters {
	if in == nil {
		return nil
	}
	out := new(InboundNATRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Lab) DeepCopyInto(out *Lab) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Lab.
func (in *Lab) DeepCopy() *Lab {
	if in == nil {
		return nil
	}
	out := new(Lab)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Lab) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabList) DeepCopyInto(out *LabList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Lab, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabList.
func (in *LabList) DeepCopy() *LabList {
	if in == nil {
		return nil
	}
	out := new(LabList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LabList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabObservation) DeepCopyInto(out *LabObservation) {
	*out = *in
	if in.ArtifactsStorageAccountID != nil {
		in, out := &in.ArtifactsStorageAccountID, &out.ArtifactsStorageAccountID
		*out = new(string)
		**out = **in
	}
	if in.DefaultPremiumStorageAccountID != nil {
		in, out := &in.DefaultPremiumStorageAccountID, &out.DefaultPremiumStorageAccountID
		*out = new(string)
		**out = **in
	}
	if in.DefaultStorageAccountID != nil {
		in, out := &in.DefaultStorageAccountID, &out.DefaultStorageAccountID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultID != nil {
		in, out := &in.KeyVaultID, &out.KeyVaultID
		*out = new(string)
		**out = **in
	}
	if in.PremiumDataDiskStorageAccountID != nil {
		in, out := &in.PremiumDataDiskStorageAccountID, &out.PremiumDataDiskStorageAccountID
		*out = new(string)
		**out = **in
	}
	if in.UniqueIdentifier != nil {
		in, out := &in.UniqueIdentifier, &out.UniqueIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabObservation.
func (in *LabObservation) DeepCopy() *LabObservation {
	if in == nil {
		return nil
	}
	out := new(LabObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabParameters) DeepCopyInto(out *LabParameters) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabParameters.
func (in *LabParameters) DeepCopy() *LabParameters {
	if in == nil {
		return nil
	}
	out := new(LabParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabSpec) DeepCopyInto(out *LabSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabSpec.
func (in *LabSpec) DeepCopy() *LabSpec {
	if in == nil {
		return nil
	}
	out := new(LabSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabStatus) DeepCopyInto(out *LabStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabStatus.
func (in *LabStatus) DeepCopy() *LabStatus {
	if in == nil {
		return nil
	}
	out := new(LabStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxVirtualMachine) DeepCopyInto(out *LinuxVirtualMachine) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxVirtualMachine.
func (in *LinuxVirtualMachine) DeepCopy() *LinuxVirtualMachine {
	if in == nil {
		return nil
	}
	out := new(LinuxVirtualMachine)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinuxVirtualMachine) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxVirtualMachineList) DeepCopyInto(out *LinuxVirtualMachineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LinuxVirtualMachine, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxVirtualMachineList.
func (in *LinuxVirtualMachineList) DeepCopy() *LinuxVirtualMachineList {
	if in == nil {
		return nil
	}
	out := new(LinuxVirtualMachineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinuxVirtualMachineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxVirtualMachineObservation) DeepCopyInto(out *LinuxVirtualMachineObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InboundNATRule != nil {
		in, out := &in.InboundNATRule, &out.InboundNATRule
		*out = make([]InboundNATRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UniqueIdentifier != nil {
		in, out := &in.UniqueIdentifier, &out.UniqueIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxVirtualMachineObservation.
func (in *LinuxVirtualMachineObservation) DeepCopy() *LinuxVirtualMachineObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxVirtualMachineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxVirtualMachineParameters) DeepCopyInto(out *LinuxVirtualMachineParameters) {
	*out = *in
	if in.AllowClaim != nil {
		in, out := &in.AllowClaim, &out.AllowClaim
		*out = new(bool)
		**out = **in
	}
	if in.DisallowPublicIPAddress != nil {
		in, out := &in.DisallowPublicIPAddress, &out.DisallowPublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.GalleryImageReference != nil {
		in, out := &in.GalleryImageReference, &out.GalleryImageReference
		*out = make([]GalleryImageReferenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InboundNATRule != nil {
		in, out := &in.InboundNATRule, &out.InboundNATRule
		*out = make([]InboundNATRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LabName != nil {
		in, out := &in.LabName, &out.LabName
		*out = new(string)
		**out = **in
	}
	if in.LabNameRef != nil {
		in, out := &in.LabNameRef, &out.LabNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LabNameSelector != nil {
		in, out := &in.LabNameSelector, &out.LabNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LabSubnetName != nil {
		in, out := &in.LabSubnetName, &out.LabSubnetName
		*out = new(string)
		**out = **in
	}
	if in.LabSubnetNameRef != nil {
		in, out := &in.LabSubnetNameRef, &out.LabSubnetNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LabSubnetNameSelector != nil {
		in, out := &in.LabSubnetNameSelector, &out.LabSubnetNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LabVirtualNetworkID != nil {
		in, out := &in.LabVirtualNetworkID, &out.LabVirtualNetworkID
		*out = new(string)
		**out = **in
	}
	if in.LabVirtualNetworkIDRef != nil {
		in, out := &in.LabVirtualNetworkIDRef, &out.LabVirtualNetworkIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LabVirtualNetworkIDSelector != nil {
		in, out := &in.LabVirtualNetworkIDSelector, &out.LabVirtualNetworkIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Notes != nil {
		in, out := &in.Notes, &out.Notes
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxVirtualMachineParameters.
func (in *LinuxVirtualMachineParameters) DeepCopy() *LinuxVirtualMachineParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxVirtualMachineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxVirtualMachineSpec) DeepCopyInto(out *LinuxVirtualMachineSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxVirtualMachineSpec.
func (in *LinuxVirtualMachineSpec) DeepCopy() *LinuxVirtualMachineSpec {
	if in == nil {
		return nil
	}
	out := new(LinuxVirtualMachineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxVirtualMachineStatus) DeepCopyInto(out *LinuxVirtualMachineStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxVirtualMachineStatus.
func (in *LinuxVirtualMachineStatus) DeepCopy() *LinuxVirtualMachineStatus {
	if in == nil {
		return nil
	}
	out := new(LinuxVirtualMachineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationSettingsObservation) DeepCopyInto(out *NotificationSettingsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationSettingsObservation.
func (in *NotificationSettingsObservation) DeepCopy() *NotificationSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationSettingsParameters) DeepCopyInto(out *NotificationSettingsParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.TimeInMinutes != nil {
		in, out := &in.TimeInMinutes, &out.TimeInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.WebhookURL != nil {
		in, out := &in.WebhookURL, &out.WebhookURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationSettingsParameters.
func (in *NotificationSettingsParameters) DeepCopy() *NotificationSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Policy) DeepCopyInto(out *Policy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Policy.
func (in *Policy) DeepCopy() *Policy {
	if in == nil {
		return nil
	}
	out := new(Policy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Policy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyList) DeepCopyInto(out *PolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Policy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyList.
func (in *PolicyList) DeepCopy() *PolicyList {
	if in == nil {
		return nil
	}
	out := new(PolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyObservation) DeepCopyInto(out *PolicyObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyObservation.
func (in *PolicyObservation) DeepCopy() *PolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyParameters) DeepCopyInto(out *PolicyParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EvaluatorType != nil {
		in, out := &in.EvaluatorType, &out.EvaluatorType
		*out = new(string)
		**out = **in
	}
	if in.FactData != nil {
		in, out := &in.FactData, &out.FactData
		*out = new(string)
		**out = **in
	}
	if in.LabName != nil {
		in, out := &in.LabName, &out.LabName
		*out = new(string)
		**out = **in
	}
	if in.LabNameRef != nil {
		in, out := &in.LabNameRef, &out.LabNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LabNameSelector != nil {
		in, out := &in.LabNameSelector, &out.LabNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PolicySetName != nil {
		in, out := &in.PolicySetName, &out.PolicySetName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyParameters.
func (in *PolicyParameters) DeepCopy() *PolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicySpec) DeepCopyInto(out *PolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicySpec.
func (in *PolicySpec) DeepCopy() *PolicySpec {
	if in == nil {
		return nil
	}
	out := new(PolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyStatus) DeepCopyInto(out *PolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyStatus.
func (in *PolicyStatus) DeepCopy() *PolicyStatus {
	if in == nil {
		return nil
	}
	out := new(PolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Schedule) DeepCopyInto(out *Schedule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Schedule.
func (in *Schedule) DeepCopy() *Schedule {
	if in == nil {
		return nil
	}
	out := new(Schedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Schedule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleList) DeepCopyInto(out *ScheduleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Schedule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleList.
func (in *ScheduleList) DeepCopy() *ScheduleList {
	if in == nil {
		return nil
	}
	out := new(ScheduleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScheduleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleNotificationSettingsObservation) DeepCopyInto(out *ScheduleNotificationSettingsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleNotificationSettingsObservation.
func (in *ScheduleNotificationSettingsObservation) DeepCopy() *ScheduleNotificationSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleNotificationSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleNotificationSettingsParameters) DeepCopyInto(out *ScheduleNotificationSettingsParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TimeInMinutes != nil {
		in, out := &in.TimeInMinutes, &out.TimeInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.WebhookURL != nil {
		in, out := &in.WebhookURL, &out.WebhookURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleNotificationSettingsParameters.
func (in *ScheduleNotificationSettingsParameters) DeepCopy() *ScheduleNotificationSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleNotificationSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleObservation) DeepCopyInto(out *ScheduleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleObservation.
func (in *ScheduleObservation) DeepCopy() *ScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleParameters) DeepCopyInto(out *ScheduleParameters) {
	*out = *in
	if in.DailyRecurrence != nil {
		in, out := &in.DailyRecurrence, &out.DailyRecurrence
		*out = make([]DailyRecurrenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HourlyRecurrence != nil {
		in, out := &in.HourlyRecurrence, &out.HourlyRecurrence
		*out = make([]HourlyRecurrenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LabName != nil {
		in, out := &in.LabName, &out.LabName
		*out = new(string)
		**out = **in
	}
	if in.LabNameRef != nil {
		in, out := &in.LabNameRef, &out.LabNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LabNameSelector != nil {
		in, out := &in.LabNameSelector, &out.LabNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NotificationSettings != nil {
		in, out := &in.NotificationSettings, &out.NotificationSettings
		*out = make([]ScheduleNotificationSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TaskType != nil {
		in, out := &in.TaskType, &out.TaskType
		*out = new(string)
		**out = **in
	}
	if in.TimeZoneID != nil {
		in, out := &in.TimeZoneID, &out.TimeZoneID
		*out = new(string)
		**out = **in
	}
	if in.WeeklyRecurrence != nil {
		in, out := &in.WeeklyRecurrence, &out.WeeklyRecurrence
		*out = make([]WeeklyRecurrenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleParameters.
func (in *ScheduleParameters) DeepCopy() *ScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleSpec) DeepCopyInto(out *ScheduleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleSpec.
func (in *ScheduleSpec) DeepCopy() *ScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(ScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleStatus) DeepCopyInto(out *ScheduleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleStatus.
func (in *ScheduleStatus) DeepCopy() *ScheduleStatus {
	if in == nil {
		return nil
	}
	out := new(ScheduleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetObservation) DeepCopyInto(out *SubnetObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetObservation.
func (in *SubnetObservation) DeepCopy() *SubnetObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetParameters) DeepCopyInto(out *SubnetParameters) {
	*out = *in
	if in.UseInVirtualMachineCreation != nil {
		in, out := &in.UseInVirtualMachineCreation, &out.UseInVirtualMachineCreation
		*out = new(string)
		**out = **in
	}
	if in.UsePublicIPAddress != nil {
		in, out := &in.UsePublicIPAddress, &out.UsePublicIPAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetParameters.
func (in *SubnetParameters) DeepCopy() *SubnetParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetwork) DeepCopyInto(out *VirtualNetwork) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetwork.
func (in *VirtualNetwork) DeepCopy() *VirtualNetwork {
	if in == nil {
		return nil
	}
	out := new(VirtualNetwork)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualNetwork) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkList) DeepCopyInto(out *VirtualNetworkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualNetwork, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkList.
func (in *VirtualNetworkList) DeepCopy() *VirtualNetworkList {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualNetworkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkObservation) DeepCopyInto(out *VirtualNetworkObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]SubnetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UniqueIdentifier != nil {
		in, out := &in.UniqueIdentifier, &out.UniqueIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkObservation.
func (in *VirtualNetworkObservation) DeepCopy() *VirtualNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkParameters) DeepCopyInto(out *VirtualNetworkParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.LabName != nil {
		in, out := &in.LabName, &out.LabName
		*out = new(string)
		**out = **in
	}
	if in.LabNameRef != nil {
		in, out := &in.LabNameRef, &out.LabNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LabNameSelector != nil {
		in, out := &in.LabNameSelector, &out.LabNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]SubnetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkParameters.
func (in *VirtualNetworkParameters) DeepCopy() *VirtualNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkSpec) DeepCopyInto(out *VirtualNetworkSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkSpec.
func (in *VirtualNetworkSpec) DeepCopy() *VirtualNetworkSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkStatus) DeepCopyInto(out *VirtualNetworkStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkStatus.
func (in *VirtualNetworkStatus) DeepCopy() *VirtualNetworkStatus {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyRecurrenceObservation) DeepCopyInto(out *WeeklyRecurrenceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyRecurrenceObservation.
func (in *WeeklyRecurrenceObservation) DeepCopy() *WeeklyRecurrenceObservation {
	if in == nil {
		return nil
	}
	out := new(WeeklyRecurrenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyRecurrenceParameters) DeepCopyInto(out *WeeklyRecurrenceParameters) {
	*out = *in
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
	if in.WeekDays != nil {
		in, out := &in.WeekDays, &out.WeekDays
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyRecurrenceParameters.
func (in *WeeklyRecurrenceParameters) DeepCopy() *WeeklyRecurrenceParameters {
	if in == nil {
		return nil
	}
	out := new(WeeklyRecurrenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsVirtualMachine) DeepCopyInto(out *WindowsVirtualMachine) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsVirtualMachine.
func (in *WindowsVirtualMachine) DeepCopy() *WindowsVirtualMachine {
	if in == nil {
		return nil
	}
	out := new(WindowsVirtualMachine)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WindowsVirtualMachine) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsVirtualMachineGalleryImageReferenceObservation) DeepCopyInto(out *WindowsVirtualMachineGalleryImageReferenceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsVirtualMachineGalleryImageReferenceObservation.
func (in *WindowsVirtualMachineGalleryImageReferenceObservation) DeepCopy() *WindowsVirtualMachineGalleryImageReferenceObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsVirtualMachineGalleryImageReferenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsVirtualMachineGalleryImageReferenceParameters) DeepCopyInto(out *WindowsVirtualMachineGalleryImageReferenceParameters) {
	*out = *in
	if in.Offer != nil {
		in, out := &in.Offer, &out.Offer
		*out = new(string)
		**out = **in
	}
	if in.Publisher != nil {
		in, out := &in.Publisher, &out.Publisher
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsVirtualMachineGalleryImageReferenceParameters.
func (in *WindowsVirtualMachineGalleryImageReferenceParameters) DeepCopy() *WindowsVirtualMachineGalleryImageReferenceParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsVirtualMachineGalleryImageReferenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsVirtualMachineInboundNATRuleObservation) DeepCopyInto(out *WindowsVirtualMachineInboundNATRuleObservation) {
	*out = *in
	if in.FrontendPort != nil {
		in, out := &in.FrontendPort, &out.FrontendPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsVirtualMachineInboundNATRuleObservation.
func (in *WindowsVirtualMachineInboundNATRuleObservation) DeepCopy() *WindowsVirtualMachineInboundNATRuleObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsVirtualMachineInboundNATRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsVirtualMachineInboundNATRuleParameters) DeepCopyInto(out *WindowsVirtualMachineInboundNATRuleParameters) {
	*out = *in
	if in.BackendPort != nil {
		in, out := &in.BackendPort, &out.BackendPort
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsVirtualMachineInboundNATRuleParameters.
func (in *WindowsVirtualMachineInboundNATRuleParameters) DeepCopy() *WindowsVirtualMachineInboundNATRuleParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsVirtualMachineInboundNATRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsVirtualMachineList) DeepCopyInto(out *WindowsVirtualMachineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WindowsVirtualMachine, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsVirtualMachineList.
func (in *WindowsVirtualMachineList) DeepCopy() *WindowsVirtualMachineList {
	if in == nil {
		return nil
	}
	out := new(WindowsVirtualMachineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WindowsVirtualMachineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsVirtualMachineObservation) DeepCopyInto(out *WindowsVirtualMachineObservation) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InboundNATRule != nil {
		in, out := &in.InboundNATRule, &out.InboundNATRule
		*out = make([]WindowsVirtualMachineInboundNATRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UniqueIdentifier != nil {
		in, out := &in.UniqueIdentifier, &out.UniqueIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsVirtualMachineObservation.
func (in *WindowsVirtualMachineObservation) DeepCopy() *WindowsVirtualMachineObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsVirtualMachineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsVirtualMachineParameters) DeepCopyInto(out *WindowsVirtualMachineParameters) {
	*out = *in
	if in.AllowClaim != nil {
		in, out := &in.AllowClaim, &out.AllowClaim
		*out = new(bool)
		**out = **in
	}
	if in.DisallowPublicIPAddress != nil {
		in, out := &in.DisallowPublicIPAddress, &out.DisallowPublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.GalleryImageReference != nil {
		in, out := &in.GalleryImageReference, &out.GalleryImageReference
		*out = make([]WindowsVirtualMachineGalleryImageReferenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InboundNATRule != nil {
		in, out := &in.InboundNATRule, &out.InboundNATRule
		*out = make([]WindowsVirtualMachineInboundNATRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LabName != nil {
		in, out := &in.LabName, &out.LabName
		*out = new(string)
		**out = **in
	}
	if in.LabNameRef != nil {
		in, out := &in.LabNameRef, &out.LabNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LabNameSelector != nil {
		in, out := &in.LabNameSelector, &out.LabNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LabSubnetName != nil {
		in, out := &in.LabSubnetName, &out.LabSubnetName
		*out = new(string)
		**out = **in
	}
	if in.LabSubnetNameRef != nil {
		in, out := &in.LabSubnetNameRef, &out.LabSubnetNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LabSubnetNameSelector != nil {
		in, out := &in.LabSubnetNameSelector, &out.LabSubnetNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LabVirtualNetworkID != nil {
		in, out := &in.LabVirtualNetworkID, &out.LabVirtualNetworkID
		*out = new(string)
		**out = **in
	}
	if in.LabVirtualNetworkIDRef != nil {
		in, out := &in.LabVirtualNetworkIDRef, &out.LabVirtualNetworkIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LabVirtualNetworkIDSelector != nil {
		in, out := &in.LabVirtualNetworkIDSelector, &out.LabVirtualNetworkIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Notes != nil {
		in, out := &in.Notes, &out.Notes
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsVirtualMachineParameters.
func (in *WindowsVirtualMachineParameters) DeepCopy() *WindowsVirtualMachineParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsVirtualMachineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsVirtualMachineSpec) DeepCopyInto(out *WindowsVirtualMachineSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsVirtualMachineSpec.
func (in *WindowsVirtualMachineSpec) DeepCopy() *WindowsVirtualMachineSpec {
	if in == nil {
		return nil
	}
	out := new(WindowsVirtualMachineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsVirtualMachineStatus) DeepCopyInto(out *WindowsVirtualMachineStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsVirtualMachineStatus.
func (in *WindowsVirtualMachineStatus) DeepCopy() *WindowsVirtualMachineStatus {
	if in == nil {
		return nil
	}
	out := new(WindowsVirtualMachineStatus)
	in.DeepCopyInto(out)
	return out
}
