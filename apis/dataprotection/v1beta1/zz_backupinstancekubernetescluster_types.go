//go:build (dataprotection || all) && !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BackupDataSourceParametersInitParameters struct {

	// Whether to include cluster scope resources during backup. Default to false. Changing this forces a new resource to be created.
	ClusterScopedResourcesEnabled *bool `json:"clusterScopedResourcesEnabled,omitempty" tf:"cluster_scoped_resources_enabled,omitempty"`

	// Specifies the namespaces to be excluded during backup. Changing this forces a new resource to be created.
	ExcludedNamespaces []*string `json:"excludedNamespaces,omitempty" tf:"excluded_namespaces,omitempty"`

	// Specifies the resource types to be excluded during backup. Changing this forces a new resource to be created.
	ExcludedResourceTypes []*string `json:"excludedResourceTypes,omitempty" tf:"excluded_resource_types,omitempty"`

	// Specifies the namespaces to be included during backup. Changing this forces a new resource to be created.
	IncludedNamespaces []*string `json:"includedNamespaces,omitempty" tf:"included_namespaces,omitempty"`

	// Specifies the resource types to be included during backup. Changing this forces a new resource to be created.
	IncludedResourceTypes []*string `json:"includedResourceTypes,omitempty" tf:"included_resource_types,omitempty"`

	// Specifies the resources with such label selectors to be included during backup. Changing this forces a new resource to be created.
	LabelSelectors []*string `json:"labelSelectors,omitempty" tf:"label_selectors,omitempty"`

	// Whether to take volume snapshots during backup. Default to false. Changing this forces a new resource to be created.
	VolumeSnapshotEnabled *bool `json:"volumeSnapshotEnabled,omitempty" tf:"volume_snapshot_enabled,omitempty"`
}

type BackupDataSourceParametersObservation struct {

	// Whether to include cluster scope resources during backup. Default to false. Changing this forces a new resource to be created.
	ClusterScopedResourcesEnabled *bool `json:"clusterScopedResourcesEnabled,omitempty" tf:"cluster_scoped_resources_enabled,omitempty"`

	// Specifies the namespaces to be excluded during backup. Changing this forces a new resource to be created.
	ExcludedNamespaces []*string `json:"excludedNamespaces,omitempty" tf:"excluded_namespaces,omitempty"`

	// Specifies the resource types to be excluded during backup. Changing this forces a new resource to be created.
	ExcludedResourceTypes []*string `json:"excludedResourceTypes,omitempty" tf:"excluded_resource_types,omitempty"`

	// Specifies the namespaces to be included during backup. Changing this forces a new resource to be created.
	IncludedNamespaces []*string `json:"includedNamespaces,omitempty" tf:"included_namespaces,omitempty"`

	// Specifies the resource types to be included during backup. Changing this forces a new resource to be created.
	IncludedResourceTypes []*string `json:"includedResourceTypes,omitempty" tf:"included_resource_types,omitempty"`

	// Specifies the resources with such label selectors to be included during backup. Changing this forces a new resource to be created.
	LabelSelectors []*string `json:"labelSelectors,omitempty" tf:"label_selectors,omitempty"`

	// Whether to take volume snapshots during backup. Default to false. Changing this forces a new resource to be created.
	VolumeSnapshotEnabled *bool `json:"volumeSnapshotEnabled,omitempty" tf:"volume_snapshot_enabled,omitempty"`
}

type BackupDataSourceParametersParameters struct {

	// Whether to include cluster scope resources during backup. Default to false. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	ClusterScopedResourcesEnabled *bool `json:"clusterScopedResourcesEnabled,omitempty" tf:"cluster_scoped_resources_enabled,omitempty"`

	// Specifies the namespaces to be excluded during backup. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	ExcludedNamespaces []*string `json:"excludedNamespaces,omitempty" tf:"excluded_namespaces,omitempty"`

	// Specifies the resource types to be excluded during backup. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	ExcludedResourceTypes []*string `json:"excludedResourceTypes,omitempty" tf:"excluded_resource_types,omitempty"`

	// Specifies the namespaces to be included during backup. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	IncludedNamespaces []*string `json:"includedNamespaces,omitempty" tf:"included_namespaces,omitempty"`

	// Specifies the resource types to be included during backup. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	IncludedResourceTypes []*string `json:"includedResourceTypes,omitempty" tf:"included_resource_types,omitempty"`

	// Specifies the resources with such label selectors to be included during backup. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	LabelSelectors []*string `json:"labelSelectors,omitempty" tf:"label_selectors,omitempty"`

	// Whether to take volume snapshots during backup. Default to false. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	VolumeSnapshotEnabled *bool `json:"volumeSnapshotEnabled,omitempty" tf:"volume_snapshot_enabled,omitempty"`
}

type BackupInstanceKubernetesClusterInitParameters struct {

	// A backup_datasource_parameters block as defined below.
	BackupDataSourceParameters *BackupDataSourceParametersInitParameters `json:"backupDatasourceParameters,omitempty" tf:"backup_datasource_parameters,omitempty"`

	// The ID of the Backup Policy. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/dataprotection/v1beta1.BackupPolicyKubernetesCluster
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	BackupPolicyID *string `json:"backupPolicyId,omitempty" tf:"backup_policy_id,omitempty"`

	// Reference to a BackupPolicyKubernetesCluster in dataprotection to populate backupPolicyId.
	// +kubebuilder:validation:Optional
	BackupPolicyIDRef *v1.Reference `json:"backupPolicyIdRef,omitempty" tf:"-"`

	// Selector for a BackupPolicyKubernetesCluster in dataprotection to populate backupPolicyId.
	// +kubebuilder:validation:Optional
	BackupPolicyIDSelector *v1.Selector `json:"backupPolicyIdSelector,omitempty" tf:"-"`

	// The ID of the Kubernetes Cluster. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/containerservice/v1beta2.KubernetesCluster
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	KubernetesClusterID *string `json:"kubernetesClusterId,omitempty" tf:"kubernetes_cluster_id,omitempty"`

	// Reference to a KubernetesCluster in containerservice to populate kubernetesClusterId.
	// +kubebuilder:validation:Optional
	KubernetesClusterIDRef *v1.Reference `json:"kubernetesClusterIdRef,omitempty" tf:"-"`

	// Selector for a KubernetesCluster in containerservice to populate kubernetesClusterId.
	// +kubebuilder:validation:Optional
	KubernetesClusterIDSelector *v1.Selector `json:"kubernetesClusterIdSelector,omitempty" tf:"-"`

	// The location of the Backup Instance Kubernetes Cluster. Changing this forces a new resource to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The name of the Resource Group where snapshots are stored. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	SnapshotResourceGroupName *string `json:"snapshotResourceGroupName,omitempty" tf:"snapshot_resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate snapshotResourceGroupName.
	// +kubebuilder:validation:Optional
	SnapshotResourceGroupNameRef *v1.Reference `json:"snapshotResourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate snapshotResourceGroupName.
	// +kubebuilder:validation:Optional
	SnapshotResourceGroupNameSelector *v1.Selector `json:"snapshotResourceGroupNameSelector,omitempty" tf:"-"`
}

type BackupInstanceKubernetesClusterObservation struct {

	// A backup_datasource_parameters block as defined below.
	BackupDataSourceParameters *BackupDataSourceParametersObservation `json:"backupDatasourceParameters,omitempty" tf:"backup_datasource_parameters,omitempty"`

	// The ID of the Backup Policy. Changing this forces a new resource to be created.
	BackupPolicyID *string `json:"backupPolicyId,omitempty" tf:"backup_policy_id,omitempty"`

	// The ID of the Backup Instance Kubernetes Cluster.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID of the Kubernetes Cluster. Changing this forces a new resource to be created.
	KubernetesClusterID *string `json:"kubernetesClusterId,omitempty" tf:"kubernetes_cluster_id,omitempty"`

	// The location of the Backup Instance Kubernetes Cluster. Changing this forces a new resource to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The name of the Resource Group where snapshots are stored. Changing this forces a new resource to be created.
	SnapshotResourceGroupName *string `json:"snapshotResourceGroupName,omitempty" tf:"snapshot_resource_group_name,omitempty"`

	// The ID of the Backup Vault within which the Backup Instance Kubernetes Cluster should exist. Changing this forces a new resource to be created.
	VaultID *string `json:"vaultId,omitempty" tf:"vault_id,omitempty"`
}

type BackupInstanceKubernetesClusterParameters struct {

	// A backup_datasource_parameters block as defined below.
	// +kubebuilder:validation:Optional
	BackupDataSourceParameters *BackupDataSourceParametersParameters `json:"backupDatasourceParameters,omitempty" tf:"backup_datasource_parameters,omitempty"`

	// The ID of the Backup Policy. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/dataprotection/v1beta1.BackupPolicyKubernetesCluster
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	BackupPolicyID *string `json:"backupPolicyId,omitempty" tf:"backup_policy_id,omitempty"`

	// Reference to a BackupPolicyKubernetesCluster in dataprotection to populate backupPolicyId.
	// +kubebuilder:validation:Optional
	BackupPolicyIDRef *v1.Reference `json:"backupPolicyIdRef,omitempty" tf:"-"`

	// Selector for a BackupPolicyKubernetesCluster in dataprotection to populate backupPolicyId.
	// +kubebuilder:validation:Optional
	BackupPolicyIDSelector *v1.Selector `json:"backupPolicyIdSelector,omitempty" tf:"-"`

	// The ID of the Kubernetes Cluster. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/containerservice/v1beta2.KubernetesCluster
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	KubernetesClusterID *string `json:"kubernetesClusterId,omitempty" tf:"kubernetes_cluster_id,omitempty"`

	// Reference to a KubernetesCluster in containerservice to populate kubernetesClusterId.
	// +kubebuilder:validation:Optional
	KubernetesClusterIDRef *v1.Reference `json:"kubernetesClusterIdRef,omitempty" tf:"-"`

	// Selector for a KubernetesCluster in containerservice to populate kubernetesClusterId.
	// +kubebuilder:validation:Optional
	KubernetesClusterIDSelector *v1.Selector `json:"kubernetesClusterIdSelector,omitempty" tf:"-"`

	// The location of the Backup Instance Kubernetes Cluster. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The name of the Resource Group where snapshots are stored. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	SnapshotResourceGroupName *string `json:"snapshotResourceGroupName,omitempty" tf:"snapshot_resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate snapshotResourceGroupName.
	// +kubebuilder:validation:Optional
	SnapshotResourceGroupNameRef *v1.Reference `json:"snapshotResourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate snapshotResourceGroupName.
	// +kubebuilder:validation:Optional
	SnapshotResourceGroupNameSelector *v1.Selector `json:"snapshotResourceGroupNameSelector,omitempty" tf:"-"`

	// The ID of the Backup Vault within which the Backup Instance Kubernetes Cluster should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/dataprotection/v1beta2.BackupVault
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	VaultID *string `json:"vaultId,omitempty" tf:"vault_id,omitempty"`

	// Reference to a BackupVault in dataprotection to populate vaultId.
	// +kubebuilder:validation:Optional
	VaultIDRef *v1.Reference `json:"vaultIdRef,omitempty" tf:"-"`

	// Selector for a BackupVault in dataprotection to populate vaultId.
	// +kubebuilder:validation:Optional
	VaultIDSelector *v1.Selector `json:"vaultIdSelector,omitempty" tf:"-"`
}

// BackupInstanceKubernetesClusterSpec defines the desired state of BackupInstanceKubernetesCluster
type BackupInstanceKubernetesClusterSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BackupInstanceKubernetesClusterParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BackupInstanceKubernetesClusterInitParameters `json:"initProvider,omitempty"`
}

// BackupInstanceKubernetesClusterStatus defines the observed state of BackupInstanceKubernetesCluster.
type BackupInstanceKubernetesClusterStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BackupInstanceKubernetesClusterObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// BackupInstanceKubernetesCluster is the Schema for the BackupInstanceKubernetesClusters API. Manages a Backup Instance to back up a Kubernetes Cluster.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type BackupInstanceKubernetesCluster struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	Spec   BackupInstanceKubernetesClusterSpec   `json:"spec"`
	Status BackupInstanceKubernetesClusterStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BackupInstanceKubernetesClusterList contains a list of BackupInstanceKubernetesClusters
type BackupInstanceKubernetesClusterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BackupInstanceKubernetesCluster `json:"items"`
}

// Repository type metadata.
var (
	BackupInstanceKubernetesCluster_Kind             = "BackupInstanceKubernetesCluster"
	BackupInstanceKubernetesCluster_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BackupInstanceKubernetesCluster_Kind}.String()
	BackupInstanceKubernetesCluster_KindAPIVersion   = BackupInstanceKubernetesCluster_Kind + "." + CRDGroupVersion.String()
	BackupInstanceKubernetesCluster_GroupVersionKind = CRDGroupVersion.WithKind(BackupInstanceKubernetesCluster_Kind)
)

func init() {
	SchemeBuilder.Register(&BackupInstanceKubernetesCluster{}, &BackupInstanceKubernetesClusterList{})
}
