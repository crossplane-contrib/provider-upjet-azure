// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SecurityCenterServerVulnerabilityAssessmentInitParameters struct {

	// The ID of the Azure ARC server to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
	HybridMachineID *string `json:"hybridMachineId,omitempty" tf:"hybrid_machine_id,omitempty"`
}

type SecurityCenterServerVulnerabilityAssessmentObservation struct {

	// The ID of the Azure ARC server to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
	HybridMachineID *string `json:"hybridMachineId,omitempty" tf:"hybrid_machine_id,omitempty"`

	// The ID of the Vulnerability Assessment resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
	VirtualMachineID *string `json:"virtualMachineId,omitempty" tf:"virtual_machine_id,omitempty"`
}

type SecurityCenterServerVulnerabilityAssessmentParameters struct {

	// The ID of the Azure ARC server to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	HybridMachineID *string `json:"hybridMachineId,omitempty" tf:"hybrid_machine_id,omitempty"`

	// The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/compute/v1beta1.LinuxVirtualMachine
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	VirtualMachineID *string `json:"virtualMachineId,omitempty" tf:"virtual_machine_id,omitempty"`

	// Reference to a LinuxVirtualMachine in compute to populate virtualMachineId.
	// +kubebuilder:validation:Optional
	VirtualMachineIDRef *v1.Reference `json:"virtualMachineIdRef,omitempty" tf:"-"`

	// Selector for a LinuxVirtualMachine in compute to populate virtualMachineId.
	// +kubebuilder:validation:Optional
	VirtualMachineIDSelector *v1.Selector `json:"virtualMachineIdSelector,omitempty" tf:"-"`
}

// SecurityCenterServerVulnerabilityAssessmentSpec defines the desired state of SecurityCenterServerVulnerabilityAssessment
type SecurityCenterServerVulnerabilityAssessmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SecurityCenterServerVulnerabilityAssessmentParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SecurityCenterServerVulnerabilityAssessmentInitParameters `json:"initProvider,omitempty"`
}

// SecurityCenterServerVulnerabilityAssessmentStatus defines the observed state of SecurityCenterServerVulnerabilityAssessment.
type SecurityCenterServerVulnerabilityAssessmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SecurityCenterServerVulnerabilityAssessmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SecurityCenterServerVulnerabilityAssessment is the Schema for the SecurityCenterServerVulnerabilityAssessments API. Manages an Azure Vulnerability Assessment (Qualys) to a VM or Azure ARC server.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type SecurityCenterServerVulnerabilityAssessment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SecurityCenterServerVulnerabilityAssessmentSpec   `json:"spec"`
	Status            SecurityCenterServerVulnerabilityAssessmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SecurityCenterServerVulnerabilityAssessmentList contains a list of SecurityCenterServerVulnerabilityAssessments
type SecurityCenterServerVulnerabilityAssessmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SecurityCenterServerVulnerabilityAssessment `json:"items"`
}

// Repository type metadata.
var (
	SecurityCenterServerVulnerabilityAssessment_Kind             = "SecurityCenterServerVulnerabilityAssessment"
	SecurityCenterServerVulnerabilityAssessment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SecurityCenterServerVulnerabilityAssessment_Kind}.String()
	SecurityCenterServerVulnerabilityAssessment_KindAPIVersion   = SecurityCenterServerVulnerabilityAssessment_Kind + "." + CRDGroupVersion.String()
	SecurityCenterServerVulnerabilityAssessment_GroupVersionKind = CRDGroupVersion.WithKind(SecurityCenterServerVulnerabilityAssessment_Kind)
)

func init() {
	SchemeBuilder.Register(&SecurityCenterServerVulnerabilityAssessment{}, &SecurityCenterServerVulnerabilityAssessmentList{})
}
