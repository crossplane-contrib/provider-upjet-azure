//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Account) DeepCopyInto(out *Account) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Account.
func (in *Account) DeepCopy() *Account {
	if in == nil {
		return nil
	}
	out := new(Account)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Account) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountInitParameters) DeepCopyInto(out *AccountInitParameters) {
	*out = *in
	if in.AccessKeyMetadataWritesEnabled != nil {
		in, out := &in.AccessKeyMetadataWritesEnabled, &out.AccessKeyMetadataWritesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AnalyticalStorage != nil {
		in, out := &in.AnalyticalStorage, &out.AnalyticalStorage
		*out = make([]AnalyticalStorageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnalyticalStorageEnabled != nil {
		in, out := &in.AnalyticalStorageEnabled, &out.AnalyticalStorageEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]BackupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Capabilities != nil {
		in, out := &in.Capabilities, &out.Capabilities
		*out = make([]CapabilitiesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = make([]CapacityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsistencyPolicy != nil {
		in, out := &in.ConsistencyPolicy, &out.ConsistencyPolicy
		*out = make([]ConsistencyPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CorsRule != nil {
		in, out := &in.CorsRule, &out.CorsRule
		*out = make([]CorsRuleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateMode != nil {
		in, out := &in.CreateMode, &out.CreateMode
		*out = new(string)
		**out = **in
	}
	if in.DefaultIdentityType != nil {
		in, out := &in.DefaultIdentityType, &out.DefaultIdentityType
		*out = new(string)
		**out = **in
	}
	if in.EnableAutomaticFailover != nil {
		in, out := &in.EnableAutomaticFailover, &out.EnableAutomaticFailover
		*out = new(bool)
		**out = **in
	}
	if in.EnableFreeTier != nil {
		in, out := &in.EnableFreeTier, &out.EnableFreeTier
		*out = new(bool)
		**out = **in
	}
	if in.EnableMultipleWriteLocations != nil {
		in, out := &in.EnableMultipleWriteLocations, &out.EnableMultipleWriteLocations
		*out = new(bool)
		**out = **in
	}
	if in.GeoLocation != nil {
		in, out := &in.GeoLocation, &out.GeoLocation
		*out = make([]GeoLocationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPRangeFilter != nil {
		in, out := &in.IPRangeFilter, &out.IPRangeFilter
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsVirtualNetworkFilterEnabled != nil {
		in, out := &in.IsVirtualNetworkFilterEnabled, &out.IsVirtualNetworkFilterEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.LocalAuthenticationDisabled != nil {
		in, out := &in.LocalAuthenticationDisabled, &out.LocalAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MongoServerVersion != nil {
		in, out := &in.MongoServerVersion, &out.MongoServerVersion
		*out = new(string)
		**out = **in
	}
	if in.NetworkACLBypassForAzureServices != nil {
		in, out := &in.NetworkACLBypassForAzureServices, &out.NetworkACLBypassForAzureServices
		*out = new(bool)
		**out = **in
	}
	if in.NetworkACLBypassIds != nil {
		in, out := &in.NetworkACLBypassIds, &out.NetworkACLBypassIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OfferType != nil {
		in, out := &in.OfferType, &out.OfferType
		*out = new(string)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Restore != nil {
		in, out := &in.Restore, &out.Restore
		*out = make([]RestoreInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkRule != nil {
		in, out := &in.VirtualNetworkRule, &out.VirtualNetworkRule
		*out = make([]VirtualNetworkRuleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountInitParameters.
func (in *AccountInitParameters) DeepCopy() *AccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountList) DeepCopyInto(out *AccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Account, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountList.
func (in *AccountList) DeepCopy() *AccountList {
	if in == nil {
		return nil
	}
	out := new(AccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountObservation) DeepCopyInto(out *AccountObservation) {
	*out = *in
	if in.AccessKeyMetadataWritesEnabled != nil {
		in, out := &in.AccessKeyMetadataWritesEnabled, &out.AccessKeyMetadataWritesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AnalyticalStorage != nil {
		in, out := &in.AnalyticalStorage, &out.AnalyticalStorage
		*out = make([]AnalyticalStorageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnalyticalStorageEnabled != nil {
		in, out := &in.AnalyticalStorageEnabled, &out.AnalyticalStorageEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]BackupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Capabilities != nil {
		in, out := &in.Capabilities, &out.Capabilities
		*out = make([]CapabilitiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = make([]CapacityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsistencyPolicy != nil {
		in, out := &in.ConsistencyPolicy, &out.ConsistencyPolicy
		*out = make([]ConsistencyPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CorsRule != nil {
		in, out := &in.CorsRule, &out.CorsRule
		*out = make([]CorsRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateMode != nil {
		in, out := &in.CreateMode, &out.CreateMode
		*out = new(string)
		**out = **in
	}
	if in.DefaultIdentityType != nil {
		in, out := &in.DefaultIdentityType, &out.DefaultIdentityType
		*out = new(string)
		**out = **in
	}
	if in.EnableAutomaticFailover != nil {
		in, out := &in.EnableAutomaticFailover, &out.EnableAutomaticFailover
		*out = new(bool)
		**out = **in
	}
	if in.EnableFreeTier != nil {
		in, out := &in.EnableFreeTier, &out.EnableFreeTier
		*out = new(bool)
		**out = **in
	}
	if in.EnableMultipleWriteLocations != nil {
		in, out := &in.EnableMultipleWriteLocations, &out.EnableMultipleWriteLocations
		*out = new(bool)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.GeoLocation != nil {
		in, out := &in.GeoLocation, &out.GeoLocation
		*out = make([]GeoLocationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPRangeFilter != nil {
		in, out := &in.IPRangeFilter, &out.IPRangeFilter
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsVirtualNetworkFilterEnabled != nil {
		in, out := &in.IsVirtualNetworkFilterEnabled, &out.IsVirtualNetworkFilterEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.LocalAuthenticationDisabled != nil {
		in, out := &in.LocalAuthenticationDisabled, &out.LocalAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MongoServerVersion != nil {
		in, out := &in.MongoServerVersion, &out.MongoServerVersion
		*out = new(string)
		**out = **in
	}
	if in.NetworkACLBypassForAzureServices != nil {
		in, out := &in.NetworkACLBypassForAzureServices, &out.NetworkACLBypassForAzureServices
		*out = new(bool)
		**out = **in
	}
	if in.NetworkACLBypassIds != nil {
		in, out := &in.NetworkACLBypassIds, &out.NetworkACLBypassIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OfferType != nil {
		in, out := &in.OfferType, &out.OfferType
		*out = new(string)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ReadEndpoints != nil {
		in, out := &in.ReadEndpoints, &out.ReadEndpoints
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Restore != nil {
		in, out := &in.Restore, &out.Restore
		*out = make([]RestoreObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkRule != nil {
		in, out := &in.VirtualNetworkRule, &out.VirtualNetworkRule
		*out = make([]VirtualNetworkRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WriteEndpoints != nil {
		in, out := &in.WriteEndpoints, &out.WriteEndpoints
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountObservation.
func (in *AccountObservation) DeepCopy() *AccountObservation {
	if in == nil {
		return nil
	}
	out := new(AccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountParameters) DeepCopyInto(out *AccountParameters) {
	*out = *in
	if in.AccessKeyMetadataWritesEnabled != nil {
		in, out := &in.AccessKeyMetadataWritesEnabled, &out.AccessKeyMetadataWritesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AnalyticalStorage != nil {
		in, out := &in.AnalyticalStorage, &out.AnalyticalStorage
		*out = make([]AnalyticalStorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnalyticalStorageEnabled != nil {
		in, out := &in.AnalyticalStorageEnabled, &out.AnalyticalStorageEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]BackupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Capabilities != nil {
		in, out := &in.Capabilities, &out.Capabilities
		*out = make([]CapabilitiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = make([]CapacityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsistencyPolicy != nil {
		in, out := &in.ConsistencyPolicy, &out.ConsistencyPolicy
		*out = make([]ConsistencyPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CorsRule != nil {
		in, out := &in.CorsRule, &out.CorsRule
		*out = make([]CorsRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateMode != nil {
		in, out := &in.CreateMode, &out.CreateMode
		*out = new(string)
		**out = **in
	}
	if in.DefaultIdentityType != nil {
		in, out := &in.DefaultIdentityType, &out.DefaultIdentityType
		*out = new(string)
		**out = **in
	}
	if in.EnableAutomaticFailover != nil {
		in, out := &in.EnableAutomaticFailover, &out.EnableAutomaticFailover
		*out = new(bool)
		**out = **in
	}
	if in.EnableFreeTier != nil {
		in, out := &in.EnableFreeTier, &out.EnableFreeTier
		*out = new(bool)
		**out = **in
	}
	if in.EnableMultipleWriteLocations != nil {
		in, out := &in.EnableMultipleWriteLocations, &out.EnableMultipleWriteLocations
		*out = new(bool)
		**out = **in
	}
	if in.GeoLocation != nil {
		in, out := &in.GeoLocation, &out.GeoLocation
		*out = make([]GeoLocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPRangeFilter != nil {
		in, out := &in.IPRangeFilter, &out.IPRangeFilter
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsVirtualNetworkFilterEnabled != nil {
		in, out := &in.IsVirtualNetworkFilterEnabled, &out.IsVirtualNetworkFilterEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.LocalAuthenticationDisabled != nil {
		in, out := &in.LocalAuthenticationDisabled, &out.LocalAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MongoServerVersion != nil {
		in, out := &in.MongoServerVersion, &out.MongoServerVersion
		*out = new(string)
		**out = **in
	}
	if in.NetworkACLBypassForAzureServices != nil {
		in, out := &in.NetworkACLBypassForAzureServices, &out.NetworkACLBypassForAzureServices
		*out = new(bool)
		**out = **in
	}
	if in.NetworkACLBypassIds != nil {
		in, out := &in.NetworkACLBypassIds, &out.NetworkACLBypassIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OfferType != nil {
		in, out := &in.OfferType, &out.OfferType
		*out = new(string)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Restore != nil {
		in, out := &in.Restore, &out.Restore
		*out = make([]RestoreParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkRule != nil {
		in, out := &in.VirtualNetworkRule, &out.VirtualNetworkRule
		*out = make([]VirtualNetworkRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountParameters.
func (in *AccountParameters) DeepCopy() *AccountParameters {
	if in == nil {
		return nil
	}
	out := new(AccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountSpec) DeepCopyInto(out *AccountSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountSpec.
func (in *AccountSpec) DeepCopy() *AccountSpec {
	if in == nil {
		return nil
	}
	out := new(AccountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountStatus) DeepCopyInto(out *AccountStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountStatus.
func (in *AccountStatus) DeepCopy() *AccountStatus {
	if in == nil {
		return nil
	}
	out := new(AccountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticalStorageInitParameters) DeepCopyInto(out *AnalyticalStorageInitParameters) {
	*out = *in
	if in.SchemaType != nil {
		in, out := &in.SchemaType, &out.SchemaType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticalStorageInitParameters.
func (in *AnalyticalStorageInitParameters) DeepCopy() *AnalyticalStorageInitParameters {
	if in == nil {
		return nil
	}
	out := new(AnalyticalStorageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticalStorageObservation) DeepCopyInto(out *AnalyticalStorageObservation) {
	*out = *in
	if in.SchemaType != nil {
		in, out := &in.SchemaType, &out.SchemaType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticalStorageObservation.
func (in *AnalyticalStorageObservation) DeepCopy() *AnalyticalStorageObservation {
	if in == nil {
		return nil
	}
	out := new(AnalyticalStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticalStorageParameters) DeepCopyInto(out *AnalyticalStorageParameters) {
	*out = *in
	if in.SchemaType != nil {
		in, out := &in.SchemaType, &out.SchemaType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticalStorageParameters.
func (in *AnalyticalStorageParameters) DeepCopy() *AnalyticalStorageParameters {
	if in == nil {
		return nil
	}
	out := new(AnalyticalStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleSettingsInitParameters) DeepCopyInto(out *AutoscaleSettingsInitParameters) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleSettingsInitParameters.
func (in *AutoscaleSettingsInitParameters) DeepCopy() *AutoscaleSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleSettingsObservation) DeepCopyInto(out *AutoscaleSettingsObservation) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleSettingsObservation.
func (in *AutoscaleSettingsObservation) DeepCopy() *AutoscaleSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscaleSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleSettingsParameters) DeepCopyInto(out *AutoscaleSettingsParameters) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleSettingsParameters.
func (in *AutoscaleSettingsParameters) DeepCopy() *AutoscaleSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupInitParameters) DeepCopyInto(out *BackupInitParameters) {
	*out = *in
	if in.IntervalInMinutes != nil {
		in, out := &in.IntervalInMinutes, &out.IntervalInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.RetentionInHours != nil {
		in, out := &in.RetentionInHours, &out.RetentionInHours
		*out = new(float64)
		**out = **in
	}
	if in.StorageRedundancy != nil {
		in, out := &in.StorageRedundancy, &out.StorageRedundancy
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupInitParameters.
func (in *BackupInitParameters) DeepCopy() *BackupInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupObservation) DeepCopyInto(out *BackupObservation) {
	*out = *in
	if in.IntervalInMinutes != nil {
		in, out := &in.IntervalInMinutes, &out.IntervalInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.RetentionInHours != nil {
		in, out := &in.RetentionInHours, &out.RetentionInHours
		*out = new(float64)
		**out = **in
	}
	if in.StorageRedundancy != nil {
		in, out := &in.StorageRedundancy, &out.StorageRedundancy
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupObservation.
func (in *BackupObservation) DeepCopy() *BackupObservation {
	if in == nil {
		return nil
	}
	out := new(BackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupParameters) DeepCopyInto(out *BackupParameters) {
	*out = *in
	if in.IntervalInMinutes != nil {
		in, out := &in.IntervalInMinutes, &out.IntervalInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.RetentionInHours != nil {
		in, out := &in.RetentionInHours, &out.RetentionInHours
		*out = new(float64)
		**out = **in
	}
	if in.StorageRedundancy != nil {
		in, out := &in.StorageRedundancy, &out.StorageRedundancy
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupParameters.
func (in *BackupParameters) DeepCopy() *BackupParameters {
	if in == nil {
		return nil
	}
	out := new(BackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapabilitiesInitParameters) DeepCopyInto(out *CapabilitiesInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapabilitiesInitParameters.
func (in *CapabilitiesInitParameters) DeepCopy() *CapabilitiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(CapabilitiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapabilitiesObservation) DeepCopyInto(out *CapabilitiesObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapabilitiesObservation.
func (in *CapabilitiesObservation) DeepCopy() *CapabilitiesObservation {
	if in == nil {
		return nil
	}
	out := new(CapabilitiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapabilitiesParameters) DeepCopyInto(out *CapabilitiesParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapabilitiesParameters.
func (in *CapabilitiesParameters) DeepCopy() *CapabilitiesParameters {
	if in == nil {
		return nil
	}
	out := new(CapabilitiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityInitParameters) DeepCopyInto(out *CapacityInitParameters) {
	*out = *in
	if in.TotalThroughputLimit != nil {
		in, out := &in.TotalThroughputLimit, &out.TotalThroughputLimit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityInitParameters.
func (in *CapacityInitParameters) DeepCopy() *CapacityInitParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityObservation) DeepCopyInto(out *CapacityObservation) {
	*out = *in
	if in.TotalThroughputLimit != nil {
		in, out := &in.TotalThroughputLimit, &out.TotalThroughputLimit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityObservation.
func (in *CapacityObservation) DeepCopy() *CapacityObservation {
	if in == nil {
		return nil
	}
	out := new(CapacityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityParameters) DeepCopyInto(out *CapacityParameters) {
	*out = *in
	if in.TotalThroughputLimit != nil {
		in, out := &in.TotalThroughputLimit, &out.TotalThroughputLimit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityParameters.
func (in *CapacityParameters) DeepCopy() *CapacityParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraCluster) DeepCopyInto(out *CassandraCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraCluster.
func (in *CassandraCluster) DeepCopy() *CassandraCluster {
	if in == nil {
		return nil
	}
	out := new(CassandraCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CassandraCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraClusterIdentityInitParameters) DeepCopyInto(out *CassandraClusterIdentityInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraClusterIdentityInitParameters.
func (in *CassandraClusterIdentityInitParameters) DeepCopy() *CassandraClusterIdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(CassandraClusterIdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraClusterIdentityObservation) DeepCopyInto(out *CassandraClusterIdentityObservation) {
	*out = *in
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraClusterIdentityObservation.
func (in *CassandraClusterIdentityObservation) DeepCopy() *CassandraClusterIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(CassandraClusterIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraClusterIdentityParameters) DeepCopyInto(out *CassandraClusterIdentityParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraClusterIdentityParameters.
func (in *CassandraClusterIdentityParameters) DeepCopy() *CassandraClusterIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(CassandraClusterIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraClusterInitParameters) DeepCopyInto(out *CassandraClusterInitParameters) {
	*out = *in
	if in.AuthenticationMethod != nil {
		in, out := &in.AuthenticationMethod, &out.AuthenticationMethod
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificatePems != nil {
		in, out := &in.ClientCertificatePems, &out.ClientCertificatePems
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExternalGossipCertificatePems != nil {
		in, out := &in.ExternalGossipCertificatePems, &out.ExternalGossipCertificatePems
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExternalSeedNodeIPAddresses != nil {
		in, out := &in.ExternalSeedNodeIPAddresses, &out.ExternalSeedNodeIPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HoursBetweenBackups != nil {
		in, out := &in.HoursBetweenBackups, &out.HoursBetweenBackups
		*out = new(float64)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]CassandraClusterIdentityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.RepairEnabled != nil {
		in, out := &in.RepairEnabled, &out.RepairEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraClusterInitParameters.
func (in *CassandraClusterInitParameters) DeepCopy() *CassandraClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(CassandraClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraClusterList) DeepCopyInto(out *CassandraClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CassandraCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraClusterList.
func (in *CassandraClusterList) DeepCopy() *CassandraClusterList {
	if in == nil {
		return nil
	}
	out := new(CassandraClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CassandraClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraClusterObservation) DeepCopyInto(out *CassandraClusterObservation) {
	*out = *in
	if in.AuthenticationMethod != nil {
		in, out := &in.AuthenticationMethod, &out.AuthenticationMethod
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificatePems != nil {
		in, out := &in.ClientCertificatePems, &out.ClientCertificatePems
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DelegatedManagementSubnetID != nil {
		in, out := &in.DelegatedManagementSubnetID, &out.DelegatedManagementSubnetID
		*out = new(string)
		**out = **in
	}
	if in.ExternalGossipCertificatePems != nil {
		in, out := &in.ExternalGossipCertificatePems, &out.ExternalGossipCertificatePems
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExternalSeedNodeIPAddresses != nil {
		in, out := &in.ExternalSeedNodeIPAddresses, &out.ExternalSeedNodeIPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HoursBetweenBackups != nil {
		in, out := &in.HoursBetweenBackups, &out.HoursBetweenBackups
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]CassandraClusterIdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.RepairEnabled != nil {
		in, out := &in.RepairEnabled, &out.RepairEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraClusterObservation.
func (in *CassandraClusterObservation) DeepCopy() *CassandraClusterObservation {
	if in == nil {
		return nil
	}
	out := new(CassandraClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraClusterParameters) DeepCopyInto(out *CassandraClusterParameters) {
	*out = *in
	if in.AuthenticationMethod != nil {
		in, out := &in.AuthenticationMethod, &out.AuthenticationMethod
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificatePems != nil {
		in, out := &in.ClientCertificatePems, &out.ClientCertificatePems
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	out.DefaultAdminPasswordSecretRef = in.DefaultAdminPasswordSecretRef
	if in.DelegatedManagementSubnetID != nil {
		in, out := &in.DelegatedManagementSubnetID, &out.DelegatedManagementSubnetID
		*out = new(string)
		**out = **in
	}
	if in.DelegatedManagementSubnetIDRef != nil {
		in, out := &in.DelegatedManagementSubnetIDRef, &out.DelegatedManagementSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DelegatedManagementSubnetIDSelector != nil {
		in, out := &in.DelegatedManagementSubnetIDSelector, &out.DelegatedManagementSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ExternalGossipCertificatePems != nil {
		in, out := &in.ExternalGossipCertificatePems, &out.ExternalGossipCertificatePems
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExternalSeedNodeIPAddresses != nil {
		in, out := &in.ExternalSeedNodeIPAddresses, &out.ExternalSeedNodeIPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HoursBetweenBackups != nil {
		in, out := &in.HoursBetweenBackups, &out.HoursBetweenBackups
		*out = new(float64)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]CassandraClusterIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.RepairEnabled != nil {
		in, out := &in.RepairEnabled, &out.RepairEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraClusterParameters.
func (in *CassandraClusterParameters) DeepCopy() *CassandraClusterParameters {
	if in == nil {
		return nil
	}
	out := new(CassandraClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraClusterSpec) DeepCopyInto(out *CassandraClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraClusterSpec.
func (in *CassandraClusterSpec) DeepCopy() *CassandraClusterSpec {
	if in == nil {
		return nil
	}
	out := new(CassandraClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraClusterStatus) DeepCopyInto(out *CassandraClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraClusterStatus.
func (in *CassandraClusterStatus) DeepCopy() *CassandraClusterStatus {
	if in == nil {
		return nil
	}
	out := new(CassandraClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraDatacenter) DeepCopyInto(out *CassandraDatacenter) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraDatacenter.
func (in *CassandraDatacenter) DeepCopy() *CassandraDatacenter {
	if in == nil {
		return nil
	}
	out := new(CassandraDatacenter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CassandraDatacenter) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraDatacenterInitParameters) DeepCopyInto(out *CassandraDatacenterInitParameters) {
	*out = *in
	if in.AvailabilityZonesEnabled != nil {
		in, out := &in.AvailabilityZonesEnabled, &out.AvailabilityZonesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BackupStorageCustomerKeyURI != nil {
		in, out := &in.BackupStorageCustomerKeyURI, &out.BackupStorageCustomerKeyURI
		*out = new(string)
		**out = **in
	}
	if in.Base64EncodedYamlFragment != nil {
		in, out := &in.Base64EncodedYamlFragment, &out.Base64EncodedYamlFragment
		*out = new(string)
		**out = **in
	}
	if in.DiskCount != nil {
		in, out := &in.DiskCount, &out.DiskCount
		*out = new(float64)
		**out = **in
	}
	if in.DiskSku != nil {
		in, out := &in.DiskSku, &out.DiskSku
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManagedDiskCustomerKeyURI != nil {
		in, out := &in.ManagedDiskCustomerKeyURI, &out.ManagedDiskCustomerKeyURI
		*out = new(string)
		**out = **in
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(float64)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraDatacenterInitParameters.
func (in *CassandraDatacenterInitParameters) DeepCopy() *CassandraDatacenterInitParameters {
	if in == nil {
		return nil
	}
	out := new(CassandraDatacenterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraDatacenterList) DeepCopyInto(out *CassandraDatacenterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CassandraDatacenter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraDatacenterList.
func (in *CassandraDatacenterList) DeepCopy() *CassandraDatacenterList {
	if in == nil {
		return nil
	}
	out := new(CassandraDatacenterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CassandraDatacenterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraDatacenterObservation) DeepCopyInto(out *CassandraDatacenterObservation) {
	*out = *in
	if in.AvailabilityZonesEnabled != nil {
		in, out := &in.AvailabilityZonesEnabled, &out.AvailabilityZonesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BackupStorageCustomerKeyURI != nil {
		in, out := &in.BackupStorageCustomerKeyURI, &out.BackupStorageCustomerKeyURI
		*out = new(string)
		**out = **in
	}
	if in.Base64EncodedYamlFragment != nil {
		in, out := &in.Base64EncodedYamlFragment, &out.Base64EncodedYamlFragment
		*out = new(string)
		**out = **in
	}
	if in.CassandraClusterID != nil {
		in, out := &in.CassandraClusterID, &out.CassandraClusterID
		*out = new(string)
		**out = **in
	}
	if in.DelegatedManagementSubnetID != nil {
		in, out := &in.DelegatedManagementSubnetID, &out.DelegatedManagementSubnetID
		*out = new(string)
		**out = **in
	}
	if in.DiskCount != nil {
		in, out := &in.DiskCount, &out.DiskCount
		*out = new(float64)
		**out = **in
	}
	if in.DiskSku != nil {
		in, out := &in.DiskSku, &out.DiskSku
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManagedDiskCustomerKeyURI != nil {
		in, out := &in.ManagedDiskCustomerKeyURI, &out.ManagedDiskCustomerKeyURI
		*out = new(string)
		**out = **in
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(float64)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraDatacenterObservation.
func (in *CassandraDatacenterObservation) DeepCopy() *CassandraDatacenterObservation {
	if in == nil {
		return nil
	}
	out := new(CassandraDatacenterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraDatacenterParameters) DeepCopyInto(out *CassandraDatacenterParameters) {
	*out = *in
	if in.AvailabilityZonesEnabled != nil {
		in, out := &in.AvailabilityZonesEnabled, &out.AvailabilityZonesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BackupStorageCustomerKeyURI != nil {
		in, out := &in.BackupStorageCustomerKeyURI, &out.BackupStorageCustomerKeyURI
		*out = new(string)
		**out = **in
	}
	if in.Base64EncodedYamlFragment != nil {
		in, out := &in.Base64EncodedYamlFragment, &out.Base64EncodedYamlFragment
		*out = new(string)
		**out = **in
	}
	if in.CassandraClusterID != nil {
		in, out := &in.CassandraClusterID, &out.CassandraClusterID
		*out = new(string)
		**out = **in
	}
	if in.CassandraClusterIDRef != nil {
		in, out := &in.CassandraClusterIDRef, &out.CassandraClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CassandraClusterIDSelector != nil {
		in, out := &in.CassandraClusterIDSelector, &out.CassandraClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DelegatedManagementSubnetID != nil {
		in, out := &in.DelegatedManagementSubnetID, &out.DelegatedManagementSubnetID
		*out = new(string)
		**out = **in
	}
	if in.DelegatedManagementSubnetIDRef != nil {
		in, out := &in.DelegatedManagementSubnetIDRef, &out.DelegatedManagementSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DelegatedManagementSubnetIDSelector != nil {
		in, out := &in.DelegatedManagementSubnetIDSelector, &out.DelegatedManagementSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskCount != nil {
		in, out := &in.DiskCount, &out.DiskCount
		*out = new(float64)
		**out = **in
	}
	if in.DiskSku != nil {
		in, out := &in.DiskSku, &out.DiskSku
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManagedDiskCustomerKeyURI != nil {
		in, out := &in.ManagedDiskCustomerKeyURI, &out.ManagedDiskCustomerKeyURI
		*out = new(string)
		**out = **in
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(float64)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraDatacenterParameters.
func (in *CassandraDatacenterParameters) DeepCopy() *CassandraDatacenterParameters {
	if in == nil {
		return nil
	}
	out := new(CassandraDatacenterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraDatacenterSpec) DeepCopyInto(out *CassandraDatacenterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraDatacenterSpec.
func (in *CassandraDatacenterSpec) DeepCopy() *CassandraDatacenterSpec {
	if in == nil {
		return nil
	}
	out := new(CassandraDatacenterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraDatacenterStatus) DeepCopyInto(out *CassandraDatacenterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraDatacenterStatus.
func (in *CassandraDatacenterStatus) DeepCopy() *CassandraDatacenterStatus {
	if in == nil {
		return nil
	}
	out := new(CassandraDatacenterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraKeySpace) DeepCopyInto(out *CassandraKeySpace) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraKeySpace.
func (in *CassandraKeySpace) DeepCopy() *CassandraKeySpace {
	if in == nil {
		return nil
	}
	out := new(CassandraKeySpace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CassandraKeySpace) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraKeySpaceInitParameters) DeepCopyInto(out *CassandraKeySpaceInitParameters) {
	*out = *in
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]AutoscaleSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraKeySpaceInitParameters.
func (in *CassandraKeySpaceInitParameters) DeepCopy() *CassandraKeySpaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(CassandraKeySpaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraKeySpaceList) DeepCopyInto(out *CassandraKeySpaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CassandraKeySpace, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraKeySpaceList.
func (in *CassandraKeySpaceList) DeepCopy() *CassandraKeySpaceList {
	if in == nil {
		return nil
	}
	out := new(CassandraKeySpaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CassandraKeySpaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraKeySpaceObservation) DeepCopyInto(out *CassandraKeySpaceObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]AutoscaleSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraKeySpaceObservation.
func (in *CassandraKeySpaceObservation) DeepCopy() *CassandraKeySpaceObservation {
	if in == nil {
		return nil
	}
	out := new(CassandraKeySpaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraKeySpaceParameters) DeepCopyInto(out *CassandraKeySpaceParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AccountNameRef != nil {
		in, out := &in.AccountNameRef, &out.AccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AccountNameSelector != nil {
		in, out := &in.AccountNameSelector, &out.AccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]AutoscaleSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraKeySpaceParameters.
func (in *CassandraKeySpaceParameters) DeepCopy() *CassandraKeySpaceParameters {
	if in == nil {
		return nil
	}
	out := new(CassandraKeySpaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraKeySpaceSpec) DeepCopyInto(out *CassandraKeySpaceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraKeySpaceSpec.
func (in *CassandraKeySpaceSpec) DeepCopy() *CassandraKeySpaceSpec {
	if in == nil {
		return nil
	}
	out := new(CassandraKeySpaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraKeySpaceStatus) DeepCopyInto(out *CassandraKeySpaceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraKeySpaceStatus.
func (in *CassandraKeySpaceStatus) DeepCopy() *CassandraKeySpaceStatus {
	if in == nil {
		return nil
	}
	out := new(CassandraKeySpaceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraTable) DeepCopyInto(out *CassandraTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraTable.
func (in *CassandraTable) DeepCopy() *CassandraTable {
	if in == nil {
		return nil
	}
	out := new(CassandraTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CassandraTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraTableAutoscaleSettingsInitParameters) DeepCopyInto(out *CassandraTableAutoscaleSettingsInitParameters) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraTableAutoscaleSettingsInitParameters.
func (in *CassandraTableAutoscaleSettingsInitParameters) DeepCopy() *CassandraTableAutoscaleSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CassandraTableAutoscaleSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraTableAutoscaleSettingsObservation) DeepCopyInto(out *CassandraTableAutoscaleSettingsObservation) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraTableAutoscaleSettingsObservation.
func (in *CassandraTableAutoscaleSettingsObservation) DeepCopy() *CassandraTableAutoscaleSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(CassandraTableAutoscaleSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraTableAutoscaleSettingsParameters) DeepCopyInto(out *CassandraTableAutoscaleSettingsParameters) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraTableAutoscaleSettingsParameters.
func (in *CassandraTableAutoscaleSettingsParameters) DeepCopy() *CassandraTableAutoscaleSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(CassandraTableAutoscaleSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraTableInitParameters) DeepCopyInto(out *CassandraTableInitParameters) {
	*out = *in
	if in.AnalyticalStorageTTL != nil {
		in, out := &in.AnalyticalStorageTTL, &out.AnalyticalStorageTTL
		*out = new(float64)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]CassandraTableAutoscaleSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = make([]SchemaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraTableInitParameters.
func (in *CassandraTableInitParameters) DeepCopy() *CassandraTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(CassandraTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraTableList) DeepCopyInto(out *CassandraTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CassandraTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraTableList.
func (in *CassandraTableList) DeepCopy() *CassandraTableList {
	if in == nil {
		return nil
	}
	out := new(CassandraTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CassandraTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraTableObservation) DeepCopyInto(out *CassandraTableObservation) {
	*out = *in
	if in.AnalyticalStorageTTL != nil {
		in, out := &in.AnalyticalStorageTTL, &out.AnalyticalStorageTTL
		*out = new(float64)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]CassandraTableAutoscaleSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CassandraKeySpaceID != nil {
		in, out := &in.CassandraKeySpaceID, &out.CassandraKeySpaceID
		*out = new(string)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = make([]SchemaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraTableObservation.
func (in *CassandraTableObservation) DeepCopy() *CassandraTableObservation {
	if in == nil {
		return nil
	}
	out := new(CassandraTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraTableParameters) DeepCopyInto(out *CassandraTableParameters) {
	*out = *in
	if in.AnalyticalStorageTTL != nil {
		in, out := &in.AnalyticalStorageTTL, &out.AnalyticalStorageTTL
		*out = new(float64)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]CassandraTableAutoscaleSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CassandraKeySpaceID != nil {
		in, out := &in.CassandraKeySpaceID, &out.CassandraKeySpaceID
		*out = new(string)
		**out = **in
	}
	if in.CassandraKeySpaceIDRef != nil {
		in, out := &in.CassandraKeySpaceIDRef, &out.CassandraKeySpaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CassandraKeySpaceIDSelector != nil {
		in, out := &in.CassandraKeySpaceIDSelector, &out.CassandraKeySpaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = make([]SchemaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraTableParameters.
func (in *CassandraTableParameters) DeepCopy() *CassandraTableParameters {
	if in == nil {
		return nil
	}
	out := new(CassandraTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraTableSpec) DeepCopyInto(out *CassandraTableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraTableSpec.
func (in *CassandraTableSpec) DeepCopy() *CassandraTableSpec {
	if in == nil {
		return nil
	}
	out := new(CassandraTableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraTableStatus) DeepCopyInto(out *CassandraTableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraTableStatus.
func (in *CassandraTableStatus) DeepCopy() *CassandraTableStatus {
	if in == nil {
		return nil
	}
	out := new(CassandraTableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterKeyInitParameters) DeepCopyInto(out *ClusterKeyInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrderBy != nil {
		in, out := &in.OrderBy, &out.OrderBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterKeyInitParameters.
func (in *ClusterKeyInitParameters) DeepCopy() *ClusterKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterKeyObservation) DeepCopyInto(out *ClusterKeyObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrderBy != nil {
		in, out := &in.OrderBy, &out.OrderBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterKeyObservation.
func (in *ClusterKeyObservation) DeepCopy() *ClusterKeyObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterKeyParameters) DeepCopyInto(out *ClusterKeyParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrderBy != nil {
		in, out := &in.OrderBy, &out.OrderBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterKeyParameters.
func (in *ClusterKeyParameters) DeepCopy() *ClusterKeyParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnInitParameters) DeepCopyInto(out *ColumnInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnInitParameters.
func (in *ColumnInitParameters) DeepCopy() *ColumnInitParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnObservation) DeepCopyInto(out *ColumnObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnObservation.
func (in *ColumnObservation) DeepCopy() *ColumnObservation {
	if in == nil {
		return nil
	}
	out := new(ColumnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnParameters) DeepCopyInto(out *ColumnParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnParameters.
func (in *ColumnParameters) DeepCopy() *ColumnParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompositeIndexIndexInitParameters) DeepCopyInto(out *CompositeIndexIndexInitParameters) {
	*out = *in
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompositeIndexIndexInitParameters.
func (in *CompositeIndexIndexInitParameters) DeepCopy() *CompositeIndexIndexInitParameters {
	if in == nil {
		return nil
	}
	out := new(CompositeIndexIndexInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompositeIndexIndexObservation) DeepCopyInto(out *CompositeIndexIndexObservation) {
	*out = *in
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompositeIndexIndexObservation.
func (in *CompositeIndexIndexObservation) DeepCopy() *CompositeIndexIndexObservation {
	if in == nil {
		return nil
	}
	out := new(CompositeIndexIndexObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompositeIndexIndexParameters) DeepCopyInto(out *CompositeIndexIndexParameters) {
	*out = *in
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompositeIndexIndexParameters.
func (in *CompositeIndexIndexParameters) DeepCopy() *CompositeIndexIndexParameters {
	if in == nil {
		return nil
	}
	out := new(CompositeIndexIndexParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompositeIndexInitParameters) DeepCopyInto(out *CompositeIndexInitParameters) {
	*out = *in
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = make([]IndexInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompositeIndexInitParameters.
func (in *CompositeIndexInitParameters) DeepCopy() *CompositeIndexInitParameters {
	if in == nil {
		return nil
	}
	out := new(CompositeIndexInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompositeIndexObservation) DeepCopyInto(out *CompositeIndexObservation) {
	*out = *in
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = make([]IndexObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompositeIndexObservation.
func (in *CompositeIndexObservation) DeepCopy() *CompositeIndexObservation {
	if in == nil {
		return nil
	}
	out := new(CompositeIndexObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompositeIndexParameters) DeepCopyInto(out *CompositeIndexParameters) {
	*out = *in
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = make([]IndexParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompositeIndexParameters.
func (in *CompositeIndexParameters) DeepCopy() *CompositeIndexParameters {
	if in == nil {
		return nil
	}
	out := new(CompositeIndexParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConflictResolutionPolicyInitParameters) DeepCopyInto(out *ConflictResolutionPolicyInitParameters) {
	*out = *in
	if in.ConflictResolutionPath != nil {
		in, out := &in.ConflictResolutionPath, &out.ConflictResolutionPath
		*out = new(string)
		**out = **in
	}
	if in.ConflictResolutionProcedure != nil {
		in, out := &in.ConflictResolutionProcedure, &out.ConflictResolutionProcedure
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConflictResolutionPolicyInitParameters.
func (in *ConflictResolutionPolicyInitParameters) DeepCopy() *ConflictResolutionPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConflictResolutionPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConflictResolutionPolicyObservation) DeepCopyInto(out *ConflictResolutionPolicyObservation) {
	*out = *in
	if in.ConflictResolutionPath != nil {
		in, out := &in.ConflictResolutionPath, &out.ConflictResolutionPath
		*out = new(string)
		**out = **in
	}
	if in.ConflictResolutionProcedure != nil {
		in, out := &in.ConflictResolutionProcedure, &out.ConflictResolutionProcedure
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConflictResolutionPolicyObservation.
func (in *ConflictResolutionPolicyObservation) DeepCopy() *ConflictResolutionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ConflictResolutionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConflictResolutionPolicyParameters) DeepCopyInto(out *ConflictResolutionPolicyParameters) {
	*out = *in
	if in.ConflictResolutionPath != nil {
		in, out := &in.ConflictResolutionPath, &out.ConflictResolutionPath
		*out = new(string)
		**out = **in
	}
	if in.ConflictResolutionProcedure != nil {
		in, out := &in.ConflictResolutionProcedure, &out.ConflictResolutionProcedure
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConflictResolutionPolicyParameters.
func (in *ConflictResolutionPolicyParameters) DeepCopy() *ConflictResolutionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ConflictResolutionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsistencyPolicyInitParameters) DeepCopyInto(out *ConsistencyPolicyInitParameters) {
	*out = *in
	if in.ConsistencyLevel != nil {
		in, out := &in.ConsistencyLevel, &out.ConsistencyLevel
		*out = new(string)
		**out = **in
	}
	if in.MaxIntervalInSeconds != nil {
		in, out := &in.MaxIntervalInSeconds, &out.MaxIntervalInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.MaxStalenessPrefix != nil {
		in, out := &in.MaxStalenessPrefix, &out.MaxStalenessPrefix
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsistencyPolicyInitParameters.
func (in *ConsistencyPolicyInitParameters) DeepCopy() *ConsistencyPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConsistencyPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsistencyPolicyObservation) DeepCopyInto(out *ConsistencyPolicyObservation) {
	*out = *in
	if in.ConsistencyLevel != nil {
		in, out := &in.ConsistencyLevel, &out.ConsistencyLevel
		*out = new(string)
		**out = **in
	}
	if in.MaxIntervalInSeconds != nil {
		in, out := &in.MaxIntervalInSeconds, &out.MaxIntervalInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.MaxStalenessPrefix != nil {
		in, out := &in.MaxStalenessPrefix, &out.MaxStalenessPrefix
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsistencyPolicyObservation.
func (in *ConsistencyPolicyObservation) DeepCopy() *ConsistencyPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ConsistencyPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsistencyPolicyParameters) DeepCopyInto(out *ConsistencyPolicyParameters) {
	*out = *in
	if in.ConsistencyLevel != nil {
		in, out := &in.ConsistencyLevel, &out.ConsistencyLevel
		*out = new(string)
		**out = **in
	}
	if in.MaxIntervalInSeconds != nil {
		in, out := &in.MaxIntervalInSeconds, &out.MaxIntervalInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.MaxStalenessPrefix != nil {
		in, out := &in.MaxStalenessPrefix, &out.MaxStalenessPrefix
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsistencyPolicyParameters.
func (in *ConsistencyPolicyParameters) DeepCopy() *ConsistencyPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ConsistencyPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsRuleInitParameters) DeepCopyInto(out *CorsRuleInitParameters) {
	*out = *in
	if in.AllowedHeaders != nil {
		in, out := &in.AllowedHeaders, &out.AllowedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExposedHeaders != nil {
		in, out := &in.ExposedHeaders, &out.ExposedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAgeInSeconds != nil {
		in, out := &in.MaxAgeInSeconds, &out.MaxAgeInSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsRuleInitParameters.
func (in *CorsRuleInitParameters) DeepCopy() *CorsRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(CorsRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsRuleObservation) DeepCopyInto(out *CorsRuleObservation) {
	*out = *in
	if in.AllowedHeaders != nil {
		in, out := &in.AllowedHeaders, &out.AllowedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExposedHeaders != nil {
		in, out := &in.ExposedHeaders, &out.ExposedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAgeInSeconds != nil {
		in, out := &in.MaxAgeInSeconds, &out.MaxAgeInSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsRuleObservation.
func (in *CorsRuleObservation) DeepCopy() *CorsRuleObservation {
	if in == nil {
		return nil
	}
	out := new(CorsRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsRuleParameters) DeepCopyInto(out *CorsRuleParameters) {
	*out = *in
	if in.AllowedHeaders != nil {
		in, out := &in.AllowedHeaders, &out.AllowedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExposedHeaders != nil {
		in, out := &in.ExposedHeaders, &out.ExposedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAgeInSeconds != nil {
		in, out := &in.MaxAgeInSeconds, &out.MaxAgeInSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsRuleParameters.
func (in *CorsRuleParameters) DeepCopy() *CorsRuleParameters {
	if in == nil {
		return nil
	}
	out := new(CorsRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseInitParameters) DeepCopyInto(out *DatabaseInitParameters) {
	*out = *in
	if in.CollectionNames != nil {
		in, out := &in.CollectionNames, &out.CollectionNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseInitParameters.
func (in *DatabaseInitParameters) DeepCopy() *DatabaseInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatabaseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseObservation) DeepCopyInto(out *DatabaseObservation) {
	*out = *in
	if in.CollectionNames != nil {
		in, out := &in.CollectionNames, &out.CollectionNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseObservation.
func (in *DatabaseObservation) DeepCopy() *DatabaseObservation {
	if in == nil {
		return nil
	}
	out := new(DatabaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseParameters) DeepCopyInto(out *DatabaseParameters) {
	*out = *in
	if in.CollectionNames != nil {
		in, out := &in.CollectionNames, &out.CollectionNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseParameters.
func (in *DatabaseParameters) DeepCopy() *DatabaseParameters {
	if in == nil {
		return nil
	}
	out := new(DatabaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedPathInitParameters) DeepCopyInto(out *ExcludedPathInitParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedPathInitParameters.
func (in *ExcludedPathInitParameters) DeepCopy() *ExcludedPathInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExcludedPathInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedPathObservation) DeepCopyInto(out *ExcludedPathObservation) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedPathObservation.
func (in *ExcludedPathObservation) DeepCopy() *ExcludedPathObservation {
	if in == nil {
		return nil
	}
	out := new(ExcludedPathObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedPathParameters) DeepCopyInto(out *ExcludedPathParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedPathParameters.
func (in *ExcludedPathParameters) DeepCopy() *ExcludedPathParameters {
	if in == nil {
		return nil
	}
	out := new(ExcludedPathParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeoLocationInitParameters) DeepCopyInto(out *GeoLocationInitParameters) {
	*out = *in
	if in.FailoverPriority != nil {
		in, out := &in.FailoverPriority, &out.FailoverPriority
		*out = new(float64)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeoLocationInitParameters.
func (in *GeoLocationInitParameters) DeepCopy() *GeoLocationInitParameters {
	if in == nil {
		return nil
	}
	out := new(GeoLocationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeoLocationObservation) DeepCopyInto(out *GeoLocationObservation) {
	*out = *in
	if in.FailoverPriority != nil {
		in, out := &in.FailoverPriority, &out.FailoverPriority
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeoLocationObservation.
func (in *GeoLocationObservation) DeepCopy() *GeoLocationObservation {
	if in == nil {
		return nil
	}
	out := new(GeoLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeoLocationParameters) DeepCopyInto(out *GeoLocationParameters) {
	*out = *in
	if in.FailoverPriority != nil {
		in, out := &in.FailoverPriority, &out.FailoverPriority
		*out = new(float64)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeoLocationParameters.
func (in *GeoLocationParameters) DeepCopy() *GeoLocationParameters {
	if in == nil {
		return nil
	}
	out := new(GeoLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinDatabase) DeepCopyInto(out *GremlinDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinDatabase.
func (in *GremlinDatabase) DeepCopy() *GremlinDatabase {
	if in == nil {
		return nil
	}
	out := new(GremlinDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GremlinDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinDatabaseAutoscaleSettingsInitParameters) DeepCopyInto(out *GremlinDatabaseAutoscaleSettingsInitParameters) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinDatabaseAutoscaleSettingsInitParameters.
func (in *GremlinDatabaseAutoscaleSettingsInitParameters) DeepCopy() *GremlinDatabaseAutoscaleSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GremlinDatabaseAutoscaleSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinDatabaseAutoscaleSettingsObservation) DeepCopyInto(out *GremlinDatabaseAutoscaleSettingsObservation) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinDatabaseAutoscaleSettingsObservation.
func (in *GremlinDatabaseAutoscaleSettingsObservation) DeepCopy() *GremlinDatabaseAutoscaleSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(GremlinDatabaseAutoscaleSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinDatabaseAutoscaleSettingsParameters) DeepCopyInto(out *GremlinDatabaseAutoscaleSettingsParameters) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinDatabaseAutoscaleSettingsParameters.
func (in *GremlinDatabaseAutoscaleSettingsParameters) DeepCopy() *GremlinDatabaseAutoscaleSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(GremlinDatabaseAutoscaleSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinDatabaseInitParameters) DeepCopyInto(out *GremlinDatabaseInitParameters) {
	*out = *in
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]GremlinDatabaseAutoscaleSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinDatabaseInitParameters.
func (in *GremlinDatabaseInitParameters) DeepCopy() *GremlinDatabaseInitParameters {
	if in == nil {
		return nil
	}
	out := new(GremlinDatabaseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinDatabaseList) DeepCopyInto(out *GremlinDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GremlinDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinDatabaseList.
func (in *GremlinDatabaseList) DeepCopy() *GremlinDatabaseList {
	if in == nil {
		return nil
	}
	out := new(GremlinDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GremlinDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinDatabaseObservation) DeepCopyInto(out *GremlinDatabaseObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]GremlinDatabaseAutoscaleSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinDatabaseObservation.
func (in *GremlinDatabaseObservation) DeepCopy() *GremlinDatabaseObservation {
	if in == nil {
		return nil
	}
	out := new(GremlinDatabaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinDatabaseParameters) DeepCopyInto(out *GremlinDatabaseParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AccountNameRef != nil {
		in, out := &in.AccountNameRef, &out.AccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AccountNameSelector != nil {
		in, out := &in.AccountNameSelector, &out.AccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]GremlinDatabaseAutoscaleSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinDatabaseParameters.
func (in *GremlinDatabaseParameters) DeepCopy() *GremlinDatabaseParameters {
	if in == nil {
		return nil
	}
	out := new(GremlinDatabaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinDatabaseSpec) DeepCopyInto(out *GremlinDatabaseSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinDatabaseSpec.
func (in *GremlinDatabaseSpec) DeepCopy() *GremlinDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(GremlinDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinDatabaseStatus) DeepCopyInto(out *GremlinDatabaseStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinDatabaseStatus.
func (in *GremlinDatabaseStatus) DeepCopy() *GremlinDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(GremlinDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinGraph) DeepCopyInto(out *GremlinGraph) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinGraph.
func (in *GremlinGraph) DeepCopy() *GremlinGraph {
	if in == nil {
		return nil
	}
	out := new(GremlinGraph)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GremlinGraph) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinGraphAutoscaleSettingsInitParameters) DeepCopyInto(out *GremlinGraphAutoscaleSettingsInitParameters) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinGraphAutoscaleSettingsInitParameters.
func (in *GremlinGraphAutoscaleSettingsInitParameters) DeepCopy() *GremlinGraphAutoscaleSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GremlinGraphAutoscaleSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinGraphAutoscaleSettingsObservation) DeepCopyInto(out *GremlinGraphAutoscaleSettingsObservation) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinGraphAutoscaleSettingsObservation.
func (in *GremlinGraphAutoscaleSettingsObservation) DeepCopy() *GremlinGraphAutoscaleSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(GremlinGraphAutoscaleSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinGraphAutoscaleSettingsParameters) DeepCopyInto(out *GremlinGraphAutoscaleSettingsParameters) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinGraphAutoscaleSettingsParameters.
func (in *GremlinGraphAutoscaleSettingsParameters) DeepCopy() *GremlinGraphAutoscaleSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(GremlinGraphAutoscaleSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinGraphInitParameters) DeepCopyInto(out *GremlinGraphInitParameters) {
	*out = *in
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]GremlinGraphAutoscaleSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConflictResolutionPolicy != nil {
		in, out := &in.ConflictResolutionPolicy, &out.ConflictResolutionPolicy
		*out = make([]ConflictResolutionPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.IndexPolicy != nil {
		in, out := &in.IndexPolicy, &out.IndexPolicy
		*out = make([]IndexPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PartitionKeyPath != nil {
		in, out := &in.PartitionKeyPath, &out.PartitionKeyPath
		*out = new(string)
		**out = **in
	}
	if in.PartitionKeyVersion != nil {
		in, out := &in.PartitionKeyVersion, &out.PartitionKeyVersion
		*out = new(float64)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.UniqueKey != nil {
		in, out := &in.UniqueKey, &out.UniqueKey
		*out = make([]UniqueKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinGraphInitParameters.
func (in *GremlinGraphInitParameters) DeepCopy() *GremlinGraphInitParameters {
	if in == nil {
		return nil
	}
	out := new(GremlinGraphInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinGraphList) DeepCopyInto(out *GremlinGraphList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GremlinGraph, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinGraphList.
func (in *GremlinGraphList) DeepCopy() *GremlinGraphList {
	if in == nil {
		return nil
	}
	out := new(GremlinGraphList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GremlinGraphList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinGraphObservation) DeepCopyInto(out *GremlinGraphObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]GremlinGraphAutoscaleSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConflictResolutionPolicy != nil {
		in, out := &in.ConflictResolutionPolicy, &out.ConflictResolutionPolicy
		*out = make([]ConflictResolutionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IndexPolicy != nil {
		in, out := &in.IndexPolicy, &out.IndexPolicy
		*out = make([]IndexPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PartitionKeyPath != nil {
		in, out := &in.PartitionKeyPath, &out.PartitionKeyPath
		*out = new(string)
		**out = **in
	}
	if in.PartitionKeyVersion != nil {
		in, out := &in.PartitionKeyVersion, &out.PartitionKeyVersion
		*out = new(float64)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.UniqueKey != nil {
		in, out := &in.UniqueKey, &out.UniqueKey
		*out = make([]UniqueKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinGraphObservation.
func (in *GremlinGraphObservation) DeepCopy() *GremlinGraphObservation {
	if in == nil {
		return nil
	}
	out := new(GremlinGraphObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinGraphParameters) DeepCopyInto(out *GremlinGraphParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AccountNameRef != nil {
		in, out := &in.AccountNameRef, &out.AccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AccountNameSelector != nil {
		in, out := &in.AccountNameSelector, &out.AccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]GremlinGraphAutoscaleSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConflictResolutionPolicy != nil {
		in, out := &in.ConflictResolutionPolicy, &out.ConflictResolutionPolicy
		*out = make([]ConflictResolutionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseNameRef != nil {
		in, out := &in.DatabaseNameRef, &out.DatabaseNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseNameSelector != nil {
		in, out := &in.DatabaseNameSelector, &out.DatabaseNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.IndexPolicy != nil {
		in, out := &in.IndexPolicy, &out.IndexPolicy
		*out = make([]IndexPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PartitionKeyPath != nil {
		in, out := &in.PartitionKeyPath, &out.PartitionKeyPath
		*out = new(string)
		**out = **in
	}
	if in.PartitionKeyVersion != nil {
		in, out := &in.PartitionKeyVersion, &out.PartitionKeyVersion
		*out = new(float64)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.UniqueKey != nil {
		in, out := &in.UniqueKey, &out.UniqueKey
		*out = make([]UniqueKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinGraphParameters.
func (in *GremlinGraphParameters) DeepCopy() *GremlinGraphParameters {
	if in == nil {
		return nil
	}
	out := new(GremlinGraphParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinGraphSpec) DeepCopyInto(out *GremlinGraphSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinGraphSpec.
func (in *GremlinGraphSpec) DeepCopy() *GremlinGraphSpec {
	if in == nil {
		return nil
	}
	out := new(GremlinGraphSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinGraphStatus) DeepCopyInto(out *GremlinGraphStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinGraphStatus.
func (in *GremlinGraphStatus) DeepCopy() *GremlinGraphStatus {
	if in == nil {
		return nil
	}
	out := new(GremlinGraphStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityInitParameters) DeepCopyInto(out *IdentityInitParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityInitParameters.
func (in *IdentityInitParameters) DeepCopy() *IdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityObservation) DeepCopyInto(out *IdentityObservation) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityObservation.
func (in *IdentityObservation) DeepCopy() *IdentityObservation {
	if in == nil {
		return nil
	}
	out := new(IdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityParameters) DeepCopyInto(out *IdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityParameters.
func (in *IdentityParameters) DeepCopy() *IdentityParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludedPathInitParameters) DeepCopyInto(out *IncludedPathInitParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludedPathInitParameters.
func (in *IncludedPathInitParameters) DeepCopy() *IncludedPathInitParameters {
	if in == nil {
		return nil
	}
	out := new(IncludedPathInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludedPathObservation) DeepCopyInto(out *IncludedPathObservation) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludedPathObservation.
func (in *IncludedPathObservation) DeepCopy() *IncludedPathObservation {
	if in == nil {
		return nil
	}
	out := new(IncludedPathObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludedPathParameters) DeepCopyInto(out *IncludedPathParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludedPathParameters.
func (in *IncludedPathParameters) DeepCopy() *IncludedPathParameters {
	if in == nil {
		return nil
	}
	out := new(IncludedPathParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexInitParameters) DeepCopyInto(out *IndexInitParameters) {
	*out = *in
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexInitParameters.
func (in *IndexInitParameters) DeepCopy() *IndexInitParameters {
	if in == nil {
		return nil
	}
	out := new(IndexInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexObservation) DeepCopyInto(out *IndexObservation) {
	*out = *in
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexObservation.
func (in *IndexObservation) DeepCopy() *IndexObservation {
	if in == nil {
		return nil
	}
	out := new(IndexObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexParameters) DeepCopyInto(out *IndexParameters) {
	*out = *in
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexParameters.
func (in *IndexParameters) DeepCopy() *IndexParameters {
	if in == nil {
		return nil
	}
	out := new(IndexParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexPolicyInitParameters) DeepCopyInto(out *IndexPolicyInitParameters) {
	*out = *in
	if in.Automatic != nil {
		in, out := &in.Automatic, &out.Automatic
		*out = new(bool)
		**out = **in
	}
	if in.CompositeIndex != nil {
		in, out := &in.CompositeIndex, &out.CompositeIndex
		*out = make([]CompositeIndexInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludedPaths != nil {
		in, out := &in.IncludedPaths, &out.IncludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IndexingMode != nil {
		in, out := &in.IndexingMode, &out.IndexingMode
		*out = new(string)
		**out = **in
	}
	if in.SpatialIndex != nil {
		in, out := &in.SpatialIndex, &out.SpatialIndex
		*out = make([]SpatialIndexInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexPolicyInitParameters.
func (in *IndexPolicyInitParameters) DeepCopy() *IndexPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(IndexPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexPolicyObservation) DeepCopyInto(out *IndexPolicyObservation) {
	*out = *in
	if in.Automatic != nil {
		in, out := &in.Automatic, &out.Automatic
		*out = new(bool)
		**out = **in
	}
	if in.CompositeIndex != nil {
		in, out := &in.CompositeIndex, &out.CompositeIndex
		*out = make([]CompositeIndexObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludedPaths != nil {
		in, out := &in.IncludedPaths, &out.IncludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IndexingMode != nil {
		in, out := &in.IndexingMode, &out.IndexingMode
		*out = new(string)
		**out = **in
	}
	if in.SpatialIndex != nil {
		in, out := &in.SpatialIndex, &out.SpatialIndex
		*out = make([]SpatialIndexObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexPolicyObservation.
func (in *IndexPolicyObservation) DeepCopy() *IndexPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(IndexPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexPolicyParameters) DeepCopyInto(out *IndexPolicyParameters) {
	*out = *in
	if in.Automatic != nil {
		in, out := &in.Automatic, &out.Automatic
		*out = new(bool)
		**out = **in
	}
	if in.CompositeIndex != nil {
		in, out := &in.CompositeIndex, &out.CompositeIndex
		*out = make([]CompositeIndexParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludedPaths != nil {
		in, out := &in.IncludedPaths, &out.IncludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IndexingMode != nil {
		in, out := &in.IndexingMode, &out.IndexingMode
		*out = new(string)
		**out = **in
	}
	if in.SpatialIndex != nil {
		in, out := &in.SpatialIndex, &out.SpatialIndex
		*out = make([]SpatialIndexParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexPolicyParameters.
func (in *IndexPolicyParameters) DeepCopy() *IndexPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(IndexPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexingPolicyCompositeIndexInitParameters) DeepCopyInto(out *IndexingPolicyCompositeIndexInitParameters) {
	*out = *in
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = make([]CompositeIndexIndexInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexingPolicyCompositeIndexInitParameters.
func (in *IndexingPolicyCompositeIndexInitParameters) DeepCopy() *IndexingPolicyCompositeIndexInitParameters {
	if in == nil {
		return nil
	}
	out := new(IndexingPolicyCompositeIndexInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexingPolicyCompositeIndexObservation) DeepCopyInto(out *IndexingPolicyCompositeIndexObservation) {
	*out = *in
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = make([]CompositeIndexIndexObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexingPolicyCompositeIndexObservation.
func (in *IndexingPolicyCompositeIndexObservation) DeepCopy() *IndexingPolicyCompositeIndexObservation {
	if in == nil {
		return nil
	}
	out := new(IndexingPolicyCompositeIndexObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexingPolicyCompositeIndexParameters) DeepCopyInto(out *IndexingPolicyCompositeIndexParameters) {
	*out = *in
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = make([]CompositeIndexIndexParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexingPolicyCompositeIndexParameters.
func (in *IndexingPolicyCompositeIndexParameters) DeepCopy() *IndexingPolicyCompositeIndexParameters {
	if in == nil {
		return nil
	}
	out := new(IndexingPolicyCompositeIndexParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexingPolicyInitParameters) DeepCopyInto(out *IndexingPolicyInitParameters) {
	*out = *in
	if in.CompositeIndex != nil {
		in, out := &in.CompositeIndex, &out.CompositeIndex
		*out = make([]IndexingPolicyCompositeIndexInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludedPath != nil {
		in, out := &in.ExcludedPath, &out.ExcludedPath
		*out = make([]ExcludedPathInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IncludedPath != nil {
		in, out := &in.IncludedPath, &out.IncludedPath
		*out = make([]IncludedPathInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IndexingMode != nil {
		in, out := &in.IndexingMode, &out.IndexingMode
		*out = new(string)
		**out = **in
	}
	if in.SpatialIndex != nil {
		in, out := &in.SpatialIndex, &out.SpatialIndex
		*out = make([]IndexingPolicySpatialIndexInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexingPolicyInitParameters.
func (in *IndexingPolicyInitParameters) DeepCopy() *IndexingPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(IndexingPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexingPolicyObservation) DeepCopyInto(out *IndexingPolicyObservation) {
	*out = *in
	if in.CompositeIndex != nil {
		in, out := &in.CompositeIndex, &out.CompositeIndex
		*out = make([]IndexingPolicyCompositeIndexObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludedPath != nil {
		in, out := &in.ExcludedPath, &out.ExcludedPath
		*out = make([]ExcludedPathObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IncludedPath != nil {
		in, out := &in.IncludedPath, &out.IncludedPath
		*out = make([]IncludedPathObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IndexingMode != nil {
		in, out := &in.IndexingMode, &out.IndexingMode
		*out = new(string)
		**out = **in
	}
	if in.SpatialIndex != nil {
		in, out := &in.SpatialIndex, &out.SpatialIndex
		*out = make([]IndexingPolicySpatialIndexObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexingPolicyObservation.
func (in *IndexingPolicyObservation) DeepCopy() *IndexingPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(IndexingPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexingPolicyParameters) DeepCopyInto(out *IndexingPolicyParameters) {
	*out = *in
	if in.CompositeIndex != nil {
		in, out := &in.CompositeIndex, &out.CompositeIndex
		*out = make([]IndexingPolicyCompositeIndexParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludedPath != nil {
		in, out := &in.ExcludedPath, &out.ExcludedPath
		*out = make([]ExcludedPathParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IncludedPath != nil {
		in, out := &in.IncludedPath, &out.IncludedPath
		*out = make([]IncludedPathParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IndexingMode != nil {
		in, out := &in.IndexingMode, &out.IndexingMode
		*out = new(string)
		**out = **in
	}
	if in.SpatialIndex != nil {
		in, out := &in.SpatialIndex, &out.SpatialIndex
		*out = make([]IndexingPolicySpatialIndexParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexingPolicyParameters.
func (in *IndexingPolicyParameters) DeepCopy() *IndexingPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(IndexingPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexingPolicySpatialIndexInitParameters) DeepCopyInto(out *IndexingPolicySpatialIndexInitParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexingPolicySpatialIndexInitParameters.
func (in *IndexingPolicySpatialIndexInitParameters) DeepCopy() *IndexingPolicySpatialIndexInitParameters {
	if in == nil {
		return nil
	}
	out := new(IndexingPolicySpatialIndexInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexingPolicySpatialIndexObservation) DeepCopyInto(out *IndexingPolicySpatialIndexObservation) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexingPolicySpatialIndexObservation.
func (in *IndexingPolicySpatialIndexObservation) DeepCopy() *IndexingPolicySpatialIndexObservation {
	if in == nil {
		return nil
	}
	out := new(IndexingPolicySpatialIndexObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexingPolicySpatialIndexParameters) DeepCopyInto(out *IndexingPolicySpatialIndexParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexingPolicySpatialIndexParameters.
func (in *IndexingPolicySpatialIndexParameters) DeepCopy() *IndexingPolicySpatialIndexParameters {
	if in == nil {
		return nil
	}
	out := new(IndexingPolicySpatialIndexParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoCollection) DeepCopyInto(out *MongoCollection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoCollection.
func (in *MongoCollection) DeepCopy() *MongoCollection {
	if in == nil {
		return nil
	}
	out := new(MongoCollection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongoCollection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoCollectionAutoscaleSettingsInitParameters) DeepCopyInto(out *MongoCollectionAutoscaleSettingsInitParameters) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoCollectionAutoscaleSettingsInitParameters.
func (in *MongoCollectionAutoscaleSettingsInitParameters) DeepCopy() *MongoCollectionAutoscaleSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MongoCollectionAutoscaleSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoCollectionAutoscaleSettingsObservation) DeepCopyInto(out *MongoCollectionAutoscaleSettingsObservation) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoCollectionAutoscaleSettingsObservation.
func (in *MongoCollectionAutoscaleSettingsObservation) DeepCopy() *MongoCollectionAutoscaleSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(MongoCollectionAutoscaleSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoCollectionAutoscaleSettingsParameters) DeepCopyInto(out *MongoCollectionAutoscaleSettingsParameters) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoCollectionAutoscaleSettingsParameters.
func (in *MongoCollectionAutoscaleSettingsParameters) DeepCopy() *MongoCollectionAutoscaleSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(MongoCollectionAutoscaleSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoCollectionIndexInitParameters) DeepCopyInto(out *MongoCollectionIndexInitParameters) {
	*out = *in
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Unique != nil {
		in, out := &in.Unique, &out.Unique
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoCollectionIndexInitParameters.
func (in *MongoCollectionIndexInitParameters) DeepCopy() *MongoCollectionIndexInitParameters {
	if in == nil {
		return nil
	}
	out := new(MongoCollectionIndexInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoCollectionIndexObservation) DeepCopyInto(out *MongoCollectionIndexObservation) {
	*out = *in
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Unique != nil {
		in, out := &in.Unique, &out.Unique
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoCollectionIndexObservation.
func (in *MongoCollectionIndexObservation) DeepCopy() *MongoCollectionIndexObservation {
	if in == nil {
		return nil
	}
	out := new(MongoCollectionIndexObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoCollectionIndexParameters) DeepCopyInto(out *MongoCollectionIndexParameters) {
	*out = *in
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Unique != nil {
		in, out := &in.Unique, &out.Unique
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoCollectionIndexParameters.
func (in *MongoCollectionIndexParameters) DeepCopy() *MongoCollectionIndexParameters {
	if in == nil {
		return nil
	}
	out := new(MongoCollectionIndexParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoCollectionInitParameters) DeepCopyInto(out *MongoCollectionInitParameters) {
	*out = *in
	if in.AnalyticalStorageTTL != nil {
		in, out := &in.AnalyticalStorageTTL, &out.AnalyticalStorageTTL
		*out = new(float64)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]MongoCollectionAutoscaleSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultTTLSeconds != nil {
		in, out := &in.DefaultTTLSeconds, &out.DefaultTTLSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = make([]MongoCollectionIndexInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShardKey != nil {
		in, out := &in.ShardKey, &out.ShardKey
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoCollectionInitParameters.
func (in *MongoCollectionInitParameters) DeepCopy() *MongoCollectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(MongoCollectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoCollectionList) DeepCopyInto(out *MongoCollectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MongoCollection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoCollectionList.
func (in *MongoCollectionList) DeepCopy() *MongoCollectionList {
	if in == nil {
		return nil
	}
	out := new(MongoCollectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongoCollectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoCollectionObservation) DeepCopyInto(out *MongoCollectionObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AnalyticalStorageTTL != nil {
		in, out := &in.AnalyticalStorageTTL, &out.AnalyticalStorageTTL
		*out = new(float64)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]MongoCollectionAutoscaleSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DefaultTTLSeconds != nil {
		in, out := &in.DefaultTTLSeconds, &out.DefaultTTLSeconds
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = make([]MongoCollectionIndexObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ShardKey != nil {
		in, out := &in.ShardKey, &out.ShardKey
		*out = new(string)
		**out = **in
	}
	if in.SystemIndexes != nil {
		in, out := &in.SystemIndexes, &out.SystemIndexes
		*out = make([]SystemIndexesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoCollectionObservation.
func (in *MongoCollectionObservation) DeepCopy() *MongoCollectionObservation {
	if in == nil {
		return nil
	}
	out := new(MongoCollectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoCollectionParameters) DeepCopyInto(out *MongoCollectionParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AccountNameRef != nil {
		in, out := &in.AccountNameRef, &out.AccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AccountNameSelector != nil {
		in, out := &in.AccountNameSelector, &out.AccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AnalyticalStorageTTL != nil {
		in, out := &in.AnalyticalStorageTTL, &out.AnalyticalStorageTTL
		*out = new(float64)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]MongoCollectionAutoscaleSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseNameRef != nil {
		in, out := &in.DatabaseNameRef, &out.DatabaseNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseNameSelector != nil {
		in, out := &in.DatabaseNameSelector, &out.DatabaseNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultTTLSeconds != nil {
		in, out := &in.DefaultTTLSeconds, &out.DefaultTTLSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = make([]MongoCollectionIndexParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ShardKey != nil {
		in, out := &in.ShardKey, &out.ShardKey
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoCollectionParameters.
func (in *MongoCollectionParameters) DeepCopy() *MongoCollectionParameters {
	if in == nil {
		return nil
	}
	out := new(MongoCollectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoCollectionSpec) DeepCopyInto(out *MongoCollectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoCollectionSpec.
func (in *MongoCollectionSpec) DeepCopy() *MongoCollectionSpec {
	if in == nil {
		return nil
	}
	out := new(MongoCollectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoCollectionStatus) DeepCopyInto(out *MongoCollectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoCollectionStatus.
func (in *MongoCollectionStatus) DeepCopy() *MongoCollectionStatus {
	if in == nil {
		return nil
	}
	out := new(MongoCollectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDatabase) DeepCopyInto(out *MongoDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDatabase.
func (in *MongoDatabase) DeepCopy() *MongoDatabase {
	if in == nil {
		return nil
	}
	out := new(MongoDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongoDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDatabaseAutoscaleSettingsInitParameters) DeepCopyInto(out *MongoDatabaseAutoscaleSettingsInitParameters) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDatabaseAutoscaleSettingsInitParameters.
func (in *MongoDatabaseAutoscaleSettingsInitParameters) DeepCopy() *MongoDatabaseAutoscaleSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MongoDatabaseAutoscaleSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDatabaseAutoscaleSettingsObservation) DeepCopyInto(out *MongoDatabaseAutoscaleSettingsObservation) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDatabaseAutoscaleSettingsObservation.
func (in *MongoDatabaseAutoscaleSettingsObservation) DeepCopy() *MongoDatabaseAutoscaleSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(MongoDatabaseAutoscaleSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDatabaseAutoscaleSettingsParameters) DeepCopyInto(out *MongoDatabaseAutoscaleSettingsParameters) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDatabaseAutoscaleSettingsParameters.
func (in *MongoDatabaseAutoscaleSettingsParameters) DeepCopy() *MongoDatabaseAutoscaleSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(MongoDatabaseAutoscaleSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDatabaseInitParameters) DeepCopyInto(out *MongoDatabaseInitParameters) {
	*out = *in
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]MongoDatabaseAutoscaleSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDatabaseInitParameters.
func (in *MongoDatabaseInitParameters) DeepCopy() *MongoDatabaseInitParameters {
	if in == nil {
		return nil
	}
	out := new(MongoDatabaseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDatabaseList) DeepCopyInto(out *MongoDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MongoDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDatabaseList.
func (in *MongoDatabaseList) DeepCopy() *MongoDatabaseList {
	if in == nil {
		return nil
	}
	out := new(MongoDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongoDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDatabaseObservation) DeepCopyInto(out *MongoDatabaseObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]MongoDatabaseAutoscaleSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDatabaseObservation.
func (in *MongoDatabaseObservation) DeepCopy() *MongoDatabaseObservation {
	if in == nil {
		return nil
	}
	out := new(MongoDatabaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDatabaseParameters) DeepCopyInto(out *MongoDatabaseParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AccountNameRef != nil {
		in, out := &in.AccountNameRef, &out.AccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AccountNameSelector != nil {
		in, out := &in.AccountNameSelector, &out.AccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]MongoDatabaseAutoscaleSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDatabaseParameters.
func (in *MongoDatabaseParameters) DeepCopy() *MongoDatabaseParameters {
	if in == nil {
		return nil
	}
	out := new(MongoDatabaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDatabaseSpec) DeepCopyInto(out *MongoDatabaseSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDatabaseSpec.
func (in *MongoDatabaseSpec) DeepCopy() *MongoDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(MongoDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDatabaseStatus) DeepCopyInto(out *MongoDatabaseStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDatabaseStatus.
func (in *MongoDatabaseStatus) DeepCopy() *MongoDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(MongoDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionKeyInitParameters) DeepCopyInto(out *PartitionKeyInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionKeyInitParameters.
func (in *PartitionKeyInitParameters) DeepCopy() *PartitionKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PartitionKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionKeyObservation) DeepCopyInto(out *PartitionKeyObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionKeyObservation.
func (in *PartitionKeyObservation) DeepCopy() *PartitionKeyObservation {
	if in == nil {
		return nil
	}
	out := new(PartitionKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionKeyParameters) DeepCopyInto(out *PartitionKeyParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionKeyParameters.
func (in *PartitionKeyParameters) DeepCopy() *PartitionKeyParameters {
	if in == nil {
		return nil
	}
	out := new(PartitionKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsInitParameters) DeepCopyInto(out *PermissionsInitParameters) {
	*out = *in
	if in.DataActions != nil {
		in, out := &in.DataActions, &out.DataActions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsInitParameters.
func (in *PermissionsInitParameters) DeepCopy() *PermissionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PermissionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsObservation) DeepCopyInto(out *PermissionsObservation) {
	*out = *in
	if in.DataActions != nil {
		in, out := &in.DataActions, &out.DataActions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsObservation.
func (in *PermissionsObservation) DeepCopy() *PermissionsObservation {
	if in == nil {
		return nil
	}
	out := new(PermissionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsParameters) DeepCopyInto(out *PermissionsParameters) {
	*out = *in
	if in.DataActions != nil {
		in, out := &in.DataActions, &out.DataActions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsParameters.
func (in *PermissionsParameters) DeepCopy() *PermissionsParameters {
	if in == nil {
		return nil
	}
	out := new(PermissionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestoreInitParameters) DeepCopyInto(out *RestoreInitParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = make([]DatabaseInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestoreTimestampInUtc != nil {
		in, out := &in.RestoreTimestampInUtc, &out.RestoreTimestampInUtc
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestoreInitParameters.
func (in *RestoreInitParameters) DeepCopy() *RestoreInitParameters {
	if in == nil {
		return nil
	}
	out := new(RestoreInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestoreObservation) DeepCopyInto(out *RestoreObservation) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = make([]DatabaseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestoreTimestampInUtc != nil {
		in, out := &in.RestoreTimestampInUtc, &out.RestoreTimestampInUtc
		*out = new(string)
		**out = **in
	}
	if in.SourceCosmosDBAccountID != nil {
		in, out := &in.SourceCosmosDBAccountID, &out.SourceCosmosDBAccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestoreObservation.
func (in *RestoreObservation) DeepCopy() *RestoreObservation {
	if in == nil {
		return nil
	}
	out := new(RestoreObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestoreParameters) DeepCopyInto(out *RestoreParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = make([]DatabaseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestoreTimestampInUtc != nil {
		in, out := &in.RestoreTimestampInUtc, &out.RestoreTimestampInUtc
		*out = new(string)
		**out = **in
	}
	if in.SourceCosmosDBAccountID != nil {
		in, out := &in.SourceCosmosDBAccountID, &out.SourceCosmosDBAccountID
		*out = new(string)
		**out = **in
	}
	if in.SourceCosmosDBAccountIDRef != nil {
		in, out := &in.SourceCosmosDBAccountIDRef, &out.SourceCosmosDBAccountIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceCosmosDBAccountIDSelector != nil {
		in, out := &in.SourceCosmosDBAccountIDSelector, &out.SourceCosmosDBAccountIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestoreParameters.
func (in *RestoreParameters) DeepCopy() *RestoreParameters {
	if in == nil {
		return nil
	}
	out := new(RestoreParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLContainer) DeepCopyInto(out *SQLContainer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLContainer.
func (in *SQLContainer) DeepCopy() *SQLContainer {
	if in == nil {
		return nil
	}
	out := new(SQLContainer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLContainer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLContainerAutoscaleSettingsInitParameters) DeepCopyInto(out *SQLContainerAutoscaleSettingsInitParameters) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLContainerAutoscaleSettingsInitParameters.
func (in *SQLContainerAutoscaleSettingsInitParameters) DeepCopy() *SQLContainerAutoscaleSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLContainerAutoscaleSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLContainerAutoscaleSettingsObservation) DeepCopyInto(out *SQLContainerAutoscaleSettingsObservation) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLContainerAutoscaleSettingsObservation.
func (in *SQLContainerAutoscaleSettingsObservation) DeepCopy() *SQLContainerAutoscaleSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(SQLContainerAutoscaleSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLContainerAutoscaleSettingsParameters) DeepCopyInto(out *SQLContainerAutoscaleSettingsParameters) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLContainerAutoscaleSettingsParameters.
func (in *SQLContainerAutoscaleSettingsParameters) DeepCopy() *SQLContainerAutoscaleSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(SQLContainerAutoscaleSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLContainerConflictResolutionPolicyInitParameters) DeepCopyInto(out *SQLContainerConflictResolutionPolicyInitParameters) {
	*out = *in
	if in.ConflictResolutionPath != nil {
		in, out := &in.ConflictResolutionPath, &out.ConflictResolutionPath
		*out = new(string)
		**out = **in
	}
	if in.ConflictResolutionProcedure != nil {
		in, out := &in.ConflictResolutionProcedure, &out.ConflictResolutionProcedure
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLContainerConflictResolutionPolicyInitParameters.
func (in *SQLContainerConflictResolutionPolicyInitParameters) DeepCopy() *SQLContainerConflictResolutionPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLContainerConflictResolutionPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLContainerConflictResolutionPolicyObservation) DeepCopyInto(out *SQLContainerConflictResolutionPolicyObservation) {
	*out = *in
	if in.ConflictResolutionPath != nil {
		in, out := &in.ConflictResolutionPath, &out.ConflictResolutionPath
		*out = new(string)
		**out = **in
	}
	if in.ConflictResolutionProcedure != nil {
		in, out := &in.ConflictResolutionProcedure, &out.ConflictResolutionProcedure
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLContainerConflictResolutionPolicyObservation.
func (in *SQLContainerConflictResolutionPolicyObservation) DeepCopy() *SQLContainerConflictResolutionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(SQLContainerConflictResolutionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLContainerConflictResolutionPolicyParameters) DeepCopyInto(out *SQLContainerConflictResolutionPolicyParameters) {
	*out = *in
	if in.ConflictResolutionPath != nil {
		in, out := &in.ConflictResolutionPath, &out.ConflictResolutionPath
		*out = new(string)
		**out = **in
	}
	if in.ConflictResolutionProcedure != nil {
		in, out := &in.ConflictResolutionProcedure, &out.ConflictResolutionProcedure
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLContainerConflictResolutionPolicyParameters.
func (in *SQLContainerConflictResolutionPolicyParameters) DeepCopy() *SQLContainerConflictResolutionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(SQLContainerConflictResolutionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLContainerInitParameters) DeepCopyInto(out *SQLContainerInitParameters) {
	*out = *in
	if in.AnalyticalStorageTTL != nil {
		in, out := &in.AnalyticalStorageTTL, &out.AnalyticalStorageTTL
		*out = new(float64)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]SQLContainerAutoscaleSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConflictResolutionPolicy != nil {
		in, out := &in.ConflictResolutionPolicy, &out.ConflictResolutionPolicy
		*out = make([]SQLContainerConflictResolutionPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.IndexingPolicy != nil {
		in, out := &in.IndexingPolicy, &out.IndexingPolicy
		*out = make([]IndexingPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PartitionKeyPath != nil {
		in, out := &in.PartitionKeyPath, &out.PartitionKeyPath
		*out = new(string)
		**out = **in
	}
	if in.PartitionKeyVersion != nil {
		in, out := &in.PartitionKeyVersion, &out.PartitionKeyVersion
		*out = new(float64)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.UniqueKey != nil {
		in, out := &in.UniqueKey, &out.UniqueKey
		*out = make([]SQLContainerUniqueKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLContainerInitParameters.
func (in *SQLContainerInitParameters) DeepCopy() *SQLContainerInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLContainerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLContainerList) DeepCopyInto(out *SQLContainerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLContainer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLContainerList.
func (in *SQLContainerList) DeepCopy() *SQLContainerList {
	if in == nil {
		return nil
	}
	out := new(SQLContainerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLContainerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLContainerObservation) DeepCopyInto(out *SQLContainerObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AnalyticalStorageTTL != nil {
		in, out := &in.AnalyticalStorageTTL, &out.AnalyticalStorageTTL
		*out = new(float64)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]SQLContainerAutoscaleSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConflictResolutionPolicy != nil {
		in, out := &in.ConflictResolutionPolicy, &out.ConflictResolutionPolicy
		*out = make([]SQLContainerConflictResolutionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IndexingPolicy != nil {
		in, out := &in.IndexingPolicy, &out.IndexingPolicy
		*out = make([]IndexingPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PartitionKeyPath != nil {
		in, out := &in.PartitionKeyPath, &out.PartitionKeyPath
		*out = new(string)
		**out = **in
	}
	if in.PartitionKeyVersion != nil {
		in, out := &in.PartitionKeyVersion, &out.PartitionKeyVersion
		*out = new(float64)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.UniqueKey != nil {
		in, out := &in.UniqueKey, &out.UniqueKey
		*out = make([]SQLContainerUniqueKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLContainerObservation.
func (in *SQLContainerObservation) DeepCopy() *SQLContainerObservation {
	if in == nil {
		return nil
	}
	out := new(SQLContainerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLContainerParameters) DeepCopyInto(out *SQLContainerParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AccountNameRef != nil {
		in, out := &in.AccountNameRef, &out.AccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AccountNameSelector != nil {
		in, out := &in.AccountNameSelector, &out.AccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AnalyticalStorageTTL != nil {
		in, out := &in.AnalyticalStorageTTL, &out.AnalyticalStorageTTL
		*out = new(float64)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]SQLContainerAutoscaleSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConflictResolutionPolicy != nil {
		in, out := &in.ConflictResolutionPolicy, &out.ConflictResolutionPolicy
		*out = make([]SQLContainerConflictResolutionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseNameRef != nil {
		in, out := &in.DatabaseNameRef, &out.DatabaseNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseNameSelector != nil {
		in, out := &in.DatabaseNameSelector, &out.DatabaseNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.IndexingPolicy != nil {
		in, out := &in.IndexingPolicy, &out.IndexingPolicy
		*out = make([]IndexingPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PartitionKeyPath != nil {
		in, out := &in.PartitionKeyPath, &out.PartitionKeyPath
		*out = new(string)
		**out = **in
	}
	if in.PartitionKeyVersion != nil {
		in, out := &in.PartitionKeyVersion, &out.PartitionKeyVersion
		*out = new(float64)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.UniqueKey != nil {
		in, out := &in.UniqueKey, &out.UniqueKey
		*out = make([]SQLContainerUniqueKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLContainerParameters.
func (in *SQLContainerParameters) DeepCopy() *SQLContainerParameters {
	if in == nil {
		return nil
	}
	out := new(SQLContainerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLContainerSpec) DeepCopyInto(out *SQLContainerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLContainerSpec.
func (in *SQLContainerSpec) DeepCopy() *SQLContainerSpec {
	if in == nil {
		return nil
	}
	out := new(SQLContainerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLContainerStatus) DeepCopyInto(out *SQLContainerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLContainerStatus.
func (in *SQLContainerStatus) DeepCopy() *SQLContainerStatus {
	if in == nil {
		return nil
	}
	out := new(SQLContainerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLContainerUniqueKeyInitParameters) DeepCopyInto(out *SQLContainerUniqueKeyInitParameters) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLContainerUniqueKeyInitParameters.
func (in *SQLContainerUniqueKeyInitParameters) DeepCopy() *SQLContainerUniqueKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLContainerUniqueKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLContainerUniqueKeyObservation) DeepCopyInto(out *SQLContainerUniqueKeyObservation) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLContainerUniqueKeyObservation.
func (in *SQLContainerUniqueKeyObservation) DeepCopy() *SQLContainerUniqueKeyObservation {
	if in == nil {
		return nil
	}
	out := new(SQLContainerUniqueKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLContainerUniqueKeyParameters) DeepCopyInto(out *SQLContainerUniqueKeyParameters) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLContainerUniqueKeyParameters.
func (in *SQLContainerUniqueKeyParameters) DeepCopy() *SQLContainerUniqueKeyParameters {
	if in == nil {
		return nil
	}
	out := new(SQLContainerUniqueKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDatabase) DeepCopyInto(out *SQLDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDatabase.
func (in *SQLDatabase) DeepCopy() *SQLDatabase {
	if in == nil {
		return nil
	}
	out := new(SQLDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDatabaseAutoscaleSettingsInitParameters) DeepCopyInto(out *SQLDatabaseAutoscaleSettingsInitParameters) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDatabaseAutoscaleSettingsInitParameters.
func (in *SQLDatabaseAutoscaleSettingsInitParameters) DeepCopy() *SQLDatabaseAutoscaleSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLDatabaseAutoscaleSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDatabaseAutoscaleSettingsObservation) DeepCopyInto(out *SQLDatabaseAutoscaleSettingsObservation) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDatabaseAutoscaleSettingsObservation.
func (in *SQLDatabaseAutoscaleSettingsObservation) DeepCopy() *SQLDatabaseAutoscaleSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(SQLDatabaseAutoscaleSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDatabaseAutoscaleSettingsParameters) DeepCopyInto(out *SQLDatabaseAutoscaleSettingsParameters) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDatabaseAutoscaleSettingsParameters.
func (in *SQLDatabaseAutoscaleSettingsParameters) DeepCopy() *SQLDatabaseAutoscaleSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(SQLDatabaseAutoscaleSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDatabaseInitParameters) DeepCopyInto(out *SQLDatabaseInitParameters) {
	*out = *in
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]SQLDatabaseAutoscaleSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDatabaseInitParameters.
func (in *SQLDatabaseInitParameters) DeepCopy() *SQLDatabaseInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLDatabaseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDatabaseList) DeepCopyInto(out *SQLDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDatabaseList.
func (in *SQLDatabaseList) DeepCopy() *SQLDatabaseList {
	if in == nil {
		return nil
	}
	out := new(SQLDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDatabaseObservation) DeepCopyInto(out *SQLDatabaseObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]SQLDatabaseAutoscaleSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDatabaseObservation.
func (in *SQLDatabaseObservation) DeepCopy() *SQLDatabaseObservation {
	if in == nil {
		return nil
	}
	out := new(SQLDatabaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDatabaseParameters) DeepCopyInto(out *SQLDatabaseParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AccountNameRef != nil {
		in, out := &in.AccountNameRef, &out.AccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AccountNameSelector != nil {
		in, out := &in.AccountNameSelector, &out.AccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]SQLDatabaseAutoscaleSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDatabaseParameters.
func (in *SQLDatabaseParameters) DeepCopy() *SQLDatabaseParameters {
	if in == nil {
		return nil
	}
	out := new(SQLDatabaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDatabaseSpec) DeepCopyInto(out *SQLDatabaseSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDatabaseSpec.
func (in *SQLDatabaseSpec) DeepCopy() *SQLDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(SQLDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDatabaseStatus) DeepCopyInto(out *SQLDatabaseStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDatabaseStatus.
func (in *SQLDatabaseStatus) DeepCopy() *SQLDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(SQLDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDedicatedGateway) DeepCopyInto(out *SQLDedicatedGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDedicatedGateway.
func (in *SQLDedicatedGateway) DeepCopy() *SQLDedicatedGateway {
	if in == nil {
		return nil
	}
	out := new(SQLDedicatedGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLDedicatedGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDedicatedGatewayInitParameters) DeepCopyInto(out *SQLDedicatedGatewayInitParameters) {
	*out = *in
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.InstanceSize != nil {
		in, out := &in.InstanceSize, &out.InstanceSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDedicatedGatewayInitParameters.
func (in *SQLDedicatedGatewayInitParameters) DeepCopy() *SQLDedicatedGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLDedicatedGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDedicatedGatewayList) DeepCopyInto(out *SQLDedicatedGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLDedicatedGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDedicatedGatewayList.
func (in *SQLDedicatedGatewayList) DeepCopy() *SQLDedicatedGatewayList {
	if in == nil {
		return nil
	}
	out := new(SQLDedicatedGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLDedicatedGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDedicatedGatewayObservation) DeepCopyInto(out *SQLDedicatedGatewayObservation) {
	*out = *in
	if in.CosmosDBAccountID != nil {
		in, out := &in.CosmosDBAccountID, &out.CosmosDBAccountID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.InstanceSize != nil {
		in, out := &in.InstanceSize, &out.InstanceSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDedicatedGatewayObservation.
func (in *SQLDedicatedGatewayObservation) DeepCopy() *SQLDedicatedGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(SQLDedicatedGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDedicatedGatewayParameters) DeepCopyInto(out *SQLDedicatedGatewayParameters) {
	*out = *in
	if in.CosmosDBAccountID != nil {
		in, out := &in.CosmosDBAccountID, &out.CosmosDBAccountID
		*out = new(string)
		**out = **in
	}
	if in.CosmosDBAccountIDRef != nil {
		in, out := &in.CosmosDBAccountIDRef, &out.CosmosDBAccountIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CosmosDBAccountIDSelector != nil {
		in, out := &in.CosmosDBAccountIDSelector, &out.CosmosDBAccountIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.InstanceSize != nil {
		in, out := &in.InstanceSize, &out.InstanceSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDedicatedGatewayParameters.
func (in *SQLDedicatedGatewayParameters) DeepCopy() *SQLDedicatedGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(SQLDedicatedGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDedicatedGatewaySpec) DeepCopyInto(out *SQLDedicatedGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDedicatedGatewaySpec.
func (in *SQLDedicatedGatewaySpec) DeepCopy() *SQLDedicatedGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(SQLDedicatedGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLDedicatedGatewayStatus) DeepCopyInto(out *SQLDedicatedGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLDedicatedGatewayStatus.
func (in *SQLDedicatedGatewayStatus) DeepCopy() *SQLDedicatedGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(SQLDedicatedGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLFunction) DeepCopyInto(out *SQLFunction) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLFunction.
func (in *SQLFunction) DeepCopy() *SQLFunction {
	if in == nil {
		return nil
	}
	out := new(SQLFunction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLFunction) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLFunctionInitParameters) DeepCopyInto(out *SQLFunctionInitParameters) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLFunctionInitParameters.
func (in *SQLFunctionInitParameters) DeepCopy() *SQLFunctionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLFunctionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLFunctionList) DeepCopyInto(out *SQLFunctionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLFunction, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLFunctionList.
func (in *SQLFunctionList) DeepCopy() *SQLFunctionList {
	if in == nil {
		return nil
	}
	out := new(SQLFunctionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLFunctionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLFunctionObservation) DeepCopyInto(out *SQLFunctionObservation) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.ContainerID != nil {
		in, out := &in.ContainerID, &out.ContainerID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLFunctionObservation.
func (in *SQLFunctionObservation) DeepCopy() *SQLFunctionObservation {
	if in == nil {
		return nil
	}
	out := new(SQLFunctionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLFunctionParameters) DeepCopyInto(out *SQLFunctionParameters) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.ContainerID != nil {
		in, out := &in.ContainerID, &out.ContainerID
		*out = new(string)
		**out = **in
	}
	if in.ContainerIDRef != nil {
		in, out := &in.ContainerIDRef, &out.ContainerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerIDSelector != nil {
		in, out := &in.ContainerIDSelector, &out.ContainerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLFunctionParameters.
func (in *SQLFunctionParameters) DeepCopy() *SQLFunctionParameters {
	if in == nil {
		return nil
	}
	out := new(SQLFunctionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLFunctionSpec) DeepCopyInto(out *SQLFunctionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLFunctionSpec.
func (in *SQLFunctionSpec) DeepCopy() *SQLFunctionSpec {
	if in == nil {
		return nil
	}
	out := new(SQLFunctionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLFunctionStatus) DeepCopyInto(out *SQLFunctionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLFunctionStatus.
func (in *SQLFunctionStatus) DeepCopy() *SQLFunctionStatus {
	if in == nil {
		return nil
	}
	out := new(SQLFunctionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLRoleAssignment) DeepCopyInto(out *SQLRoleAssignment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLRoleAssignment.
func (in *SQLRoleAssignment) DeepCopy() *SQLRoleAssignment {
	if in == nil {
		return nil
	}
	out := new(SQLRoleAssignment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLRoleAssignment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLRoleAssignmentInitParameters) DeepCopyInto(out *SQLRoleAssignmentInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLRoleAssignmentInitParameters.
func (in *SQLRoleAssignmentInitParameters) DeepCopy() *SQLRoleAssignmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLRoleAssignmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLRoleAssignmentList) DeepCopyInto(out *SQLRoleAssignmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLRoleAssignment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLRoleAssignmentList.
func (in *SQLRoleAssignmentList) DeepCopy() *SQLRoleAssignmentList {
	if in == nil {
		return nil
	}
	out := new(SQLRoleAssignmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLRoleAssignmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLRoleAssignmentObservation) DeepCopyInto(out *SQLRoleAssignmentObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.RoleDefinitionID != nil {
		in, out := &in.RoleDefinitionID, &out.RoleDefinitionID
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLRoleAssignmentObservation.
func (in *SQLRoleAssignmentObservation) DeepCopy() *SQLRoleAssignmentObservation {
	if in == nil {
		return nil
	}
	out := new(SQLRoleAssignmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLRoleAssignmentParameters) DeepCopyInto(out *SQLRoleAssignmentParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AccountNameRef != nil {
		in, out := &in.AccountNameRef, &out.AccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AccountNameSelector != nil {
		in, out := &in.AccountNameSelector, &out.AccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleDefinitionID != nil {
		in, out := &in.RoleDefinitionID, &out.RoleDefinitionID
		*out = new(string)
		**out = **in
	}
	if in.RoleDefinitionIDRef != nil {
		in, out := &in.RoleDefinitionIDRef, &out.RoleDefinitionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleDefinitionIDSelector != nil {
		in, out := &in.RoleDefinitionIDSelector, &out.RoleDefinitionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.ScopeRef != nil {
		in, out := &in.ScopeRef, &out.ScopeRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ScopeSelector != nil {
		in, out := &in.ScopeSelector, &out.ScopeSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLRoleAssignmentParameters.
func (in *SQLRoleAssignmentParameters) DeepCopy() *SQLRoleAssignmentParameters {
	if in == nil {
		return nil
	}
	out := new(SQLRoleAssignmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLRoleAssignmentSpec) DeepCopyInto(out *SQLRoleAssignmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLRoleAssignmentSpec.
func (in *SQLRoleAssignmentSpec) DeepCopy() *SQLRoleAssignmentSpec {
	if in == nil {
		return nil
	}
	out := new(SQLRoleAssignmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLRoleAssignmentStatus) DeepCopyInto(out *SQLRoleAssignmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLRoleAssignmentStatus.
func (in *SQLRoleAssignmentStatus) DeepCopy() *SQLRoleAssignmentStatus {
	if in == nil {
		return nil
	}
	out := new(SQLRoleAssignmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLRoleDefinition) DeepCopyInto(out *SQLRoleDefinition) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLRoleDefinition.
func (in *SQLRoleDefinition) DeepCopy() *SQLRoleDefinition {
	if in == nil {
		return nil
	}
	out := new(SQLRoleDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLRoleDefinition) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLRoleDefinitionInitParameters) DeepCopyInto(out *SQLRoleDefinitionInitParameters) {
	*out = *in
	if in.AssignableScopes != nil {
		in, out := &in.AssignableScopes, &out.AssignableScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]PermissionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleDefinitionID != nil {
		in, out := &in.RoleDefinitionID, &out.RoleDefinitionID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLRoleDefinitionInitParameters.
func (in *SQLRoleDefinitionInitParameters) DeepCopy() *SQLRoleDefinitionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLRoleDefinitionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLRoleDefinitionList) DeepCopyInto(out *SQLRoleDefinitionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLRoleDefinition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLRoleDefinitionList.
func (in *SQLRoleDefinitionList) DeepCopy() *SQLRoleDefinitionList {
	if in == nil {
		return nil
	}
	out := new(SQLRoleDefinitionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLRoleDefinitionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLRoleDefinitionObservation) DeepCopyInto(out *SQLRoleDefinitionObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AssignableScopes != nil {
		in, out := &in.AssignableScopes, &out.AssignableScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]PermissionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.RoleDefinitionID != nil {
		in, out := &in.RoleDefinitionID, &out.RoleDefinitionID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLRoleDefinitionObservation.
func (in *SQLRoleDefinitionObservation) DeepCopy() *SQLRoleDefinitionObservation {
	if in == nil {
		return nil
	}
	out := new(SQLRoleDefinitionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLRoleDefinitionParameters) DeepCopyInto(out *SQLRoleDefinitionParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AccountNameRef != nil {
		in, out := &in.AccountNameRef, &out.AccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AccountNameSelector != nil {
		in, out := &in.AccountNameSelector, &out.AccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AssignableScopes != nil {
		in, out := &in.AssignableScopes, &out.AssignableScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]PermissionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleDefinitionID != nil {
		in, out := &in.RoleDefinitionID, &out.RoleDefinitionID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLRoleDefinitionParameters.
func (in *SQLRoleDefinitionParameters) DeepCopy() *SQLRoleDefinitionParameters {
	if in == nil {
		return nil
	}
	out := new(SQLRoleDefinitionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLRoleDefinitionSpec) DeepCopyInto(out *SQLRoleDefinitionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLRoleDefinitionSpec.
func (in *SQLRoleDefinitionSpec) DeepCopy() *SQLRoleDefinitionSpec {
	if in == nil {
		return nil
	}
	out := new(SQLRoleDefinitionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLRoleDefinitionStatus) DeepCopyInto(out *SQLRoleDefinitionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLRoleDefinitionStatus.
func (in *SQLRoleDefinitionStatus) DeepCopy() *SQLRoleDefinitionStatus {
	if in == nil {
		return nil
	}
	out := new(SQLRoleDefinitionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLStoredProcedure) DeepCopyInto(out *SQLStoredProcedure) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLStoredProcedure.
func (in *SQLStoredProcedure) DeepCopy() *SQLStoredProcedure {
	if in == nil {
		return nil
	}
	out := new(SQLStoredProcedure)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLStoredProcedure) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLStoredProcedureInitParameters) DeepCopyInto(out *SQLStoredProcedureInitParameters) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLStoredProcedureInitParameters.
func (in *SQLStoredProcedureInitParameters) DeepCopy() *SQLStoredProcedureInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLStoredProcedureInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLStoredProcedureList) DeepCopyInto(out *SQLStoredProcedureList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLStoredProcedure, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLStoredProcedureList.
func (in *SQLStoredProcedureList) DeepCopy() *SQLStoredProcedureList {
	if in == nil {
		return nil
	}
	out := new(SQLStoredProcedureList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLStoredProcedureList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLStoredProcedureObservation) DeepCopyInto(out *SQLStoredProcedureObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLStoredProcedureObservation.
func (in *SQLStoredProcedureObservation) DeepCopy() *SQLStoredProcedureObservation {
	if in == nil {
		return nil
	}
	out := new(SQLStoredProcedureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLStoredProcedureParameters) DeepCopyInto(out *SQLStoredProcedureParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AccountNameRef != nil {
		in, out := &in.AccountNameRef, &out.AccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AccountNameSelector != nil {
		in, out := &in.AccountNameSelector, &out.AccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.ContainerNameRef != nil {
		in, out := &in.ContainerNameRef, &out.ContainerNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerNameSelector != nil {
		in, out := &in.ContainerNameSelector, &out.ContainerNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseNameRef != nil {
		in, out := &in.DatabaseNameRef, &out.DatabaseNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseNameSelector != nil {
		in, out := &in.DatabaseNameSelector, &out.DatabaseNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLStoredProcedureParameters.
func (in *SQLStoredProcedureParameters) DeepCopy() *SQLStoredProcedureParameters {
	if in == nil {
		return nil
	}
	out := new(SQLStoredProcedureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLStoredProcedureSpec) DeepCopyInto(out *SQLStoredProcedureSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLStoredProcedureSpec.
func (in *SQLStoredProcedureSpec) DeepCopy() *SQLStoredProcedureSpec {
	if in == nil {
		return nil
	}
	out := new(SQLStoredProcedureSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLStoredProcedureStatus) DeepCopyInto(out *SQLStoredProcedureStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLStoredProcedureStatus.
func (in *SQLStoredProcedureStatus) DeepCopy() *SQLStoredProcedureStatus {
	if in == nil {
		return nil
	}
	out := new(SQLStoredProcedureStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTrigger) DeepCopyInto(out *SQLTrigger) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTrigger.
func (in *SQLTrigger) DeepCopy() *SQLTrigger {
	if in == nil {
		return nil
	}
	out := new(SQLTrigger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLTrigger) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTriggerInitParameters) DeepCopyInto(out *SQLTriggerInitParameters) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.Operation != nil {
		in, out := &in.Operation, &out.Operation
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTriggerInitParameters.
func (in *SQLTriggerInitParameters) DeepCopy() *SQLTriggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTriggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTriggerList) DeepCopyInto(out *SQLTriggerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SQLTrigger, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTriggerList.
func (in *SQLTriggerList) DeepCopy() *SQLTriggerList {
	if in == nil {
		return nil
	}
	out := new(SQLTriggerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SQLTriggerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTriggerObservation) DeepCopyInto(out *SQLTriggerObservation) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.ContainerID != nil {
		in, out := &in.ContainerID, &out.ContainerID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Operation != nil {
		in, out := &in.Operation, &out.Operation
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTriggerObservation.
func (in *SQLTriggerObservation) DeepCopy() *SQLTriggerObservation {
	if in == nil {
		return nil
	}
	out := new(SQLTriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTriggerParameters) DeepCopyInto(out *SQLTriggerParameters) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.ContainerID != nil {
		in, out := &in.ContainerID, &out.ContainerID
		*out = new(string)
		**out = **in
	}
	if in.ContainerIDRef != nil {
		in, out := &in.ContainerIDRef, &out.ContainerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerIDSelector != nil {
		in, out := &in.ContainerIDSelector, &out.ContainerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Operation != nil {
		in, out := &in.Operation, &out.Operation
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTriggerParameters.
func (in *SQLTriggerParameters) DeepCopy() *SQLTriggerParameters {
	if in == nil {
		return nil
	}
	out := new(SQLTriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTriggerSpec) DeepCopyInto(out *SQLTriggerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTriggerSpec.
func (in *SQLTriggerSpec) DeepCopy() *SQLTriggerSpec {
	if in == nil {
		return nil
	}
	out := new(SQLTriggerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLTriggerStatus) DeepCopyInto(out *SQLTriggerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLTriggerStatus.
func (in *SQLTriggerStatus) DeepCopy() *SQLTriggerStatus {
	if in == nil {
		return nil
	}
	out := new(SQLTriggerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaInitParameters) DeepCopyInto(out *SchemaInitParameters) {
	*out = *in
	if in.ClusterKey != nil {
		in, out := &in.ClusterKey, &out.ClusterKey
		*out = make([]ClusterKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]ColumnInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PartitionKey != nil {
		in, out := &in.PartitionKey, &out.PartitionKey
		*out = make([]PartitionKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaInitParameters.
func (in *SchemaInitParameters) DeepCopy() *SchemaInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchemaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaObservation) DeepCopyInto(out *SchemaObservation) {
	*out = *in
	if in.ClusterKey != nil {
		in, out := &in.ClusterKey, &out.ClusterKey
		*out = make([]ClusterKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]ColumnObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PartitionKey != nil {
		in, out := &in.PartitionKey, &out.PartitionKey
		*out = make([]PartitionKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaObservation.
func (in *SchemaObservation) DeepCopy() *SchemaObservation {
	if in == nil {
		return nil
	}
	out := new(SchemaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaParameters) DeepCopyInto(out *SchemaParameters) {
	*out = *in
	if in.ClusterKey != nil {
		in, out := &in.ClusterKey, &out.ClusterKey
		*out = make([]ClusterKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]ColumnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PartitionKey != nil {
		in, out := &in.PartitionKey, &out.PartitionKey
		*out = make([]PartitionKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaParameters.
func (in *SchemaParameters) DeepCopy() *SchemaParameters {
	if in == nil {
		return nil
	}
	out := new(SchemaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpatialIndexInitParameters) DeepCopyInto(out *SpatialIndexInitParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpatialIndexInitParameters.
func (in *SpatialIndexInitParameters) DeepCopy() *SpatialIndexInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpatialIndexInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpatialIndexObservation) DeepCopyInto(out *SpatialIndexObservation) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpatialIndexObservation.
func (in *SpatialIndexObservation) DeepCopy() *SpatialIndexObservation {
	if in == nil {
		return nil
	}
	out := new(SpatialIndexObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpatialIndexParameters) DeepCopyInto(out *SpatialIndexParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpatialIndexParameters.
func (in *SpatialIndexParameters) DeepCopy() *SpatialIndexParameters {
	if in == nil {
		return nil
	}
	out := new(SpatialIndexParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemIndexesInitParameters) DeepCopyInto(out *SystemIndexesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemIndexesInitParameters.
func (in *SystemIndexesInitParameters) DeepCopy() *SystemIndexesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SystemIndexesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemIndexesObservation) DeepCopyInto(out *SystemIndexesObservation) {
	*out = *in
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Unique != nil {
		in, out := &in.Unique, &out.Unique
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemIndexesObservation.
func (in *SystemIndexesObservation) DeepCopy() *SystemIndexesObservation {
	if in == nil {
		return nil
	}
	out := new(SystemIndexesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemIndexesParameters) DeepCopyInto(out *SystemIndexesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemIndexesParameters.
func (in *SystemIndexesParameters) DeepCopy() *SystemIndexesParameters {
	if in == nil {
		return nil
	}
	out := new(SystemIndexesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Table) DeepCopyInto(out *Table) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Table.
func (in *Table) DeepCopy() *Table {
	if in == nil {
		return nil
	}
	out := new(Table)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Table) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableAutoscaleSettingsInitParameters) DeepCopyInto(out *TableAutoscaleSettingsInitParameters) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableAutoscaleSettingsInitParameters.
func (in *TableAutoscaleSettingsInitParameters) DeepCopy() *TableAutoscaleSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableAutoscaleSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableAutoscaleSettingsObservation) DeepCopyInto(out *TableAutoscaleSettingsObservation) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableAutoscaleSettingsObservation.
func (in *TableAutoscaleSettingsObservation) DeepCopy() *TableAutoscaleSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(TableAutoscaleSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableAutoscaleSettingsParameters) DeepCopyInto(out *TableAutoscaleSettingsParameters) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableAutoscaleSettingsParameters.
func (in *TableAutoscaleSettingsParameters) DeepCopy() *TableAutoscaleSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(TableAutoscaleSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableInitParameters) DeepCopyInto(out *TableInitParameters) {
	*out = *in
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]TableAutoscaleSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableInitParameters.
func (in *TableInitParameters) DeepCopy() *TableInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableList) DeepCopyInto(out *TableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Table, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableList.
func (in *TableList) DeepCopy() *TableList {
	if in == nil {
		return nil
	}
	out := new(TableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableObservation) DeepCopyInto(out *TableObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]TableAutoscaleSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableObservation.
func (in *TableObservation) DeepCopy() *TableObservation {
	if in == nil {
		return nil
	}
	out := new(TableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableParameters) DeepCopyInto(out *TableParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AccountNameRef != nil {
		in, out := &in.AccountNameRef, &out.AccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AccountNameSelector != nil {
		in, out := &in.AccountNameSelector, &out.AccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = make([]TableAutoscaleSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableParameters.
func (in *TableParameters) DeepCopy() *TableParameters {
	if in == nil {
		return nil
	}
	out := new(TableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableSpec) DeepCopyInto(out *TableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableSpec.
func (in *TableSpec) DeepCopy() *TableSpec {
	if in == nil {
		return nil
	}
	out := new(TableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableStatus) DeepCopyInto(out *TableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableStatus.
func (in *TableStatus) DeepCopy() *TableStatus {
	if in == nil {
		return nil
	}
	out := new(TableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UniqueKeyInitParameters) DeepCopyInto(out *UniqueKeyInitParameters) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UniqueKeyInitParameters.
func (in *UniqueKeyInitParameters) DeepCopy() *UniqueKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(UniqueKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UniqueKeyObservation) DeepCopyInto(out *UniqueKeyObservation) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UniqueKeyObservation.
func (in *UniqueKeyObservation) DeepCopy() *UniqueKeyObservation {
	if in == nil {
		return nil
	}
	out := new(UniqueKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UniqueKeyParameters) DeepCopyInto(out *UniqueKeyParameters) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UniqueKeyParameters.
func (in *UniqueKeyParameters) DeepCopy() *UniqueKeyParameters {
	if in == nil {
		return nil
	}
	out := new(UniqueKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkRuleInitParameters) DeepCopyInto(out *VirtualNetworkRuleInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IgnoreMissingVnetServiceEndpoint != nil {
		in, out := &in.IgnoreMissingVnetServiceEndpoint, &out.IgnoreMissingVnetServiceEndpoint
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkRuleInitParameters.
func (in *VirtualNetworkRuleInitParameters) DeepCopy() *VirtualNetworkRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkRuleObservation) DeepCopyInto(out *VirtualNetworkRuleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IgnoreMissingVnetServiceEndpoint != nil {
		in, out := &in.IgnoreMissingVnetServiceEndpoint, &out.IgnoreMissingVnetServiceEndpoint
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkRuleObservation.
func (in *VirtualNetworkRuleObservation) DeepCopy() *VirtualNetworkRuleObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkRuleParameters) DeepCopyInto(out *VirtualNetworkRuleParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IgnoreMissingVnetServiceEndpoint != nil {
		in, out := &in.IgnoreMissingVnetServiceEndpoint, &out.IgnoreMissingVnetServiceEndpoint
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkRuleParameters.
func (in *VirtualNetworkRuleParameters) DeepCopy() *VirtualNetworkRuleParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkRuleParameters)
	in.DeepCopyInto(out)
	return out
}
