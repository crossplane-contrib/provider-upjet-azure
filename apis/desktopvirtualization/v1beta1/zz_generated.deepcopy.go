//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostPoolInitParameters) DeepCopyInto(out *HostPoolInitParameters) {
	*out = *in
	if in.ScalingPlanEnabled != nil {
		in, out := &in.ScalingPlanEnabled, &out.ScalingPlanEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostPoolInitParameters.
func (in *HostPoolInitParameters) DeepCopy() *HostPoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(HostPoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostPoolObservation) DeepCopyInto(out *HostPoolObservation) {
	*out = *in
	if in.HostpoolID != nil {
		in, out := &in.HostpoolID, &out.HostpoolID
		*out = new(string)
		**out = **in
	}
	if in.ScalingPlanEnabled != nil {
		in, out := &in.ScalingPlanEnabled, &out.ScalingPlanEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostPoolObservation.
func (in *HostPoolObservation) DeepCopy() *HostPoolObservation {
	if in == nil {
		return nil
	}
	out := new(HostPoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostPoolParameters) DeepCopyInto(out *HostPoolParameters) {
	*out = *in
	if in.HostpoolID != nil {
		in, out := &in.HostpoolID, &out.HostpoolID
		*out = new(string)
		**out = **in
	}
	if in.HostpoolIDRef != nil {
		in, out := &in.HostpoolIDRef, &out.HostpoolIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.HostpoolIDSelector != nil {
		in, out := &in.HostpoolIDSelector, &out.HostpoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ScalingPlanEnabled != nil {
		in, out := &in.ScalingPlanEnabled, &out.ScalingPlanEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostPoolParameters.
func (in *HostPoolParameters) DeepCopy() *HostPoolParameters {
	if in == nil {
		return nil
	}
	out := new(HostPoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleInitParameters) DeepCopyInto(out *ScheduleInitParameters) {
	*out = *in
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OffPeakLoadBalancingAlgorithm != nil {
		in, out := &in.OffPeakLoadBalancingAlgorithm, &out.OffPeakLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.OffPeakStartTime != nil {
		in, out := &in.OffPeakStartTime, &out.OffPeakStartTime
		*out = new(string)
		**out = **in
	}
	if in.PeakLoadBalancingAlgorithm != nil {
		in, out := &in.PeakLoadBalancingAlgorithm, &out.PeakLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.PeakStartTime != nil {
		in, out := &in.PeakStartTime, &out.PeakStartTime
		*out = new(string)
		**out = **in
	}
	if in.RampDownCapacityThresholdPercent != nil {
		in, out := &in.RampDownCapacityThresholdPercent, &out.RampDownCapacityThresholdPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampDownForceLogoffUsers != nil {
		in, out := &in.RampDownForceLogoffUsers, &out.RampDownForceLogoffUsers
		*out = new(bool)
		**out = **in
	}
	if in.RampDownLoadBalancingAlgorithm != nil {
		in, out := &in.RampDownLoadBalancingAlgorithm, &out.RampDownLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.RampDownMinimumHostsPercent != nil {
		in, out := &in.RampDownMinimumHostsPercent, &out.RampDownMinimumHostsPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampDownNotificationMessage != nil {
		in, out := &in.RampDownNotificationMessage, &out.RampDownNotificationMessage
		*out = new(string)
		**out = **in
	}
	if in.RampDownStartTime != nil {
		in, out := &in.RampDownStartTime, &out.RampDownStartTime
		*out = new(string)
		**out = **in
	}
	if in.RampDownStopHostsWhen != nil {
		in, out := &in.RampDownStopHostsWhen, &out.RampDownStopHostsWhen
		*out = new(string)
		**out = **in
	}
	if in.RampDownWaitTimeMinutes != nil {
		in, out := &in.RampDownWaitTimeMinutes, &out.RampDownWaitTimeMinutes
		*out = new(float64)
		**out = **in
	}
	if in.RampUpCapacityThresholdPercent != nil {
		in, out := &in.RampUpCapacityThresholdPercent, &out.RampUpCapacityThresholdPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampUpLoadBalancingAlgorithm != nil {
		in, out := &in.RampUpLoadBalancingAlgorithm, &out.RampUpLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.RampUpMinimumHostsPercent != nil {
		in, out := &in.RampUpMinimumHostsPercent, &out.RampUpMinimumHostsPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampUpStartTime != nil {
		in, out := &in.RampUpStartTime, &out.RampUpStartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleInitParameters.
func (in *ScheduleInitParameters) DeepCopy() *ScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleObservation) DeepCopyInto(out *ScheduleObservation) {
	*out = *in
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OffPeakLoadBalancingAlgorithm != nil {
		in, out := &in.OffPeakLoadBalancingAlgorithm, &out.OffPeakLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.OffPeakStartTime != nil {
		in, out := &in.OffPeakStartTime, &out.OffPeakStartTime
		*out = new(string)
		**out = **in
	}
	if in.PeakLoadBalancingAlgorithm != nil {
		in, out := &in.PeakLoadBalancingAlgorithm, &out.PeakLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.PeakStartTime != nil {
		in, out := &in.PeakStartTime, &out.PeakStartTime
		*out = new(string)
		**out = **in
	}
	if in.RampDownCapacityThresholdPercent != nil {
		in, out := &in.RampDownCapacityThresholdPercent, &out.RampDownCapacityThresholdPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampDownForceLogoffUsers != nil {
		in, out := &in.RampDownForceLogoffUsers, &out.RampDownForceLogoffUsers
		*out = new(bool)
		**out = **in
	}
	if in.RampDownLoadBalancingAlgorithm != nil {
		in, out := &in.RampDownLoadBalancingAlgorithm, &out.RampDownLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.RampDownMinimumHostsPercent != nil {
		in, out := &in.RampDownMinimumHostsPercent, &out.RampDownMinimumHostsPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampDownNotificationMessage != nil {
		in, out := &in.RampDownNotificationMessage, &out.RampDownNotificationMessage
		*out = new(string)
		**out = **in
	}
	if in.RampDownStartTime != nil {
		in, out := &in.RampDownStartTime, &out.RampDownStartTime
		*out = new(string)
		**out = **in
	}
	if in.RampDownStopHostsWhen != nil {
		in, out := &in.RampDownStopHostsWhen, &out.RampDownStopHostsWhen
		*out = new(string)
		**out = **in
	}
	if in.RampDownWaitTimeMinutes != nil {
		in, out := &in.RampDownWaitTimeMinutes, &out.RampDownWaitTimeMinutes
		*out = new(float64)
		**out = **in
	}
	if in.RampUpCapacityThresholdPercent != nil {
		in, out := &in.RampUpCapacityThresholdPercent, &out.RampUpCapacityThresholdPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampUpLoadBalancingAlgorithm != nil {
		in, out := &in.RampUpLoadBalancingAlgorithm, &out.RampUpLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.RampUpMinimumHostsPercent != nil {
		in, out := &in.RampUpMinimumHostsPercent, &out.RampUpMinimumHostsPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampUpStartTime != nil {
		in, out := &in.RampUpStartTime, &out.RampUpStartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleObservation.
func (in *ScheduleObservation) DeepCopy() *ScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleParameters) DeepCopyInto(out *ScheduleParameters) {
	*out = *in
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OffPeakLoadBalancingAlgorithm != nil {
		in, out := &in.OffPeakLoadBalancingAlgorithm, &out.OffPeakLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.OffPeakStartTime != nil {
		in, out := &in.OffPeakStartTime, &out.OffPeakStartTime
		*out = new(string)
		**out = **in
	}
	if in.PeakLoadBalancingAlgorithm != nil {
		in, out := &in.PeakLoadBalancingAlgorithm, &out.PeakLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.PeakStartTime != nil {
		in, out := &in.PeakStartTime, &out.PeakStartTime
		*out = new(string)
		**out = **in
	}
	if in.RampDownCapacityThresholdPercent != nil {
		in, out := &in.RampDownCapacityThresholdPercent, &out.RampDownCapacityThresholdPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampDownForceLogoffUsers != nil {
		in, out := &in.RampDownForceLogoffUsers, &out.RampDownForceLogoffUsers
		*out = new(bool)
		**out = **in
	}
	if in.RampDownLoadBalancingAlgorithm != nil {
		in, out := &in.RampDownLoadBalancingAlgorithm, &out.RampDownLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.RampDownMinimumHostsPercent != nil {
		in, out := &in.RampDownMinimumHostsPercent, &out.RampDownMinimumHostsPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampDownNotificationMessage != nil {
		in, out := &in.RampDownNotificationMessage, &out.RampDownNotificationMessage
		*out = new(string)
		**out = **in
	}
	if in.RampDownStartTime != nil {
		in, out := &in.RampDownStartTime, &out.RampDownStartTime
		*out = new(string)
		**out = **in
	}
	if in.RampDownStopHostsWhen != nil {
		in, out := &in.RampDownStopHostsWhen, &out.RampDownStopHostsWhen
		*out = new(string)
		**out = **in
	}
	if in.RampDownWaitTimeMinutes != nil {
		in, out := &in.RampDownWaitTimeMinutes, &out.RampDownWaitTimeMinutes
		*out = new(float64)
		**out = **in
	}
	if in.RampUpCapacityThresholdPercent != nil {
		in, out := &in.RampUpCapacityThresholdPercent, &out.RampUpCapacityThresholdPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampUpLoadBalancingAlgorithm != nil {
		in, out := &in.RampUpLoadBalancingAlgorithm, &out.RampUpLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.RampUpMinimumHostsPercent != nil {
		in, out := &in.RampUpMinimumHostsPercent, &out.RampUpMinimumHostsPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampUpStartTime != nil {
		in, out := &in.RampUpStartTime, &out.RampUpStartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleParameters.
func (in *ScheduleParameters) DeepCopy() *ScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopApplication) DeepCopyInto(out *VirtualDesktopApplication) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopApplication.
func (in *VirtualDesktopApplication) DeepCopy() *VirtualDesktopApplication {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopApplication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualDesktopApplication) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopApplicationGroup) DeepCopyInto(out *VirtualDesktopApplicationGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopApplicationGroup.
func (in *VirtualDesktopApplicationGroup) DeepCopy() *VirtualDesktopApplicationGroup {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopApplicationGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualDesktopApplicationGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopApplicationGroupInitParameters) DeepCopyInto(out *VirtualDesktopApplicationGroupInitParameters) {
	*out = *in
	if in.DefaultDesktopDisplayName != nil {
		in, out := &in.DefaultDesktopDisplayName, &out.DefaultDesktopDisplayName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopApplicationGroupInitParameters.
func (in *VirtualDesktopApplicationGroupInitParameters) DeepCopy() *VirtualDesktopApplicationGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopApplicationGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopApplicationGroupList) DeepCopyInto(out *VirtualDesktopApplicationGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualDesktopApplicationGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopApplicationGroupList.
func (in *VirtualDesktopApplicationGroupList) DeepCopy() *VirtualDesktopApplicationGroupList {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopApplicationGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualDesktopApplicationGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopApplicationGroupObservation) DeepCopyInto(out *VirtualDesktopApplicationGroupObservation) {
	*out = *in
	if in.DefaultDesktopDisplayName != nil {
		in, out := &in.DefaultDesktopDisplayName, &out.DefaultDesktopDisplayName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.HostPoolID != nil {
		in, out := &in.HostPoolID, &out.HostPoolID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopApplicationGroupObservation.
func (in *VirtualDesktopApplicationGroupObservation) DeepCopy() *VirtualDesktopApplicationGroupObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopApplicationGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopApplicationGroupParameters) DeepCopyInto(out *VirtualDesktopApplicationGroupParameters) {
	*out = *in
	if in.DefaultDesktopDisplayName != nil {
		in, out := &in.DefaultDesktopDisplayName, &out.DefaultDesktopDisplayName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.HostPoolID != nil {
		in, out := &in.HostPoolID, &out.HostPoolID
		*out = new(string)
		**out = **in
	}
	if in.HostPoolIDRef != nil {
		in, out := &in.HostPoolIDRef, &out.HostPoolIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.HostPoolIDSelector != nil {
		in, out := &in.HostPoolIDSelector, &out.HostPoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopApplicationGroupParameters.
func (in *VirtualDesktopApplicationGroupParameters) DeepCopy() *VirtualDesktopApplicationGroupParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopApplicationGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopApplicationGroupSpec) DeepCopyInto(out *VirtualDesktopApplicationGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopApplicationGroupSpec.
func (in *VirtualDesktopApplicationGroupSpec) DeepCopy() *VirtualDesktopApplicationGroupSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopApplicationGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopApplicationGroupStatus) DeepCopyInto(out *VirtualDesktopApplicationGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopApplicationGroupStatus.
func (in *VirtualDesktopApplicationGroupStatus) DeepCopy() *VirtualDesktopApplicationGroupStatus {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopApplicationGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopApplicationInitParameters) DeepCopyInto(out *VirtualDesktopApplicationInitParameters) {
	*out = *in
	if in.CommandLineArgumentPolicy != nil {
		in, out := &in.CommandLineArgumentPolicy, &out.CommandLineArgumentPolicy
		*out = new(string)
		**out = **in
	}
	if in.CommandLineArguments != nil {
		in, out := &in.CommandLineArguments, &out.CommandLineArguments
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.IconIndex != nil {
		in, out := &in.IconIndex, &out.IconIndex
		*out = new(float64)
		**out = **in
	}
	if in.IconPath != nil {
		in, out := &in.IconPath, &out.IconPath
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ShowInPortal != nil {
		in, out := &in.ShowInPortal, &out.ShowInPortal
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopApplicationInitParameters.
func (in *VirtualDesktopApplicationInitParameters) DeepCopy() *VirtualDesktopApplicationInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopApplicationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopApplicationList) DeepCopyInto(out *VirtualDesktopApplicationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualDesktopApplication, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopApplicationList.
func (in *VirtualDesktopApplicationList) DeepCopy() *VirtualDesktopApplicationList {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopApplicationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualDesktopApplicationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopApplicationObservation) DeepCopyInto(out *VirtualDesktopApplicationObservation) {
	*out = *in
	if in.ApplicationGroupID != nil {
		in, out := &in.ApplicationGroupID, &out.ApplicationGroupID
		*out = new(string)
		**out = **in
	}
	if in.CommandLineArgumentPolicy != nil {
		in, out := &in.CommandLineArgumentPolicy, &out.CommandLineArgumentPolicy
		*out = new(string)
		**out = **in
	}
	if in.CommandLineArguments != nil {
		in, out := &in.CommandLineArguments, &out.CommandLineArguments
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IconIndex != nil {
		in, out := &in.IconIndex, &out.IconIndex
		*out = new(float64)
		**out = **in
	}
	if in.IconPath != nil {
		in, out := &in.IconPath, &out.IconPath
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ShowInPortal != nil {
		in, out := &in.ShowInPortal, &out.ShowInPortal
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopApplicationObservation.
func (in *VirtualDesktopApplicationObservation) DeepCopy() *VirtualDesktopApplicationObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopApplicationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopApplicationParameters) DeepCopyInto(out *VirtualDesktopApplicationParameters) {
	*out = *in
	if in.ApplicationGroupID != nil {
		in, out := &in.ApplicationGroupID, &out.ApplicationGroupID
		*out = new(string)
		**out = **in
	}
	if in.ApplicationGroupIDRef != nil {
		in, out := &in.ApplicationGroupIDRef, &out.ApplicationGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ApplicationGroupIDSelector != nil {
		in, out := &in.ApplicationGroupIDSelector, &out.ApplicationGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CommandLineArgumentPolicy != nil {
		in, out := &in.CommandLineArgumentPolicy, &out.CommandLineArgumentPolicy
		*out = new(string)
		**out = **in
	}
	if in.CommandLineArguments != nil {
		in, out := &in.CommandLineArguments, &out.CommandLineArguments
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.IconIndex != nil {
		in, out := &in.IconIndex, &out.IconIndex
		*out = new(float64)
		**out = **in
	}
	if in.IconPath != nil {
		in, out := &in.IconPath, &out.IconPath
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ShowInPortal != nil {
		in, out := &in.ShowInPortal, &out.ShowInPortal
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopApplicationParameters.
func (in *VirtualDesktopApplicationParameters) DeepCopy() *VirtualDesktopApplicationParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopApplicationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopApplicationSpec) DeepCopyInto(out *VirtualDesktopApplicationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopApplicationSpec.
func (in *VirtualDesktopApplicationSpec) DeepCopy() *VirtualDesktopApplicationSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopApplicationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopApplicationStatus) DeepCopyInto(out *VirtualDesktopApplicationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopApplicationStatus.
func (in *VirtualDesktopApplicationStatus) DeepCopy() *VirtualDesktopApplicationStatus {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopApplicationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopHostPoolRegistrationInfo) DeepCopyInto(out *VirtualDesktopHostPoolRegistrationInfo) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopHostPoolRegistrationInfo.
func (in *VirtualDesktopHostPoolRegistrationInfo) DeepCopy() *VirtualDesktopHostPoolRegistrationInfo {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopHostPoolRegistrationInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualDesktopHostPoolRegistrationInfo) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopHostPoolRegistrationInfoInitParameters) DeepCopyInto(out *VirtualDesktopHostPoolRegistrationInfoInitParameters) {
	*out = *in
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopHostPoolRegistrationInfoInitParameters.
func (in *VirtualDesktopHostPoolRegistrationInfoInitParameters) DeepCopy() *VirtualDesktopHostPoolRegistrationInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopHostPoolRegistrationInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopHostPoolRegistrationInfoList) DeepCopyInto(out *VirtualDesktopHostPoolRegistrationInfoList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualDesktopHostPoolRegistrationInfo, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopHostPoolRegistrationInfoList.
func (in *VirtualDesktopHostPoolRegistrationInfoList) DeepCopy() *VirtualDesktopHostPoolRegistrationInfoList {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopHostPoolRegistrationInfoList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualDesktopHostPoolRegistrationInfoList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopHostPoolRegistrationInfoObservation) DeepCopyInto(out *VirtualDesktopHostPoolRegistrationInfoObservation) {
	*out = *in
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.HostpoolID != nil {
		in, out := &in.HostpoolID, &out.HostpoolID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopHostPoolRegistrationInfoObservation.
func (in *VirtualDesktopHostPoolRegistrationInfoObservation) DeepCopy() *VirtualDesktopHostPoolRegistrationInfoObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopHostPoolRegistrationInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopHostPoolRegistrationInfoParameters) DeepCopyInto(out *VirtualDesktopHostPoolRegistrationInfoParameters) {
	*out = *in
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.HostpoolID != nil {
		in, out := &in.HostpoolID, &out.HostpoolID
		*out = new(string)
		**out = **in
	}
	if in.HostpoolIDRef != nil {
		in, out := &in.HostpoolIDRef, &out.HostpoolIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.HostpoolIDSelector != nil {
		in, out := &in.HostpoolIDSelector, &out.HostpoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopHostPoolRegistrationInfoParameters.
func (in *VirtualDesktopHostPoolRegistrationInfoParameters) DeepCopy() *VirtualDesktopHostPoolRegistrationInfoParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopHostPoolRegistrationInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopHostPoolRegistrationInfoSpec) DeepCopyInto(out *VirtualDesktopHostPoolRegistrationInfoSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopHostPoolRegistrationInfoSpec.
func (in *VirtualDesktopHostPoolRegistrationInfoSpec) DeepCopy() *VirtualDesktopHostPoolRegistrationInfoSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopHostPoolRegistrationInfoSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopHostPoolRegistrationInfoStatus) DeepCopyInto(out *VirtualDesktopHostPoolRegistrationInfoStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopHostPoolRegistrationInfoStatus.
func (in *VirtualDesktopHostPoolRegistrationInfoStatus) DeepCopy() *VirtualDesktopHostPoolRegistrationInfoStatus {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopHostPoolRegistrationInfoStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopScalingPlan) DeepCopyInto(out *VirtualDesktopScalingPlan) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopScalingPlan.
func (in *VirtualDesktopScalingPlan) DeepCopy() *VirtualDesktopScalingPlan {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopScalingPlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualDesktopScalingPlan) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopScalingPlanInitParameters) DeepCopyInto(out *VirtualDesktopScalingPlanInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExclusionTag != nil {
		in, out := &in.ExclusionTag, &out.ExclusionTag
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.HostPool != nil {
		in, out := &in.HostPool, &out.HostPool
		*out = make([]HostPoolInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopScalingPlanInitParameters.
func (in *VirtualDesktopScalingPlanInitParameters) DeepCopy() *VirtualDesktopScalingPlanInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopScalingPlanInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopScalingPlanList) DeepCopyInto(out *VirtualDesktopScalingPlanList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualDesktopScalingPlan, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopScalingPlanList.
func (in *VirtualDesktopScalingPlanList) DeepCopy() *VirtualDesktopScalingPlanList {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopScalingPlanList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualDesktopScalingPlanList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopScalingPlanObservation) DeepCopyInto(out *VirtualDesktopScalingPlanObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExclusionTag != nil {
		in, out := &in.ExclusionTag, &out.ExclusionTag
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.HostPool != nil {
		in, out := &in.HostPool, &out.HostPool
		*out = make([]HostPoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopScalingPlanObservation.
func (in *VirtualDesktopScalingPlanObservation) DeepCopy() *VirtualDesktopScalingPlanObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopScalingPlanObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopScalingPlanParameters) DeepCopyInto(out *VirtualDesktopScalingPlanParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExclusionTag != nil {
		in, out := &in.ExclusionTag, &out.ExclusionTag
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.HostPool != nil {
		in, out := &in.HostPool, &out.HostPool
		*out = make([]HostPoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopScalingPlanParameters.
func (in *VirtualDesktopScalingPlanParameters) DeepCopy() *VirtualDesktopScalingPlanParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopScalingPlanParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopScalingPlanSpec) DeepCopyInto(out *VirtualDesktopScalingPlanSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopScalingPlanSpec.
func (in *VirtualDesktopScalingPlanSpec) DeepCopy() *VirtualDesktopScalingPlanSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopScalingPlanSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopScalingPlanStatus) DeepCopyInto(out *VirtualDesktopScalingPlanStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopScalingPlanStatus.
func (in *VirtualDesktopScalingPlanStatus) DeepCopy() *VirtualDesktopScalingPlanStatus {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopScalingPlanStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopWorkspace) DeepCopyInto(out *VirtualDesktopWorkspace) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopWorkspace.
func (in *VirtualDesktopWorkspace) DeepCopy() *VirtualDesktopWorkspace {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopWorkspace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualDesktopWorkspace) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopWorkspaceApplicationGroupAssociation) DeepCopyInto(out *VirtualDesktopWorkspaceApplicationGroupAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopWorkspaceApplicationGroupAssociation.
func (in *VirtualDesktopWorkspaceApplicationGroupAssociation) DeepCopy() *VirtualDesktopWorkspaceApplicationGroupAssociation {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopWorkspaceApplicationGroupAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualDesktopWorkspaceApplicationGroupAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopWorkspaceApplicationGroupAssociationInitParameters) DeepCopyInto(out *VirtualDesktopWorkspaceApplicationGroupAssociationInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopWorkspaceApplicationGroupAssociationInitParameters.
func (in *VirtualDesktopWorkspaceApplicationGroupAssociationInitParameters) DeepCopy() *VirtualDesktopWorkspaceApplicationGroupAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopWorkspaceApplicationGroupAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopWorkspaceApplicationGroupAssociationList) DeepCopyInto(out *VirtualDesktopWorkspaceApplicationGroupAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualDesktopWorkspaceApplicationGroupAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopWorkspaceApplicationGroupAssociationList.
func (in *VirtualDesktopWorkspaceApplicationGroupAssociationList) DeepCopy() *VirtualDesktopWorkspaceApplicationGroupAssociationList {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopWorkspaceApplicationGroupAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualDesktopWorkspaceApplicationGroupAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopWorkspaceApplicationGroupAssociationObservation) DeepCopyInto(out *VirtualDesktopWorkspaceApplicationGroupAssociationObservation) {
	*out = *in
	if in.ApplicationGroupID != nil {
		in, out := &in.ApplicationGroupID, &out.ApplicationGroupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopWorkspaceApplicationGroupAssociationObservation.
func (in *VirtualDesktopWorkspaceApplicationGroupAssociationObservation) DeepCopy() *VirtualDesktopWorkspaceApplicationGroupAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopWorkspaceApplicationGroupAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopWorkspaceApplicationGroupAssociationParameters) DeepCopyInto(out *VirtualDesktopWorkspaceApplicationGroupAssociationParameters) {
	*out = *in
	if in.ApplicationGroupID != nil {
		in, out := &in.ApplicationGroupID, &out.ApplicationGroupID
		*out = new(string)
		**out = **in
	}
	if in.ApplicationGroupIDRef != nil {
		in, out := &in.ApplicationGroupIDRef, &out.ApplicationGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ApplicationGroupIDSelector != nil {
		in, out := &in.ApplicationGroupIDSelector, &out.ApplicationGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceIDRef != nil {
		in, out := &in.WorkspaceIDRef, &out.WorkspaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkspaceIDSelector != nil {
		in, out := &in.WorkspaceIDSelector, &out.WorkspaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopWorkspaceApplicationGroupAssociationParameters.
func (in *VirtualDesktopWorkspaceApplicationGroupAssociationParameters) DeepCopy() *VirtualDesktopWorkspaceApplicationGroupAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopWorkspaceApplicationGroupAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopWorkspaceApplicationGroupAssociationSpec) DeepCopyInto(out *VirtualDesktopWorkspaceApplicationGroupAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	out.InitProvider = in.InitProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopWorkspaceApplicationGroupAssociationSpec.
func (in *VirtualDesktopWorkspaceApplicationGroupAssociationSpec) DeepCopy() *VirtualDesktopWorkspaceApplicationGroupAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopWorkspaceApplicationGroupAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopWorkspaceApplicationGroupAssociationStatus) DeepCopyInto(out *VirtualDesktopWorkspaceApplicationGroupAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopWorkspaceApplicationGroupAssociationStatus.
func (in *VirtualDesktopWorkspaceApplicationGroupAssociationStatus) DeepCopy() *VirtualDesktopWorkspaceApplicationGroupAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopWorkspaceApplicationGroupAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopWorkspaceInitParameters) DeepCopyInto(out *VirtualDesktopWorkspaceInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopWorkspaceInitParameters.
func (in *VirtualDesktopWorkspaceInitParameters) DeepCopy() *VirtualDesktopWorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopWorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopWorkspaceList) DeepCopyInto(out *VirtualDesktopWorkspaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualDesktopWorkspace, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopWorkspaceList.
func (in *VirtualDesktopWorkspaceList) DeepCopy() *VirtualDesktopWorkspaceList {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopWorkspaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualDesktopWorkspaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopWorkspaceObservation) DeepCopyInto(out *VirtualDesktopWorkspaceObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopWorkspaceObservation.
func (in *VirtualDesktopWorkspaceObservation) DeepCopy() *VirtualDesktopWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopWorkspaceParameters) DeepCopyInto(out *VirtualDesktopWorkspaceParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopWorkspaceParameters.
func (in *VirtualDesktopWorkspaceParameters) DeepCopy() *VirtualDesktopWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopWorkspaceSpec) DeepCopyInto(out *VirtualDesktopWorkspaceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopWorkspaceSpec.
func (in *VirtualDesktopWorkspaceSpec) DeepCopy() *VirtualDesktopWorkspaceSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopWorkspaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDesktopWorkspaceStatus) DeepCopyInto(out *VirtualDesktopWorkspaceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDesktopWorkspaceStatus.
func (in *VirtualDesktopWorkspaceStatus) DeepCopy() *VirtualDesktopWorkspaceStatus {
	if in == nil {
		return nil
	}
	out := new(VirtualDesktopWorkspaceStatus)
	in.DeepCopyInto(out)
	return out
}
