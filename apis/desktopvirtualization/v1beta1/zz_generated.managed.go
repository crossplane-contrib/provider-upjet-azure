/*
Copyright 2022 Upbound Inc.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1beta1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this VirtualDesktopApplication.
func (mg *VirtualDesktopApplication) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VirtualDesktopApplication.
func (mg *VirtualDesktopApplication) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this VirtualDesktopApplication.
func (mg *VirtualDesktopApplication) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this VirtualDesktopApplication.
func (mg *VirtualDesktopApplication) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this VirtualDesktopApplication.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *VirtualDesktopApplication) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this VirtualDesktopApplication.
func (mg *VirtualDesktopApplication) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VirtualDesktopApplication.
func (mg *VirtualDesktopApplication) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VirtualDesktopApplication.
func (mg *VirtualDesktopApplication) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VirtualDesktopApplication.
func (mg *VirtualDesktopApplication) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this VirtualDesktopApplication.
func (mg *VirtualDesktopApplication) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this VirtualDesktopApplication.
func (mg *VirtualDesktopApplication) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this VirtualDesktopApplication.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *VirtualDesktopApplication) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this VirtualDesktopApplication.
func (mg *VirtualDesktopApplication) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VirtualDesktopApplication.
func (mg *VirtualDesktopApplication) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this VirtualDesktopApplicationGroup.
func (mg *VirtualDesktopApplicationGroup) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VirtualDesktopApplicationGroup.
func (mg *VirtualDesktopApplicationGroup) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this VirtualDesktopApplicationGroup.
func (mg *VirtualDesktopApplicationGroup) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this VirtualDesktopApplicationGroup.
func (mg *VirtualDesktopApplicationGroup) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this VirtualDesktopApplicationGroup.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *VirtualDesktopApplicationGroup) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this VirtualDesktopApplicationGroup.
func (mg *VirtualDesktopApplicationGroup) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VirtualDesktopApplicationGroup.
func (mg *VirtualDesktopApplicationGroup) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VirtualDesktopApplicationGroup.
func (mg *VirtualDesktopApplicationGroup) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VirtualDesktopApplicationGroup.
func (mg *VirtualDesktopApplicationGroup) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this VirtualDesktopApplicationGroup.
func (mg *VirtualDesktopApplicationGroup) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this VirtualDesktopApplicationGroup.
func (mg *VirtualDesktopApplicationGroup) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this VirtualDesktopApplicationGroup.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *VirtualDesktopApplicationGroup) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this VirtualDesktopApplicationGroup.
func (mg *VirtualDesktopApplicationGroup) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VirtualDesktopApplicationGroup.
func (mg *VirtualDesktopApplicationGroup) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this VirtualDesktopHostPoolRegistrationInfo.
func (mg *VirtualDesktopHostPoolRegistrationInfo) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VirtualDesktopHostPoolRegistrationInfo.
func (mg *VirtualDesktopHostPoolRegistrationInfo) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this VirtualDesktopHostPoolRegistrationInfo.
func (mg *VirtualDesktopHostPoolRegistrationInfo) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this VirtualDesktopHostPoolRegistrationInfo.
func (mg *VirtualDesktopHostPoolRegistrationInfo) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this VirtualDesktopHostPoolRegistrationInfo.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *VirtualDesktopHostPoolRegistrationInfo) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this VirtualDesktopHostPoolRegistrationInfo.
func (mg *VirtualDesktopHostPoolRegistrationInfo) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VirtualDesktopHostPoolRegistrationInfo.
func (mg *VirtualDesktopHostPoolRegistrationInfo) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VirtualDesktopHostPoolRegistrationInfo.
func (mg *VirtualDesktopHostPoolRegistrationInfo) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VirtualDesktopHostPoolRegistrationInfo.
func (mg *VirtualDesktopHostPoolRegistrationInfo) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this VirtualDesktopHostPoolRegistrationInfo.
func (mg *VirtualDesktopHostPoolRegistrationInfo) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this VirtualDesktopHostPoolRegistrationInfo.
func (mg *VirtualDesktopHostPoolRegistrationInfo) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this VirtualDesktopHostPoolRegistrationInfo.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *VirtualDesktopHostPoolRegistrationInfo) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this VirtualDesktopHostPoolRegistrationInfo.
func (mg *VirtualDesktopHostPoolRegistrationInfo) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VirtualDesktopHostPoolRegistrationInfo.
func (mg *VirtualDesktopHostPoolRegistrationInfo) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this VirtualDesktopScalingPlan.
func (mg *VirtualDesktopScalingPlan) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VirtualDesktopScalingPlan.
func (mg *VirtualDesktopScalingPlan) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this VirtualDesktopScalingPlan.
func (mg *VirtualDesktopScalingPlan) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this VirtualDesktopScalingPlan.
func (mg *VirtualDesktopScalingPlan) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this VirtualDesktopScalingPlan.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *VirtualDesktopScalingPlan) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this VirtualDesktopScalingPlan.
func (mg *VirtualDesktopScalingPlan) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VirtualDesktopScalingPlan.
func (mg *VirtualDesktopScalingPlan) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VirtualDesktopScalingPlan.
func (mg *VirtualDesktopScalingPlan) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VirtualDesktopScalingPlan.
func (mg *VirtualDesktopScalingPlan) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this VirtualDesktopScalingPlan.
func (mg *VirtualDesktopScalingPlan) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this VirtualDesktopScalingPlan.
func (mg *VirtualDesktopScalingPlan) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this VirtualDesktopScalingPlan.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *VirtualDesktopScalingPlan) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this VirtualDesktopScalingPlan.
func (mg *VirtualDesktopScalingPlan) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VirtualDesktopScalingPlan.
func (mg *VirtualDesktopScalingPlan) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this VirtualDesktopWorkspace.
func (mg *VirtualDesktopWorkspace) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VirtualDesktopWorkspace.
func (mg *VirtualDesktopWorkspace) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this VirtualDesktopWorkspace.
func (mg *VirtualDesktopWorkspace) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this VirtualDesktopWorkspace.
func (mg *VirtualDesktopWorkspace) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this VirtualDesktopWorkspace.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *VirtualDesktopWorkspace) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this VirtualDesktopWorkspace.
func (mg *VirtualDesktopWorkspace) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VirtualDesktopWorkspace.
func (mg *VirtualDesktopWorkspace) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VirtualDesktopWorkspace.
func (mg *VirtualDesktopWorkspace) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VirtualDesktopWorkspace.
func (mg *VirtualDesktopWorkspace) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this VirtualDesktopWorkspace.
func (mg *VirtualDesktopWorkspace) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this VirtualDesktopWorkspace.
func (mg *VirtualDesktopWorkspace) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this VirtualDesktopWorkspace.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *VirtualDesktopWorkspace) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this VirtualDesktopWorkspace.
func (mg *VirtualDesktopWorkspace) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VirtualDesktopWorkspace.
func (mg *VirtualDesktopWorkspace) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this VirtualDesktopWorkspaceApplicationGroupAssociation.
func (mg *VirtualDesktopWorkspaceApplicationGroupAssociation) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VirtualDesktopWorkspaceApplicationGroupAssociation.
func (mg *VirtualDesktopWorkspaceApplicationGroupAssociation) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this VirtualDesktopWorkspaceApplicationGroupAssociation.
func (mg *VirtualDesktopWorkspaceApplicationGroupAssociation) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this VirtualDesktopWorkspaceApplicationGroupAssociation.
func (mg *VirtualDesktopWorkspaceApplicationGroupAssociation) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this VirtualDesktopWorkspaceApplicationGroupAssociation.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *VirtualDesktopWorkspaceApplicationGroupAssociation) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this VirtualDesktopWorkspaceApplicationGroupAssociation.
func (mg *VirtualDesktopWorkspaceApplicationGroupAssociation) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VirtualDesktopWorkspaceApplicationGroupAssociation.
func (mg *VirtualDesktopWorkspaceApplicationGroupAssociation) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VirtualDesktopWorkspaceApplicationGroupAssociation.
func (mg *VirtualDesktopWorkspaceApplicationGroupAssociation) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VirtualDesktopWorkspaceApplicationGroupAssociation.
func (mg *VirtualDesktopWorkspaceApplicationGroupAssociation) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this VirtualDesktopWorkspaceApplicationGroupAssociation.
func (mg *VirtualDesktopWorkspaceApplicationGroupAssociation) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this VirtualDesktopWorkspaceApplicationGroupAssociation.
func (mg *VirtualDesktopWorkspaceApplicationGroupAssociation) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this VirtualDesktopWorkspaceApplicationGroupAssociation.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *VirtualDesktopWorkspaceApplicationGroupAssociation) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this VirtualDesktopWorkspaceApplicationGroupAssociation.
func (mg *VirtualDesktopWorkspaceApplicationGroupAssociation) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VirtualDesktopWorkspaceApplicationGroupAssociation.
func (mg *VirtualDesktopWorkspaceApplicationGroupAssociation) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
