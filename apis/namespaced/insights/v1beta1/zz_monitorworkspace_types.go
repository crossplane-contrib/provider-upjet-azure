// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type MonitorWorkspaceInitParameters struct {

	// Specifies the Azure Region where the Azure Monitor Workspace should exist. Changing this forces a new resource to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Is public network access enabled? Defaults to true.
	PublicNetworkAccessEnabled *bool `json:"publicNetworkAccessEnabled,omitempty" tf:"public_network_access_enabled,omitempty"`

	// A mapping of tags which should be assigned to the Azure Monitor Workspace.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type MonitorWorkspaceObservation struct {

	// The ID of the managed default Data Collection Endpoint created with the Azure Monitor Workspace.
	DefaultDataCollectionEndpointID *string `json:"defaultDataCollectionEndpointId,omitempty" tf:"default_data_collection_endpoint_id,omitempty"`

	// The ID of the managed default Data Collection Rule created with the Azure Monitor Workspace.
	DefaultDataCollectionRuleID *string `json:"defaultDataCollectionRuleId,omitempty" tf:"default_data_collection_rule_id,omitempty"`

	// The ID of the Azure Monitor Workspace.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the Azure Region where the Azure Monitor Workspace should exist. Changing this forces a new resource to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Is public network access enabled? Defaults to true.
	PublicNetworkAccessEnabled *bool `json:"publicNetworkAccessEnabled,omitempty" tf:"public_network_access_enabled,omitempty"`

	// The query endpoint for the Azure Monitor Workspace.
	QueryEndpoint *string `json:"queryEndpoint,omitempty" tf:"query_endpoint,omitempty"`

	// Specifies the name of the Resource Group where the Azure Monitor Workspace should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// A mapping of tags which should be assigned to the Azure Monitor Workspace.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type MonitorWorkspaceParameters struct {

	// Specifies the Azure Region where the Azure Monitor Workspace should exist. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Is public network access enabled? Defaults to true.
	// +kubebuilder:validation:Optional
	PublicNetworkAccessEnabled *bool `json:"publicNetworkAccessEnabled,omitempty" tf:"public_network_access_enabled,omitempty"`

	// Specifies the name of the Resource Group where the Azure Monitor Workspace should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.NamespacedReference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.NamespacedSelector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// A mapping of tags which should be assigned to the Azure Monitor Workspace.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// MonitorWorkspaceSpec defines the desired state of MonitorWorkspace
type MonitorWorkspaceSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            MonitorWorkspaceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider MonitorWorkspaceInitParameters `json:"initProvider,omitempty"`
}

// MonitorWorkspaceStatus defines the observed state of MonitorWorkspace.
type MonitorWorkspaceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MonitorWorkspaceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// MonitorWorkspace is the Schema for the MonitorWorkspaces API. Manages an Azure Monitor Workspace.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,azure}
type MonitorWorkspace struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	Spec   MonitorWorkspaceSpec   `json:"spec"`
	Status MonitorWorkspaceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MonitorWorkspaceList contains a list of MonitorWorkspaces
type MonitorWorkspaceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MonitorWorkspace `json:"items"`
}

// Repository type metadata.
var (
	MonitorWorkspace_Kind             = "MonitorWorkspace"
	MonitorWorkspace_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MonitorWorkspace_Kind}.String()
	MonitorWorkspace_KindAPIVersion   = MonitorWorkspace_Kind + "." + CRDGroupVersion.String()
	MonitorWorkspace_GroupVersionKind = CRDGroupVersion.WithKind(MonitorWorkspace_Kind)
)

func init() {
	SchemeBuilder.Register(&MonitorWorkspace{}, &MonitorWorkspaceList{})
}
