// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type PrivateDNSResolverVirtualNetworkLinkInitParameters struct {

	// Metadata attached to the Private DNS Resolver Virtual Network Link.
	// +mapType=granular
	Metadata map[string]*string `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// The ID of the Virtual Network that is linked to the Private DNS Resolver Virtual Network Link. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/network/v1beta1.VirtualNetwork
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/namespaced/rconfig.ExtractResourceID()
	VirtualNetworkID *string `json:"virtualNetworkId,omitempty" tf:"virtual_network_id,omitempty"`

	// Reference to a VirtualNetwork in network to populate virtualNetworkId.
	// +kubebuilder:validation:Optional
	VirtualNetworkIDRef *v1.NamespacedReference `json:"virtualNetworkIdRef,omitempty" tf:"-"`

	// Selector for a VirtualNetwork in network to populate virtualNetworkId.
	// +kubebuilder:validation:Optional
	VirtualNetworkIDSelector *v1.NamespacedSelector `json:"virtualNetworkIdSelector,omitempty" tf:"-"`
}

type PrivateDNSResolverVirtualNetworkLinkObservation struct {

	// Specifies the ID of the Private DNS Resolver DNS Forwarding Ruleset. Changing this forces a new Private DNS Resolver Virtual Network Link to be created.
	DNSForwardingRulesetID *string `json:"dnsForwardingRulesetId,omitempty" tf:"dns_forwarding_ruleset_id,omitempty"`

	// The ID of the Private DNS Resolver Virtual Network Link.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Metadata attached to the Private DNS Resolver Virtual Network Link.
	// +mapType=granular
	Metadata map[string]*string `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// The ID of the Virtual Network that is linked to the Private DNS Resolver Virtual Network Link. Changing this forces a new resource to be created.
	VirtualNetworkID *string `json:"virtualNetworkId,omitempty" tf:"virtual_network_id,omitempty"`
}

type PrivateDNSResolverVirtualNetworkLinkParameters struct {

	// Specifies the ID of the Private DNS Resolver DNS Forwarding Ruleset. Changing this forces a new Private DNS Resolver Virtual Network Link to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/network/v1beta1.PrivateDNSResolverDNSForwardingRuleset
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/namespaced/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	DNSForwardingRulesetID *string `json:"dnsForwardingRulesetId,omitempty" tf:"dns_forwarding_ruleset_id,omitempty"`

	// Reference to a PrivateDNSResolverDNSForwardingRuleset in network to populate dnsForwardingRulesetId.
	// +kubebuilder:validation:Optional
	DNSForwardingRulesetIDRef *v1.NamespacedReference `json:"dnsForwardingRulesetIdRef,omitempty" tf:"-"`

	// Selector for a PrivateDNSResolverDNSForwardingRuleset in network to populate dnsForwardingRulesetId.
	// +kubebuilder:validation:Optional
	DNSForwardingRulesetIDSelector *v1.NamespacedSelector `json:"dnsForwardingRulesetIdSelector,omitempty" tf:"-"`

	// Metadata attached to the Private DNS Resolver Virtual Network Link.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Metadata map[string]*string `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// The ID of the Virtual Network that is linked to the Private DNS Resolver Virtual Network Link. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/network/v1beta1.VirtualNetwork
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/namespaced/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	VirtualNetworkID *string `json:"virtualNetworkId,omitempty" tf:"virtual_network_id,omitempty"`

	// Reference to a VirtualNetwork in network to populate virtualNetworkId.
	// +kubebuilder:validation:Optional
	VirtualNetworkIDRef *v1.NamespacedReference `json:"virtualNetworkIdRef,omitempty" tf:"-"`

	// Selector for a VirtualNetwork in network to populate virtualNetworkId.
	// +kubebuilder:validation:Optional
	VirtualNetworkIDSelector *v1.NamespacedSelector `json:"virtualNetworkIdSelector,omitempty" tf:"-"`
}

// PrivateDNSResolverVirtualNetworkLinkSpec defines the desired state of PrivateDNSResolverVirtualNetworkLink
type PrivateDNSResolverVirtualNetworkLinkSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            PrivateDNSResolverVirtualNetworkLinkParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PrivateDNSResolverVirtualNetworkLinkInitParameters `json:"initProvider,omitempty"`
}

// PrivateDNSResolverVirtualNetworkLinkStatus defines the observed state of PrivateDNSResolverVirtualNetworkLink.
type PrivateDNSResolverVirtualNetworkLinkStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PrivateDNSResolverVirtualNetworkLinkObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// PrivateDNSResolverVirtualNetworkLink is the Schema for the PrivateDNSResolverVirtualNetworkLinks API. Manages a Private DNS Resolver Virtual Network Link.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,azure}
type PrivateDNSResolverVirtualNetworkLink struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              PrivateDNSResolverVirtualNetworkLinkSpec   `json:"spec"`
	Status            PrivateDNSResolverVirtualNetworkLinkStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PrivateDNSResolverVirtualNetworkLinkList contains a list of PrivateDNSResolverVirtualNetworkLinks
type PrivateDNSResolverVirtualNetworkLinkList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PrivateDNSResolverVirtualNetworkLink `json:"items"`
}

// Repository type metadata.
var (
	PrivateDNSResolverVirtualNetworkLink_Kind             = "PrivateDNSResolverVirtualNetworkLink"
	PrivateDNSResolverVirtualNetworkLink_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PrivateDNSResolverVirtualNetworkLink_Kind}.String()
	PrivateDNSResolverVirtualNetworkLink_KindAPIVersion   = PrivateDNSResolverVirtualNetworkLink_Kind + "." + CRDGroupVersion.String()
	PrivateDNSResolverVirtualNetworkLink_GroupVersionKind = CRDGroupVersion.WithKind(PrivateDNSResolverVirtualNetworkLink_Kind)
)

func init() {
	SchemeBuilder.Register(&PrivateDNSResolverVirtualNetworkLink{}, &PrivateDNSResolverVirtualNetworkLinkList{})
}
