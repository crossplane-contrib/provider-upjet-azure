// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type ActionInitParameters struct {

	// Specifies the resource id of the monitor action group.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/insights/v1beta1.MonitorActionGroup
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ActionGroupID *string `json:"actionGroupId,omitempty" tf:"action_group_id,omitempty"`

	// Reference to a MonitorActionGroup in insights to populate actionGroupId.
	// +kubebuilder:validation:Optional
	ActionGroupIDRef *v1.NamespacedReference `json:"actionGroupIdRef,omitempty" tf:"-"`

	// Selector for a MonitorActionGroup in insights to populate actionGroupId.
	// +kubebuilder:validation:Optional
	ActionGroupIDSelector *v1.NamespacedSelector `json:"actionGroupIdSelector,omitempty" tf:"-"`

	// Specifies the properties of an action group object.
	// +mapType=granular
	ActionProperties map[string]*string `json:"actionProperties,omitempty" tf:"action_properties,omitempty"`
}

type ActionObservation struct {

	// Specifies the resource id of the monitor action group.
	ActionGroupID *string `json:"actionGroupId,omitempty" tf:"action_group_id,omitempty"`

	// Specifies the properties of an action group object.
	// +mapType=granular
	ActionProperties map[string]*string `json:"actionProperties,omitempty" tf:"action_properties,omitempty"`
}

type ActionParameters struct {

	// Specifies the resource id of the monitor action group.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/insights/v1beta1.MonitorActionGroup
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ActionGroupID *string `json:"actionGroupId,omitempty" tf:"action_group_id,omitempty"`

	// Reference to a MonitorActionGroup in insights to populate actionGroupId.
	// +kubebuilder:validation:Optional
	ActionGroupIDRef *v1.NamespacedReference `json:"actionGroupIdRef,omitempty" tf:"-"`

	// Selector for a MonitorActionGroup in insights to populate actionGroupId.
	// +kubebuilder:validation:Optional
	ActionGroupIDSelector *v1.NamespacedSelector `json:"actionGroupIdSelector,omitempty" tf:"-"`

	// Specifies the properties of an action group object.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	ActionProperties map[string]*string `json:"actionProperties,omitempty" tf:"action_properties,omitempty"`
}

type AlertResolutionInitParameters struct {

	// Is the alert auto-resolution? Possible values are true and false.
	AutoResolved *bool `json:"autoResolved,omitempty" tf:"auto_resolved,omitempty"`

	// Specifies the alert auto-resolution interval, represented in ISO 8601 duration format.
	TimeToResolve *string `json:"timeToResolve,omitempty" tf:"time_to_resolve,omitempty"`
}

type AlertResolutionObservation struct {

	// Is the alert auto-resolution? Possible values are true and false.
	AutoResolved *bool `json:"autoResolved,omitempty" tf:"auto_resolved,omitempty"`

	// Specifies the alert auto-resolution interval, represented in ISO 8601 duration format.
	TimeToResolve *string `json:"timeToResolve,omitempty" tf:"time_to_resolve,omitempty"`
}

type AlertResolutionParameters struct {

	// Is the alert auto-resolution? Possible values are true and false.
	// +kubebuilder:validation:Optional
	AutoResolved *bool `json:"autoResolved,omitempty" tf:"auto_resolved,omitempty"`

	// Specifies the alert auto-resolution interval, represented in ISO 8601 duration format.
	// +kubebuilder:validation:Optional
	TimeToResolve *string `json:"timeToResolve,omitempty" tf:"time_to_resolve,omitempty"`
}

type MonitorAlertPrometheusRuleGroupInitParameters struct {

	// Specifies the name of the Managed Kubernetes Cluster.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/containerservice/v1beta1.KubernetesCluster
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// Reference to a KubernetesCluster in containerservice to populate clusterName.
	// +kubebuilder:validation:Optional
	ClusterNameRef *v1.NamespacedReference `json:"clusterNameRef,omitempty" tf:"-"`

	// Selector for a KubernetesCluster in containerservice to populate clusterName.
	// +kubebuilder:validation:Optional
	ClusterNameSelector *v1.NamespacedSelector `json:"clusterNameSelector,omitempty" tf:"-"`

	// The description of the Alert Management Prometheus Rule Group.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the interval in which to run the Alert Management Prometheus Rule Group represented in ISO 8601 duration format. Possible values are between PT1M and PT15M.
	Interval *string `json:"interval,omitempty" tf:"interval,omitempty"`

	// Specifies the Azure Region where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// One or more rule blocks as defined below.
	Rule []RuleInitParameters `json:"rule,omitempty" tf:"rule,omitempty"`

	// Is this Alert Management Prometheus Rule Group enabled? Possible values are true and false.
	RuleGroupEnabled *bool `json:"ruleGroupEnabled,omitempty" tf:"rule_group_enabled,omitempty"`

	// Specifies the resource ID of the Azure Monitor Workspace.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/insights/v1beta1.MonitorWorkspace
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	Scopes []*string `json:"scopes,omitempty" tf:"scopes,omitempty"`

	// References to MonitorWorkspace in insights to populate scopes.
	// +kubebuilder:validation:Optional
	ScopesRefs []v1.NamespacedReference `json:"scopesRefs,omitempty" tf:"-"`

	// Selector for a list of MonitorWorkspace in insights to populate scopes.
	// +kubebuilder:validation:Optional
	ScopesSelector *v1.NamespacedSelector `json:"scopesSelector,omitempty" tf:"-"`

	// A mapping of tags to assign to the Alert Management Prometheus Rule Group.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type MonitorAlertPrometheusRuleGroupObservation struct {

	// Specifies the name of the Managed Kubernetes Cluster.
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// The description of the Alert Management Prometheus Rule Group.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The ID of the Alert Management Prometheus Rule Group.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the interval in which to run the Alert Management Prometheus Rule Group represented in ISO 8601 duration format. Possible values are between PT1M and PT15M.
	Interval *string `json:"interval,omitempty" tf:"interval,omitempty"`

	// Specifies the Azure Region where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Specifies the name of the Resource Group where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// One or more rule blocks as defined below.
	Rule []RuleObservation `json:"rule,omitempty" tf:"rule,omitempty"`

	// Is this Alert Management Prometheus Rule Group enabled? Possible values are true and false.
	RuleGroupEnabled *bool `json:"ruleGroupEnabled,omitempty" tf:"rule_group_enabled,omitempty"`

	// Specifies the resource ID of the Azure Monitor Workspace.
	Scopes []*string `json:"scopes,omitempty" tf:"scopes,omitempty"`

	// A mapping of tags to assign to the Alert Management Prometheus Rule Group.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type MonitorAlertPrometheusRuleGroupParameters struct {

	// Specifies the name of the Managed Kubernetes Cluster.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/containerservice/v1beta1.KubernetesCluster
	// +kubebuilder:validation:Optional
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// Reference to a KubernetesCluster in containerservice to populate clusterName.
	// +kubebuilder:validation:Optional
	ClusterNameRef *v1.NamespacedReference `json:"clusterNameRef,omitempty" tf:"-"`

	// Selector for a KubernetesCluster in containerservice to populate clusterName.
	// +kubebuilder:validation:Optional
	ClusterNameSelector *v1.NamespacedSelector `json:"clusterNameSelector,omitempty" tf:"-"`

	// The description of the Alert Management Prometheus Rule Group.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the interval in which to run the Alert Management Prometheus Rule Group represented in ISO 8601 duration format. Possible values are between PT1M and PT15M.
	// +kubebuilder:validation:Optional
	Interval *string `json:"interval,omitempty" tf:"interval,omitempty"`

	// Specifies the Azure Region where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Specifies the name of the Resource Group where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.NamespacedReference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.NamespacedSelector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// One or more rule blocks as defined below.
	// +kubebuilder:validation:Optional
	Rule []RuleParameters `json:"rule,omitempty" tf:"rule,omitempty"`

	// Is this Alert Management Prometheus Rule Group enabled? Possible values are true and false.
	// +kubebuilder:validation:Optional
	RuleGroupEnabled *bool `json:"ruleGroupEnabled,omitempty" tf:"rule_group_enabled,omitempty"`

	// Specifies the resource ID of the Azure Monitor Workspace.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/insights/v1beta1.MonitorWorkspace
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	Scopes []*string `json:"scopes,omitempty" tf:"scopes,omitempty"`

	// References to MonitorWorkspace in insights to populate scopes.
	// +kubebuilder:validation:Optional
	ScopesRefs []v1.NamespacedReference `json:"scopesRefs,omitempty" tf:"-"`

	// Selector for a list of MonitorWorkspace in insights to populate scopes.
	// +kubebuilder:validation:Optional
	ScopesSelector *v1.NamespacedSelector `json:"scopesSelector,omitempty" tf:"-"`

	// A mapping of tags to assign to the Alert Management Prometheus Rule Group.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type RuleInitParameters struct {

	// An action block as defined below.
	Action []ActionInitParameters `json:"action,omitempty" tf:"action,omitempty"`

	// Specifies the Alert rule name.
	Alert *string `json:"alert,omitempty" tf:"alert,omitempty"`

	// An alert_resolution block as defined below.
	AlertResolution *AlertResolutionInitParameters `json:"alertResolution,omitempty" tf:"alert_resolution,omitempty"`

	// Specifies a set of informational labels that can be used to store longer additional information such as alert descriptions or runbook links.
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Is this rule enabled? Possible values are true and false.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Specifies the Prometheus Query Language expression to evaluate. For more details see this doc. Evaluate at the period given by interval and record the result as a new set of time series with the metric name given by record.
	Expression *string `json:"expression,omitempty" tf:"expression,omitempty"`

	// Specifies the amount of time alert must be active before firing, represented in ISO 8601 duration format.
	For *string `json:"for,omitempty" tf:"for,omitempty"`

	// Specifies the labels to add or overwrite before storing the result.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Specifies the recorded metrics name.
	Record *string `json:"record,omitempty" tf:"record,omitempty"`

	// Specifies the severity of the alerts fired by the rule. Possible values are between 0 and 4.
	Severity *float64 `json:"severity,omitempty" tf:"severity,omitempty"`
}

type RuleObservation struct {

	// An action block as defined below.
	Action []ActionObservation `json:"action,omitempty" tf:"action,omitempty"`

	// Specifies the Alert rule name.
	Alert *string `json:"alert,omitempty" tf:"alert,omitempty"`

	// An alert_resolution block as defined below.
	AlertResolution *AlertResolutionObservation `json:"alertResolution,omitempty" tf:"alert_resolution,omitempty"`

	// Specifies a set of informational labels that can be used to store longer additional information such as alert descriptions or runbook links.
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Is this rule enabled? Possible values are true and false.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Specifies the Prometheus Query Language expression to evaluate. For more details see this doc. Evaluate at the period given by interval and record the result as a new set of time series with the metric name given by record.
	Expression *string `json:"expression,omitempty" tf:"expression,omitempty"`

	// Specifies the amount of time alert must be active before firing, represented in ISO 8601 duration format.
	For *string `json:"for,omitempty" tf:"for,omitempty"`

	// Specifies the labels to add or overwrite before storing the result.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Specifies the recorded metrics name.
	Record *string `json:"record,omitempty" tf:"record,omitempty"`

	// Specifies the severity of the alerts fired by the rule. Possible values are between 0 and 4.
	Severity *float64 `json:"severity,omitempty" tf:"severity,omitempty"`
}

type RuleParameters struct {

	// An action block as defined below.
	// +kubebuilder:validation:Optional
	Action []ActionParameters `json:"action,omitempty" tf:"action,omitempty"`

	// Specifies the Alert rule name.
	// +kubebuilder:validation:Optional
	Alert *string `json:"alert,omitempty" tf:"alert,omitempty"`

	// An alert_resolution block as defined below.
	// +kubebuilder:validation:Optional
	AlertResolution *AlertResolutionParameters `json:"alertResolution,omitempty" tf:"alert_resolution,omitempty"`

	// Specifies a set of informational labels that can be used to store longer additional information such as alert descriptions or runbook links.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// Is this rule enabled? Possible values are true and false.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Specifies the Prometheus Query Language expression to evaluate. For more details see this doc. Evaluate at the period given by interval and record the result as a new set of time series with the metric name given by record.
	// +kubebuilder:validation:Optional
	Expression *string `json:"expression" tf:"expression,omitempty"`

	// Specifies the amount of time alert must be active before firing, represented in ISO 8601 duration format.
	// +kubebuilder:validation:Optional
	For *string `json:"for,omitempty" tf:"for,omitempty"`

	// Specifies the labels to add or overwrite before storing the result.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Specifies the recorded metrics name.
	// +kubebuilder:validation:Optional
	Record *string `json:"record,omitempty" tf:"record,omitempty"`

	// Specifies the severity of the alerts fired by the rule. Possible values are between 0 and 4.
	// +kubebuilder:validation:Optional
	Severity *float64 `json:"severity,omitempty" tf:"severity,omitempty"`
}

// MonitorAlertPrometheusRuleGroupSpec defines the desired state of MonitorAlertPrometheusRuleGroup
type MonitorAlertPrometheusRuleGroupSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            MonitorAlertPrometheusRuleGroupParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider MonitorAlertPrometheusRuleGroupInitParameters `json:"initProvider,omitempty"`
}

// MonitorAlertPrometheusRuleGroupStatus defines the observed state of MonitorAlertPrometheusRuleGroup.
type MonitorAlertPrometheusRuleGroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MonitorAlertPrometheusRuleGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// MonitorAlertPrometheusRuleGroup is the Schema for the MonitorAlertPrometheusRuleGroups API. Manages an Alert Management Prometheus Rule Group.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,azure}
type MonitorAlertPrometheusRuleGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.rule) || (has(self.initProvider) && has(self.initProvider.rule))",message="spec.forProvider.rule is a required parameter"
	Spec   MonitorAlertPrometheusRuleGroupSpec   `json:"spec"`
	Status MonitorAlertPrometheusRuleGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MonitorAlertPrometheusRuleGroupList contains a list of MonitorAlertPrometheusRuleGroups
type MonitorAlertPrometheusRuleGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MonitorAlertPrometheusRuleGroup `json:"items"`
}

// Repository type metadata.
var (
	MonitorAlertPrometheusRuleGroup_Kind             = "MonitorAlertPrometheusRuleGroup"
	MonitorAlertPrometheusRuleGroup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MonitorAlertPrometheusRuleGroup_Kind}.String()
	MonitorAlertPrometheusRuleGroup_KindAPIVersion   = MonitorAlertPrometheusRuleGroup_Kind + "." + CRDGroupVersion.String()
	MonitorAlertPrometheusRuleGroup_GroupVersionKind = CRDGroupVersion.WithKind(MonitorAlertPrometheusRuleGroup_Kind)
)

func init() {
	SchemeBuilder.Register(&MonitorAlertPrometheusRuleGroup{}, &MonitorAlertPrometheusRuleGroupList{})
}
