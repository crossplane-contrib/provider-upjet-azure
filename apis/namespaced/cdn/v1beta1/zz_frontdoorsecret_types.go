// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type CustomerCertificateInitParameters struct {

	// The ID of the Key Vault certificate resource to use. Changing this forces a new Front Door Secret to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/keyvault/v1beta1.Certificate
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	KeyVaultCertificateID *string `json:"keyVaultCertificateId,omitempty" tf:"key_vault_certificate_id,omitempty"`

	// Reference to a Certificate in keyvault to populate keyVaultCertificateId.
	// +kubebuilder:validation:Optional
	KeyVaultCertificateIDRef *v1.NamespacedReference `json:"keyVaultCertificateIdRef,omitempty" tf:"-"`

	// Selector for a Certificate in keyvault to populate keyVaultCertificateId.
	// +kubebuilder:validation:Optional
	KeyVaultCertificateIDSelector *v1.NamespacedSelector `json:"keyVaultCertificateIdSelector,omitempty" tf:"-"`
}

type CustomerCertificateObservation struct {

	// The ID of the Key Vault certificate resource to use. Changing this forces a new Front Door Secret to be created.
	KeyVaultCertificateID *string `json:"keyVaultCertificateId,omitempty" tf:"key_vault_certificate_id,omitempty"`

	// (Computed) One or more subject alternative names contained within the key vault certificate.
	SubjectAlternativeNames []*string `json:"subjectAlternativeNames,omitempty" tf:"subject_alternative_names,omitempty"`
}

type CustomerCertificateParameters struct {

	// The ID of the Key Vault certificate resource to use. Changing this forces a new Front Door Secret to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/keyvault/v1beta1.Certificate
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	KeyVaultCertificateID *string `json:"keyVaultCertificateId,omitempty" tf:"key_vault_certificate_id,omitempty"`

	// Reference to a Certificate in keyvault to populate keyVaultCertificateId.
	// +kubebuilder:validation:Optional
	KeyVaultCertificateIDRef *v1.NamespacedReference `json:"keyVaultCertificateIdRef,omitempty" tf:"-"`

	// Selector for a Certificate in keyvault to populate keyVaultCertificateId.
	// +kubebuilder:validation:Optional
	KeyVaultCertificateIDSelector *v1.NamespacedSelector `json:"keyVaultCertificateIdSelector,omitempty" tf:"-"`
}

type FrontdoorSecretInitParameters struct {

	// A secret block as defined below. Changing this forces a new Front Door Secret to be created.
	Secret *SecretInitParameters `json:"secret,omitempty" tf:"secret,omitempty"`
}

type FrontdoorSecretObservation struct {

	// The Resource ID of the Front Door Profile. Changing this forces a new Front Door Secret to be created.
	CdnFrontdoorProfileID *string `json:"cdnFrontdoorProfileId,omitempty" tf:"cdn_frontdoor_profile_id,omitempty"`

	// The name of the Front Door Profile containing this Front Door Secret.
	CdnFrontdoorProfileName *string `json:"cdnFrontdoorProfileName,omitempty" tf:"cdn_frontdoor_profile_name,omitempty"`

	// The ID of the Front Door Secret.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A secret block as defined below. Changing this forces a new Front Door Secret to be created.
	Secret *SecretObservation `json:"secret,omitempty" tf:"secret,omitempty"`
}

type FrontdoorSecretParameters struct {

	// The Resource ID of the Front Door Profile. Changing this forces a new Front Door Secret to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/cdn/v1beta1.FrontdoorProfile
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	CdnFrontdoorProfileID *string `json:"cdnFrontdoorProfileId,omitempty" tf:"cdn_frontdoor_profile_id,omitempty"`

	// Reference to a FrontdoorProfile in cdn to populate cdnFrontdoorProfileId.
	// +kubebuilder:validation:Optional
	CdnFrontdoorProfileIDRef *v1.NamespacedReference `json:"cdnFrontdoorProfileIdRef,omitempty" tf:"-"`

	// Selector for a FrontdoorProfile in cdn to populate cdnFrontdoorProfileId.
	// +kubebuilder:validation:Optional
	CdnFrontdoorProfileIDSelector *v1.NamespacedSelector `json:"cdnFrontdoorProfileIdSelector,omitempty" tf:"-"`

	// A secret block as defined below. Changing this forces a new Front Door Secret to be created.
	// +kubebuilder:validation:Optional
	Secret *SecretParameters `json:"secret,omitempty" tf:"secret,omitempty"`
}

type SecretInitParameters struct {

	// A customer_certificate block as defined below. Changing this forces a new Front Door Secret to be created.
	CustomerCertificate []CustomerCertificateInitParameters `json:"customerCertificate,omitempty" tf:"customer_certificate,omitempty"`
}

type SecretObservation struct {

	// A customer_certificate block as defined below. Changing this forces a new Front Door Secret to be created.
	CustomerCertificate []CustomerCertificateObservation `json:"customerCertificate,omitempty" tf:"customer_certificate,omitempty"`
}

type SecretParameters struct {

	// A customer_certificate block as defined below. Changing this forces a new Front Door Secret to be created.
	// +kubebuilder:validation:Optional
	CustomerCertificate []CustomerCertificateParameters `json:"customerCertificate" tf:"customer_certificate,omitempty"`
}

// FrontdoorSecretSpec defines the desired state of FrontdoorSecret
type FrontdoorSecretSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            FrontdoorSecretParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider FrontdoorSecretInitParameters `json:"initProvider,omitempty"`
}

// FrontdoorSecretStatus defines the observed state of FrontdoorSecret.
type FrontdoorSecretStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FrontdoorSecretObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// FrontdoorSecret is the Schema for the FrontdoorSecrets API. Manages a Front Door (standard/premium) Secret.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,azure}
type FrontdoorSecret struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.secret) || (has(self.initProvider) && has(self.initProvider.secret))",message="spec.forProvider.secret is a required parameter"
	Spec   FrontdoorSecretSpec   `json:"spec"`
	Status FrontdoorSecretStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FrontdoorSecretList contains a list of FrontdoorSecrets
type FrontdoorSecretList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FrontdoorSecret `json:"items"`
}

// Repository type metadata.
var (
	FrontdoorSecret_Kind             = "FrontdoorSecret"
	FrontdoorSecret_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: FrontdoorSecret_Kind}.String()
	FrontdoorSecret_KindAPIVersion   = FrontdoorSecret_Kind + "." + CRDGroupVersion.String()
	FrontdoorSecret_GroupVersionKind = CRDGroupVersion.WithKind(FrontdoorSecret_Kind)
)

func init() {
	SchemeBuilder.Register(&FrontdoorSecret{}, &FrontdoorSecretList{})
}
