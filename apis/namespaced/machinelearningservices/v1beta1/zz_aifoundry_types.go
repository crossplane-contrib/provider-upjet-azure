// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type AIFoundryInitParameters struct {

	// The Application Insights ID that should be used by this AI Foundry Hub.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/insights/v1beta1.ApplicationInsights
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/namespaced/rconfig.ExtractResourceID()
	ApplicationInsightsID *string `json:"applicationInsightsId,omitempty" tf:"application_insights_id,omitempty"`

	// Reference to a ApplicationInsights in insights to populate applicationInsightsId.
	// +kubebuilder:validation:Optional
	ApplicationInsightsIDRef *v1.NamespacedReference `json:"applicationInsightsIdRef,omitempty" tf:"-"`

	// Selector for a ApplicationInsights in insights to populate applicationInsightsId.
	// +kubebuilder:validation:Optional
	ApplicationInsightsIDSelector *v1.NamespacedSelector `json:"applicationInsightsIdSelector,omitempty" tf:"-"`

	// The Container Registry ID that should be used by this AI Foundry Hub.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/containerregistry/v1beta1.Registry
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/namespaced/rconfig.ExtractResourceID()
	ContainerRegistryID *string `json:"containerRegistryId,omitempty" tf:"container_registry_id,omitempty"`

	// Reference to a Registry in containerregistry to populate containerRegistryId.
	// +kubebuilder:validation:Optional
	ContainerRegistryIDRef *v1.NamespacedReference `json:"containerRegistryIdRef,omitempty" tf:"-"`

	// Selector for a Registry in containerregistry to populate containerRegistryId.
	// +kubebuilder:validation:Optional
	ContainerRegistryIDSelector *v1.NamespacedSelector `json:"containerRegistryIdSelector,omitempty" tf:"-"`

	// The description of this AI Foundry Hub.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// An encryption block as defined below. Changing this forces a new AI Foundry Hub to be created.
	Encryption *EncryptionInitParameters `json:"encryption,omitempty" tf:"encryption,omitempty"`

	// The display name of this AI Foundry Hub.
	FriendlyName *string `json:"friendlyName,omitempty" tf:"friendly_name,omitempty"`

	// Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Hub to be created. Defaults to false.
	HighBusinessImpactEnabled *bool `json:"highBusinessImpactEnabled,omitempty" tf:"high_business_impact_enabled,omitempty"`

	// A identity block as defined below.
	Identity *IdentityInitParameters `json:"identity,omitempty" tf:"identity,omitempty"`

	// The Key Vault ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/keyvault/v1beta1.Vault
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/namespaced/rconfig.ExtractResourceID()
	KeyVaultID *string `json:"keyVaultId,omitempty" tf:"key_vault_id,omitempty"`

	// Reference to a Vault in keyvault to populate keyVaultId.
	// +kubebuilder:validation:Optional
	KeyVaultIDRef *v1.NamespacedReference `json:"keyVaultIdRef,omitempty" tf:"-"`

	// Selector for a Vault in keyvault to populate keyVaultId.
	// +kubebuilder:validation:Optional
	KeyVaultIDSelector *v1.NamespacedSelector `json:"keyVaultIdSelector,omitempty" tf:"-"`

	// The Azure Region where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// A managed_network block as defined below.
	ManagedNetwork *ManagedNetworkInitParameters `json:"managedNetwork,omitempty" tf:"managed_network,omitempty"`

	// The user assigned identity ID that represents the AI Foundry Hub identity. This must be set when enabling encryption with a user assigned identity.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/managedidentity/v1beta1.UserAssignedIdentity
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/namespaced/rconfig.ExtractResourceID()
	PrimaryUserAssignedIdentity *string `json:"primaryUserAssignedIdentity,omitempty" tf:"primary_user_assigned_identity,omitempty"`

	// Reference to a UserAssignedIdentity in managedidentity to populate primaryUserAssignedIdentity.
	// +kubebuilder:validation:Optional
	PrimaryUserAssignedIdentityRef *v1.NamespacedReference `json:"primaryUserAssignedIdentityRef,omitempty" tf:"-"`

	// Selector for a UserAssignedIdentity in managedidentity to populate primaryUserAssignedIdentity.
	// +kubebuilder:validation:Optional
	PrimaryUserAssignedIdentitySelector *v1.NamespacedSelector `json:"primaryUserAssignedIdentitySelector,omitempty" tf:"-"`

	// Whether public network access for this AI Service Hub should be enabled. Possible values include Enabled and Disabled. Defaults to Enabled.
	PublicNetworkAccess *string `json:"publicNetworkAccess,omitempty" tf:"public_network_access,omitempty"`

	// The Storage Account ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	StorageAccountID *string `json:"storageAccountId,omitempty" tf:"storage_account_id,omitempty"`

	// Reference to a Account in storage to populate storageAccountId.
	// +kubebuilder:validation:Optional
	StorageAccountIDRef *v1.NamespacedReference `json:"storageAccountIdRef,omitempty" tf:"-"`

	// Selector for a Account in storage to populate storageAccountId.
	// +kubebuilder:validation:Optional
	StorageAccountIDSelector *v1.NamespacedSelector `json:"storageAccountIdSelector,omitempty" tf:"-"`

	// A mapping of tags which should be assigned to the AI Foundry Hub.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type AIFoundryObservation struct {

	// The Application Insights ID that should be used by this AI Foundry Hub.
	ApplicationInsightsID *string `json:"applicationInsightsId,omitempty" tf:"application_insights_id,omitempty"`

	// The Container Registry ID that should be used by this AI Foundry Hub.
	ContainerRegistryID *string `json:"containerRegistryId,omitempty" tf:"container_registry_id,omitempty"`

	// The description of this AI Foundry Hub.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The URL for the discovery service to identify regional endpoints for AI Foundry Hub services.
	DiscoveryURL *string `json:"discoveryUrl,omitempty" tf:"discovery_url,omitempty"`

	// An encryption block as defined below. Changing this forces a new AI Foundry Hub to be created.
	Encryption *EncryptionObservation `json:"encryption,omitempty" tf:"encryption,omitempty"`

	// The display name of this AI Foundry Hub.
	FriendlyName *string `json:"friendlyName,omitempty" tf:"friendly_name,omitempty"`

	// Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Hub to be created. Defaults to false.
	HighBusinessImpactEnabled *bool `json:"highBusinessImpactEnabled,omitempty" tf:"high_business_impact_enabled,omitempty"`

	// The ID of the AI Foundry Hub.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A identity block as defined below.
	Identity *IdentityObservation `json:"identity,omitempty" tf:"identity,omitempty"`

	// The Key Vault ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
	KeyVaultID *string `json:"keyVaultId,omitempty" tf:"key_vault_id,omitempty"`

	// The Azure Region where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// A managed_network block as defined below.
	ManagedNetwork *ManagedNetworkObservation `json:"managedNetwork,omitempty" tf:"managed_network,omitempty"`

	// The user assigned identity ID that represents the AI Foundry Hub identity. This must be set when enabling encryption with a user assigned identity.
	PrimaryUserAssignedIdentity *string `json:"primaryUserAssignedIdentity,omitempty" tf:"primary_user_assigned_identity,omitempty"`

	// Whether public network access for this AI Service Hub should be enabled. Possible values include Enabled and Disabled. Defaults to Enabled.
	PublicNetworkAccess *string `json:"publicNetworkAccess,omitempty" tf:"public_network_access,omitempty"`

	// The name of the Resource Group where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// The Storage Account ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
	StorageAccountID *string `json:"storageAccountId,omitempty" tf:"storage_account_id,omitempty"`

	// A mapping of tags which should be assigned to the AI Foundry Hub.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The immutable ID associated with this AI Foundry Hub.
	WorkspaceID *string `json:"workspaceId,omitempty" tf:"workspace_id,omitempty"`
}

type AIFoundryParameters struct {

	// The Application Insights ID that should be used by this AI Foundry Hub.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/insights/v1beta1.ApplicationInsights
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/namespaced/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ApplicationInsightsID *string `json:"applicationInsightsId,omitempty" tf:"application_insights_id,omitempty"`

	// Reference to a ApplicationInsights in insights to populate applicationInsightsId.
	// +kubebuilder:validation:Optional
	ApplicationInsightsIDRef *v1.NamespacedReference `json:"applicationInsightsIdRef,omitempty" tf:"-"`

	// Selector for a ApplicationInsights in insights to populate applicationInsightsId.
	// +kubebuilder:validation:Optional
	ApplicationInsightsIDSelector *v1.NamespacedSelector `json:"applicationInsightsIdSelector,omitempty" tf:"-"`

	// The Container Registry ID that should be used by this AI Foundry Hub.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/containerregistry/v1beta1.Registry
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/namespaced/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ContainerRegistryID *string `json:"containerRegistryId,omitempty" tf:"container_registry_id,omitempty"`

	// Reference to a Registry in containerregistry to populate containerRegistryId.
	// +kubebuilder:validation:Optional
	ContainerRegistryIDRef *v1.NamespacedReference `json:"containerRegistryIdRef,omitempty" tf:"-"`

	// Selector for a Registry in containerregistry to populate containerRegistryId.
	// +kubebuilder:validation:Optional
	ContainerRegistryIDSelector *v1.NamespacedSelector `json:"containerRegistryIdSelector,omitempty" tf:"-"`

	// The description of this AI Foundry Hub.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// An encryption block as defined below. Changing this forces a new AI Foundry Hub to be created.
	// +kubebuilder:validation:Optional
	Encryption *EncryptionParameters `json:"encryption,omitempty" tf:"encryption,omitempty"`

	// The display name of this AI Foundry Hub.
	// +kubebuilder:validation:Optional
	FriendlyName *string `json:"friendlyName,omitempty" tf:"friendly_name,omitempty"`

	// Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Hub to be created. Defaults to false.
	// +kubebuilder:validation:Optional
	HighBusinessImpactEnabled *bool `json:"highBusinessImpactEnabled,omitempty" tf:"high_business_impact_enabled,omitempty"`

	// A identity block as defined below.
	// +kubebuilder:validation:Optional
	Identity *IdentityParameters `json:"identity,omitempty" tf:"identity,omitempty"`

	// The Key Vault ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/keyvault/v1beta1.Vault
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/namespaced/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	KeyVaultID *string `json:"keyVaultId,omitempty" tf:"key_vault_id,omitempty"`

	// Reference to a Vault in keyvault to populate keyVaultId.
	// +kubebuilder:validation:Optional
	KeyVaultIDRef *v1.NamespacedReference `json:"keyVaultIdRef,omitempty" tf:"-"`

	// Selector for a Vault in keyvault to populate keyVaultId.
	// +kubebuilder:validation:Optional
	KeyVaultIDSelector *v1.NamespacedSelector `json:"keyVaultIdSelector,omitempty" tf:"-"`

	// The Azure Region where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// A managed_network block as defined below.
	// +kubebuilder:validation:Optional
	ManagedNetwork *ManagedNetworkParameters `json:"managedNetwork,omitempty" tf:"managed_network,omitempty"`

	// The user assigned identity ID that represents the AI Foundry Hub identity. This must be set when enabling encryption with a user assigned identity.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/managedidentity/v1beta1.UserAssignedIdentity
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/namespaced/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	PrimaryUserAssignedIdentity *string `json:"primaryUserAssignedIdentity,omitempty" tf:"primary_user_assigned_identity,omitempty"`

	// Reference to a UserAssignedIdentity in managedidentity to populate primaryUserAssignedIdentity.
	// +kubebuilder:validation:Optional
	PrimaryUserAssignedIdentityRef *v1.NamespacedReference `json:"primaryUserAssignedIdentityRef,omitempty" tf:"-"`

	// Selector for a UserAssignedIdentity in managedidentity to populate primaryUserAssignedIdentity.
	// +kubebuilder:validation:Optional
	PrimaryUserAssignedIdentitySelector *v1.NamespacedSelector `json:"primaryUserAssignedIdentitySelector,omitempty" tf:"-"`

	// Whether public network access for this AI Service Hub should be enabled. Possible values include Enabled and Disabled. Defaults to Enabled.
	// +kubebuilder:validation:Optional
	PublicNetworkAccess *string `json:"publicNetworkAccess,omitempty" tf:"public_network_access,omitempty"`

	// The name of the Resource Group where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.NamespacedReference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.NamespacedSelector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// The Storage Account ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	StorageAccountID *string `json:"storageAccountId,omitempty" tf:"storage_account_id,omitempty"`

	// Reference to a Account in storage to populate storageAccountId.
	// +kubebuilder:validation:Optional
	StorageAccountIDRef *v1.NamespacedReference `json:"storageAccountIdRef,omitempty" tf:"-"`

	// Selector for a Account in storage to populate storageAccountId.
	// +kubebuilder:validation:Optional
	StorageAccountIDSelector *v1.NamespacedSelector `json:"storageAccountIdSelector,omitempty" tf:"-"`

	// A mapping of tags which should be assigned to the AI Foundry Hub.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type EncryptionInitParameters struct {

	// The Key Vault URI to access the encryption key.
	KeyID *string `json:"keyId,omitempty" tf:"key_id,omitempty"`

	// The Key Vault ID where the customer owned encryption key exists.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/keyvault/v1beta1.Vault
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/namespaced/rconfig.ExtractResourceID()
	KeyVaultID *string `json:"keyVaultId,omitempty" tf:"key_vault_id,omitempty"`

	// Reference to a Vault in keyvault to populate keyVaultId.
	// +kubebuilder:validation:Optional
	KeyVaultIDRef *v1.NamespacedReference `json:"keyVaultIdRef,omitempty" tf:"-"`

	// Selector for a Vault in keyvault to populate keyVaultId.
	// +kubebuilder:validation:Optional
	KeyVaultIDSelector *v1.NamespacedSelector `json:"keyVaultIdSelector,omitempty" tf:"-"`

	// The user assigned identity ID that has access to the encryption key.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/managedidentity/v1beta1.UserAssignedIdentity
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/namespaced/rconfig.ExtractResourceID()
	UserAssignedIdentityID *string `json:"userAssignedIdentityId,omitempty" tf:"user_assigned_identity_id,omitempty"`

	// Reference to a UserAssignedIdentity in managedidentity to populate userAssignedIdentityId.
	// +kubebuilder:validation:Optional
	UserAssignedIdentityIDRef *v1.NamespacedReference `json:"userAssignedIdentityIdRef,omitempty" tf:"-"`

	// Selector for a UserAssignedIdentity in managedidentity to populate userAssignedIdentityId.
	// +kubebuilder:validation:Optional
	UserAssignedIdentityIDSelector *v1.NamespacedSelector `json:"userAssignedIdentityIdSelector,omitempty" tf:"-"`
}

type EncryptionObservation struct {

	// The Key Vault URI to access the encryption key.
	KeyID *string `json:"keyId,omitempty" tf:"key_id,omitempty"`

	// The Key Vault ID where the customer owned encryption key exists.
	KeyVaultID *string `json:"keyVaultId,omitempty" tf:"key_vault_id,omitempty"`

	// The user assigned identity ID that has access to the encryption key.
	UserAssignedIdentityID *string `json:"userAssignedIdentityId,omitempty" tf:"user_assigned_identity_id,omitempty"`
}

type EncryptionParameters struct {

	// The Key Vault URI to access the encryption key.
	// +kubebuilder:validation:Optional
	KeyID *string `json:"keyId" tf:"key_id,omitempty"`

	// The Key Vault ID where the customer owned encryption key exists.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/keyvault/v1beta1.Vault
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/namespaced/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	KeyVaultID *string `json:"keyVaultId,omitempty" tf:"key_vault_id,omitempty"`

	// Reference to a Vault in keyvault to populate keyVaultId.
	// +kubebuilder:validation:Optional
	KeyVaultIDRef *v1.NamespacedReference `json:"keyVaultIdRef,omitempty" tf:"-"`

	// Selector for a Vault in keyvault to populate keyVaultId.
	// +kubebuilder:validation:Optional
	KeyVaultIDSelector *v1.NamespacedSelector `json:"keyVaultIdSelector,omitempty" tf:"-"`

	// The user assigned identity ID that has access to the encryption key.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/managedidentity/v1beta1.UserAssignedIdentity
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/namespaced/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	UserAssignedIdentityID *string `json:"userAssignedIdentityId,omitempty" tf:"user_assigned_identity_id,omitempty"`

	// Reference to a UserAssignedIdentity in managedidentity to populate userAssignedIdentityId.
	// +kubebuilder:validation:Optional
	UserAssignedIdentityIDRef *v1.NamespacedReference `json:"userAssignedIdentityIdRef,omitempty" tf:"-"`

	// Selector for a UserAssignedIdentity in managedidentity to populate userAssignedIdentityId.
	// +kubebuilder:validation:Optional
	UserAssignedIdentityIDSelector *v1.NamespacedSelector `json:"userAssignedIdentityIdSelector,omitempty" tf:"-"`
}

type IdentityInitParameters struct {

	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this AI Foundry Hub.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/managedidentity/v1beta1.UserAssignedIdentity
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/namespaced/rconfig.ExtractResourceID()
	// +listType=set
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// References to UserAssignedIdentity in managedidentity to populate identityIds.
	// +kubebuilder:validation:Optional
	IdentityIdsRefs []v1.NamespacedReference `json:"identityIdsRefs,omitempty" tf:"-"`

	// Selector for a list of UserAssignedIdentity in managedidentity to populate identityIds.
	// +kubebuilder:validation:Optional
	IdentityIdsSelector *v1.NamespacedSelector `json:"identityIdsSelector,omitempty" tf:"-"`

	// Specifies the type of Managed Service Identity that should be configured on this AI Foundry Hub. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IdentityObservation struct {

	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this AI Foundry Hub.
	// +listType=set
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// The Principal ID associated with this Managed Service Identity.
	PrincipalID *string `json:"principalId,omitempty" tf:"principal_id,omitempty"`

	// The Tenant ID associated with this Managed Service Identity.
	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`

	// Specifies the type of Managed Service Identity that should be configured on this AI Foundry Hub. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IdentityParameters struct {

	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this AI Foundry Hub.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/managedidentity/v1beta1.UserAssignedIdentity
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/namespaced/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	// +listType=set
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// References to UserAssignedIdentity in managedidentity to populate identityIds.
	// +kubebuilder:validation:Optional
	IdentityIdsRefs []v1.NamespacedReference `json:"identityIdsRefs,omitempty" tf:"-"`

	// Selector for a list of UserAssignedIdentity in managedidentity to populate identityIds.
	// +kubebuilder:validation:Optional
	IdentityIdsSelector *v1.NamespacedSelector `json:"identityIdsSelector,omitempty" tf:"-"`

	// Specifies the type of Managed Service Identity that should be configured on this AI Foundry Hub. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ManagedNetworkInitParameters struct {

	// The isolation mode of the AI Foundry Hub. Possible values are Disabled, AllowOnlyApprovedOutbound, and AllowInternetOutbound.
	IsolationMode *string `json:"isolationMode,omitempty" tf:"isolation_mode,omitempty"`
}

type ManagedNetworkObservation struct {

	// The isolation mode of the AI Foundry Hub. Possible values are Disabled, AllowOnlyApprovedOutbound, and AllowInternetOutbound.
	IsolationMode *string `json:"isolationMode,omitempty" tf:"isolation_mode,omitempty"`
}

type ManagedNetworkParameters struct {

	// The isolation mode of the AI Foundry Hub. Possible values are Disabled, AllowOnlyApprovedOutbound, and AllowInternetOutbound.
	// +kubebuilder:validation:Optional
	IsolationMode *string `json:"isolationMode,omitempty" tf:"isolation_mode,omitempty"`
}

// AIFoundrySpec defines the desired state of AIFoundry
type AIFoundrySpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            AIFoundryParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AIFoundryInitParameters `json:"initProvider,omitempty"`
}

// AIFoundryStatus defines the observed state of AIFoundry.
type AIFoundryStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AIFoundryObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AIFoundry is the Schema for the AIFoundrys API. Manages an AI Foundry Hub.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,azure}
type AIFoundry struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.identity) || (has(self.initProvider) && has(self.initProvider.identity))",message="spec.forProvider.identity is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	Spec   AIFoundrySpec   `json:"spec"`
	Status AIFoundryStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AIFoundryList contains a list of AIFoundrys
type AIFoundryList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AIFoundry `json:"items"`
}

// Repository type metadata.
var (
	AIFoundry_Kind             = "AIFoundry"
	AIFoundry_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AIFoundry_Kind}.String()
	AIFoundry_KindAPIVersion   = AIFoundry_Kind + "." + CRDGroupVersion.String()
	AIFoundry_GroupVersionKind = CRDGroupVersion.WithKind(AIFoundry_Kind)
)

func init() {
	SchemeBuilder.Register(&AIFoundry{}, &AIFoundryList{})
}
