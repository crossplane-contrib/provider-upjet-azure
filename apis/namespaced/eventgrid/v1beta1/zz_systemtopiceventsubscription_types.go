// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type AdvancedFilterBoolEqualsInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	Value *bool `json:"value,omitempty" tf:"value,omitempty"`
}

type AdvancedFilterBoolEqualsObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	Value *bool `json:"value,omitempty" tf:"value,omitempty"`
}

type AdvancedFilterBoolEqualsParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	// +kubebuilder:validation:Optional
	Value *bool `json:"value" tf:"value,omitempty"`
}

type AdvancedFilterIsNotNullInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type AdvancedFilterIsNotNullObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type AdvancedFilterIsNotNullParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`
}

type AdvancedFilterIsNullOrUndefinedInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type AdvancedFilterIsNullOrUndefinedObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type AdvancedFilterIsNullOrUndefinedParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`
}

type AdvancedFilterNumberGreaterThanInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type AdvancedFilterNumberGreaterThanObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type AdvancedFilterNumberGreaterThanOrEqualsInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type AdvancedFilterNumberGreaterThanOrEqualsObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type AdvancedFilterNumberGreaterThanOrEqualsParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	// +kubebuilder:validation:Optional
	Value *float64 `json:"value" tf:"value,omitempty"`
}

type AdvancedFilterNumberGreaterThanParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	// +kubebuilder:validation:Optional
	Value *float64 `json:"value" tf:"value,omitempty"`
}

type AdvancedFilterNumberInInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*float64 `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterNumberInObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*float64 `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterNumberInParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values []*float64 `json:"values" tf:"values,omitempty"`
}

type AdvancedFilterNumberInRangeInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values [][]*float64 `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterNumberInRangeObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values [][]*float64 `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterNumberInRangeParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values [][]*float64 `json:"values" tf:"values,omitempty"`
}

type AdvancedFilterNumberLessThanInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type AdvancedFilterNumberLessThanObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type AdvancedFilterNumberLessThanOrEqualsInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type AdvancedFilterNumberLessThanOrEqualsObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type AdvancedFilterNumberLessThanOrEqualsParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	// +kubebuilder:validation:Optional
	Value *float64 `json:"value" tf:"value,omitempty"`
}

type AdvancedFilterNumberLessThanParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies a single value to compare to when using a single value operator.
	// +kubebuilder:validation:Optional
	Value *float64 `json:"value" tf:"value,omitempty"`
}

type AdvancedFilterNumberNotInInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*float64 `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterNumberNotInObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*float64 `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterNumberNotInParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values []*float64 `json:"values" tf:"values,omitempty"`
}

type AdvancedFilterNumberNotInRangeInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values [][]*float64 `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterNumberNotInRangeObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values [][]*float64 `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterNumberNotInRangeParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values [][]*float64 `json:"values" tf:"values,omitempty"`
}

type AdvancedFilterStringBeginsWithInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterStringBeginsWithObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterStringBeginsWithParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type AdvancedFilterStringContainsInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterStringContainsObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterStringContainsParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type AdvancedFilterStringEndsWithInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterStringEndsWithObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterStringEndsWithParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type AdvancedFilterStringInInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterStringInObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterStringInParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type AdvancedFilterStringNotBeginsWithInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterStringNotBeginsWithObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterStringNotBeginsWithParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type AdvancedFilterStringNotContainsInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterStringNotContainsObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterStringNotContainsParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type AdvancedFilterStringNotEndsWithInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterStringNotEndsWithObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterStringNotEndsWithParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type AdvancedFilterStringNotInInitParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterStringNotInObservation struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type AdvancedFilterStringNotInParameters struct {

	// Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies an array of values to compare to when using a multiple values operator.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type SystemTopicEventSubscriptionAdvancedFilterInitParameters struct {

	// Compares a value of an event using a single boolean value.
	BoolEquals []AdvancedFilterBoolEqualsInitParameters `json:"boolEquals,omitempty" tf:"bool_equals,omitempty"`

	// Evaluates if a value of an event isn't NULL or undefined.
	IsNotNull []AdvancedFilterIsNotNullInitParameters `json:"isNotNull,omitempty" tf:"is_not_null,omitempty"`

	// Evaluates if a value of an event is NULL or undefined.
	IsNullOrUndefined []AdvancedFilterIsNullOrUndefinedInitParameters `json:"isNullOrUndefined,omitempty" tf:"is_null_or_undefined,omitempty"`

	// Compares a value of an event using a single floating point number.
	NumberGreaterThan []AdvancedFilterNumberGreaterThanInitParameters `json:"numberGreaterThan,omitempty" tf:"number_greater_than,omitempty"`

	// Compares a value of an event using a single floating point number.
	NumberGreaterThanOrEquals []AdvancedFilterNumberGreaterThanOrEqualsInitParameters `json:"numberGreaterThanOrEquals,omitempty" tf:"number_greater_than_or_equals,omitempty"`

	// Compares a value of an event using multiple floating point numbers.
	NumberIn []AdvancedFilterNumberInInitParameters `json:"numberIn,omitempty" tf:"number_in,omitempty"`

	// Compares a value of an event using multiple floating point number ranges.
	NumberInRange []AdvancedFilterNumberInRangeInitParameters `json:"numberInRange,omitempty" tf:"number_in_range,omitempty"`

	// Compares a value of an event using a single floating point number.
	NumberLessThan []AdvancedFilterNumberLessThanInitParameters `json:"numberLessThan,omitempty" tf:"number_less_than,omitempty"`

	// Compares a value of an event using a single floating point number.
	NumberLessThanOrEquals []AdvancedFilterNumberLessThanOrEqualsInitParameters `json:"numberLessThanOrEquals,omitempty" tf:"number_less_than_or_equals,omitempty"`

	// Compares a value of an event using multiple floating point numbers.
	NumberNotIn []AdvancedFilterNumberNotInInitParameters `json:"numberNotIn,omitempty" tf:"number_not_in,omitempty"`

	// Compares a value of an event using multiple floating point number ranges.
	NumberNotInRange []AdvancedFilterNumberNotInRangeInitParameters `json:"numberNotInRange,omitempty" tf:"number_not_in_range,omitempty"`

	// Compares a value of an event using multiple string values.
	StringBeginsWith []AdvancedFilterStringBeginsWithInitParameters `json:"stringBeginsWith,omitempty" tf:"string_begins_with,omitempty"`

	// Compares a value of an event using multiple string values.
	StringContains []AdvancedFilterStringContainsInitParameters `json:"stringContains,omitempty" tf:"string_contains,omitempty"`

	// Compares a value of an event using multiple string values.
	StringEndsWith []AdvancedFilterStringEndsWithInitParameters `json:"stringEndsWith,omitempty" tf:"string_ends_with,omitempty"`

	// Compares a value of an event using multiple string values.
	StringIn []AdvancedFilterStringInInitParameters `json:"stringIn,omitempty" tf:"string_in,omitempty"`

	// Compares a value of an event using multiple string values.
	StringNotBeginsWith []AdvancedFilterStringNotBeginsWithInitParameters `json:"stringNotBeginsWith,omitempty" tf:"string_not_begins_with,omitempty"`

	// Compares a value of an event using multiple string values.
	StringNotContains []AdvancedFilterStringNotContainsInitParameters `json:"stringNotContains,omitempty" tf:"string_not_contains,omitempty"`

	// Compares a value of an event using multiple string values.
	StringNotEndsWith []AdvancedFilterStringNotEndsWithInitParameters `json:"stringNotEndsWith,omitempty" tf:"string_not_ends_with,omitempty"`

	// Compares a value of an event using multiple string values.
	StringNotIn []AdvancedFilterStringNotInInitParameters `json:"stringNotIn,omitempty" tf:"string_not_in,omitempty"`
}

type SystemTopicEventSubscriptionAdvancedFilterObservation struct {

	// Compares a value of an event using a single boolean value.
	BoolEquals []AdvancedFilterBoolEqualsObservation `json:"boolEquals,omitempty" tf:"bool_equals,omitempty"`

	// Evaluates if a value of an event isn't NULL or undefined.
	IsNotNull []AdvancedFilterIsNotNullObservation `json:"isNotNull,omitempty" tf:"is_not_null,omitempty"`

	// Evaluates if a value of an event is NULL or undefined.
	IsNullOrUndefined []AdvancedFilterIsNullOrUndefinedObservation `json:"isNullOrUndefined,omitempty" tf:"is_null_or_undefined,omitempty"`

	// Compares a value of an event using a single floating point number.
	NumberGreaterThan []AdvancedFilterNumberGreaterThanObservation `json:"numberGreaterThan,omitempty" tf:"number_greater_than,omitempty"`

	// Compares a value of an event using a single floating point number.
	NumberGreaterThanOrEquals []AdvancedFilterNumberGreaterThanOrEqualsObservation `json:"numberGreaterThanOrEquals,omitempty" tf:"number_greater_than_or_equals,omitempty"`

	// Compares a value of an event using multiple floating point numbers.
	NumberIn []AdvancedFilterNumberInObservation `json:"numberIn,omitempty" tf:"number_in,omitempty"`

	// Compares a value of an event using multiple floating point number ranges.
	NumberInRange []AdvancedFilterNumberInRangeObservation `json:"numberInRange,omitempty" tf:"number_in_range,omitempty"`

	// Compares a value of an event using a single floating point number.
	NumberLessThan []AdvancedFilterNumberLessThanObservation `json:"numberLessThan,omitempty" tf:"number_less_than,omitempty"`

	// Compares a value of an event using a single floating point number.
	NumberLessThanOrEquals []AdvancedFilterNumberLessThanOrEqualsObservation `json:"numberLessThanOrEquals,omitempty" tf:"number_less_than_or_equals,omitempty"`

	// Compares a value of an event using multiple floating point numbers.
	NumberNotIn []AdvancedFilterNumberNotInObservation `json:"numberNotIn,omitempty" tf:"number_not_in,omitempty"`

	// Compares a value of an event using multiple floating point number ranges.
	NumberNotInRange []AdvancedFilterNumberNotInRangeObservation `json:"numberNotInRange,omitempty" tf:"number_not_in_range,omitempty"`

	// Compares a value of an event using multiple string values.
	StringBeginsWith []AdvancedFilterStringBeginsWithObservation `json:"stringBeginsWith,omitempty" tf:"string_begins_with,omitempty"`

	// Compares a value of an event using multiple string values.
	StringContains []AdvancedFilterStringContainsObservation `json:"stringContains,omitempty" tf:"string_contains,omitempty"`

	// Compares a value of an event using multiple string values.
	StringEndsWith []AdvancedFilterStringEndsWithObservation `json:"stringEndsWith,omitempty" tf:"string_ends_with,omitempty"`

	// Compares a value of an event using multiple string values.
	StringIn []AdvancedFilterStringInObservation `json:"stringIn,omitempty" tf:"string_in,omitempty"`

	// Compares a value of an event using multiple string values.
	StringNotBeginsWith []AdvancedFilterStringNotBeginsWithObservation `json:"stringNotBeginsWith,omitempty" tf:"string_not_begins_with,omitempty"`

	// Compares a value of an event using multiple string values.
	StringNotContains []AdvancedFilterStringNotContainsObservation `json:"stringNotContains,omitempty" tf:"string_not_contains,omitempty"`

	// Compares a value of an event using multiple string values.
	StringNotEndsWith []AdvancedFilterStringNotEndsWithObservation `json:"stringNotEndsWith,omitempty" tf:"string_not_ends_with,omitempty"`

	// Compares a value of an event using multiple string values.
	StringNotIn []AdvancedFilterStringNotInObservation `json:"stringNotIn,omitempty" tf:"string_not_in,omitempty"`
}

type SystemTopicEventSubscriptionAdvancedFilterParameters struct {

	// Compares a value of an event using a single boolean value.
	// +kubebuilder:validation:Optional
	BoolEquals []AdvancedFilterBoolEqualsParameters `json:"boolEquals,omitempty" tf:"bool_equals,omitempty"`

	// Evaluates if a value of an event isn't NULL or undefined.
	// +kubebuilder:validation:Optional
	IsNotNull []AdvancedFilterIsNotNullParameters `json:"isNotNull,omitempty" tf:"is_not_null,omitempty"`

	// Evaluates if a value of an event is NULL or undefined.
	// +kubebuilder:validation:Optional
	IsNullOrUndefined []AdvancedFilterIsNullOrUndefinedParameters `json:"isNullOrUndefined,omitempty" tf:"is_null_or_undefined,omitempty"`

	// Compares a value of an event using a single floating point number.
	// +kubebuilder:validation:Optional
	NumberGreaterThan []AdvancedFilterNumberGreaterThanParameters `json:"numberGreaterThan,omitempty" tf:"number_greater_than,omitempty"`

	// Compares a value of an event using a single floating point number.
	// +kubebuilder:validation:Optional
	NumberGreaterThanOrEquals []AdvancedFilterNumberGreaterThanOrEqualsParameters `json:"numberGreaterThanOrEquals,omitempty" tf:"number_greater_than_or_equals,omitempty"`

	// Compares a value of an event using multiple floating point numbers.
	// +kubebuilder:validation:Optional
	NumberIn []AdvancedFilterNumberInParameters `json:"numberIn,omitempty" tf:"number_in,omitempty"`

	// Compares a value of an event using multiple floating point number ranges.
	// +kubebuilder:validation:Optional
	NumberInRange []AdvancedFilterNumberInRangeParameters `json:"numberInRange,omitempty" tf:"number_in_range,omitempty"`

	// Compares a value of an event using a single floating point number.
	// +kubebuilder:validation:Optional
	NumberLessThan []AdvancedFilterNumberLessThanParameters `json:"numberLessThan,omitempty" tf:"number_less_than,omitempty"`

	// Compares a value of an event using a single floating point number.
	// +kubebuilder:validation:Optional
	NumberLessThanOrEquals []AdvancedFilterNumberLessThanOrEqualsParameters `json:"numberLessThanOrEquals,omitempty" tf:"number_less_than_or_equals,omitempty"`

	// Compares a value of an event using multiple floating point numbers.
	// +kubebuilder:validation:Optional
	NumberNotIn []AdvancedFilterNumberNotInParameters `json:"numberNotIn,omitempty" tf:"number_not_in,omitempty"`

	// Compares a value of an event using multiple floating point number ranges.
	// +kubebuilder:validation:Optional
	NumberNotInRange []AdvancedFilterNumberNotInRangeParameters `json:"numberNotInRange,omitempty" tf:"number_not_in_range,omitempty"`

	// Compares a value of an event using multiple string values.
	// +kubebuilder:validation:Optional
	StringBeginsWith []AdvancedFilterStringBeginsWithParameters `json:"stringBeginsWith,omitempty" tf:"string_begins_with,omitempty"`

	// Compares a value of an event using multiple string values.
	// +kubebuilder:validation:Optional
	StringContains []AdvancedFilterStringContainsParameters `json:"stringContains,omitempty" tf:"string_contains,omitempty"`

	// Compares a value of an event using multiple string values.
	// +kubebuilder:validation:Optional
	StringEndsWith []AdvancedFilterStringEndsWithParameters `json:"stringEndsWith,omitempty" tf:"string_ends_with,omitempty"`

	// Compares a value of an event using multiple string values.
	// +kubebuilder:validation:Optional
	StringIn []AdvancedFilterStringInParameters `json:"stringIn,omitempty" tf:"string_in,omitempty"`

	// Compares a value of an event using multiple string values.
	// +kubebuilder:validation:Optional
	StringNotBeginsWith []AdvancedFilterStringNotBeginsWithParameters `json:"stringNotBeginsWith,omitempty" tf:"string_not_begins_with,omitempty"`

	// Compares a value of an event using multiple string values.
	// +kubebuilder:validation:Optional
	StringNotContains []AdvancedFilterStringNotContainsParameters `json:"stringNotContains,omitempty" tf:"string_not_contains,omitempty"`

	// Compares a value of an event using multiple string values.
	// +kubebuilder:validation:Optional
	StringNotEndsWith []AdvancedFilterStringNotEndsWithParameters `json:"stringNotEndsWith,omitempty" tf:"string_not_ends_with,omitempty"`

	// Compares a value of an event using multiple string values.
	// +kubebuilder:validation:Optional
	StringNotIn []AdvancedFilterStringNotInParameters `json:"stringNotIn,omitempty" tf:"string_not_in,omitempty"`
}

type SystemTopicEventSubscriptionAzureFunctionEndpointInitParameters struct {

	// Specifies the ID of the Function where the Event Subscription will receive events. This must be the functions ID in format {function_app.id}/functions/{name}.
	FunctionID *string `json:"functionId,omitempty" tf:"function_id,omitempty"`

	// Maximum number of events per batch.
	MaxEventsPerBatch *float64 `json:"maxEventsPerBatch,omitempty" tf:"max_events_per_batch,omitempty"`

	// Preferred batch size in Kilobytes.
	PreferredBatchSizeInKilobytes *float64 `json:"preferredBatchSizeInKilobytes,omitempty" tf:"preferred_batch_size_in_kilobytes,omitempty"`
}

type SystemTopicEventSubscriptionAzureFunctionEndpointObservation struct {

	// Specifies the ID of the Function where the Event Subscription will receive events. This must be the functions ID in format {function_app.id}/functions/{name}.
	FunctionID *string `json:"functionId,omitempty" tf:"function_id,omitempty"`

	// Maximum number of events per batch.
	MaxEventsPerBatch *float64 `json:"maxEventsPerBatch,omitempty" tf:"max_events_per_batch,omitempty"`

	// Preferred batch size in Kilobytes.
	PreferredBatchSizeInKilobytes *float64 `json:"preferredBatchSizeInKilobytes,omitempty" tf:"preferred_batch_size_in_kilobytes,omitempty"`
}

type SystemTopicEventSubscriptionAzureFunctionEndpointParameters struct {

	// Specifies the ID of the Function where the Event Subscription will receive events. This must be the functions ID in format {function_app.id}/functions/{name}.
	// +kubebuilder:validation:Optional
	FunctionID *string `json:"functionId" tf:"function_id,omitempty"`

	// Maximum number of events per batch.
	// +kubebuilder:validation:Optional
	MaxEventsPerBatch *float64 `json:"maxEventsPerBatch,omitempty" tf:"max_events_per_batch,omitempty"`

	// Preferred batch size in Kilobytes.
	// +kubebuilder:validation:Optional
	PreferredBatchSizeInKilobytes *float64 `json:"preferredBatchSizeInKilobytes,omitempty" tf:"preferred_batch_size_in_kilobytes,omitempty"`
}

type SystemTopicEventSubscriptionDeadLetterIdentityInitParameters struct {

	// Specifies the type of Managed Service Identity that is used for dead lettering. Allowed value is SystemAssigned, UserAssigned.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The user identity associated with the resource.
	UserAssignedIdentity *string `json:"userAssignedIdentity,omitempty" tf:"user_assigned_identity,omitempty"`
}

type SystemTopicEventSubscriptionDeadLetterIdentityObservation struct {

	// Specifies the type of Managed Service Identity that is used for dead lettering. Allowed value is SystemAssigned, UserAssigned.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The user identity associated with the resource.
	UserAssignedIdentity *string `json:"userAssignedIdentity,omitempty" tf:"user_assigned_identity,omitempty"`
}

type SystemTopicEventSubscriptionDeadLetterIdentityParameters struct {

	// Specifies the type of Managed Service Identity that is used for dead lettering. Allowed value is SystemAssigned, UserAssigned.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// The user identity associated with the resource.
	// +kubebuilder:validation:Optional
	UserAssignedIdentity *string `json:"userAssignedIdentity,omitempty" tf:"user_assigned_identity,omitempty"`
}

type SystemTopicEventSubscriptionDeliveryIdentityInitParameters struct {

	// Specifies the type of Managed Service Identity that is used for event delivery. Allowed value is SystemAssigned, UserAssigned.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The user identity associated with the resource.
	UserAssignedIdentity *string `json:"userAssignedIdentity,omitempty" tf:"user_assigned_identity,omitempty"`
}

type SystemTopicEventSubscriptionDeliveryIdentityObservation struct {

	// Specifies the type of Managed Service Identity that is used for event delivery. Allowed value is SystemAssigned, UserAssigned.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The user identity associated with the resource.
	UserAssignedIdentity *string `json:"userAssignedIdentity,omitempty" tf:"user_assigned_identity,omitempty"`
}

type SystemTopicEventSubscriptionDeliveryIdentityParameters struct {

	// Specifies the type of Managed Service Identity that is used for event delivery. Allowed value is SystemAssigned, UserAssigned.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// The user identity associated with the resource.
	// +kubebuilder:validation:Optional
	UserAssignedIdentity *string `json:"userAssignedIdentity,omitempty" tf:"user_assigned_identity,omitempty"`
}

type SystemTopicEventSubscriptionDeliveryPropertyInitParameters struct {

	// The name of the header to send on to the destination.
	HeaderName *string `json:"headerName,omitempty" tf:"header_name,omitempty"`

	// Set to true if the value is a secret and should be protected, otherwise false. If true then this value won't be returned from Azure API calls.
	Secret *bool `json:"secret,omitempty" tf:"secret,omitempty"`

	// If the type is Dynamic, then provide the payload field to be used as the value. Valid source fields differ by subscription type.
	SourceField *string `json:"sourceField,omitempty" tf:"source_field,omitempty"`

	// Either Static or Dynamic.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// If the type is Static, then provide the value to use.
	ValueSecretRef *v1.LocalSecretKeySelector `json:"valueSecretRef,omitempty" tf:"-"`
}

type SystemTopicEventSubscriptionDeliveryPropertyObservation struct {

	// The name of the header to send on to the destination.
	HeaderName *string `json:"headerName,omitempty" tf:"header_name,omitempty"`

	// Set to true if the value is a secret and should be protected, otherwise false. If true then this value won't be returned from Azure API calls.
	Secret *bool `json:"secret,omitempty" tf:"secret,omitempty"`

	// If the type is Dynamic, then provide the payload field to be used as the value. Valid source fields differ by subscription type.
	SourceField *string `json:"sourceField,omitempty" tf:"source_field,omitempty"`

	// Either Static or Dynamic.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type SystemTopicEventSubscriptionDeliveryPropertyParameters struct {

	// The name of the header to send on to the destination.
	// +kubebuilder:validation:Optional
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// Set to true if the value is a secret and should be protected, otherwise false. If true then this value won't be returned from Azure API calls.
	// +kubebuilder:validation:Optional
	Secret *bool `json:"secret,omitempty" tf:"secret,omitempty"`

	// If the type is Dynamic, then provide the payload field to be used as the value. Valid source fields differ by subscription type.
	// +kubebuilder:validation:Optional
	SourceField *string `json:"sourceField,omitempty" tf:"source_field,omitempty"`

	// Either Static or Dynamic.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// If the type is Static, then provide the value to use.
	// +kubebuilder:validation:Optional
	ValueSecretRef *v1.LocalSecretKeySelector `json:"valueSecretRef,omitempty" tf:"-"`
}

type SystemTopicEventSubscriptionInitParameters struct {

	// A advanced_filter block as defined below.
	AdvancedFilter *SystemTopicEventSubscriptionAdvancedFilterInitParameters `json:"advancedFilter,omitempty" tf:"advanced_filter,omitempty"`

	// Specifies whether advanced filters should be evaluated against an array of values instead of expecting a singular value. Defaults to false.
	AdvancedFilteringOnArraysEnabled *bool `json:"advancedFilteringOnArraysEnabled,omitempty" tf:"advanced_filtering_on_arrays_enabled,omitempty"`

	// An azure_function_endpoint block as defined below.
	AzureFunctionEndpoint *SystemTopicEventSubscriptionAzureFunctionEndpointInitParameters `json:"azureFunctionEndpoint,omitempty" tf:"azure_function_endpoint,omitempty"`

	// A dead_letter_identity block as defined below.
	DeadLetterIdentity *SystemTopicEventSubscriptionDeadLetterIdentityInitParameters `json:"deadLetterIdentity,omitempty" tf:"dead_letter_identity,omitempty"`

	// A delivery_identity block as defined below.
	DeliveryIdentity *SystemTopicEventSubscriptionDeliveryIdentityInitParameters `json:"deliveryIdentity,omitempty" tf:"delivery_identity,omitempty"`

	// One or more delivery_property blocks as defined below.
	DeliveryProperty []SystemTopicEventSubscriptionDeliveryPropertyInitParameters `json:"deliveryProperty,omitempty" tf:"delivery_property,omitempty"`

	// Specifies the event delivery schema for the event subscription. Possible values include: EventGridSchema, CloudEventSchemaV1_0, CustomInputSchema. Defaults to EventGridSchema. Changing this forces a new resource to be created.
	EventDeliverySchema *string `json:"eventDeliverySchema,omitempty" tf:"event_delivery_schema,omitempty"`

	// Specifies the id where the Event Hub is located.
	EventHubEndpointID *string `json:"eventhubEndpointId,omitempty" tf:"eventhub_endpoint_id,omitempty"`

	// Specifies the expiration time of the event subscription (Datetime Format RFC 3339).
	ExpirationTimeUtc *string `json:"expirationTimeUtc,omitempty" tf:"expiration_time_utc,omitempty"`

	// Specifies the id where the Hybrid Connection is located.
	HybridConnectionEndpointID *string `json:"hybridConnectionEndpointId,omitempty" tf:"hybrid_connection_endpoint_id,omitempty"`

	// A list of applicable event types that need to be part of the event subscription.
	IncludedEventTypes []*string `json:"includedEventTypes,omitempty" tf:"included_event_types,omitempty"`

	// A list of labels to assign to the event subscription.
	Labels []*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// The name which should be used for this Event Subscription. Changing this forces a new Event Subscription to be created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The name of the Resource Group where the System Topic exists. Changing this forces a new Event Subscription to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/azure/v1beta1.ResourceGroup
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.NamespacedReference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.NamespacedSelector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// A retry_policy block as defined below.
	RetryPolicy *SystemTopicEventSubscriptionRetryPolicyInitParameters `json:"retryPolicy,omitempty" tf:"retry_policy,omitempty"`

	// Specifies the id where the Service Bus Queue is located.
	ServiceBusQueueEndpointID *string `json:"serviceBusQueueEndpointId,omitempty" tf:"service_bus_queue_endpoint_id,omitempty"`

	// Specifies the id where the Service Bus Topic is located.
	ServiceBusTopicEndpointID *string `json:"serviceBusTopicEndpointId,omitempty" tf:"service_bus_topic_endpoint_id,omitempty"`

	// A storage_blob_dead_letter_destination block as defined below.
	StorageBlobDeadLetterDestination *SystemTopicEventSubscriptionStorageBlobDeadLetterDestinationInitParameters `json:"storageBlobDeadLetterDestination,omitempty" tf:"storage_blob_dead_letter_destination,omitempty"`

	// A storage_queue_endpoint block as defined below.
	StorageQueueEndpoint *SystemTopicEventSubscriptionStorageQueueEndpointInitParameters `json:"storageQueueEndpoint,omitempty" tf:"storage_queue_endpoint,omitempty"`

	// A subject_filter block as defined below.
	SubjectFilter *SystemTopicEventSubscriptionSubjectFilterInitParameters `json:"subjectFilter,omitempty" tf:"subject_filter,omitempty"`

	// The System Topic where the Event Subscription should be created in. Changing this forces a new Event Subscription to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/eventgrid/v1beta1.SystemTopic
	SystemTopic *string `json:"systemTopic,omitempty" tf:"system_topic,omitempty"`

	// Reference to a SystemTopic in eventgrid to populate systemTopic.
	// +kubebuilder:validation:Optional
	SystemTopicRef *v1.NamespacedReference `json:"systemTopicRef,omitempty" tf:"-"`

	// Selector for a SystemTopic in eventgrid to populate systemTopic.
	// +kubebuilder:validation:Optional
	SystemTopicSelector *v1.NamespacedSelector `json:"systemTopicSelector,omitempty" tf:"-"`

	// A webhook_endpoint block as defined below.
	WebhookEndpoint *SystemTopicEventSubscriptionWebhookEndpointInitParameters `json:"webhookEndpoint,omitempty" tf:"webhook_endpoint,omitempty"`
}

type SystemTopicEventSubscriptionObservation struct {

	// A advanced_filter block as defined below.
	AdvancedFilter *SystemTopicEventSubscriptionAdvancedFilterObservation `json:"advancedFilter,omitempty" tf:"advanced_filter,omitempty"`

	// Specifies whether advanced filters should be evaluated against an array of values instead of expecting a singular value. Defaults to false.
	AdvancedFilteringOnArraysEnabled *bool `json:"advancedFilteringOnArraysEnabled,omitempty" tf:"advanced_filtering_on_arrays_enabled,omitempty"`

	// An azure_function_endpoint block as defined below.
	AzureFunctionEndpoint *SystemTopicEventSubscriptionAzureFunctionEndpointObservation `json:"azureFunctionEndpoint,omitempty" tf:"azure_function_endpoint,omitempty"`

	// A dead_letter_identity block as defined below.
	DeadLetterIdentity *SystemTopicEventSubscriptionDeadLetterIdentityObservation `json:"deadLetterIdentity,omitempty" tf:"dead_letter_identity,omitempty"`

	// A delivery_identity block as defined below.
	DeliveryIdentity *SystemTopicEventSubscriptionDeliveryIdentityObservation `json:"deliveryIdentity,omitempty" tf:"delivery_identity,omitempty"`

	// One or more delivery_property blocks as defined below.
	DeliveryProperty []SystemTopicEventSubscriptionDeliveryPropertyObservation `json:"deliveryProperty,omitempty" tf:"delivery_property,omitempty"`

	// Specifies the event delivery schema for the event subscription. Possible values include: EventGridSchema, CloudEventSchemaV1_0, CustomInputSchema. Defaults to EventGridSchema. Changing this forces a new resource to be created.
	EventDeliverySchema *string `json:"eventDeliverySchema,omitempty" tf:"event_delivery_schema,omitempty"`

	// Specifies the id where the Event Hub is located.
	EventHubEndpointID *string `json:"eventhubEndpointId,omitempty" tf:"eventhub_endpoint_id,omitempty"`

	// Specifies the expiration time of the event subscription (Datetime Format RFC 3339).
	ExpirationTimeUtc *string `json:"expirationTimeUtc,omitempty" tf:"expiration_time_utc,omitempty"`

	// Specifies the id where the Hybrid Connection is located.
	HybridConnectionEndpointID *string `json:"hybridConnectionEndpointId,omitempty" tf:"hybrid_connection_endpoint_id,omitempty"`

	// The ID of the EventGrid System Topic.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A list of applicable event types that need to be part of the event subscription.
	IncludedEventTypes []*string `json:"includedEventTypes,omitempty" tf:"included_event_types,omitempty"`

	// A list of labels to assign to the event subscription.
	Labels []*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// The name which should be used for this Event Subscription. Changing this forces a new Event Subscription to be created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The name of the Resource Group where the System Topic exists. Changing this forces a new Event Subscription to be created.
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// A retry_policy block as defined below.
	RetryPolicy *SystemTopicEventSubscriptionRetryPolicyObservation `json:"retryPolicy,omitempty" tf:"retry_policy,omitempty"`

	// Specifies the id where the Service Bus Queue is located.
	ServiceBusQueueEndpointID *string `json:"serviceBusQueueEndpointId,omitempty" tf:"service_bus_queue_endpoint_id,omitempty"`

	// Specifies the id where the Service Bus Topic is located.
	ServiceBusTopicEndpointID *string `json:"serviceBusTopicEndpointId,omitempty" tf:"service_bus_topic_endpoint_id,omitempty"`

	// A storage_blob_dead_letter_destination block as defined below.
	StorageBlobDeadLetterDestination *SystemTopicEventSubscriptionStorageBlobDeadLetterDestinationObservation `json:"storageBlobDeadLetterDestination,omitempty" tf:"storage_blob_dead_letter_destination,omitempty"`

	// A storage_queue_endpoint block as defined below.
	StorageQueueEndpoint *SystemTopicEventSubscriptionStorageQueueEndpointObservation `json:"storageQueueEndpoint,omitempty" tf:"storage_queue_endpoint,omitempty"`

	// A subject_filter block as defined below.
	SubjectFilter *SystemTopicEventSubscriptionSubjectFilterObservation `json:"subjectFilter,omitempty" tf:"subject_filter,omitempty"`

	// The System Topic where the Event Subscription should be created in. Changing this forces a new Event Subscription to be created.
	SystemTopic *string `json:"systemTopic,omitempty" tf:"system_topic,omitempty"`

	// A webhook_endpoint block as defined below.
	WebhookEndpoint *SystemTopicEventSubscriptionWebhookEndpointObservation `json:"webhookEndpoint,omitempty" tf:"webhook_endpoint,omitempty"`
}

type SystemTopicEventSubscriptionParameters struct {

	// A advanced_filter block as defined below.
	// +kubebuilder:validation:Optional
	AdvancedFilter *SystemTopicEventSubscriptionAdvancedFilterParameters `json:"advancedFilter,omitempty" tf:"advanced_filter,omitempty"`

	// Specifies whether advanced filters should be evaluated against an array of values instead of expecting a singular value. Defaults to false.
	// +kubebuilder:validation:Optional
	AdvancedFilteringOnArraysEnabled *bool `json:"advancedFilteringOnArraysEnabled,omitempty" tf:"advanced_filtering_on_arrays_enabled,omitempty"`

	// An azure_function_endpoint block as defined below.
	// +kubebuilder:validation:Optional
	AzureFunctionEndpoint *SystemTopicEventSubscriptionAzureFunctionEndpointParameters `json:"azureFunctionEndpoint,omitempty" tf:"azure_function_endpoint,omitempty"`

	// A dead_letter_identity block as defined below.
	// +kubebuilder:validation:Optional
	DeadLetterIdentity *SystemTopicEventSubscriptionDeadLetterIdentityParameters `json:"deadLetterIdentity,omitempty" tf:"dead_letter_identity,omitempty"`

	// A delivery_identity block as defined below.
	// +kubebuilder:validation:Optional
	DeliveryIdentity *SystemTopicEventSubscriptionDeliveryIdentityParameters `json:"deliveryIdentity,omitempty" tf:"delivery_identity,omitempty"`

	// One or more delivery_property blocks as defined below.
	// +kubebuilder:validation:Optional
	DeliveryProperty []SystemTopicEventSubscriptionDeliveryPropertyParameters `json:"deliveryProperty,omitempty" tf:"delivery_property,omitempty"`

	// Specifies the event delivery schema for the event subscription. Possible values include: EventGridSchema, CloudEventSchemaV1_0, CustomInputSchema. Defaults to EventGridSchema. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	EventDeliverySchema *string `json:"eventDeliverySchema,omitempty" tf:"event_delivery_schema,omitempty"`

	// Specifies the id where the Event Hub is located.
	// +kubebuilder:validation:Optional
	EventHubEndpointID *string `json:"eventhubEndpointId,omitempty" tf:"eventhub_endpoint_id,omitempty"`

	// Specifies the expiration time of the event subscription (Datetime Format RFC 3339).
	// +kubebuilder:validation:Optional
	ExpirationTimeUtc *string `json:"expirationTimeUtc,omitempty" tf:"expiration_time_utc,omitempty"`

	// Specifies the id where the Hybrid Connection is located.
	// +kubebuilder:validation:Optional
	HybridConnectionEndpointID *string `json:"hybridConnectionEndpointId,omitempty" tf:"hybrid_connection_endpoint_id,omitempty"`

	// A list of applicable event types that need to be part of the event subscription.
	// +kubebuilder:validation:Optional
	IncludedEventTypes []*string `json:"includedEventTypes,omitempty" tf:"included_event_types,omitempty"`

	// A list of labels to assign to the event subscription.
	// +kubebuilder:validation:Optional
	Labels []*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// The name which should be used for this Event Subscription. Changing this forces a new Event Subscription to be created.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The name of the Resource Group where the System Topic exists. Changing this forces a new Event Subscription to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.NamespacedReference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.NamespacedSelector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// A retry_policy block as defined below.
	// +kubebuilder:validation:Optional
	RetryPolicy *SystemTopicEventSubscriptionRetryPolicyParameters `json:"retryPolicy,omitempty" tf:"retry_policy,omitempty"`

	// Specifies the id where the Service Bus Queue is located.
	// +kubebuilder:validation:Optional
	ServiceBusQueueEndpointID *string `json:"serviceBusQueueEndpointId,omitempty" tf:"service_bus_queue_endpoint_id,omitempty"`

	// Specifies the id where the Service Bus Topic is located.
	// +kubebuilder:validation:Optional
	ServiceBusTopicEndpointID *string `json:"serviceBusTopicEndpointId,omitempty" tf:"service_bus_topic_endpoint_id,omitempty"`

	// A storage_blob_dead_letter_destination block as defined below.
	// +kubebuilder:validation:Optional
	StorageBlobDeadLetterDestination *SystemTopicEventSubscriptionStorageBlobDeadLetterDestinationParameters `json:"storageBlobDeadLetterDestination,omitempty" tf:"storage_blob_dead_letter_destination,omitempty"`

	// A storage_queue_endpoint block as defined below.
	// +kubebuilder:validation:Optional
	StorageQueueEndpoint *SystemTopicEventSubscriptionStorageQueueEndpointParameters `json:"storageQueueEndpoint,omitempty" tf:"storage_queue_endpoint,omitempty"`

	// A subject_filter block as defined below.
	// +kubebuilder:validation:Optional
	SubjectFilter *SystemTopicEventSubscriptionSubjectFilterParameters `json:"subjectFilter,omitempty" tf:"subject_filter,omitempty"`

	// The System Topic where the Event Subscription should be created in. Changing this forces a new Event Subscription to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/eventgrid/v1beta1.SystemTopic
	// +kubebuilder:validation:Optional
	SystemTopic *string `json:"systemTopic,omitempty" tf:"system_topic,omitempty"`

	// Reference to a SystemTopic in eventgrid to populate systemTopic.
	// +kubebuilder:validation:Optional
	SystemTopicRef *v1.NamespacedReference `json:"systemTopicRef,omitempty" tf:"-"`

	// Selector for a SystemTopic in eventgrid to populate systemTopic.
	// +kubebuilder:validation:Optional
	SystemTopicSelector *v1.NamespacedSelector `json:"systemTopicSelector,omitempty" tf:"-"`

	// A webhook_endpoint block as defined below.
	// +kubebuilder:validation:Optional
	WebhookEndpoint *SystemTopicEventSubscriptionWebhookEndpointParameters `json:"webhookEndpoint,omitempty" tf:"webhook_endpoint,omitempty"`
}

type SystemTopicEventSubscriptionRetryPolicyInitParameters struct {

	// Specifies the time to live (in minutes) for events. Supported range is 1 to 1440. See official documentation for more details.
	EventTimeToLive *float64 `json:"eventTimeToLive,omitempty" tf:"event_time_to_live,omitempty"`

	// Specifies the maximum number of delivery retry attempts for events.
	MaxDeliveryAttempts *float64 `json:"maxDeliveryAttempts,omitempty" tf:"max_delivery_attempts,omitempty"`
}

type SystemTopicEventSubscriptionRetryPolicyObservation struct {

	// Specifies the time to live (in minutes) for events. Supported range is 1 to 1440. See official documentation for more details.
	EventTimeToLive *float64 `json:"eventTimeToLive,omitempty" tf:"event_time_to_live,omitempty"`

	// Specifies the maximum number of delivery retry attempts for events.
	MaxDeliveryAttempts *float64 `json:"maxDeliveryAttempts,omitempty" tf:"max_delivery_attempts,omitempty"`
}

type SystemTopicEventSubscriptionRetryPolicyParameters struct {

	// Specifies the time to live (in minutes) for events. Supported range is 1 to 1440. See official documentation for more details.
	// +kubebuilder:validation:Optional
	EventTimeToLive *float64 `json:"eventTimeToLive" tf:"event_time_to_live,omitempty"`

	// Specifies the maximum number of delivery retry attempts for events.
	// +kubebuilder:validation:Optional
	MaxDeliveryAttempts *float64 `json:"maxDeliveryAttempts" tf:"max_delivery_attempts,omitempty"`
}

type SystemTopicEventSubscriptionStorageBlobDeadLetterDestinationInitParameters struct {

	// Specifies the id of the storage account id where the storage blob is located.
	StorageAccountID *string `json:"storageAccountId,omitempty" tf:"storage_account_id,omitempty"`

	// Specifies the name of the Storage blob container that is the destination of the deadletter events.
	StorageBlobContainerName *string `json:"storageBlobContainerName,omitempty" tf:"storage_blob_container_name,omitempty"`
}

type SystemTopicEventSubscriptionStorageBlobDeadLetterDestinationObservation struct {

	// Specifies the id of the storage account id where the storage blob is located.
	StorageAccountID *string `json:"storageAccountId,omitempty" tf:"storage_account_id,omitempty"`

	// Specifies the name of the Storage blob container that is the destination of the deadletter events.
	StorageBlobContainerName *string `json:"storageBlobContainerName,omitempty" tf:"storage_blob_container_name,omitempty"`
}

type SystemTopicEventSubscriptionStorageBlobDeadLetterDestinationParameters struct {

	// Specifies the id of the storage account id where the storage blob is located.
	// +kubebuilder:validation:Optional
	StorageAccountID *string `json:"storageAccountId" tf:"storage_account_id,omitempty"`

	// Specifies the name of the Storage blob container that is the destination of the deadletter events.
	// +kubebuilder:validation:Optional
	StorageBlobContainerName *string `json:"storageBlobContainerName" tf:"storage_blob_container_name,omitempty"`
}

type SystemTopicEventSubscriptionStorageQueueEndpointInitParameters struct {

	// Storage queue message time to live in seconds.
	QueueMessageTimeToLiveInSeconds *float64 `json:"queueMessageTimeToLiveInSeconds,omitempty" tf:"queue_message_time_to_live_in_seconds,omitempty"`

	// Specifies the name of the storage queue where the Event Subscription will receive events.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/storage/v1beta1.Queue
	QueueName *string `json:"queueName,omitempty" tf:"queue_name,omitempty"`

	// Reference to a Queue in storage to populate queueName.
	// +kubebuilder:validation:Optional
	QueueNameRef *v1.NamespacedReference `json:"queueNameRef,omitempty" tf:"-"`

	// Selector for a Queue in storage to populate queueName.
	// +kubebuilder:validation:Optional
	QueueNameSelector *v1.NamespacedSelector `json:"queueNameSelector,omitempty" tf:"-"`

	// Specifies the id of the storage account id where the storage queue is located.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	StorageAccountID *string `json:"storageAccountId,omitempty" tf:"storage_account_id,omitempty"`

	// Reference to a Account in storage to populate storageAccountId.
	// +kubebuilder:validation:Optional
	StorageAccountIDRef *v1.NamespacedReference `json:"storageAccountIdRef,omitempty" tf:"-"`

	// Selector for a Account in storage to populate storageAccountId.
	// +kubebuilder:validation:Optional
	StorageAccountIDSelector *v1.NamespacedSelector `json:"storageAccountIdSelector,omitempty" tf:"-"`
}

type SystemTopicEventSubscriptionStorageQueueEndpointObservation struct {

	// Storage queue message time to live in seconds.
	QueueMessageTimeToLiveInSeconds *float64 `json:"queueMessageTimeToLiveInSeconds,omitempty" tf:"queue_message_time_to_live_in_seconds,omitempty"`

	// Specifies the name of the storage queue where the Event Subscription will receive events.
	QueueName *string `json:"queueName,omitempty" tf:"queue_name,omitempty"`

	// Specifies the id of the storage account id where the storage queue is located.
	StorageAccountID *string `json:"storageAccountId,omitempty" tf:"storage_account_id,omitempty"`
}

type SystemTopicEventSubscriptionStorageQueueEndpointParameters struct {

	// Storage queue message time to live in seconds.
	// +kubebuilder:validation:Optional
	QueueMessageTimeToLiveInSeconds *float64 `json:"queueMessageTimeToLiveInSeconds,omitempty" tf:"queue_message_time_to_live_in_seconds,omitempty"`

	// Specifies the name of the storage queue where the Event Subscription will receive events.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/storage/v1beta1.Queue
	// +kubebuilder:validation:Optional
	QueueName *string `json:"queueName,omitempty" tf:"queue_name,omitempty"`

	// Reference to a Queue in storage to populate queueName.
	// +kubebuilder:validation:Optional
	QueueNameRef *v1.NamespacedReference `json:"queueNameRef,omitempty" tf:"-"`

	// Selector for a Queue in storage to populate queueName.
	// +kubebuilder:validation:Optional
	QueueNameSelector *v1.NamespacedSelector `json:"queueNameSelector,omitempty" tf:"-"`

	// Specifies the id of the storage account id where the storage queue is located.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/namespaced/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	StorageAccountID *string `json:"storageAccountId,omitempty" tf:"storage_account_id,omitempty"`

	// Reference to a Account in storage to populate storageAccountId.
	// +kubebuilder:validation:Optional
	StorageAccountIDRef *v1.NamespacedReference `json:"storageAccountIdRef,omitempty" tf:"-"`

	// Selector for a Account in storage to populate storageAccountId.
	// +kubebuilder:validation:Optional
	StorageAccountIDSelector *v1.NamespacedSelector `json:"storageAccountIdSelector,omitempty" tf:"-"`
}

type SystemTopicEventSubscriptionSubjectFilterInitParameters struct {

	// Specifies if subject_begins_with and subject_ends_with case sensitive. This value
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive,omitempty"`

	// A string to filter events for an event subscription based on a resource path prefix.
	SubjectBeginsWith *string `json:"subjectBeginsWith,omitempty" tf:"subject_begins_with,omitempty"`

	// A string to filter events for an event subscription based on a resource path suffix.
	SubjectEndsWith *string `json:"subjectEndsWith,omitempty" tf:"subject_ends_with,omitempty"`
}

type SystemTopicEventSubscriptionSubjectFilterObservation struct {

	// Specifies if subject_begins_with and subject_ends_with case sensitive. This value
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive,omitempty"`

	// A string to filter events for an event subscription based on a resource path prefix.
	SubjectBeginsWith *string `json:"subjectBeginsWith,omitempty" tf:"subject_begins_with,omitempty"`

	// A string to filter events for an event subscription based on a resource path suffix.
	SubjectEndsWith *string `json:"subjectEndsWith,omitempty" tf:"subject_ends_with,omitempty"`
}

type SystemTopicEventSubscriptionSubjectFilterParameters struct {

	// Specifies if subject_begins_with and subject_ends_with case sensitive. This value
	// +kubebuilder:validation:Optional
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive,omitempty"`

	// A string to filter events for an event subscription based on a resource path prefix.
	// +kubebuilder:validation:Optional
	SubjectBeginsWith *string `json:"subjectBeginsWith,omitempty" tf:"subject_begins_with,omitempty"`

	// A string to filter events for an event subscription based on a resource path suffix.
	// +kubebuilder:validation:Optional
	SubjectEndsWith *string `json:"subjectEndsWith,omitempty" tf:"subject_ends_with,omitempty"`
}

type SystemTopicEventSubscriptionWebhookEndpointInitParameters struct {

	// The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.
	ActiveDirectoryAppIDOrURI *string `json:"activeDirectoryAppIdOrUri,omitempty" tf:"active_directory_app_id_or_uri,omitempty"`

	// The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.
	ActiveDirectoryTenantID *string `json:"activeDirectoryTenantId,omitempty" tf:"active_directory_tenant_id,omitempty"`

	// Maximum number of events per batch.
	MaxEventsPerBatch *float64 `json:"maxEventsPerBatch,omitempty" tf:"max_events_per_batch,omitempty"`

	// Preferred batch size in Kilobytes.
	PreferredBatchSizeInKilobytes *float64 `json:"preferredBatchSizeInKilobytes,omitempty" tf:"preferred_batch_size_in_kilobytes,omitempty"`

	// Specifies the url of the webhook where the Event Subscription will receive events.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type SystemTopicEventSubscriptionWebhookEndpointObservation struct {

	// The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.
	ActiveDirectoryAppIDOrURI *string `json:"activeDirectoryAppIdOrUri,omitempty" tf:"active_directory_app_id_or_uri,omitempty"`

	// The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.
	ActiveDirectoryTenantID *string `json:"activeDirectoryTenantId,omitempty" tf:"active_directory_tenant_id,omitempty"`

	// (Computed) The base url of the webhook where the Event Subscription will receive events.
	BaseURL *string `json:"baseUrl,omitempty" tf:"base_url,omitempty"`

	// Maximum number of events per batch.
	MaxEventsPerBatch *float64 `json:"maxEventsPerBatch,omitempty" tf:"max_events_per_batch,omitempty"`

	// Preferred batch size in Kilobytes.
	PreferredBatchSizeInKilobytes *float64 `json:"preferredBatchSizeInKilobytes,omitempty" tf:"preferred_batch_size_in_kilobytes,omitempty"`

	// Specifies the url of the webhook where the Event Subscription will receive events.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type SystemTopicEventSubscriptionWebhookEndpointParameters struct {

	// The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.
	// +kubebuilder:validation:Optional
	ActiveDirectoryAppIDOrURI *string `json:"activeDirectoryAppIdOrUri,omitempty" tf:"active_directory_app_id_or_uri,omitempty"`

	// The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.
	// +kubebuilder:validation:Optional
	ActiveDirectoryTenantID *string `json:"activeDirectoryTenantId,omitempty" tf:"active_directory_tenant_id,omitempty"`

	// Maximum number of events per batch.
	// +kubebuilder:validation:Optional
	MaxEventsPerBatch *float64 `json:"maxEventsPerBatch,omitempty" tf:"max_events_per_batch,omitempty"`

	// Preferred batch size in Kilobytes.
	// +kubebuilder:validation:Optional
	PreferredBatchSizeInKilobytes *float64 `json:"preferredBatchSizeInKilobytes,omitempty" tf:"preferred_batch_size_in_kilobytes,omitempty"`

	// Specifies the url of the webhook where the Event Subscription will receive events.
	// +kubebuilder:validation:Optional
	URL *string `json:"url" tf:"url,omitempty"`
}

// SystemTopicEventSubscriptionSpec defines the desired state of SystemTopicEventSubscription
type SystemTopicEventSubscriptionSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            SystemTopicEventSubscriptionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SystemTopicEventSubscriptionInitParameters `json:"initProvider,omitempty"`
}

// SystemTopicEventSubscriptionStatus defines the observed state of SystemTopicEventSubscription.
type SystemTopicEventSubscriptionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SystemTopicEventSubscriptionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// SystemTopicEventSubscription is the Schema for the SystemTopicEventSubscriptions API. Manages an EventGrid System Topic Event Subscription.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,azure}
type SystemTopicEventSubscription struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   SystemTopicEventSubscriptionSpec   `json:"spec"`
	Status SystemTopicEventSubscriptionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SystemTopicEventSubscriptionList contains a list of SystemTopicEventSubscriptions
type SystemTopicEventSubscriptionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SystemTopicEventSubscription `json:"items"`
}

// Repository type metadata.
var (
	SystemTopicEventSubscription_Kind             = "SystemTopicEventSubscription"
	SystemTopicEventSubscription_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SystemTopicEventSubscription_Kind}.String()
	SystemTopicEventSubscription_KindAPIVersion   = SystemTopicEventSubscription_Kind + "." + CRDGroupVersion.String()
	SystemTopicEventSubscription_GroupVersionKind = CRDGroupVersion.WithKind(SystemTopicEventSubscription_Kind)
)

func init() {
	SchemeBuilder.Register(&SystemTopicEventSubscription{}, &SystemTopicEventSubscriptionList{})
}
