/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CacheExpirationActionObservation struct {
}

type CacheExpirationActionParameters struct {

	// The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.
	// +kubebuilder:validation:Required
	Behavior *string `json:"behavior" tf:"behavior,omitempty"`

	// Duration of the cache. Only allowed when behavior is set to Override or SetIfMissing. Format: [d.]hh:mm:ss
	// +kubebuilder:validation:Optional
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`
}

type CacheKeyQueryStringActionObservation struct {
}

type CacheKeyQueryStringActionParameters struct {

	// The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.
	// +kubebuilder:validation:Required
	Behavior *string `json:"behavior" tf:"behavior,omitempty"`

	// Comma separated list of parameter values.
	// +kubebuilder:validation:Optional
	Parameters *string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type CookiesConditionObservation struct {
}

type CookiesConditionParameters struct {

	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	MatchValues []*string `json:"matchValues,omitempty" tf:"match_values,omitempty"`

	// Defaults to false.
	// +kubebuilder:validation:Optional
	NegateCondition *bool `json:"negateCondition,omitempty" tf:"negate_condition,omitempty"`

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Required
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// Header name.
	// +kubebuilder:validation:Required
	Selector *string `json:"selector" tf:"selector,omitempty"`

	// A list of transforms. Valid values are Lowercase and Uppercase.
	// +kubebuilder:validation:Optional
	Transforms []*string `json:"transforms,omitempty" tf:"transforms,omitempty"`
}

type DeliveryRuleObservation struct {
}

type DeliveryRuleParameters struct {

	// A cache_expiration_action block as defined above.
	// +kubebuilder:validation:Optional
	CacheExpirationAction []CacheExpirationActionParameters `json:"cacheExpirationAction,omitempty" tf:"cache_expiration_action,omitempty"`

	// A cache_key_query_string_action block as defined above.
	// +kubebuilder:validation:Optional
	CacheKeyQueryStringAction []CacheKeyQueryStringActionParameters `json:"cacheKeyQueryStringAction,omitempty" tf:"cache_key_query_string_action,omitempty"`

	// A cookies_condition block as defined above.
	// +kubebuilder:validation:Optional
	CookiesCondition []CookiesConditionParameters `json:"cookiesCondition,omitempty" tf:"cookies_condition,omitempty"`

	// A device_condition block as defined below.
	// +kubebuilder:validation:Optional
	DeviceCondition []DeviceConditionParameters `json:"deviceCondition,omitempty" tf:"device_condition,omitempty"`

	// A http_version_condition block as defined below.
	// +kubebuilder:validation:Optional
	HTTPVersionCondition []HTTPVersionConditionParameters `json:"httpVersionCondition,omitempty" tf:"http_version_condition,omitempty"`

	// A modify_request_header_action block as defined below.
	// +kubebuilder:validation:Optional
	ModifyRequestHeaderAction []ModifyRequestHeaderActionParameters `json:"modifyRequestHeaderAction,omitempty" tf:"modify_request_header_action,omitempty"`

	// A modify_response_header_action block as defined below.
	// +kubebuilder:validation:Optional
	ModifyResponseHeaderAction []ModifyResponseHeaderActionParameters `json:"modifyResponseHeaderAction,omitempty" tf:"modify_response_header_action,omitempty"`

	// The Name which should be used for this Delivery Rule.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// The order used for this rule. The order values should be sequential and begin at 1.
	// +kubebuilder:validation:Required
	Order *float64 `json:"order" tf:"order,omitempty"`

	// A post_arg_condition block as defined below.
	// +kubebuilder:validation:Optional
	PostArgCondition []PostArgConditionParameters `json:"postArgCondition,omitempty" tf:"post_arg_condition,omitempty"`

	// A query_string_condition block as defined below.
	// +kubebuilder:validation:Optional
	QueryStringCondition []QueryStringConditionParameters `json:"queryStringCondition,omitempty" tf:"query_string_condition,omitempty"`

	// A remote_address_condition block as defined below.
	// +kubebuilder:validation:Optional
	RemoteAddressCondition []RemoteAddressConditionParameters `json:"remoteAddressCondition,omitempty" tf:"remote_address_condition,omitempty"`

	// A request_body_condition block as defined below.
	// +kubebuilder:validation:Optional
	RequestBodyCondition []RequestBodyConditionParameters `json:"requestBodyCondition,omitempty" tf:"request_body_condition,omitempty"`

	// A request_header_condition block as defined below.
	// +kubebuilder:validation:Optional
	RequestHeaderCondition []RequestHeaderConditionParameters `json:"requestHeaderCondition,omitempty" tf:"request_header_condition,omitempty"`

	// A request_method_condition block as defined below.
	// +kubebuilder:validation:Optional
	RequestMethodCondition []RequestMethodConditionParameters `json:"requestMethodCondition,omitempty" tf:"request_method_condition,omitempty"`

	// A request_scheme_condition block as defined below.
	// +kubebuilder:validation:Optional
	RequestSchemeCondition []RequestSchemeConditionParameters `json:"requestSchemeCondition,omitempty" tf:"request_scheme_condition,omitempty"`

	// A request_uri_condition block as defined below.
	// +kubebuilder:validation:Optional
	RequestURICondition []RequestURIConditionParameters `json:"requestUriCondition,omitempty" tf:"request_uri_condition,omitempty"`

	// A url_file_extension_condition block as defined below.
	// +kubebuilder:validation:Optional
	URLFileExtensionCondition []URLFileExtensionConditionParameters `json:"urlFileExtensionCondition,omitempty" tf:"url_file_extension_condition,omitempty"`

	// A url_file_name_condition block as defined below.
	// +kubebuilder:validation:Optional
	URLFileNameCondition []URLFileNameConditionParameters `json:"urlFileNameCondition,omitempty" tf:"url_file_name_condition,omitempty"`

	// A url_path_condition block as defined below.
	// +kubebuilder:validation:Optional
	URLPathCondition []URLPathConditionParameters `json:"urlPathCondition,omitempty" tf:"url_path_condition,omitempty"`

	// A url_redirect_action block as defined below.
	// +kubebuilder:validation:Optional
	URLRedirectAction []URLRedirectActionParameters `json:"urlRedirectAction,omitempty" tf:"url_redirect_action,omitempty"`

	// A url_rewrite_action block as defined below.
	// +kubebuilder:validation:Optional
	URLRewriteAction []URLRewriteActionParameters `json:"urlRewriteAction,omitempty" tf:"url_rewrite_action,omitempty"`
}

type DeviceConditionObservation struct {
}

type DeviceConditionParameters struct {

	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Required
	MatchValues []*string `json:"matchValues" tf:"match_values,omitempty"`

	// Defaults to false.
	// +kubebuilder:validation:Optional
	NegateCondition *bool `json:"negateCondition,omitempty" tf:"negate_condition,omitempty"`

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`
}

type EndpointObservation struct {

	// The Fully Qualified Domain Name of the CDN Endpoint.
	Fqdn *string `json:"fqdn,omitempty" tf:"fqdn,omitempty"`

	// The ID of the CDN Endpoint.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type EndpointParameters struct {

	// An array of strings that indicates a content types on which compression will be applied. The value for the elements should be MIME types.
	// +kubebuilder:validation:Optional
	ContentTypesToCompress []*string `json:"contentTypesToCompress,omitempty" tf:"content_types_to_compress,omitempty"`

	// Rules for the rules engine. An endpoint can contain up until 4 of those rules that consist of conditions and actions. A delivery_rule blocks as defined below.
	// +kubebuilder:validation:Optional
	DeliveryRule []DeliveryRuleParameters `json:"deliveryRule,omitempty" tf:"delivery_rule,omitempty"`

	// A set of Geo Filters for this CDN Endpoint. Each geo_filter block supports fields documented below.
	// +kubebuilder:validation:Optional
	GeoFilter []GeoFilterParameters `json:"geoFilter,omitempty" tf:"geo_filter,omitempty"`

	// Actions that are valid for all resources regardless of any conditions. A global_delivery_rule block as defined below.
	// +kubebuilder:validation:Optional
	GlobalDeliveryRule []GlobalDeliveryRuleParameters `json:"globalDeliveryRule,omitempty" tf:"global_delivery_rule,omitempty"`

	// Indicates whether compression is to be enabled.
	// +kubebuilder:validation:Optional
	IsCompressionEnabled *bool `json:"isCompressionEnabled,omitempty" tf:"is_compression_enabled,omitempty"`

	// Defaults to true.
	// +kubebuilder:validation:Optional
	IsHTTPAllowed *bool `json:"isHttpAllowed,omitempty" tf:"is_http_allowed,omitempty"`

	// Defaults to true.
	// +kubebuilder:validation:Optional
	IsHTTPSAllowed *bool `json:"isHttpsAllowed,omitempty" tf:"is_https_allowed,omitempty"`

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// What types of optimization should this CDN Endpoint optimize for? Possible values include DynamicSiteAcceleration, GeneralMediaStreaming, GeneralWebDelivery, LargeFileDownload and VideoOnDemandMediaStreaming.
	// +kubebuilder:validation:Optional
	OptimizationType *string `json:"optimizationType,omitempty" tf:"optimization_type,omitempty"`

	// The set of origins of the CDN endpoint. When multiple origins exist, the first origin will be used as primary and rest will be used as failover options. Each origin block supports fields documented below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	Origin []OriginParameters `json:"origin" tf:"origin,omitempty"`

	// The host header CDN provider will send along with content requests to origins.
	// +kubebuilder:validation:Optional
	OriginHostHeader *string `json:"originHostHeader,omitempty" tf:"origin_host_header,omitempty"`

	// The path used at for origin requests.
	// +kubebuilder:validation:Optional
	OriginPath *string `json:"originPath,omitempty" tf:"origin_path,omitempty"`

	// the path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin_path.
	// +kubebuilder:validation:Optional
	ProbePath *string `json:"probePath,omitempty" tf:"probe_path,omitempty"`

	// The CDN Profile to which to attach the CDN Endpoint. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/cdn/v1beta1.Profile
	// +kubebuilder:validation:Optional
	ProfileName *string `json:"profileName,omitempty" tf:"profile_name,omitempty"`

	// Reference to a Profile in cdn to populate profileName.
	// +kubebuilder:validation:Optional
	ProfileNameRef *v1.Reference `json:"profileNameRef,omitempty" tf:"-"`

	// Selector for a Profile in cdn to populate profileName.
	// +kubebuilder:validation:Optional
	ProfileNameSelector *v1.Selector `json:"profileNameSelector,omitempty" tf:"-"`

	// Sets query string caching behavior. Allowed values are IgnoreQueryString, BypassCaching and UseQueryString. NotSet value can be used for Premium Verizon CDN profile. Defaults to IgnoreQueryString.
	// +kubebuilder:validation:Optional
	QuerystringCachingBehaviour *string `json:"querystringCachingBehaviour,omitempty" tf:"querystring_caching_behaviour,omitempty"`

	// The name of the resource group in which to create the CDN Endpoint. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type GeoFilterObservation struct {
}

type GeoFilterParameters struct {

	// The Action of the Geo Filter. Possible values include Allow and Block.
	// +kubebuilder:validation:Required
	Action *string `json:"action" tf:"action,omitempty"`

	// A List of two letter country codes (e.g. US, GB) to be associated with this Geo Filter.
	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// The relative path applicable to geo filter.
	// +kubebuilder:validation:Required
	RelativePath *string `json:"relativePath" tf:"relative_path,omitempty"`
}

type GlobalDeliveryRuleCacheExpirationActionObservation struct {
}

type GlobalDeliveryRuleCacheExpirationActionParameters struct {

	// The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.
	// +kubebuilder:validation:Required
	Behavior *string `json:"behavior" tf:"behavior,omitempty"`

	// Duration of the cache. Only allowed when behavior is set to Override or SetIfMissing. Format: [d.]hh:mm:ss
	// +kubebuilder:validation:Optional
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`
}

type GlobalDeliveryRuleCacheKeyQueryStringActionObservation struct {
}

type GlobalDeliveryRuleCacheKeyQueryStringActionParameters struct {

	// The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.
	// +kubebuilder:validation:Required
	Behavior *string `json:"behavior" tf:"behavior,omitempty"`

	// Comma separated list of parameter values.
	// +kubebuilder:validation:Optional
	Parameters *string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type GlobalDeliveryRuleModifyRequestHeaderActionObservation struct {
}

type GlobalDeliveryRuleModifyRequestHeaderActionParameters struct {

	// Action to be executed on a header value. Valid values are Append, Delete and Overwrite.
	// +kubebuilder:validation:Required
	Action *string `json:"action" tf:"action,omitempty"`

	// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// The value of the header. Only needed when action is set to Append or overwrite.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type GlobalDeliveryRuleModifyResponseHeaderActionObservation struct {
}

type GlobalDeliveryRuleModifyResponseHeaderActionParameters struct {

	// Action to be executed on a header value. Valid values are Append, Delete and Overwrite.
	// +kubebuilder:validation:Required
	Action *string `json:"action" tf:"action,omitempty"`

	// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// The value of the header. Only needed when action is set to Append or overwrite.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type GlobalDeliveryRuleObservation struct {
}

type GlobalDeliveryRuleParameters struct {

	// A cache_expiration_action block as defined above.
	// +kubebuilder:validation:Optional
	CacheExpirationAction []GlobalDeliveryRuleCacheExpirationActionParameters `json:"cacheExpirationAction,omitempty" tf:"cache_expiration_action,omitempty"`

	// A cache_key_query_string_action block as defined above.
	// +kubebuilder:validation:Optional
	CacheKeyQueryStringAction []GlobalDeliveryRuleCacheKeyQueryStringActionParameters `json:"cacheKeyQueryStringAction,omitempty" tf:"cache_key_query_string_action,omitempty"`

	// A modify_request_header_action block as defined below.
	// +kubebuilder:validation:Optional
	ModifyRequestHeaderAction []GlobalDeliveryRuleModifyRequestHeaderActionParameters `json:"modifyRequestHeaderAction,omitempty" tf:"modify_request_header_action,omitempty"`

	// A modify_response_header_action block as defined below.
	// +kubebuilder:validation:Optional
	ModifyResponseHeaderAction []GlobalDeliveryRuleModifyResponseHeaderActionParameters `json:"modifyResponseHeaderAction,omitempty" tf:"modify_response_header_action,omitempty"`

	// A url_redirect_action block as defined below.
	// +kubebuilder:validation:Optional
	URLRedirectAction []GlobalDeliveryRuleURLRedirectActionParameters `json:"urlRedirectAction,omitempty" tf:"url_redirect_action,omitempty"`

	// A url_rewrite_action block as defined below.
	// +kubebuilder:validation:Optional
	URLRewriteAction []GlobalDeliveryRuleURLRewriteActionParameters `json:"urlRewriteAction,omitempty" tf:"url_rewrite_action,omitempty"`
}

type GlobalDeliveryRuleURLRedirectActionObservation struct {
}

type GlobalDeliveryRuleURLRedirectActionParameters struct {

	// Specifies the fragment part of the URL. This value must not start with a #.
	// +kubebuilder:validation:Optional
	Fragment *string `json:"fragment,omitempty" tf:"fragment,omitempty"`

	// Specifies the hostname part of the URL.
	// +kubebuilder:validation:Optional
	HostName *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	// Specifies the path part of the URL. This value must begin with a /.
	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// Specifies the protocol part of the URL. Valid values are MatchRequest, Http and Https.
	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Specifies the query string part of the URL. This value must not start with a ? or & and must be in <key>=<value> format separated by &.
	// +kubebuilder:validation:Optional
	QueryString *string `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// Type of the redirect. Valid values are Found, Moved, PermanentRedirect and TemporaryRedirect.
	// +kubebuilder:validation:Required
	RedirectType *string `json:"redirectType" tf:"redirect_type,omitempty"`
}

type GlobalDeliveryRuleURLRewriteActionObservation struct {
}

type GlobalDeliveryRuleURLRewriteActionParameters struct {

	// This value must start with a / and can't be longer than 260 characters.
	// +kubebuilder:validation:Required
	Destination *string `json:"destination" tf:"destination,omitempty"`

	// Defaults to true.
	// +kubebuilder:validation:Optional
	PreserveUnmatchedPath *bool `json:"preserveUnmatchedPath,omitempty" tf:"preserve_unmatched_path,omitempty"`

	// This value must start with a / and can't be longer than 260 characters.
	// +kubebuilder:validation:Required
	SourcePattern *string `json:"sourcePattern" tf:"source_pattern,omitempty"`
}

type HTTPVersionConditionObservation struct {
}

type HTTPVersionConditionParameters struct {

	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Required
	MatchValues []*string `json:"matchValues" tf:"match_values,omitempty"`

	// Defaults to false.
	// +kubebuilder:validation:Optional
	NegateCondition *bool `json:"negateCondition,omitempty" tf:"negate_condition,omitempty"`

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`
}

type ModifyRequestHeaderActionObservation struct {
}

type ModifyRequestHeaderActionParameters struct {

	// Action to be executed on a header value. Valid values are Append, Delete and Overwrite.
	// +kubebuilder:validation:Required
	Action *string `json:"action" tf:"action,omitempty"`

	// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// The value of the header. Only needed when action is set to Append or overwrite.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ModifyResponseHeaderActionObservation struct {
}

type ModifyResponseHeaderActionParameters struct {

	// Action to be executed on a header value. Valid values are Append, Delete and Overwrite.
	// +kubebuilder:validation:Required
	Action *string `json:"action" tf:"action,omitempty"`

	// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// The value of the header. Only needed when action is set to Append or overwrite.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type OriginObservation struct {
}

type OriginParameters struct {

	// The HTTP port of the origin. Defaults to 80. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	HTTPPort *float64 `json:"httpPort,omitempty" tf:"http_port,omitempty"`

	// The HTTPS port of the origin. Defaults to 443. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	HTTPSPort *float64 `json:"httpsPort,omitempty" tf:"https_port,omitempty"`

	// A string that determines the hostname/IP address of the origin server. This string can be a domain name, Storage Account endpoint, Web App endpoint, IPv4 address or IPv6 address. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	HostName *string `json:"hostName" tf:"host_name,omitempty"`

	// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type PostArgConditionObservation struct {
}

type PostArgConditionParameters struct {

	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	MatchValues []*string `json:"matchValues,omitempty" tf:"match_values,omitempty"`

	// Defaults to false.
	// +kubebuilder:validation:Optional
	NegateCondition *bool `json:"negateCondition,omitempty" tf:"negate_condition,omitempty"`

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Required
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// Header name.
	// +kubebuilder:validation:Required
	Selector *string `json:"selector" tf:"selector,omitempty"`

	// A list of transforms. Valid values are Lowercase and Uppercase.
	// +kubebuilder:validation:Optional
	Transforms []*string `json:"transforms,omitempty" tf:"transforms,omitempty"`
}

type QueryStringConditionObservation struct {
}

type QueryStringConditionParameters struct {

	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	MatchValues []*string `json:"matchValues,omitempty" tf:"match_values,omitempty"`

	// Defaults to false.
	// +kubebuilder:validation:Optional
	NegateCondition *bool `json:"negateCondition,omitempty" tf:"negate_condition,omitempty"`

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Required
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// A list of transforms. Valid values are Lowercase and Uppercase.
	// +kubebuilder:validation:Optional
	Transforms []*string `json:"transforms,omitempty" tf:"transforms,omitempty"`
}

type RemoteAddressConditionObservation struct {
}

type RemoteAddressConditionParameters struct {

	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	MatchValues []*string `json:"matchValues,omitempty" tf:"match_values,omitempty"`

	// Defaults to false.
	// +kubebuilder:validation:Optional
	NegateCondition *bool `json:"negateCondition,omitempty" tf:"negate_condition,omitempty"`

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Required
	Operator *string `json:"operator" tf:"operator,omitempty"`
}

type RequestBodyConditionObservation struct {
}

type RequestBodyConditionParameters struct {

	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	MatchValues []*string `json:"matchValues,omitempty" tf:"match_values,omitempty"`

	// Defaults to false.
	// +kubebuilder:validation:Optional
	NegateCondition *bool `json:"negateCondition,omitempty" tf:"negate_condition,omitempty"`

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Required
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// A list of transforms. Valid values are Lowercase and Uppercase.
	// +kubebuilder:validation:Optional
	Transforms []*string `json:"transforms,omitempty" tf:"transforms,omitempty"`
}

type RequestHeaderConditionObservation struct {
}

type RequestHeaderConditionParameters struct {

	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	MatchValues []*string `json:"matchValues,omitempty" tf:"match_values,omitempty"`

	// Defaults to false.
	// +kubebuilder:validation:Optional
	NegateCondition *bool `json:"negateCondition,omitempty" tf:"negate_condition,omitempty"`

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Required
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// Header name.
	// +kubebuilder:validation:Required
	Selector *string `json:"selector" tf:"selector,omitempty"`

	// A list of transforms. Valid values are Lowercase and Uppercase.
	// +kubebuilder:validation:Optional
	Transforms []*string `json:"transforms,omitempty" tf:"transforms,omitempty"`
}

type RequestMethodConditionObservation struct {
}

type RequestMethodConditionParameters struct {

	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Required
	MatchValues []*string `json:"matchValues" tf:"match_values,omitempty"`

	// Defaults to false.
	// +kubebuilder:validation:Optional
	NegateCondition *bool `json:"negateCondition,omitempty" tf:"negate_condition,omitempty"`

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`
}

type RequestSchemeConditionObservation struct {
}

type RequestSchemeConditionParameters struct {

	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Required
	MatchValues []*string `json:"matchValues" tf:"match_values,omitempty"`

	// Defaults to false.
	// +kubebuilder:validation:Optional
	NegateCondition *bool `json:"negateCondition,omitempty" tf:"negate_condition,omitempty"`

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`
}

type RequestURIConditionObservation struct {
}

type RequestURIConditionParameters struct {

	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	MatchValues []*string `json:"matchValues,omitempty" tf:"match_values,omitempty"`

	// Defaults to false.
	// +kubebuilder:validation:Optional
	NegateCondition *bool `json:"negateCondition,omitempty" tf:"negate_condition,omitempty"`

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Required
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// A list of transforms. Valid values are Lowercase and Uppercase.
	// +kubebuilder:validation:Optional
	Transforms []*string `json:"transforms,omitempty" tf:"transforms,omitempty"`
}

type URLFileExtensionConditionObservation struct {
}

type URLFileExtensionConditionParameters struct {

	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	MatchValues []*string `json:"matchValues,omitempty" tf:"match_values,omitempty"`

	// Defaults to false.
	// +kubebuilder:validation:Optional
	NegateCondition *bool `json:"negateCondition,omitempty" tf:"negate_condition,omitempty"`

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Required
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// A list of transforms. Valid values are Lowercase and Uppercase.
	// +kubebuilder:validation:Optional
	Transforms []*string `json:"transforms,omitempty" tf:"transforms,omitempty"`
}

type URLFileNameConditionObservation struct {
}

type URLFileNameConditionParameters struct {

	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	MatchValues []*string `json:"matchValues,omitempty" tf:"match_values,omitempty"`

	// Defaults to false.
	// +kubebuilder:validation:Optional
	NegateCondition *bool `json:"negateCondition,omitempty" tf:"negate_condition,omitempty"`

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Required
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// A list of transforms. Valid values are Lowercase and Uppercase.
	// +kubebuilder:validation:Optional
	Transforms []*string `json:"transforms,omitempty" tf:"transforms,omitempty"`
}

type URLPathConditionObservation struct {
}

type URLPathConditionParameters struct {

	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	MatchValues []*string `json:"matchValues,omitempty" tf:"match_values,omitempty"`

	// Defaults to false.
	// +kubebuilder:validation:Optional
	NegateCondition *bool `json:"negateCondition,omitempty" tf:"negate_condition,omitempty"`

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Required
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// A list of transforms. Valid values are Lowercase and Uppercase.
	// +kubebuilder:validation:Optional
	Transforms []*string `json:"transforms,omitempty" tf:"transforms,omitempty"`
}

type URLRedirectActionObservation struct {
}

type URLRedirectActionParameters struct {

	// Specifies the fragment part of the URL. This value must not start with a #.
	// +kubebuilder:validation:Optional
	Fragment *string `json:"fragment,omitempty" tf:"fragment,omitempty"`

	// Specifies the hostname part of the URL.
	// +kubebuilder:validation:Optional
	HostName *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	// Specifies the path part of the URL. This value must begin with a /.
	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// Specifies the protocol part of the URL. Valid values are MatchRequest, Http and Https.
	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Specifies the query string part of the URL. This value must not start with a ? or & and must be in <key>=<value> format separated by &.
	// +kubebuilder:validation:Optional
	QueryString *string `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// Type of the redirect. Valid values are Found, Moved, PermanentRedirect and TemporaryRedirect.
	// +kubebuilder:validation:Required
	RedirectType *string `json:"redirectType" tf:"redirect_type,omitempty"`
}

type URLRewriteActionObservation struct {
}

type URLRewriteActionParameters struct {

	// This value must start with a / and can't be longer than 260 characters.
	// +kubebuilder:validation:Required
	Destination *string `json:"destination" tf:"destination,omitempty"`

	// Defaults to true.
	// +kubebuilder:validation:Optional
	PreserveUnmatchedPath *bool `json:"preserveUnmatchedPath,omitempty" tf:"preserve_unmatched_path,omitempty"`

	// This value must start with a / and can't be longer than 260 characters.
	// +kubebuilder:validation:Required
	SourcePattern *string `json:"sourcePattern" tf:"source_pattern,omitempty"`
}

// EndpointSpec defines the desired state of Endpoint
type EndpointSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     EndpointParameters `json:"forProvider"`
}

// EndpointStatus defines the observed state of Endpoint.
type EndpointStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EndpointObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Endpoint is the Schema for the Endpoints API. Manages a CDN Endpoint.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type Endpoint struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              EndpointSpec   `json:"spec"`
	Status            EndpointStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EndpointList contains a list of Endpoints
type EndpointList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Endpoint `json:"items"`
}

// Repository type metadata.
var (
	Endpoint_Kind             = "Endpoint"
	Endpoint_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Endpoint_Kind}.String()
	Endpoint_KindAPIVersion   = Endpoint_Kind + "." + CRDGroupVersion.String()
	Endpoint_GroupVersionKind = CRDGroupVersion.WithKind(Endpoint_Kind)
)

func init() {
	SchemeBuilder.Register(&Endpoint{}, &EndpointList{})
}
