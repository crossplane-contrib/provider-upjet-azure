//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsInitParameters) DeepCopyInto(out *ActionsInitParameters) {
	*out = *in
	if in.RequestHeaderAction != nil {
		in, out := &in.RequestHeaderAction, &out.RequestHeaderAction
		*out = make([]RequestHeaderActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeaderAction != nil {
		in, out := &in.ResponseHeaderAction, &out.ResponseHeaderAction
		*out = make([]ResponseHeaderActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteConfigurationOverrideAction != nil {
		in, out := &in.RouteConfigurationOverrideAction, &out.RouteConfigurationOverrideAction
		*out = make([]RouteConfigurationOverrideActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRedirectAction != nil {
		in, out := &in.URLRedirectAction, &out.URLRedirectAction
		*out = make([]ActionsURLRedirectActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewriteAction != nil {
		in, out := &in.URLRewriteAction, &out.URLRewriteAction
		*out = make([]ActionsURLRewriteActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsInitParameters.
func (in *ActionsInitParameters) DeepCopy() *ActionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsObservation) DeepCopyInto(out *ActionsObservation) {
	*out = *in
	if in.RequestHeaderAction != nil {
		in, out := &in.RequestHeaderAction, &out.RequestHeaderAction
		*out = make([]RequestHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeaderAction != nil {
		in, out := &in.ResponseHeaderAction, &out.ResponseHeaderAction
		*out = make([]ResponseHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteConfigurationOverrideAction != nil {
		in, out := &in.RouteConfigurationOverrideAction, &out.RouteConfigurationOverrideAction
		*out = make([]RouteConfigurationOverrideActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRedirectAction != nil {
		in, out := &in.URLRedirectAction, &out.URLRedirectAction
		*out = make([]ActionsURLRedirectActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewriteAction != nil {
		in, out := &in.URLRewriteAction, &out.URLRewriteAction
		*out = make([]ActionsURLRewriteActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsObservation.
func (in *ActionsObservation) DeepCopy() *ActionsObservation {
	if in == nil {
		return nil
	}
	out := new(ActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsParameters) DeepCopyInto(out *ActionsParameters) {
	*out = *in
	if in.RequestHeaderAction != nil {
		in, out := &in.RequestHeaderAction, &out.RequestHeaderAction
		*out = make([]RequestHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeaderAction != nil {
		in, out := &in.ResponseHeaderAction, &out.ResponseHeaderAction
		*out = make([]ResponseHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteConfigurationOverrideAction != nil {
		in, out := &in.RouteConfigurationOverrideAction, &out.RouteConfigurationOverrideAction
		*out = make([]RouteConfigurationOverrideActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRedirectAction != nil {
		in, out := &in.URLRedirectAction, &out.URLRedirectAction
		*out = make([]ActionsURLRedirectActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewriteAction != nil {
		in, out := &in.URLRewriteAction, &out.URLRewriteAction
		*out = make([]ActionsURLRewriteActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsParameters.
func (in *ActionsParameters) DeepCopy() *ActionsParameters {
	if in == nil {
		return nil
	}
	out := new(ActionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsURLRedirectActionInitParameters) DeepCopyInto(out *ActionsURLRedirectActionInitParameters) {
	*out = *in
	if in.DestinationFragment != nil {
		in, out := &in.DestinationFragment, &out.DestinationFragment
		*out = new(string)
		**out = **in
	}
	if in.DestinationHostName != nil {
		in, out := &in.DestinationHostName, &out.DestinationHostName
		*out = new(string)
		**out = **in
	}
	if in.DestinationPath != nil {
		in, out := &in.DestinationPath, &out.DestinationPath
		*out = new(string)
		**out = **in
	}
	if in.QueryString != nil {
		in, out := &in.QueryString, &out.QueryString
		*out = new(string)
		**out = **in
	}
	if in.RedirectProtocol != nil {
		in, out := &in.RedirectProtocol, &out.RedirectProtocol
		*out = new(string)
		**out = **in
	}
	if in.RedirectType != nil {
		in, out := &in.RedirectType, &out.RedirectType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsURLRedirectActionInitParameters.
func (in *ActionsURLRedirectActionInitParameters) DeepCopy() *ActionsURLRedirectActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionsURLRedirectActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsURLRedirectActionObservation) DeepCopyInto(out *ActionsURLRedirectActionObservation) {
	*out = *in
	if in.DestinationFragment != nil {
		in, out := &in.DestinationFragment, &out.DestinationFragment
		*out = new(string)
		**out = **in
	}
	if in.DestinationHostName != nil {
		in, out := &in.DestinationHostName, &out.DestinationHostName
		*out = new(string)
		**out = **in
	}
	if in.DestinationPath != nil {
		in, out := &in.DestinationPath, &out.DestinationPath
		*out = new(string)
		**out = **in
	}
	if in.QueryString != nil {
		in, out := &in.QueryString, &out.QueryString
		*out = new(string)
		**out = **in
	}
	if in.RedirectProtocol != nil {
		in, out := &in.RedirectProtocol, &out.RedirectProtocol
		*out = new(string)
		**out = **in
	}
	if in.RedirectType != nil {
		in, out := &in.RedirectType, &out.RedirectType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsURLRedirectActionObservation.
func (in *ActionsURLRedirectActionObservation) DeepCopy() *ActionsURLRedirectActionObservation {
	if in == nil {
		return nil
	}
	out := new(ActionsURLRedirectActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsURLRedirectActionParameters) DeepCopyInto(out *ActionsURLRedirectActionParameters) {
	*out = *in
	if in.DestinationFragment != nil {
		in, out := &in.DestinationFragment, &out.DestinationFragment
		*out = new(string)
		**out = **in
	}
	if in.DestinationHostName != nil {
		in, out := &in.DestinationHostName, &out.DestinationHostName
		*out = new(string)
		**out = **in
	}
	if in.DestinationPath != nil {
		in, out := &in.DestinationPath, &out.DestinationPath
		*out = new(string)
		**out = **in
	}
	if in.QueryString != nil {
		in, out := &in.QueryString, &out.QueryString
		*out = new(string)
		**out = **in
	}
	if in.RedirectProtocol != nil {
		in, out := &in.RedirectProtocol, &out.RedirectProtocol
		*out = new(string)
		**out = **in
	}
	if in.RedirectType != nil {
		in, out := &in.RedirectType, &out.RedirectType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsURLRedirectActionParameters.
func (in *ActionsURLRedirectActionParameters) DeepCopy() *ActionsURLRedirectActionParameters {
	if in == nil {
		return nil
	}
	out := new(ActionsURLRedirectActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsURLRewriteActionInitParameters) DeepCopyInto(out *ActionsURLRewriteActionInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.PreserveUnmatchedPath != nil {
		in, out := &in.PreserveUnmatchedPath, &out.PreserveUnmatchedPath
		*out = new(bool)
		**out = **in
	}
	if in.SourcePattern != nil {
		in, out := &in.SourcePattern, &out.SourcePattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsURLRewriteActionInitParameters.
func (in *ActionsURLRewriteActionInitParameters) DeepCopy() *ActionsURLRewriteActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionsURLRewriteActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsURLRewriteActionObservation) DeepCopyInto(out *ActionsURLRewriteActionObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.PreserveUnmatchedPath != nil {
		in, out := &in.PreserveUnmatchedPath, &out.PreserveUnmatchedPath
		*out = new(bool)
		**out = **in
	}
	if in.SourcePattern != nil {
		in, out := &in.SourcePattern, &out.SourcePattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsURLRewriteActionObservation.
func (in *ActionsURLRewriteActionObservation) DeepCopy() *ActionsURLRewriteActionObservation {
	if in == nil {
		return nil
	}
	out := new(ActionsURLRewriteActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsURLRewriteActionParameters) DeepCopyInto(out *ActionsURLRewriteActionParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.PreserveUnmatchedPath != nil {
		in, out := &in.PreserveUnmatchedPath, &out.PreserveUnmatchedPath
		*out = new(bool)
		**out = **in
	}
	if in.SourcePattern != nil {
		in, out := &in.SourcePattern, &out.SourcePattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsURLRewriteActionParameters.
func (in *ActionsURLRewriteActionParameters) DeepCopy() *ActionsURLRewriteActionParameters {
	if in == nil {
		return nil
	}
	out := new(ActionsURLRewriteActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheExpirationActionInitParameters) DeepCopyInto(out *CacheExpirationActionInitParameters) {
	*out = *in
	if in.Behavior != nil {
		in, out := &in.Behavior, &out.Behavior
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheExpirationActionInitParameters.
func (in *CacheExpirationActionInitParameters) DeepCopy() *CacheExpirationActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(CacheExpirationActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheExpirationActionObservation) DeepCopyInto(out *CacheExpirationActionObservation) {
	*out = *in
	if in.Behavior != nil {
		in, out := &in.Behavior, &out.Behavior
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheExpirationActionObservation.
func (in *CacheExpirationActionObservation) DeepCopy() *CacheExpirationActionObservation {
	if in == nil {
		return nil
	}
	out := new(CacheExpirationActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheExpirationActionParameters) DeepCopyInto(out *CacheExpirationActionParameters) {
	*out = *in
	if in.Behavior != nil {
		in, out := &in.Behavior, &out.Behavior
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheExpirationActionParameters.
func (in *CacheExpirationActionParameters) DeepCopy() *CacheExpirationActionParameters {
	if in == nil {
		return nil
	}
	out := new(CacheExpirationActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheInitParameters) DeepCopyInto(out *CacheInitParameters) {
	*out = *in
	if in.CompressionEnabled != nil {
		in, out := &in.CompressionEnabled, &out.CompressionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ContentTypesToCompress != nil {
		in, out := &in.ContentTypesToCompress, &out.ContentTypesToCompress
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryStringCachingBehavior != nil {
		in, out := &in.QueryStringCachingBehavior, &out.QueryStringCachingBehavior
		*out = new(string)
		**out = **in
	}
	if in.QueryStrings != nil {
		in, out := &in.QueryStrings, &out.QueryStrings
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheInitParameters.
func (in *CacheInitParameters) DeepCopy() *CacheInitParameters {
	if in == nil {
		return nil
	}
	out := new(CacheInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheKeyQueryStringActionInitParameters) DeepCopyInto(out *CacheKeyQueryStringActionInitParameters) {
	*out = *in
	if in.Behavior != nil {
		in, out := &in.Behavior, &out.Behavior
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheKeyQueryStringActionInitParameters.
func (in *CacheKeyQueryStringActionInitParameters) DeepCopy() *CacheKeyQueryStringActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(CacheKeyQueryStringActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheKeyQueryStringActionObservation) DeepCopyInto(out *CacheKeyQueryStringActionObservation) {
	*out = *in
	if in.Behavior != nil {
		in, out := &in.Behavior, &out.Behavior
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheKeyQueryStringActionObservation.
func (in *CacheKeyQueryStringActionObservation) DeepCopy() *CacheKeyQueryStringActionObservation {
	if in == nil {
		return nil
	}
	out := new(CacheKeyQueryStringActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheKeyQueryStringActionParameters) DeepCopyInto(out *CacheKeyQueryStringActionParameters) {
	*out = *in
	if in.Behavior != nil {
		in, out := &in.Behavior, &out.Behavior
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheKeyQueryStringActionParameters.
func (in *CacheKeyQueryStringActionParameters) DeepCopy() *CacheKeyQueryStringActionParameters {
	if in == nil {
		return nil
	}
	out := new(CacheKeyQueryStringActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheObservation) DeepCopyInto(out *CacheObservation) {
	*out = *in
	if in.CompressionEnabled != nil {
		in, out := &in.CompressionEnabled, &out.CompressionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ContentTypesToCompress != nil {
		in, out := &in.ContentTypesToCompress, &out.ContentTypesToCompress
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryStringCachingBehavior != nil {
		in, out := &in.QueryStringCachingBehavior, &out.QueryStringCachingBehavior
		*out = new(string)
		**out = **in
	}
	if in.QueryStrings != nil {
		in, out := &in.QueryStrings, &out.QueryStrings
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheObservation.
func (in *CacheObservation) DeepCopy() *CacheObservation {
	if in == nil {
		return nil
	}
	out := new(CacheObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheParameters) DeepCopyInto(out *CacheParameters) {
	*out = *in
	if in.CompressionEnabled != nil {
		in, out := &in.CompressionEnabled, &out.CompressionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ContentTypesToCompress != nil {
		in, out := &in.ContentTypesToCompress, &out.ContentTypesToCompress
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryStringCachingBehavior != nil {
		in, out := &in.QueryStringCachingBehavior, &out.QueryStringCachingBehavior
		*out = new(string)
		**out = **in
	}
	if in.QueryStrings != nil {
		in, out := &in.QueryStrings, &out.QueryStrings
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheParameters.
func (in *CacheParameters) DeepCopy() *CacheParameters {
	if in == nil {
		return nil
	}
	out := new(CacheParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientPortConditionInitParameters) DeepCopyInto(out *ClientPortConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientPortConditionInitParameters.
func (in *ClientPortConditionInitParameters) DeepCopy() *ClientPortConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientPortConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientPortConditionObservation) DeepCopyInto(out *ClientPortConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientPortConditionObservation.
func (in *ClientPortConditionObservation) DeepCopy() *ClientPortConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ClientPortConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientPortConditionParameters) DeepCopyInto(out *ClientPortConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientPortConditionParameters.
func (in *ClientPortConditionParameters) DeepCopy() *ClientPortConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ClientPortConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsCookiesConditionInitParameters) DeepCopyInto(out *ConditionsCookiesConditionInitParameters) {
	*out = *in
	if in.CookieName != nil {
		in, out := &in.CookieName, &out.CookieName
		*out = new(string)
		**out = **in
	}
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsCookiesConditionInitParameters.
func (in *ConditionsCookiesConditionInitParameters) DeepCopy() *ConditionsCookiesConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsCookiesConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsCookiesConditionObservation) DeepCopyInto(out *ConditionsCookiesConditionObservation) {
	*out = *in
	if in.CookieName != nil {
		in, out := &in.CookieName, &out.CookieName
		*out = new(string)
		**out = **in
	}
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsCookiesConditionObservation.
func (in *ConditionsCookiesConditionObservation) DeepCopy() *ConditionsCookiesConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionsCookiesConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsCookiesConditionParameters) DeepCopyInto(out *ConditionsCookiesConditionParameters) {
	*out = *in
	if in.CookieName != nil {
		in, out := &in.CookieName, &out.CookieName
		*out = new(string)
		**out = **in
	}
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsCookiesConditionParameters.
func (in *ConditionsCookiesConditionParameters) DeepCopy() *ConditionsCookiesConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsCookiesConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsHTTPVersionConditionInitParameters) DeepCopyInto(out *ConditionsHTTPVersionConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsHTTPVersionConditionInitParameters.
func (in *ConditionsHTTPVersionConditionInitParameters) DeepCopy() *ConditionsHTTPVersionConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsHTTPVersionConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsHTTPVersionConditionObservation) DeepCopyInto(out *ConditionsHTTPVersionConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsHTTPVersionConditionObservation.
func (in *ConditionsHTTPVersionConditionObservation) DeepCopy() *ConditionsHTTPVersionConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionsHTTPVersionConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsHTTPVersionConditionParameters) DeepCopyInto(out *ConditionsHTTPVersionConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsHTTPVersionConditionParameters.
func (in *ConditionsHTTPVersionConditionParameters) DeepCopy() *ConditionsHTTPVersionConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsHTTPVersionConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsInitParameters) DeepCopyInto(out *ConditionsInitParameters) {
	*out = *in
	if in.ClientPortCondition != nil {
		in, out := &in.ClientPortCondition, &out.ClientPortCondition
		*out = make([]ClientPortConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CookiesCondition != nil {
		in, out := &in.CookiesCondition, &out.CookiesCondition
		*out = make([]ConditionsCookiesConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPVersionCondition != nil {
		in, out := &in.HTTPVersionCondition, &out.HTTPVersionCondition
		*out = make([]ConditionsHTTPVersionConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostNameCondition != nil {
		in, out := &in.HostNameCondition, &out.HostNameCondition
		*out = make([]HostNameConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsDeviceCondition != nil {
		in, out := &in.IsDeviceCondition, &out.IsDeviceCondition
		*out = make([]IsDeviceConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PostArgsCondition != nil {
		in, out := &in.PostArgsCondition, &out.PostArgsCondition
		*out = make([]PostArgsConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryStringCondition != nil {
		in, out := &in.QueryStringCondition, &out.QueryStringCondition
		*out = make([]ConditionsQueryStringConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteAddressCondition != nil {
		in, out := &in.RemoteAddressCondition, &out.RemoteAddressCondition
		*out = make([]ConditionsRemoteAddressConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestBodyCondition != nil {
		in, out := &in.RequestBodyCondition, &out.RequestBodyCondition
		*out = make([]ConditionsRequestBodyConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeaderCondition != nil {
		in, out := &in.RequestHeaderCondition, &out.RequestHeaderCondition
		*out = make([]ConditionsRequestHeaderConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMethodCondition != nil {
		in, out := &in.RequestMethodCondition, &out.RequestMethodCondition
		*out = make([]ConditionsRequestMethodConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestSchemeCondition != nil {
		in, out := &in.RequestSchemeCondition, &out.RequestSchemeCondition
		*out = make([]ConditionsRequestSchemeConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestURICondition != nil {
		in, out := &in.RequestURICondition, &out.RequestURICondition
		*out = make([]ConditionsRequestURIConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLProtocolCondition != nil {
		in, out := &in.SSLProtocolCondition, &out.SSLProtocolCondition
		*out = make([]SSLProtocolConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServerPortCondition != nil {
		in, out := &in.ServerPortCondition, &out.ServerPortCondition
		*out = make([]ServerPortConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SocketAddressCondition != nil {
		in, out := &in.SocketAddressCondition, &out.SocketAddressCondition
		*out = make([]SocketAddressConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLFileExtensionCondition != nil {
		in, out := &in.URLFileExtensionCondition, &out.URLFileExtensionCondition
		*out = make([]ConditionsURLFileExtensionConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLFilenameCondition != nil {
		in, out := &in.URLFilenameCondition, &out.URLFilenameCondition
		*out = make([]URLFilenameConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLPathCondition != nil {
		in, out := &in.URLPathCondition, &out.URLPathCondition
		*out = make([]ConditionsURLPathConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsInitParameters.
func (in *ConditionsInitParameters) DeepCopy() *ConditionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsObservation) DeepCopyInto(out *ConditionsObservation) {
	*out = *in
	if in.ClientPortCondition != nil {
		in, out := &in.ClientPortCondition, &out.ClientPortCondition
		*out = make([]ClientPortConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CookiesCondition != nil {
		in, out := &in.CookiesCondition, &out.CookiesCondition
		*out = make([]ConditionsCookiesConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPVersionCondition != nil {
		in, out := &in.HTTPVersionCondition, &out.HTTPVersionCondition
		*out = make([]ConditionsHTTPVersionConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostNameCondition != nil {
		in, out := &in.HostNameCondition, &out.HostNameCondition
		*out = make([]HostNameConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsDeviceCondition != nil {
		in, out := &in.IsDeviceCondition, &out.IsDeviceCondition
		*out = make([]IsDeviceConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PostArgsCondition != nil {
		in, out := &in.PostArgsCondition, &out.PostArgsCondition
		*out = make([]PostArgsConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryStringCondition != nil {
		in, out := &in.QueryStringCondition, &out.QueryStringCondition
		*out = make([]ConditionsQueryStringConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteAddressCondition != nil {
		in, out := &in.RemoteAddressCondition, &out.RemoteAddressCondition
		*out = make([]ConditionsRemoteAddressConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestBodyCondition != nil {
		in, out := &in.RequestBodyCondition, &out.RequestBodyCondition
		*out = make([]ConditionsRequestBodyConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeaderCondition != nil {
		in, out := &in.RequestHeaderCondition, &out.RequestHeaderCondition
		*out = make([]ConditionsRequestHeaderConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMethodCondition != nil {
		in, out := &in.RequestMethodCondition, &out.RequestMethodCondition
		*out = make([]ConditionsRequestMethodConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestSchemeCondition != nil {
		in, out := &in.RequestSchemeCondition, &out.RequestSchemeCondition
		*out = make([]ConditionsRequestSchemeConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestURICondition != nil {
		in, out := &in.RequestURICondition, &out.RequestURICondition
		*out = make([]ConditionsRequestURIConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLProtocolCondition != nil {
		in, out := &in.SSLProtocolCondition, &out.SSLProtocolCondition
		*out = make([]SSLProtocolConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServerPortCondition != nil {
		in, out := &in.ServerPortCondition, &out.ServerPortCondition
		*out = make([]ServerPortConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SocketAddressCondition != nil {
		in, out := &in.SocketAddressCondition, &out.SocketAddressCondition
		*out = make([]SocketAddressConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLFileExtensionCondition != nil {
		in, out := &in.URLFileExtensionCondition, &out.URLFileExtensionCondition
		*out = make([]ConditionsURLFileExtensionConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLFilenameCondition != nil {
		in, out := &in.URLFilenameCondition, &out.URLFilenameCondition
		*out = make([]URLFilenameConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLPathCondition != nil {
		in, out := &in.URLPathCondition, &out.URLPathCondition
		*out = make([]ConditionsURLPathConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsObservation.
func (in *ConditionsObservation) DeepCopy() *ConditionsObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsParameters) DeepCopyInto(out *ConditionsParameters) {
	*out = *in
	if in.ClientPortCondition != nil {
		in, out := &in.ClientPortCondition, &out.ClientPortCondition
		*out = make([]ClientPortConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CookiesCondition != nil {
		in, out := &in.CookiesCondition, &out.CookiesCondition
		*out = make([]ConditionsCookiesConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPVersionCondition != nil {
		in, out := &in.HTTPVersionCondition, &out.HTTPVersionCondition
		*out = make([]ConditionsHTTPVersionConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostNameCondition != nil {
		in, out := &in.HostNameCondition, &out.HostNameCondition
		*out = make([]HostNameConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsDeviceCondition != nil {
		in, out := &in.IsDeviceCondition, &out.IsDeviceCondition
		*out = make([]IsDeviceConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PostArgsCondition != nil {
		in, out := &in.PostArgsCondition, &out.PostArgsCondition
		*out = make([]PostArgsConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryStringCondition != nil {
		in, out := &in.QueryStringCondition, &out.QueryStringCondition
		*out = make([]ConditionsQueryStringConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteAddressCondition != nil {
		in, out := &in.RemoteAddressCondition, &out.RemoteAddressCondition
		*out = make([]ConditionsRemoteAddressConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestBodyCondition != nil {
		in, out := &in.RequestBodyCondition, &out.RequestBodyCondition
		*out = make([]ConditionsRequestBodyConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeaderCondition != nil {
		in, out := &in.RequestHeaderCondition, &out.RequestHeaderCondition
		*out = make([]ConditionsRequestHeaderConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMethodCondition != nil {
		in, out := &in.RequestMethodCondition, &out.RequestMethodCondition
		*out = make([]ConditionsRequestMethodConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestSchemeCondition != nil {
		in, out := &in.RequestSchemeCondition, &out.RequestSchemeCondition
		*out = make([]ConditionsRequestSchemeConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestURICondition != nil {
		in, out := &in.RequestURICondition, &out.RequestURICondition
		*out = make([]ConditionsRequestURIConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLProtocolCondition != nil {
		in, out := &in.SSLProtocolCondition, &out.SSLProtocolCondition
		*out = make([]SSLProtocolConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServerPortCondition != nil {
		in, out := &in.ServerPortCondition, &out.ServerPortCondition
		*out = make([]ServerPortConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SocketAddressCondition != nil {
		in, out := &in.SocketAddressCondition, &out.SocketAddressCondition
		*out = make([]SocketAddressConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLFileExtensionCondition != nil {
		in, out := &in.URLFileExtensionCondition, &out.URLFileExtensionCondition
		*out = make([]ConditionsURLFileExtensionConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLFilenameCondition != nil {
		in, out := &in.URLFilenameCondition, &out.URLFilenameCondition
		*out = make([]URLFilenameConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLPathCondition != nil {
		in, out := &in.URLPathCondition, &out.URLPathCondition
		*out = make([]ConditionsURLPathConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsParameters.
func (in *ConditionsParameters) DeepCopy() *ConditionsParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsQueryStringConditionInitParameters) DeepCopyInto(out *ConditionsQueryStringConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsQueryStringConditionInitParameters.
func (in *ConditionsQueryStringConditionInitParameters) DeepCopy() *ConditionsQueryStringConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsQueryStringConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsQueryStringConditionObservation) DeepCopyInto(out *ConditionsQueryStringConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsQueryStringConditionObservation.
func (in *ConditionsQueryStringConditionObservation) DeepCopy() *ConditionsQueryStringConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionsQueryStringConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsQueryStringConditionParameters) DeepCopyInto(out *ConditionsQueryStringConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsQueryStringConditionParameters.
func (in *ConditionsQueryStringConditionParameters) DeepCopy() *ConditionsQueryStringConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsQueryStringConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsRemoteAddressConditionInitParameters) DeepCopyInto(out *ConditionsRemoteAddressConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsRemoteAddressConditionInitParameters.
func (in *ConditionsRemoteAddressConditionInitParameters) DeepCopy() *ConditionsRemoteAddressConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsRemoteAddressConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsRemoteAddressConditionObservation) DeepCopyInto(out *ConditionsRemoteAddressConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsRemoteAddressConditionObservation.
func (in *ConditionsRemoteAddressConditionObservation) DeepCopy() *ConditionsRemoteAddressConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionsRemoteAddressConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsRemoteAddressConditionParameters) DeepCopyInto(out *ConditionsRemoteAddressConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsRemoteAddressConditionParameters.
func (in *ConditionsRemoteAddressConditionParameters) DeepCopy() *ConditionsRemoteAddressConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsRemoteAddressConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsRequestBodyConditionInitParameters) DeepCopyInto(out *ConditionsRequestBodyConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsRequestBodyConditionInitParameters.
func (in *ConditionsRequestBodyConditionInitParameters) DeepCopy() *ConditionsRequestBodyConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsRequestBodyConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsRequestBodyConditionObservation) DeepCopyInto(out *ConditionsRequestBodyConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsRequestBodyConditionObservation.
func (in *ConditionsRequestBodyConditionObservation) DeepCopy() *ConditionsRequestBodyConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionsRequestBodyConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsRequestBodyConditionParameters) DeepCopyInto(out *ConditionsRequestBodyConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsRequestBodyConditionParameters.
func (in *ConditionsRequestBodyConditionParameters) DeepCopy() *ConditionsRequestBodyConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsRequestBodyConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsRequestHeaderConditionInitParameters) DeepCopyInto(out *ConditionsRequestHeaderConditionInitParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsRequestHeaderConditionInitParameters.
func (in *ConditionsRequestHeaderConditionInitParameters) DeepCopy() *ConditionsRequestHeaderConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsRequestHeaderConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsRequestHeaderConditionObservation) DeepCopyInto(out *ConditionsRequestHeaderConditionObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsRequestHeaderConditionObservation.
func (in *ConditionsRequestHeaderConditionObservation) DeepCopy() *ConditionsRequestHeaderConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionsRequestHeaderConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsRequestHeaderConditionParameters) DeepCopyInto(out *ConditionsRequestHeaderConditionParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsRequestHeaderConditionParameters.
func (in *ConditionsRequestHeaderConditionParameters) DeepCopy() *ConditionsRequestHeaderConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsRequestHeaderConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsRequestMethodConditionInitParameters) DeepCopyInto(out *ConditionsRequestMethodConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsRequestMethodConditionInitParameters.
func (in *ConditionsRequestMethodConditionInitParameters) DeepCopy() *ConditionsRequestMethodConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsRequestMethodConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsRequestMethodConditionObservation) DeepCopyInto(out *ConditionsRequestMethodConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsRequestMethodConditionObservation.
func (in *ConditionsRequestMethodConditionObservation) DeepCopy() *ConditionsRequestMethodConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionsRequestMethodConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsRequestMethodConditionParameters) DeepCopyInto(out *ConditionsRequestMethodConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsRequestMethodConditionParameters.
func (in *ConditionsRequestMethodConditionParameters) DeepCopy() *ConditionsRequestMethodConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsRequestMethodConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsRequestSchemeConditionInitParameters) DeepCopyInto(out *ConditionsRequestSchemeConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsRequestSchemeConditionInitParameters.
func (in *ConditionsRequestSchemeConditionInitParameters) DeepCopy() *ConditionsRequestSchemeConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsRequestSchemeConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsRequestSchemeConditionObservation) DeepCopyInto(out *ConditionsRequestSchemeConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsRequestSchemeConditionObservation.
func (in *ConditionsRequestSchemeConditionObservation) DeepCopy() *ConditionsRequestSchemeConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionsRequestSchemeConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsRequestSchemeConditionParameters) DeepCopyInto(out *ConditionsRequestSchemeConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsRequestSchemeConditionParameters.
func (in *ConditionsRequestSchemeConditionParameters) DeepCopy() *ConditionsRequestSchemeConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsRequestSchemeConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsRequestURIConditionInitParameters) DeepCopyInto(out *ConditionsRequestURIConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsRequestURIConditionInitParameters.
func (in *ConditionsRequestURIConditionInitParameters) DeepCopy() *ConditionsRequestURIConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsRequestURIConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsRequestURIConditionObservation) DeepCopyInto(out *ConditionsRequestURIConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsRequestURIConditionObservation.
func (in *ConditionsRequestURIConditionObservation) DeepCopy() *ConditionsRequestURIConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionsRequestURIConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsRequestURIConditionParameters) DeepCopyInto(out *ConditionsRequestURIConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsRequestURIConditionParameters.
func (in *ConditionsRequestURIConditionParameters) DeepCopy() *ConditionsRequestURIConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsRequestURIConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsURLFileExtensionConditionInitParameters) DeepCopyInto(out *ConditionsURLFileExtensionConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsURLFileExtensionConditionInitParameters.
func (in *ConditionsURLFileExtensionConditionInitParameters) DeepCopy() *ConditionsURLFileExtensionConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsURLFileExtensionConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsURLFileExtensionConditionObservation) DeepCopyInto(out *ConditionsURLFileExtensionConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsURLFileExtensionConditionObservation.
func (in *ConditionsURLFileExtensionConditionObservation) DeepCopy() *ConditionsURLFileExtensionConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionsURLFileExtensionConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsURLFileExtensionConditionParameters) DeepCopyInto(out *ConditionsURLFileExtensionConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsURLFileExtensionConditionParameters.
func (in *ConditionsURLFileExtensionConditionParameters) DeepCopy() *ConditionsURLFileExtensionConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsURLFileExtensionConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsURLPathConditionInitParameters) DeepCopyInto(out *ConditionsURLPathConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsURLPathConditionInitParameters.
func (in *ConditionsURLPathConditionInitParameters) DeepCopy() *ConditionsURLPathConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsURLPathConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsURLPathConditionObservation) DeepCopyInto(out *ConditionsURLPathConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsURLPathConditionObservation.
func (in *ConditionsURLPathConditionObservation) DeepCopy() *ConditionsURLPathConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionsURLPathConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsURLPathConditionParameters) DeepCopyInto(out *ConditionsURLPathConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsURLPathConditionParameters.
func (in *ConditionsURLPathConditionParameters) DeepCopy() *ConditionsURLPathConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsURLPathConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CookiesConditionInitParameters) DeepCopyInto(out *CookiesConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CookiesConditionInitParameters.
func (in *CookiesConditionInitParameters) DeepCopy() *CookiesConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(CookiesConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CookiesConditionObservation) DeepCopyInto(out *CookiesConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CookiesConditionObservation.
func (in *CookiesConditionObservation) DeepCopy() *CookiesConditionObservation {
	if in == nil {
		return nil
	}
	out := new(CookiesConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CookiesConditionParameters) DeepCopyInto(out *CookiesConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CookiesConditionParameters.
func (in *CookiesConditionParameters) DeepCopy() *CookiesConditionParameters {
	if in == nil {
		return nil
	}
	out := new(CookiesConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeliveryRuleInitParameters) DeepCopyInto(out *DeliveryRuleInitParameters) {
	*out = *in
	if in.CacheExpirationAction != nil {
		in, out := &in.CacheExpirationAction, &out.CacheExpirationAction
		*out = make([]CacheExpirationActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheKeyQueryStringAction != nil {
		in, out := &in.CacheKeyQueryStringAction, &out.CacheKeyQueryStringAction
		*out = make([]CacheKeyQueryStringActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CookiesCondition != nil {
		in, out := &in.CookiesCondition, &out.CookiesCondition
		*out = make([]CookiesConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeviceCondition != nil {
		in, out := &in.DeviceCondition, &out.DeviceCondition
		*out = make([]DeviceConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPVersionCondition != nil {
		in, out := &in.HTTPVersionCondition, &out.HTTPVersionCondition
		*out = make([]HTTPVersionConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ModifyRequestHeaderAction != nil {
		in, out := &in.ModifyRequestHeaderAction, &out.ModifyRequestHeaderAction
		*out = make([]ModifyRequestHeaderActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ModifyResponseHeaderAction != nil {
		in, out := &in.ModifyResponseHeaderAction, &out.ModifyResponseHeaderAction
		*out = make([]ModifyResponseHeaderActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(float64)
		**out = **in
	}
	if in.PostArgCondition != nil {
		in, out := &in.PostArgCondition, &out.PostArgCondition
		*out = make([]PostArgConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryStringCondition != nil {
		in, out := &in.QueryStringCondition, &out.QueryStringCondition
		*out = make([]QueryStringConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteAddressCondition != nil {
		in, out := &in.RemoteAddressCondition, &out.RemoteAddressCondition
		*out = make([]RemoteAddressConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestBodyCondition != nil {
		in, out := &in.RequestBodyCondition, &out.RequestBodyCondition
		*out = make([]RequestBodyConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeaderCondition != nil {
		in, out := &in.RequestHeaderCondition, &out.RequestHeaderCondition
		*out = make([]RequestHeaderConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMethodCondition != nil {
		in, out := &in.RequestMethodCondition, &out.RequestMethodCondition
		*out = make([]RequestMethodConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestSchemeCondition != nil {
		in, out := &in.RequestSchemeCondition, &out.RequestSchemeCondition
		*out = make([]RequestSchemeConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestURICondition != nil {
		in, out := &in.RequestURICondition, &out.RequestURICondition
		*out = make([]RequestURIConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLFileExtensionCondition != nil {
		in, out := &in.URLFileExtensionCondition, &out.URLFileExtensionCondition
		*out = make([]URLFileExtensionConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLFileNameCondition != nil {
		in, out := &in.URLFileNameCondition, &out.URLFileNameCondition
		*out = make([]URLFileNameConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLPathCondition != nil {
		in, out := &in.URLPathCondition, &out.URLPathCondition
		*out = make([]URLPathConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRedirectAction != nil {
		in, out := &in.URLRedirectAction, &out.URLRedirectAction
		*out = make([]URLRedirectActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewriteAction != nil {
		in, out := &in.URLRewriteAction, &out.URLRewriteAction
		*out = make([]URLRewriteActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeliveryRuleInitParameters.
func (in *DeliveryRuleInitParameters) DeepCopy() *DeliveryRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeliveryRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeliveryRuleObservation) DeepCopyInto(out *DeliveryRuleObservation) {
	*out = *in
	if in.CacheExpirationAction != nil {
		in, out := &in.CacheExpirationAction, &out.CacheExpirationAction
		*out = make([]CacheExpirationActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheKeyQueryStringAction != nil {
		in, out := &in.CacheKeyQueryStringAction, &out.CacheKeyQueryStringAction
		*out = make([]CacheKeyQueryStringActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CookiesCondition != nil {
		in, out := &in.CookiesCondition, &out.CookiesCondition
		*out = make([]CookiesConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeviceCondition != nil {
		in, out := &in.DeviceCondition, &out.DeviceCondition
		*out = make([]DeviceConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPVersionCondition != nil {
		in, out := &in.HTTPVersionCondition, &out.HTTPVersionCondition
		*out = make([]HTTPVersionConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ModifyRequestHeaderAction != nil {
		in, out := &in.ModifyRequestHeaderAction, &out.ModifyRequestHeaderAction
		*out = make([]ModifyRequestHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ModifyResponseHeaderAction != nil {
		in, out := &in.ModifyResponseHeaderAction, &out.ModifyResponseHeaderAction
		*out = make([]ModifyResponseHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(float64)
		**out = **in
	}
	if in.PostArgCondition != nil {
		in, out := &in.PostArgCondition, &out.PostArgCondition
		*out = make([]PostArgConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryStringCondition != nil {
		in, out := &in.QueryStringCondition, &out.QueryStringCondition
		*out = make([]QueryStringConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteAddressCondition != nil {
		in, out := &in.RemoteAddressCondition, &out.RemoteAddressCondition
		*out = make([]RemoteAddressConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestBodyCondition != nil {
		in, out := &in.RequestBodyCondition, &out.RequestBodyCondition
		*out = make([]RequestBodyConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeaderCondition != nil {
		in, out := &in.RequestHeaderCondition, &out.RequestHeaderCondition
		*out = make([]RequestHeaderConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMethodCondition != nil {
		in, out := &in.RequestMethodCondition, &out.RequestMethodCondition
		*out = make([]RequestMethodConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestSchemeCondition != nil {
		in, out := &in.RequestSchemeCondition, &out.RequestSchemeCondition
		*out = make([]RequestSchemeConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestURICondition != nil {
		in, out := &in.RequestURICondition, &out.RequestURICondition
		*out = make([]RequestURIConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLFileExtensionCondition != nil {
		in, out := &in.URLFileExtensionCondition, &out.URLFileExtensionCondition
		*out = make([]URLFileExtensionConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLFileNameCondition != nil {
		in, out := &in.URLFileNameCondition, &out.URLFileNameCondition
		*out = make([]URLFileNameConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLPathCondition != nil {
		in, out := &in.URLPathCondition, &out.URLPathCondition
		*out = make([]URLPathConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRedirectAction != nil {
		in, out := &in.URLRedirectAction, &out.URLRedirectAction
		*out = make([]URLRedirectActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewriteAction != nil {
		in, out := &in.URLRewriteAction, &out.URLRewriteAction
		*out = make([]URLRewriteActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeliveryRuleObservation.
func (in *DeliveryRuleObservation) DeepCopy() *DeliveryRuleObservation {
	if in == nil {
		return nil
	}
	out := new(DeliveryRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeliveryRuleParameters) DeepCopyInto(out *DeliveryRuleParameters) {
	*out = *in
	if in.CacheExpirationAction != nil {
		in, out := &in.CacheExpirationAction, &out.CacheExpirationAction
		*out = make([]CacheExpirationActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheKeyQueryStringAction != nil {
		in, out := &in.CacheKeyQueryStringAction, &out.CacheKeyQueryStringAction
		*out = make([]CacheKeyQueryStringActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CookiesCondition != nil {
		in, out := &in.CookiesCondition, &out.CookiesCondition
		*out = make([]CookiesConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeviceCondition != nil {
		in, out := &in.DeviceCondition, &out.DeviceCondition
		*out = make([]DeviceConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPVersionCondition != nil {
		in, out := &in.HTTPVersionCondition, &out.HTTPVersionCondition
		*out = make([]HTTPVersionConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ModifyRequestHeaderAction != nil {
		in, out := &in.ModifyRequestHeaderAction, &out.ModifyRequestHeaderAction
		*out = make([]ModifyRequestHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ModifyResponseHeaderAction != nil {
		in, out := &in.ModifyResponseHeaderAction, &out.ModifyResponseHeaderAction
		*out = make([]ModifyResponseHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(float64)
		**out = **in
	}
	if in.PostArgCondition != nil {
		in, out := &in.PostArgCondition, &out.PostArgCondition
		*out = make([]PostArgConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryStringCondition != nil {
		in, out := &in.QueryStringCondition, &out.QueryStringCondition
		*out = make([]QueryStringConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoteAddressCondition != nil {
		in, out := &in.RemoteAddressCondition, &out.RemoteAddressCondition
		*out = make([]RemoteAddressConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestBodyCondition != nil {
		in, out := &in.RequestBodyCondition, &out.RequestBodyCondition
		*out = make([]RequestBodyConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeaderCondition != nil {
		in, out := &in.RequestHeaderCondition, &out.RequestHeaderCondition
		*out = make([]RequestHeaderConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMethodCondition != nil {
		in, out := &in.RequestMethodCondition, &out.RequestMethodCondition
		*out = make([]RequestMethodConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestSchemeCondition != nil {
		in, out := &in.RequestSchemeCondition, &out.RequestSchemeCondition
		*out = make([]RequestSchemeConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestURICondition != nil {
		in, out := &in.RequestURICondition, &out.RequestURICondition
		*out = make([]RequestURIConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLFileExtensionCondition != nil {
		in, out := &in.URLFileExtensionCondition, &out.URLFileExtensionCondition
		*out = make([]URLFileExtensionConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLFileNameCondition != nil {
		in, out := &in.URLFileNameCondition, &out.URLFileNameCondition
		*out = make([]URLFileNameConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLPathCondition != nil {
		in, out := &in.URLPathCondition, &out.URLPathCondition
		*out = make([]URLPathConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRedirectAction != nil {
		in, out := &in.URLRedirectAction, &out.URLRedirectAction
		*out = make([]URLRedirectActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewriteAction != nil {
		in, out := &in.URLRewriteAction, &out.URLRewriteAction
		*out = make([]URLRewriteActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeliveryRuleParameters.
func (in *DeliveryRuleParameters) DeepCopy() *DeliveryRuleParameters {
	if in == nil {
		return nil
	}
	out := new(DeliveryRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceConditionInitParameters) DeepCopyInto(out *DeviceConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceConditionInitParameters.
func (in *DeviceConditionInitParameters) DeepCopy() *DeviceConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeviceConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceConditionObservation) DeepCopyInto(out *DeviceConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceConditionObservation.
func (in *DeviceConditionObservation) DeepCopy() *DeviceConditionObservation {
	if in == nil {
		return nil
	}
	out := new(DeviceConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceConditionParameters) DeepCopyInto(out *DeviceConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceConditionParameters.
func (in *DeviceConditionParameters) DeepCopy() *DeviceConditionParameters {
	if in == nil {
		return nil
	}
	out := new(DeviceConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Endpoint) DeepCopyInto(out *Endpoint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Endpoint.
func (in *Endpoint) DeepCopy() *Endpoint {
	if in == nil {
		return nil
	}
	out := new(Endpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Endpoint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointInitParameters) DeepCopyInto(out *EndpointInitParameters) {
	*out = *in
	if in.ContentTypesToCompress != nil {
		in, out := &in.ContentTypesToCompress, &out.ContentTypesToCompress
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DeliveryRule != nil {
		in, out := &in.DeliveryRule, &out.DeliveryRule
		*out = make([]DeliveryRuleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GeoFilter != nil {
		in, out := &in.GeoFilter, &out.GeoFilter
		*out = make([]GeoFilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GlobalDeliveryRule != nil {
		in, out := &in.GlobalDeliveryRule, &out.GlobalDeliveryRule
		*out = make([]GlobalDeliveryRuleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsCompressionEnabled != nil {
		in, out := &in.IsCompressionEnabled, &out.IsCompressionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsHTTPAllowed != nil {
		in, out := &in.IsHTTPAllowed, &out.IsHTTPAllowed
		*out = new(bool)
		**out = **in
	}
	if in.IsHTTPSAllowed != nil {
		in, out := &in.IsHTTPSAllowed, &out.IsHTTPSAllowed
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OptimizationType != nil {
		in, out := &in.OptimizationType, &out.OptimizationType
		*out = new(string)
		**out = **in
	}
	if in.Origin != nil {
		in, out := &in.Origin, &out.Origin
		*out = make([]OriginInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OriginHostHeader != nil {
		in, out := &in.OriginHostHeader, &out.OriginHostHeader
		*out = new(string)
		**out = **in
	}
	if in.OriginPath != nil {
		in, out := &in.OriginPath, &out.OriginPath
		*out = new(string)
		**out = **in
	}
	if in.ProbePath != nil {
		in, out := &in.ProbePath, &out.ProbePath
		*out = new(string)
		**out = **in
	}
	if in.QuerystringCachingBehaviour != nil {
		in, out := &in.QuerystringCachingBehaviour, &out.QuerystringCachingBehaviour
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointInitParameters.
func (in *EndpointInitParameters) DeepCopy() *EndpointInitParameters {
	if in == nil {
		return nil
	}
	out := new(EndpointInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointList) DeepCopyInto(out *EndpointList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Endpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointList.
func (in *EndpointList) DeepCopy() *EndpointList {
	if in == nil {
		return nil
	}
	out := new(EndpointList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EndpointList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointObservation) DeepCopyInto(out *EndpointObservation) {
	*out = *in
	if in.ContentTypesToCompress != nil {
		in, out := &in.ContentTypesToCompress, &out.ContentTypesToCompress
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DeliveryRule != nil {
		in, out := &in.DeliveryRule, &out.DeliveryRule
		*out = make([]DeliveryRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.GeoFilter != nil {
		in, out := &in.GeoFilter, &out.GeoFilter
		*out = make([]GeoFilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GlobalDeliveryRule != nil {
		in, out := &in.GlobalDeliveryRule, &out.GlobalDeliveryRule
		*out = make([]GlobalDeliveryRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsCompressionEnabled != nil {
		in, out := &in.IsCompressionEnabled, &out.IsCompressionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsHTTPAllowed != nil {
		in, out := &in.IsHTTPAllowed, &out.IsHTTPAllowed
		*out = new(bool)
		**out = **in
	}
	if in.IsHTTPSAllowed != nil {
		in, out := &in.IsHTTPSAllowed, &out.IsHTTPSAllowed
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OptimizationType != nil {
		in, out := &in.OptimizationType, &out.OptimizationType
		*out = new(string)
		**out = **in
	}
	if in.Origin != nil {
		in, out := &in.Origin, &out.Origin
		*out = make([]OriginObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OriginHostHeader != nil {
		in, out := &in.OriginHostHeader, &out.OriginHostHeader
		*out = new(string)
		**out = **in
	}
	if in.OriginPath != nil {
		in, out := &in.OriginPath, &out.OriginPath
		*out = new(string)
		**out = **in
	}
	if in.ProbePath != nil {
		in, out := &in.ProbePath, &out.ProbePath
		*out = new(string)
		**out = **in
	}
	if in.ProfileName != nil {
		in, out := &in.ProfileName, &out.ProfileName
		*out = new(string)
		**out = **in
	}
	if in.QuerystringCachingBehaviour != nil {
		in, out := &in.QuerystringCachingBehaviour, &out.QuerystringCachingBehaviour
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointObservation.
func (in *EndpointObservation) DeepCopy() *EndpointObservation {
	if in == nil {
		return nil
	}
	out := new(EndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointParameters) DeepCopyInto(out *EndpointParameters) {
	*out = *in
	if in.ContentTypesToCompress != nil {
		in, out := &in.ContentTypesToCompress, &out.ContentTypesToCompress
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DeliveryRule != nil {
		in, out := &in.DeliveryRule, &out.DeliveryRule
		*out = make([]DeliveryRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GeoFilter != nil {
		in, out := &in.GeoFilter, &out.GeoFilter
		*out = make([]GeoFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GlobalDeliveryRule != nil {
		in, out := &in.GlobalDeliveryRule, &out.GlobalDeliveryRule
		*out = make([]GlobalDeliveryRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsCompressionEnabled != nil {
		in, out := &in.IsCompressionEnabled, &out.IsCompressionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsHTTPAllowed != nil {
		in, out := &in.IsHTTPAllowed, &out.IsHTTPAllowed
		*out = new(bool)
		**out = **in
	}
	if in.IsHTTPSAllowed != nil {
		in, out := &in.IsHTTPSAllowed, &out.IsHTTPSAllowed
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OptimizationType != nil {
		in, out := &in.OptimizationType, &out.OptimizationType
		*out = new(string)
		**out = **in
	}
	if in.Origin != nil {
		in, out := &in.Origin, &out.Origin
		*out = make([]OriginParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OriginHostHeader != nil {
		in, out := &in.OriginHostHeader, &out.OriginHostHeader
		*out = new(string)
		**out = **in
	}
	if in.OriginPath != nil {
		in, out := &in.OriginPath, &out.OriginPath
		*out = new(string)
		**out = **in
	}
	if in.ProbePath != nil {
		in, out := &in.ProbePath, &out.ProbePath
		*out = new(string)
		**out = **in
	}
	if in.ProfileName != nil {
		in, out := &in.ProfileName, &out.ProfileName
		*out = new(string)
		**out = **in
	}
	if in.ProfileNameRef != nil {
		in, out := &in.ProfileNameRef, &out.ProfileNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProfileNameSelector != nil {
		in, out := &in.ProfileNameSelector, &out.ProfileNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.QuerystringCachingBehaviour != nil {
		in, out := &in.QuerystringCachingBehaviour, &out.QuerystringCachingBehaviour
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointParameters.
func (in *EndpointParameters) DeepCopy() *EndpointParameters {
	if in == nil {
		return nil
	}
	out := new(EndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointSpec) DeepCopyInto(out *EndpointSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointSpec.
func (in *EndpointSpec) DeepCopy() *EndpointSpec {
	if in == nil {
		return nil
	}
	out := new(EndpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointStatus) DeepCopyInto(out *EndpointStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointStatus.
func (in *EndpointStatus) DeepCopy() *EndpointStatus {
	if in == nil {
		return nil
	}
	out := new(EndpointStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorCustomDomain) DeepCopyInto(out *FrontdoorCustomDomain) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorCustomDomain.
func (in *FrontdoorCustomDomain) DeepCopy() *FrontdoorCustomDomain {
	if in == nil {
		return nil
	}
	out := new(FrontdoorCustomDomain)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FrontdoorCustomDomain) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorCustomDomainAssociation) DeepCopyInto(out *FrontdoorCustomDomainAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorCustomDomainAssociation.
func (in *FrontdoorCustomDomainAssociation) DeepCopy() *FrontdoorCustomDomainAssociation {
	if in == nil {
		return nil
	}
	out := new(FrontdoorCustomDomainAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FrontdoorCustomDomainAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorCustomDomainAssociationInitParameters) DeepCopyInto(out *FrontdoorCustomDomainAssociationInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorCustomDomainAssociationInitParameters.
func (in *FrontdoorCustomDomainAssociationInitParameters) DeepCopy() *FrontdoorCustomDomainAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(FrontdoorCustomDomainAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorCustomDomainAssociationList) DeepCopyInto(out *FrontdoorCustomDomainAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FrontdoorCustomDomainAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorCustomDomainAssociationList.
func (in *FrontdoorCustomDomainAssociationList) DeepCopy() *FrontdoorCustomDomainAssociationList {
	if in == nil {
		return nil
	}
	out := new(FrontdoorCustomDomainAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FrontdoorCustomDomainAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorCustomDomainAssociationObservation) DeepCopyInto(out *FrontdoorCustomDomainAssociationObservation) {
	*out = *in
	if in.CdnFrontdoorCustomDomainID != nil {
		in, out := &in.CdnFrontdoorCustomDomainID, &out.CdnFrontdoorCustomDomainID
		*out = new(string)
		**out = **in
	}
	if in.CdnFrontdoorRouteIds != nil {
		in, out := &in.CdnFrontdoorRouteIds, &out.CdnFrontdoorRouteIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorCustomDomainAssociationObservation.
func (in *FrontdoorCustomDomainAssociationObservation) DeepCopy() *FrontdoorCustomDomainAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(FrontdoorCustomDomainAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorCustomDomainAssociationParameters) DeepCopyInto(out *FrontdoorCustomDomainAssociationParameters) {
	*out = *in
	if in.CdnFrontdoorCustomDomainID != nil {
		in, out := &in.CdnFrontdoorCustomDomainID, &out.CdnFrontdoorCustomDomainID
		*out = new(string)
		**out = **in
	}
	if in.CdnFrontdoorCustomDomainIDRef != nil {
		in, out := &in.CdnFrontdoorCustomDomainIDRef, &out.CdnFrontdoorCustomDomainIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CdnFrontdoorCustomDomainIDSelector != nil {
		in, out := &in.CdnFrontdoorCustomDomainIDSelector, &out.CdnFrontdoorCustomDomainIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CdnFrontdoorRouteIds != nil {
		in, out := &in.CdnFrontdoorRouteIds, &out.CdnFrontdoorRouteIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CdnFrontdoorRouteIdsRefs != nil {
		in, out := &in.CdnFrontdoorRouteIdsRefs, &out.CdnFrontdoorRouteIdsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CdnFrontdoorRouteIdsSelector != nil {
		in, out := &in.CdnFrontdoorRouteIdsSelector, &out.CdnFrontdoorRouteIdsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorCustomDomainAssociationParameters.
func (in *FrontdoorCustomDomainAssociationParameters) DeepCopy() *FrontdoorCustomDomainAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(FrontdoorCustomDomainAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorCustomDomainAssociationSpec) DeepCopyInto(out *FrontdoorCustomDomainAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	out.InitProvider = in.InitProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorCustomDomainAssociationSpec.
func (in *FrontdoorCustomDomainAssociationSpec) DeepCopy() *FrontdoorCustomDomainAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(FrontdoorCustomDomainAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorCustomDomainAssociationStatus) DeepCopyInto(out *FrontdoorCustomDomainAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorCustomDomainAssociationStatus.
func (in *FrontdoorCustomDomainAssociationStatus) DeepCopy() *FrontdoorCustomDomainAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(FrontdoorCustomDomainAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorCustomDomainInitParameters) DeepCopyInto(out *FrontdoorCustomDomainInitParameters) {
	*out = *in
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.TLS != nil {
		in, out := &in.TLS, &out.TLS
		*out = make([]TLSInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorCustomDomainInitParameters.
func (in *FrontdoorCustomDomainInitParameters) DeepCopy() *FrontdoorCustomDomainInitParameters {
	if in == nil {
		return nil
	}
	out := new(FrontdoorCustomDomainInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorCustomDomainList) DeepCopyInto(out *FrontdoorCustomDomainList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FrontdoorCustomDomain, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorCustomDomainList.
func (in *FrontdoorCustomDomainList) DeepCopy() *FrontdoorCustomDomainList {
	if in == nil {
		return nil
	}
	out := new(FrontdoorCustomDomainList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FrontdoorCustomDomainList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorCustomDomainObservation) DeepCopyInto(out *FrontdoorCustomDomainObservation) {
	*out = *in
	if in.CdnFrontdoorProfileID != nil {
		in, out := &in.CdnFrontdoorProfileID, &out.CdnFrontdoorProfileID
		*out = new(string)
		**out = **in
	}
	if in.DNSZoneID != nil {
		in, out := &in.DNSZoneID, &out.DNSZoneID
		*out = new(string)
		**out = **in
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.TLS != nil {
		in, out := &in.TLS, &out.TLS
		*out = make([]TLSObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ValidationToken != nil {
		in, out := &in.ValidationToken, &out.ValidationToken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorCustomDomainObservation.
func (in *FrontdoorCustomDomainObservation) DeepCopy() *FrontdoorCustomDomainObservation {
	if in == nil {
		return nil
	}
	out := new(FrontdoorCustomDomainObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorCustomDomainParameters) DeepCopyInto(out *FrontdoorCustomDomainParameters) {
	*out = *in
	if in.CdnFrontdoorProfileID != nil {
		in, out := &in.CdnFrontdoorProfileID, &out.CdnFrontdoorProfileID
		*out = new(string)
		**out = **in
	}
	if in.CdnFrontdoorProfileIDRef != nil {
		in, out := &in.CdnFrontdoorProfileIDRef, &out.CdnFrontdoorProfileIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CdnFrontdoorProfileIDSelector != nil {
		in, out := &in.CdnFrontdoorProfileIDSelector, &out.CdnFrontdoorProfileIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DNSZoneID != nil {
		in, out := &in.DNSZoneID, &out.DNSZoneID
		*out = new(string)
		**out = **in
	}
	if in.DNSZoneIDRef != nil {
		in, out := &in.DNSZoneIDRef, &out.DNSZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DNSZoneIDSelector != nil {
		in, out := &in.DNSZoneIDSelector, &out.DNSZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.TLS != nil {
		in, out := &in.TLS, &out.TLS
		*out = make([]TLSParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorCustomDomainParameters.
func (in *FrontdoorCustomDomainParameters) DeepCopy() *FrontdoorCustomDomainParameters {
	if in == nil {
		return nil
	}
	out := new(FrontdoorCustomDomainParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorCustomDomainSpec) DeepCopyInto(out *FrontdoorCustomDomainSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorCustomDomainSpec.
func (in *FrontdoorCustomDomainSpec) DeepCopy() *FrontdoorCustomDomainSpec {
	if in == nil {
		return nil
	}
	out := new(FrontdoorCustomDomainSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorCustomDomainStatus) DeepCopyInto(out *FrontdoorCustomDomainStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorCustomDomainStatus.
func (in *FrontdoorCustomDomainStatus) DeepCopy() *FrontdoorCustomDomainStatus {
	if in == nil {
		return nil
	}
	out := new(FrontdoorCustomDomainStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorEndpoint) DeepCopyInto(out *FrontdoorEndpoint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorEndpoint.
func (in *FrontdoorEndpoint) DeepCopy() *FrontdoorEndpoint {
	if in == nil {
		return nil
	}
	out := new(FrontdoorEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FrontdoorEndpoint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorEndpointInitParameters) DeepCopyInto(out *FrontdoorEndpointInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorEndpointInitParameters.
func (in *FrontdoorEndpointInitParameters) DeepCopy() *FrontdoorEndpointInitParameters {
	if in == nil {
		return nil
	}
	out := new(FrontdoorEndpointInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorEndpointList) DeepCopyInto(out *FrontdoorEndpointList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FrontdoorEndpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorEndpointList.
func (in *FrontdoorEndpointList) DeepCopy() *FrontdoorEndpointList {
	if in == nil {
		return nil
	}
	out := new(FrontdoorEndpointList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FrontdoorEndpointList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorEndpointObservation) DeepCopyInto(out *FrontdoorEndpointObservation) {
	*out = *in
	if in.CdnFrontdoorProfileID != nil {
		in, out := &in.CdnFrontdoorProfileID, &out.CdnFrontdoorProfileID
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorEndpointObservation.
func (in *FrontdoorEndpointObservation) DeepCopy() *FrontdoorEndpointObservation {
	if in == nil {
		return nil
	}
	out := new(FrontdoorEndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorEndpointParameters) DeepCopyInto(out *FrontdoorEndpointParameters) {
	*out = *in
	if in.CdnFrontdoorProfileID != nil {
		in, out := &in.CdnFrontdoorProfileID, &out.CdnFrontdoorProfileID
		*out = new(string)
		**out = **in
	}
	if in.CdnFrontdoorProfileIDRef != nil {
		in, out := &in.CdnFrontdoorProfileIDRef, &out.CdnFrontdoorProfileIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CdnFrontdoorProfileIDSelector != nil {
		in, out := &in.CdnFrontdoorProfileIDSelector, &out.CdnFrontdoorProfileIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorEndpointParameters.
func (in *FrontdoorEndpointParameters) DeepCopy() *FrontdoorEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(FrontdoorEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorEndpointSpec) DeepCopyInto(out *FrontdoorEndpointSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorEndpointSpec.
func (in *FrontdoorEndpointSpec) DeepCopy() *FrontdoorEndpointSpec {
	if in == nil {
		return nil
	}
	out := new(FrontdoorEndpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorEndpointStatus) DeepCopyInto(out *FrontdoorEndpointStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorEndpointStatus.
func (in *FrontdoorEndpointStatus) DeepCopy() *FrontdoorEndpointStatus {
	if in == nil {
		return nil
	}
	out := new(FrontdoorEndpointStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorOrigin) DeepCopyInto(out *FrontdoorOrigin) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorOrigin.
func (in *FrontdoorOrigin) DeepCopy() *FrontdoorOrigin {
	if in == nil {
		return nil
	}
	out := new(FrontdoorOrigin)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FrontdoorOrigin) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorOriginGroup) DeepCopyInto(out *FrontdoorOriginGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorOriginGroup.
func (in *FrontdoorOriginGroup) DeepCopy() *FrontdoorOriginGroup {
	if in == nil {
		return nil
	}
	out := new(FrontdoorOriginGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FrontdoorOriginGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorOriginGroupInitParameters) DeepCopyInto(out *FrontdoorOriginGroupInitParameters) {
	*out = *in
	if in.HealthProbe != nil {
		in, out := &in.HealthProbe, &out.HealthProbe
		*out = make([]HealthProbeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancing != nil {
		in, out := &in.LoadBalancing, &out.LoadBalancing
		*out = make([]LoadBalancingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestoreTrafficTimeToHealedOrNewEndpointInMinutes != nil {
		in, out := &in.RestoreTrafficTimeToHealedOrNewEndpointInMinutes, &out.RestoreTrafficTimeToHealedOrNewEndpointInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.SessionAffinityEnabled != nil {
		in, out := &in.SessionAffinityEnabled, &out.SessionAffinityEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorOriginGroupInitParameters.
func (in *FrontdoorOriginGroupInitParameters) DeepCopy() *FrontdoorOriginGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(FrontdoorOriginGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorOriginGroupList) DeepCopyInto(out *FrontdoorOriginGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FrontdoorOriginGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorOriginGroupList.
func (in *FrontdoorOriginGroupList) DeepCopy() *FrontdoorOriginGroupList {
	if in == nil {
		return nil
	}
	out := new(FrontdoorOriginGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FrontdoorOriginGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorOriginGroupObservation) DeepCopyInto(out *FrontdoorOriginGroupObservation) {
	*out = *in
	if in.CdnFrontdoorProfileID != nil {
		in, out := &in.CdnFrontdoorProfileID, &out.CdnFrontdoorProfileID
		*out = new(string)
		**out = **in
	}
	if in.HealthProbe != nil {
		in, out := &in.HealthProbe, &out.HealthProbe
		*out = make([]HealthProbeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancing != nil {
		in, out := &in.LoadBalancing, &out.LoadBalancing
		*out = make([]LoadBalancingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestoreTrafficTimeToHealedOrNewEndpointInMinutes != nil {
		in, out := &in.RestoreTrafficTimeToHealedOrNewEndpointInMinutes, &out.RestoreTrafficTimeToHealedOrNewEndpointInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.SessionAffinityEnabled != nil {
		in, out := &in.SessionAffinityEnabled, &out.SessionAffinityEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorOriginGroupObservation.
func (in *FrontdoorOriginGroupObservation) DeepCopy() *FrontdoorOriginGroupObservation {
	if in == nil {
		return nil
	}
	out := new(FrontdoorOriginGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorOriginGroupParameters) DeepCopyInto(out *FrontdoorOriginGroupParameters) {
	*out = *in
	if in.CdnFrontdoorProfileID != nil {
		in, out := &in.CdnFrontdoorProfileID, &out.CdnFrontdoorProfileID
		*out = new(string)
		**out = **in
	}
	if in.CdnFrontdoorProfileIDRef != nil {
		in, out := &in.CdnFrontdoorProfileIDRef, &out.CdnFrontdoorProfileIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CdnFrontdoorProfileIDSelector != nil {
		in, out := &in.CdnFrontdoorProfileIDSelector, &out.CdnFrontdoorProfileIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.HealthProbe != nil {
		in, out := &in.HealthProbe, &out.HealthProbe
		*out = make([]HealthProbeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancing != nil {
		in, out := &in.LoadBalancing, &out.LoadBalancing
		*out = make([]LoadBalancingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestoreTrafficTimeToHealedOrNewEndpointInMinutes != nil {
		in, out := &in.RestoreTrafficTimeToHealedOrNewEndpointInMinutes, &out.RestoreTrafficTimeToHealedOrNewEndpointInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.SessionAffinityEnabled != nil {
		in, out := &in.SessionAffinityEnabled, &out.SessionAffinityEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorOriginGroupParameters.
func (in *FrontdoorOriginGroupParameters) DeepCopy() *FrontdoorOriginGroupParameters {
	if in == nil {
		return nil
	}
	out := new(FrontdoorOriginGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorOriginGroupSpec) DeepCopyInto(out *FrontdoorOriginGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorOriginGroupSpec.
func (in *FrontdoorOriginGroupSpec) DeepCopy() *FrontdoorOriginGroupSpec {
	if in == nil {
		return nil
	}
	out := new(FrontdoorOriginGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorOriginGroupStatus) DeepCopyInto(out *FrontdoorOriginGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorOriginGroupStatus.
func (in *FrontdoorOriginGroupStatus) DeepCopy() *FrontdoorOriginGroupStatus {
	if in == nil {
		return nil
	}
	out := new(FrontdoorOriginGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorOriginInitParameters) DeepCopyInto(out *FrontdoorOriginInitParameters) {
	*out = *in
	if in.CertificateNameCheckEnabled != nil {
		in, out := &in.CertificateNameCheckEnabled, &out.CertificateNameCheckEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPPort != nil {
		in, out := &in.HTTPPort, &out.HTTPPort
		*out = new(float64)
		**out = **in
	}
	if in.HTTPSPort != nil {
		in, out := &in.HTTPSPort, &out.HTTPSPort
		*out = new(float64)
		**out = **in
	}
	if in.HealthProbesEnabled != nil {
		in, out := &in.HealthProbesEnabled, &out.HealthProbesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.PrivateLink != nil {
		in, out := &in.PrivateLink, &out.PrivateLink
		*out = make([]PrivateLinkInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorOriginInitParameters.
func (in *FrontdoorOriginInitParameters) DeepCopy() *FrontdoorOriginInitParameters {
	if in == nil {
		return nil
	}
	out := new(FrontdoorOriginInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorOriginList) DeepCopyInto(out *FrontdoorOriginList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FrontdoorOrigin, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorOriginList.
func (in *FrontdoorOriginList) DeepCopy() *FrontdoorOriginList {
	if in == nil {
		return nil
	}
	out := new(FrontdoorOriginList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FrontdoorOriginList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorOriginObservation) DeepCopyInto(out *FrontdoorOriginObservation) {
	*out = *in
	if in.CdnFrontdoorOriginGroupID != nil {
		in, out := &in.CdnFrontdoorOriginGroupID, &out.CdnFrontdoorOriginGroupID
		*out = new(string)
		**out = **in
	}
	if in.CertificateNameCheckEnabled != nil {
		in, out := &in.CertificateNameCheckEnabled, &out.CertificateNameCheckEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPPort != nil {
		in, out := &in.HTTPPort, &out.HTTPPort
		*out = new(float64)
		**out = **in
	}
	if in.HTTPSPort != nil {
		in, out := &in.HTTPSPort, &out.HTTPSPort
		*out = new(float64)
		**out = **in
	}
	if in.HealthProbesEnabled != nil {
		in, out := &in.HealthProbesEnabled, &out.HealthProbesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OriginHostHeader != nil {
		in, out := &in.OriginHostHeader, &out.OriginHostHeader
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.PrivateLink != nil {
		in, out := &in.PrivateLink, &out.PrivateLink
		*out = make([]PrivateLinkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorOriginObservation.
func (in *FrontdoorOriginObservation) DeepCopy() *FrontdoorOriginObservation {
	if in == nil {
		return nil
	}
	out := new(FrontdoorOriginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorOriginParameters) DeepCopyInto(out *FrontdoorOriginParameters) {
	*out = *in
	if in.CdnFrontdoorOriginGroupID != nil {
		in, out := &in.CdnFrontdoorOriginGroupID, &out.CdnFrontdoorOriginGroupID
		*out = new(string)
		**out = **in
	}
	if in.CdnFrontdoorOriginGroupIDRef != nil {
		in, out := &in.CdnFrontdoorOriginGroupIDRef, &out.CdnFrontdoorOriginGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CdnFrontdoorOriginGroupIDSelector != nil {
		in, out := &in.CdnFrontdoorOriginGroupIDSelector, &out.CdnFrontdoorOriginGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CertificateNameCheckEnabled != nil {
		in, out := &in.CertificateNameCheckEnabled, &out.CertificateNameCheckEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPPort != nil {
		in, out := &in.HTTPPort, &out.HTTPPort
		*out = new(float64)
		**out = **in
	}
	if in.HTTPSPort != nil {
		in, out := &in.HTTPSPort, &out.HTTPSPort
		*out = new(float64)
		**out = **in
	}
	if in.HealthProbesEnabled != nil {
		in, out := &in.HealthProbesEnabled, &out.HealthProbesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.HostNameRef != nil {
		in, out := &in.HostNameRef, &out.HostNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.HostNameSelector != nil {
		in, out := &in.HostNameSelector, &out.HostNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OriginHostHeader != nil {
		in, out := &in.OriginHostHeader, &out.OriginHostHeader
		*out = new(string)
		**out = **in
	}
	if in.OriginHostHeaderRef != nil {
		in, out := &in.OriginHostHeaderRef, &out.OriginHostHeaderRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OriginHostHeaderSelector != nil {
		in, out := &in.OriginHostHeaderSelector, &out.OriginHostHeaderSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.PrivateLink != nil {
		in, out := &in.PrivateLink, &out.PrivateLink
		*out = make([]PrivateLinkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorOriginParameters.
func (in *FrontdoorOriginParameters) DeepCopy() *FrontdoorOriginParameters {
	if in == nil {
		return nil
	}
	out := new(FrontdoorOriginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorOriginSpec) DeepCopyInto(out *FrontdoorOriginSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorOriginSpec.
func (in *FrontdoorOriginSpec) DeepCopy() *FrontdoorOriginSpec {
	if in == nil {
		return nil
	}
	out := new(FrontdoorOriginSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorOriginStatus) DeepCopyInto(out *FrontdoorOriginStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorOriginStatus.
func (in *FrontdoorOriginStatus) DeepCopy() *FrontdoorOriginStatus {
	if in == nil {
		return nil
	}
	out := new(FrontdoorOriginStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorProfile) DeepCopyInto(out *FrontdoorProfile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorProfile.
func (in *FrontdoorProfile) DeepCopy() *FrontdoorProfile {
	if in == nil {
		return nil
	}
	out := new(FrontdoorProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FrontdoorProfile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorProfileInitParameters) DeepCopyInto(out *FrontdoorProfileInitParameters) {
	*out = *in
	if in.ResponseTimeoutSeconds != nil {
		in, out := &in.ResponseTimeoutSeconds, &out.ResponseTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorProfileInitParameters.
func (in *FrontdoorProfileInitParameters) DeepCopy() *FrontdoorProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(FrontdoorProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorProfileList) DeepCopyInto(out *FrontdoorProfileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FrontdoorProfile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorProfileList.
func (in *FrontdoorProfileList) DeepCopy() *FrontdoorProfileList {
	if in == nil {
		return nil
	}
	out := new(FrontdoorProfileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FrontdoorProfileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorProfileObservation) DeepCopyInto(out *FrontdoorProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGUID != nil {
		in, out := &in.ResourceGUID, &out.ResourceGUID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResponseTimeoutSeconds != nil {
		in, out := &in.ResponseTimeoutSeconds, &out.ResponseTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorProfileObservation.
func (in *FrontdoorProfileObservation) DeepCopy() *FrontdoorProfileObservation {
	if in == nil {
		return nil
	}
	out := new(FrontdoorProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorProfileParameters) DeepCopyInto(out *FrontdoorProfileParameters) {
	*out = *in
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResponseTimeoutSeconds != nil {
		in, out := &in.ResponseTimeoutSeconds, &out.ResponseTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorProfileParameters.
func (in *FrontdoorProfileParameters) DeepCopy() *FrontdoorProfileParameters {
	if in == nil {
		return nil
	}
	out := new(FrontdoorProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorProfileSpec) DeepCopyInto(out *FrontdoorProfileSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorProfileSpec.
func (in *FrontdoorProfileSpec) DeepCopy() *FrontdoorProfileSpec {
	if in == nil {
		return nil
	}
	out := new(FrontdoorProfileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorProfileStatus) DeepCopyInto(out *FrontdoorProfileStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorProfileStatus.
func (in *FrontdoorProfileStatus) DeepCopy() *FrontdoorProfileStatus {
	if in == nil {
		return nil
	}
	out := new(FrontdoorProfileStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorRoute) DeepCopyInto(out *FrontdoorRoute) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorRoute.
func (in *FrontdoorRoute) DeepCopy() *FrontdoorRoute {
	if in == nil {
		return nil
	}
	out := new(FrontdoorRoute)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FrontdoorRoute) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorRouteInitParameters) DeepCopyInto(out *FrontdoorRouteInitParameters) {
	*out = *in
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = make([]CacheInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CdnFrontdoorOriginPath != nil {
		in, out := &in.CdnFrontdoorOriginPath, &out.CdnFrontdoorOriginPath
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ForwardingProtocol != nil {
		in, out := &in.ForwardingProtocol, &out.ForwardingProtocol
		*out = new(string)
		**out = **in
	}
	if in.HTTPSRedirectEnabled != nil {
		in, out := &in.HTTPSRedirectEnabled, &out.HTTPSRedirectEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LinkToDefaultDomain != nil {
		in, out := &in.LinkToDefaultDomain, &out.LinkToDefaultDomain
		*out = new(bool)
		**out = **in
	}
	if in.PatternsToMatch != nil {
		in, out := &in.PatternsToMatch, &out.PatternsToMatch
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportedProtocols != nil {
		in, out := &in.SupportedProtocols, &out.SupportedProtocols
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorRouteInitParameters.
func (in *FrontdoorRouteInitParameters) DeepCopy() *FrontdoorRouteInitParameters {
	if in == nil {
		return nil
	}
	out := new(FrontdoorRouteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorRouteList) DeepCopyInto(out *FrontdoorRouteList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FrontdoorRoute, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorRouteList.
func (in *FrontdoorRouteList) DeepCopy() *FrontdoorRouteList {
	if in == nil {
		return nil
	}
	out := new(FrontdoorRouteList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FrontdoorRouteList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorRouteObservation) DeepCopyInto(out *FrontdoorRouteObservation) {
	*out = *in
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = make([]CacheObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CdnFrontdoorCustomDomainIds != nil {
		in, out := &in.CdnFrontdoorCustomDomainIds, &out.CdnFrontdoorCustomDomainIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CdnFrontdoorEndpointID != nil {
		in, out := &in.CdnFrontdoorEndpointID, &out.CdnFrontdoorEndpointID
		*out = new(string)
		**out = **in
	}
	if in.CdnFrontdoorOriginGroupID != nil {
		in, out := &in.CdnFrontdoorOriginGroupID, &out.CdnFrontdoorOriginGroupID
		*out = new(string)
		**out = **in
	}
	if in.CdnFrontdoorOriginIds != nil {
		in, out := &in.CdnFrontdoorOriginIds, &out.CdnFrontdoorOriginIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CdnFrontdoorOriginPath != nil {
		in, out := &in.CdnFrontdoorOriginPath, &out.CdnFrontdoorOriginPath
		*out = new(string)
		**out = **in
	}
	if in.CdnFrontdoorRuleSetIds != nil {
		in, out := &in.CdnFrontdoorRuleSetIds, &out.CdnFrontdoorRuleSetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ForwardingProtocol != nil {
		in, out := &in.ForwardingProtocol, &out.ForwardingProtocol
		*out = new(string)
		**out = **in
	}
	if in.HTTPSRedirectEnabled != nil {
		in, out := &in.HTTPSRedirectEnabled, &out.HTTPSRedirectEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LinkToDefaultDomain != nil {
		in, out := &in.LinkToDefaultDomain, &out.LinkToDefaultDomain
		*out = new(bool)
		**out = **in
	}
	if in.PatternsToMatch != nil {
		in, out := &in.PatternsToMatch, &out.PatternsToMatch
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportedProtocols != nil {
		in, out := &in.SupportedProtocols, &out.SupportedProtocols
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorRouteObservation.
func (in *FrontdoorRouteObservation) DeepCopy() *FrontdoorRouteObservation {
	if in == nil {
		return nil
	}
	out := new(FrontdoorRouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorRouteParameters) DeepCopyInto(out *FrontdoorRouteParameters) {
	*out = *in
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = make([]CacheParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CdnFrontdoorCustomDomainIds != nil {
		in, out := &in.CdnFrontdoorCustomDomainIds, &out.CdnFrontdoorCustomDomainIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CdnFrontdoorCustomDomainIdsRefs != nil {
		in, out := &in.CdnFrontdoorCustomDomainIdsRefs, &out.CdnFrontdoorCustomDomainIdsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CdnFrontdoorCustomDomainIdsSelector != nil {
		in, out := &in.CdnFrontdoorCustomDomainIdsSelector, &out.CdnFrontdoorCustomDomainIdsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CdnFrontdoorEndpointID != nil {
		in, out := &in.CdnFrontdoorEndpointID, &out.CdnFrontdoorEndpointID
		*out = new(string)
		**out = **in
	}
	if in.CdnFrontdoorEndpointIDRef != nil {
		in, out := &in.CdnFrontdoorEndpointIDRef, &out.CdnFrontdoorEndpointIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CdnFrontdoorEndpointIDSelector != nil {
		in, out := &in.CdnFrontdoorEndpointIDSelector, &out.CdnFrontdoorEndpointIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CdnFrontdoorOriginGroupID != nil {
		in, out := &in.CdnFrontdoorOriginGroupID, &out.CdnFrontdoorOriginGroupID
		*out = new(string)
		**out = **in
	}
	if in.CdnFrontdoorOriginGroupIDRef != nil {
		in, out := &in.CdnFrontdoorOriginGroupIDRef, &out.CdnFrontdoorOriginGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CdnFrontdoorOriginGroupIDSelector != nil {
		in, out := &in.CdnFrontdoorOriginGroupIDSelector, &out.CdnFrontdoorOriginGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CdnFrontdoorOriginIds != nil {
		in, out := &in.CdnFrontdoorOriginIds, &out.CdnFrontdoorOriginIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CdnFrontdoorOriginIdsRefs != nil {
		in, out := &in.CdnFrontdoorOriginIdsRefs, &out.CdnFrontdoorOriginIdsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CdnFrontdoorOriginIdsSelector != nil {
		in, out := &in.CdnFrontdoorOriginIdsSelector, &out.CdnFrontdoorOriginIdsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CdnFrontdoorOriginPath != nil {
		in, out := &in.CdnFrontdoorOriginPath, &out.CdnFrontdoorOriginPath
		*out = new(string)
		**out = **in
	}
	if in.CdnFrontdoorRuleSetIds != nil {
		in, out := &in.CdnFrontdoorRuleSetIds, &out.CdnFrontdoorRuleSetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CdnFrontdoorRuleSetIdsRefs != nil {
		in, out := &in.CdnFrontdoorRuleSetIdsRefs, &out.CdnFrontdoorRuleSetIdsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CdnFrontdoorRuleSetIdsSelector != nil {
		in, out := &in.CdnFrontdoorRuleSetIdsSelector, &out.CdnFrontdoorRuleSetIdsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ForwardingProtocol != nil {
		in, out := &in.ForwardingProtocol, &out.ForwardingProtocol
		*out = new(string)
		**out = **in
	}
	if in.HTTPSRedirectEnabled != nil {
		in, out := &in.HTTPSRedirectEnabled, &out.HTTPSRedirectEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LinkToDefaultDomain != nil {
		in, out := &in.LinkToDefaultDomain, &out.LinkToDefaultDomain
		*out = new(bool)
		**out = **in
	}
	if in.PatternsToMatch != nil {
		in, out := &in.PatternsToMatch, &out.PatternsToMatch
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportedProtocols != nil {
		in, out := &in.SupportedProtocols, &out.SupportedProtocols
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorRouteParameters.
func (in *FrontdoorRouteParameters) DeepCopy() *FrontdoorRouteParameters {
	if in == nil {
		return nil
	}
	out := new(FrontdoorRouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorRouteSpec) DeepCopyInto(out *FrontdoorRouteSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorRouteSpec.
func (in *FrontdoorRouteSpec) DeepCopy() *FrontdoorRouteSpec {
	if in == nil {
		return nil
	}
	out := new(FrontdoorRouteSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorRouteStatus) DeepCopyInto(out *FrontdoorRouteStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorRouteStatus.
func (in *FrontdoorRouteStatus) DeepCopy() *FrontdoorRouteStatus {
	if in == nil {
		return nil
	}
	out := new(FrontdoorRouteStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorRule) DeepCopyInto(out *FrontdoorRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorRule.
func (in *FrontdoorRule) DeepCopy() *FrontdoorRule {
	if in == nil {
		return nil
	}
	out := new(FrontdoorRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FrontdoorRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorRuleInitParameters) DeepCopyInto(out *FrontdoorRuleInitParameters) {
	*out = *in
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make([]ActionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BehaviorOnMatch != nil {
		in, out := &in.BehaviorOnMatch, &out.BehaviorOnMatch
		*out = new(string)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorRuleInitParameters.
func (in *FrontdoorRuleInitParameters) DeepCopy() *FrontdoorRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(FrontdoorRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorRuleList) DeepCopyInto(out *FrontdoorRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FrontdoorRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorRuleList.
func (in *FrontdoorRuleList) DeepCopy() *FrontdoorRuleList {
	if in == nil {
		return nil
	}
	out := new(FrontdoorRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FrontdoorRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorRuleObservation) DeepCopyInto(out *FrontdoorRuleObservation) {
	*out = *in
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make([]ActionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BehaviorOnMatch != nil {
		in, out := &in.BehaviorOnMatch, &out.BehaviorOnMatch
		*out = new(string)
		**out = **in
	}
	if in.CdnFrontdoorRuleSetID != nil {
		in, out := &in.CdnFrontdoorRuleSetID, &out.CdnFrontdoorRuleSetID
		*out = new(string)
		**out = **in
	}
	if in.CdnFrontdoorRuleSetName != nil {
		in, out := &in.CdnFrontdoorRuleSetName, &out.CdnFrontdoorRuleSetName
		*out = new(string)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorRuleObservation.
func (in *FrontdoorRuleObservation) DeepCopy() *FrontdoorRuleObservation {
	if in == nil {
		return nil
	}
	out := new(FrontdoorRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorRuleParameters) DeepCopyInto(out *FrontdoorRuleParameters) {
	*out = *in
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make([]ActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BehaviorOnMatch != nil {
		in, out := &in.BehaviorOnMatch, &out.BehaviorOnMatch
		*out = new(string)
		**out = **in
	}
	if in.CdnFrontdoorRuleSetID != nil {
		in, out := &in.CdnFrontdoorRuleSetID, &out.CdnFrontdoorRuleSetID
		*out = new(string)
		**out = **in
	}
	if in.CdnFrontdoorRuleSetIDRef != nil {
		in, out := &in.CdnFrontdoorRuleSetIDRef, &out.CdnFrontdoorRuleSetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CdnFrontdoorRuleSetIDSelector != nil {
		in, out := &in.CdnFrontdoorRuleSetIDSelector, &out.CdnFrontdoorRuleSetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorRuleParameters.
func (in *FrontdoorRuleParameters) DeepCopy() *FrontdoorRuleParameters {
	if in == nil {
		return nil
	}
	out := new(FrontdoorRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorRuleSet) DeepCopyInto(out *FrontdoorRuleSet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorRuleSet.
func (in *FrontdoorRuleSet) DeepCopy() *FrontdoorRuleSet {
	if in == nil {
		return nil
	}
	out := new(FrontdoorRuleSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FrontdoorRuleSet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorRuleSetInitParameters) DeepCopyInto(out *FrontdoorRuleSetInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorRuleSetInitParameters.
func (in *FrontdoorRuleSetInitParameters) DeepCopy() *FrontdoorRuleSetInitParameters {
	if in == nil {
		return nil
	}
	out := new(FrontdoorRuleSetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorRuleSetList) DeepCopyInto(out *FrontdoorRuleSetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FrontdoorRuleSet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorRuleSetList.
func (in *FrontdoorRuleSetList) DeepCopy() *FrontdoorRuleSetList {
	if in == nil {
		return nil
	}
	out := new(FrontdoorRuleSetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FrontdoorRuleSetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorRuleSetObservation) DeepCopyInto(out *FrontdoorRuleSetObservation) {
	*out = *in
	if in.CdnFrontdoorProfileID != nil {
		in, out := &in.CdnFrontdoorProfileID, &out.CdnFrontdoorProfileID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorRuleSetObservation.
func (in *FrontdoorRuleSetObservation) DeepCopy() *FrontdoorRuleSetObservation {
	if in == nil {
		return nil
	}
	out := new(FrontdoorRuleSetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorRuleSetParameters) DeepCopyInto(out *FrontdoorRuleSetParameters) {
	*out = *in
	if in.CdnFrontdoorProfileID != nil {
		in, out := &in.CdnFrontdoorProfileID, &out.CdnFrontdoorProfileID
		*out = new(string)
		**out = **in
	}
	if in.CdnFrontdoorProfileIDRef != nil {
		in, out := &in.CdnFrontdoorProfileIDRef, &out.CdnFrontdoorProfileIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CdnFrontdoorProfileIDSelector != nil {
		in, out := &in.CdnFrontdoorProfileIDSelector, &out.CdnFrontdoorProfileIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorRuleSetParameters.
func (in *FrontdoorRuleSetParameters) DeepCopy() *FrontdoorRuleSetParameters {
	if in == nil {
		return nil
	}
	out := new(FrontdoorRuleSetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorRuleSetSpec) DeepCopyInto(out *FrontdoorRuleSetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	out.InitProvider = in.InitProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorRuleSetSpec.
func (in *FrontdoorRuleSetSpec) DeepCopy() *FrontdoorRuleSetSpec {
	if in == nil {
		return nil
	}
	out := new(FrontdoorRuleSetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorRuleSetStatus) DeepCopyInto(out *FrontdoorRuleSetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorRuleSetStatus.
func (in *FrontdoorRuleSetStatus) DeepCopy() *FrontdoorRuleSetStatus {
	if in == nil {
		return nil
	}
	out := new(FrontdoorRuleSetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorRuleSpec) DeepCopyInto(out *FrontdoorRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorRuleSpec.
func (in *FrontdoorRuleSpec) DeepCopy() *FrontdoorRuleSpec {
	if in == nil {
		return nil
	}
	out := new(FrontdoorRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorRuleStatus) DeepCopyInto(out *FrontdoorRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorRuleStatus.
func (in *FrontdoorRuleStatus) DeepCopy() *FrontdoorRuleStatus {
	if in == nil {
		return nil
	}
	out := new(FrontdoorRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeoFilterInitParameters) DeepCopyInto(out *GeoFilterInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.CountryCodes != nil {
		in, out := &in.CountryCodes, &out.CountryCodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RelativePath != nil {
		in, out := &in.RelativePath, &out.RelativePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeoFilterInitParameters.
func (in *GeoFilterInitParameters) DeepCopy() *GeoFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(GeoFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeoFilterObservation) DeepCopyInto(out *GeoFilterObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.CountryCodes != nil {
		in, out := &in.CountryCodes, &out.CountryCodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RelativePath != nil {
		in, out := &in.RelativePath, &out.RelativePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeoFilterObservation.
func (in *GeoFilterObservation) DeepCopy() *GeoFilterObservation {
	if in == nil {
		return nil
	}
	out := new(GeoFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeoFilterParameters) DeepCopyInto(out *GeoFilterParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.CountryCodes != nil {
		in, out := &in.CountryCodes, &out.CountryCodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RelativePath != nil {
		in, out := &in.RelativePath, &out.RelativePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeoFilterParameters.
func (in *GeoFilterParameters) DeepCopy() *GeoFilterParameters {
	if in == nil {
		return nil
	}
	out := new(GeoFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalDeliveryRuleCacheExpirationActionInitParameters) DeepCopyInto(out *GlobalDeliveryRuleCacheExpirationActionInitParameters) {
	*out = *in
	if in.Behavior != nil {
		in, out := &in.Behavior, &out.Behavior
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalDeliveryRuleCacheExpirationActionInitParameters.
func (in *GlobalDeliveryRuleCacheExpirationActionInitParameters) DeepCopy() *GlobalDeliveryRuleCacheExpirationActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalDeliveryRuleCacheExpirationActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalDeliveryRuleCacheExpirationActionObservation) DeepCopyInto(out *GlobalDeliveryRuleCacheExpirationActionObservation) {
	*out = *in
	if in.Behavior != nil {
		in, out := &in.Behavior, &out.Behavior
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalDeliveryRuleCacheExpirationActionObservation.
func (in *GlobalDeliveryRuleCacheExpirationActionObservation) DeepCopy() *GlobalDeliveryRuleCacheExpirationActionObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalDeliveryRuleCacheExpirationActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalDeliveryRuleCacheExpirationActionParameters) DeepCopyInto(out *GlobalDeliveryRuleCacheExpirationActionParameters) {
	*out = *in
	if in.Behavior != nil {
		in, out := &in.Behavior, &out.Behavior
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalDeliveryRuleCacheExpirationActionParameters.
func (in *GlobalDeliveryRuleCacheExpirationActionParameters) DeepCopy() *GlobalDeliveryRuleCacheExpirationActionParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalDeliveryRuleCacheExpirationActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalDeliveryRuleCacheKeyQueryStringActionInitParameters) DeepCopyInto(out *GlobalDeliveryRuleCacheKeyQueryStringActionInitParameters) {
	*out = *in
	if in.Behavior != nil {
		in, out := &in.Behavior, &out.Behavior
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalDeliveryRuleCacheKeyQueryStringActionInitParameters.
func (in *GlobalDeliveryRuleCacheKeyQueryStringActionInitParameters) DeepCopy() *GlobalDeliveryRuleCacheKeyQueryStringActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalDeliveryRuleCacheKeyQueryStringActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalDeliveryRuleCacheKeyQueryStringActionObservation) DeepCopyInto(out *GlobalDeliveryRuleCacheKeyQueryStringActionObservation) {
	*out = *in
	if in.Behavior != nil {
		in, out := &in.Behavior, &out.Behavior
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalDeliveryRuleCacheKeyQueryStringActionObservation.
func (in *GlobalDeliveryRuleCacheKeyQueryStringActionObservation) DeepCopy() *GlobalDeliveryRuleCacheKeyQueryStringActionObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalDeliveryRuleCacheKeyQueryStringActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalDeliveryRuleCacheKeyQueryStringActionParameters) DeepCopyInto(out *GlobalDeliveryRuleCacheKeyQueryStringActionParameters) {
	*out = *in
	if in.Behavior != nil {
		in, out := &in.Behavior, &out.Behavior
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalDeliveryRuleCacheKeyQueryStringActionParameters.
func (in *GlobalDeliveryRuleCacheKeyQueryStringActionParameters) DeepCopy() *GlobalDeliveryRuleCacheKeyQueryStringActionParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalDeliveryRuleCacheKeyQueryStringActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalDeliveryRuleInitParameters) DeepCopyInto(out *GlobalDeliveryRuleInitParameters) {
	*out = *in
	if in.CacheExpirationAction != nil {
		in, out := &in.CacheExpirationAction, &out.CacheExpirationAction
		*out = make([]GlobalDeliveryRuleCacheExpirationActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheKeyQueryStringAction != nil {
		in, out := &in.CacheKeyQueryStringAction, &out.CacheKeyQueryStringAction
		*out = make([]GlobalDeliveryRuleCacheKeyQueryStringActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ModifyRequestHeaderAction != nil {
		in, out := &in.ModifyRequestHeaderAction, &out.ModifyRequestHeaderAction
		*out = make([]GlobalDeliveryRuleModifyRequestHeaderActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ModifyResponseHeaderAction != nil {
		in, out := &in.ModifyResponseHeaderAction, &out.ModifyResponseHeaderAction
		*out = make([]GlobalDeliveryRuleModifyResponseHeaderActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRedirectAction != nil {
		in, out := &in.URLRedirectAction, &out.URLRedirectAction
		*out = make([]GlobalDeliveryRuleURLRedirectActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewriteAction != nil {
		in, out := &in.URLRewriteAction, &out.URLRewriteAction
		*out = make([]GlobalDeliveryRuleURLRewriteActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalDeliveryRuleInitParameters.
func (in *GlobalDeliveryRuleInitParameters) DeepCopy() *GlobalDeliveryRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalDeliveryRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalDeliveryRuleModifyRequestHeaderActionInitParameters) DeepCopyInto(out *GlobalDeliveryRuleModifyRequestHeaderActionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalDeliveryRuleModifyRequestHeaderActionInitParameters.
func (in *GlobalDeliveryRuleModifyRequestHeaderActionInitParameters) DeepCopy() *GlobalDeliveryRuleModifyRequestHeaderActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalDeliveryRuleModifyRequestHeaderActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalDeliveryRuleModifyRequestHeaderActionObservation) DeepCopyInto(out *GlobalDeliveryRuleModifyRequestHeaderActionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalDeliveryRuleModifyRequestHeaderActionObservation.
func (in *GlobalDeliveryRuleModifyRequestHeaderActionObservation) DeepCopy() *GlobalDeliveryRuleModifyRequestHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalDeliveryRuleModifyRequestHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalDeliveryRuleModifyRequestHeaderActionParameters) DeepCopyInto(out *GlobalDeliveryRuleModifyRequestHeaderActionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalDeliveryRuleModifyRequestHeaderActionParameters.
func (in *GlobalDeliveryRuleModifyRequestHeaderActionParameters) DeepCopy() *GlobalDeliveryRuleModifyRequestHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalDeliveryRuleModifyRequestHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalDeliveryRuleModifyResponseHeaderActionInitParameters) DeepCopyInto(out *GlobalDeliveryRuleModifyResponseHeaderActionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalDeliveryRuleModifyResponseHeaderActionInitParameters.
func (in *GlobalDeliveryRuleModifyResponseHeaderActionInitParameters) DeepCopy() *GlobalDeliveryRuleModifyResponseHeaderActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalDeliveryRuleModifyResponseHeaderActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalDeliveryRuleModifyResponseHeaderActionObservation) DeepCopyInto(out *GlobalDeliveryRuleModifyResponseHeaderActionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalDeliveryRuleModifyResponseHeaderActionObservation.
func (in *GlobalDeliveryRuleModifyResponseHeaderActionObservation) DeepCopy() *GlobalDeliveryRuleModifyResponseHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalDeliveryRuleModifyResponseHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalDeliveryRuleModifyResponseHeaderActionParameters) DeepCopyInto(out *GlobalDeliveryRuleModifyResponseHeaderActionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalDeliveryRuleModifyResponseHeaderActionParameters.
func (in *GlobalDeliveryRuleModifyResponseHeaderActionParameters) DeepCopy() *GlobalDeliveryRuleModifyResponseHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalDeliveryRuleModifyResponseHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalDeliveryRuleObservation) DeepCopyInto(out *GlobalDeliveryRuleObservation) {
	*out = *in
	if in.CacheExpirationAction != nil {
		in, out := &in.CacheExpirationAction, &out.CacheExpirationAction
		*out = make([]GlobalDeliveryRuleCacheExpirationActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheKeyQueryStringAction != nil {
		in, out := &in.CacheKeyQueryStringAction, &out.CacheKeyQueryStringAction
		*out = make([]GlobalDeliveryRuleCacheKeyQueryStringActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ModifyRequestHeaderAction != nil {
		in, out := &in.ModifyRequestHeaderAction, &out.ModifyRequestHeaderAction
		*out = make([]GlobalDeliveryRuleModifyRequestHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ModifyResponseHeaderAction != nil {
		in, out := &in.ModifyResponseHeaderAction, &out.ModifyResponseHeaderAction
		*out = make([]GlobalDeliveryRuleModifyResponseHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRedirectAction != nil {
		in, out := &in.URLRedirectAction, &out.URLRedirectAction
		*out = make([]GlobalDeliveryRuleURLRedirectActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewriteAction != nil {
		in, out := &in.URLRewriteAction, &out.URLRewriteAction
		*out = make([]GlobalDeliveryRuleURLRewriteActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalDeliveryRuleObservation.
func (in *GlobalDeliveryRuleObservation) DeepCopy() *GlobalDeliveryRuleObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalDeliveryRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalDeliveryRuleParameters) DeepCopyInto(out *GlobalDeliveryRuleParameters) {
	*out = *in
	if in.CacheExpirationAction != nil {
		in, out := &in.CacheExpirationAction, &out.CacheExpirationAction
		*out = make([]GlobalDeliveryRuleCacheExpirationActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheKeyQueryStringAction != nil {
		in, out := &in.CacheKeyQueryStringAction, &out.CacheKeyQueryStringAction
		*out = make([]GlobalDeliveryRuleCacheKeyQueryStringActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ModifyRequestHeaderAction != nil {
		in, out := &in.ModifyRequestHeaderAction, &out.ModifyRequestHeaderAction
		*out = make([]GlobalDeliveryRuleModifyRequestHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ModifyResponseHeaderAction != nil {
		in, out := &in.ModifyResponseHeaderAction, &out.ModifyResponseHeaderAction
		*out = make([]GlobalDeliveryRuleModifyResponseHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRedirectAction != nil {
		in, out := &in.URLRedirectAction, &out.URLRedirectAction
		*out = make([]GlobalDeliveryRuleURLRedirectActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewriteAction != nil {
		in, out := &in.URLRewriteAction, &out.URLRewriteAction
		*out = make([]GlobalDeliveryRuleURLRewriteActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalDeliveryRuleParameters.
func (in *GlobalDeliveryRuleParameters) DeepCopy() *GlobalDeliveryRuleParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalDeliveryRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalDeliveryRuleURLRedirectActionInitParameters) DeepCopyInto(out *GlobalDeliveryRuleURLRedirectActionInitParameters) {
	*out = *in
	if in.Fragment != nil {
		in, out := &in.Fragment, &out.Fragment
		*out = new(string)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.QueryString != nil {
		in, out := &in.QueryString, &out.QueryString
		*out = new(string)
		**out = **in
	}
	if in.RedirectType != nil {
		in, out := &in.RedirectType, &out.RedirectType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalDeliveryRuleURLRedirectActionInitParameters.
func (in *GlobalDeliveryRuleURLRedirectActionInitParameters) DeepCopy() *GlobalDeliveryRuleURLRedirectActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalDeliveryRuleURLRedirectActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalDeliveryRuleURLRedirectActionObservation) DeepCopyInto(out *GlobalDeliveryRuleURLRedirectActionObservation) {
	*out = *in
	if in.Fragment != nil {
		in, out := &in.Fragment, &out.Fragment
		*out = new(string)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.QueryString != nil {
		in, out := &in.QueryString, &out.QueryString
		*out = new(string)
		**out = **in
	}
	if in.RedirectType != nil {
		in, out := &in.RedirectType, &out.RedirectType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalDeliveryRuleURLRedirectActionObservation.
func (in *GlobalDeliveryRuleURLRedirectActionObservation) DeepCopy() *GlobalDeliveryRuleURLRedirectActionObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalDeliveryRuleURLRedirectActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalDeliveryRuleURLRedirectActionParameters) DeepCopyInto(out *GlobalDeliveryRuleURLRedirectActionParameters) {
	*out = *in
	if in.Fragment != nil {
		in, out := &in.Fragment, &out.Fragment
		*out = new(string)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.QueryString != nil {
		in, out := &in.QueryString, &out.QueryString
		*out = new(string)
		**out = **in
	}
	if in.RedirectType != nil {
		in, out := &in.RedirectType, &out.RedirectType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalDeliveryRuleURLRedirectActionParameters.
func (in *GlobalDeliveryRuleURLRedirectActionParameters) DeepCopy() *GlobalDeliveryRuleURLRedirectActionParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalDeliveryRuleURLRedirectActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalDeliveryRuleURLRewriteActionInitParameters) DeepCopyInto(out *GlobalDeliveryRuleURLRewriteActionInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.PreserveUnmatchedPath != nil {
		in, out := &in.PreserveUnmatchedPath, &out.PreserveUnmatchedPath
		*out = new(bool)
		**out = **in
	}
	if in.SourcePattern != nil {
		in, out := &in.SourcePattern, &out.SourcePattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalDeliveryRuleURLRewriteActionInitParameters.
func (in *GlobalDeliveryRuleURLRewriteActionInitParameters) DeepCopy() *GlobalDeliveryRuleURLRewriteActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalDeliveryRuleURLRewriteActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalDeliveryRuleURLRewriteActionObservation) DeepCopyInto(out *GlobalDeliveryRuleURLRewriteActionObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.PreserveUnmatchedPath != nil {
		in, out := &in.PreserveUnmatchedPath, &out.PreserveUnmatchedPath
		*out = new(bool)
		**out = **in
	}
	if in.SourcePattern != nil {
		in, out := &in.SourcePattern, &out.SourcePattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalDeliveryRuleURLRewriteActionObservation.
func (in *GlobalDeliveryRuleURLRewriteActionObservation) DeepCopy() *GlobalDeliveryRuleURLRewriteActionObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalDeliveryRuleURLRewriteActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalDeliveryRuleURLRewriteActionParameters) DeepCopyInto(out *GlobalDeliveryRuleURLRewriteActionParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.PreserveUnmatchedPath != nil {
		in, out := &in.PreserveUnmatchedPath, &out.PreserveUnmatchedPath
		*out = new(bool)
		**out = **in
	}
	if in.SourcePattern != nil {
		in, out := &in.SourcePattern, &out.SourcePattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalDeliveryRuleURLRewriteActionParameters.
func (in *GlobalDeliveryRuleURLRewriteActionParameters) DeepCopy() *GlobalDeliveryRuleURLRewriteActionParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalDeliveryRuleURLRewriteActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPVersionConditionInitParameters) DeepCopyInto(out *HTTPVersionConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPVersionConditionInitParameters.
func (in *HTTPVersionConditionInitParameters) DeepCopy() *HTTPVersionConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPVersionConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPVersionConditionObservation) DeepCopyInto(out *HTTPVersionConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPVersionConditionObservation.
func (in *HTTPVersionConditionObservation) DeepCopy() *HTTPVersionConditionObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPVersionConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPVersionConditionParameters) DeepCopyInto(out *HTTPVersionConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPVersionConditionParameters.
func (in *HTTPVersionConditionParameters) DeepCopy() *HTTPVersionConditionParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPVersionConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthProbeInitParameters) DeepCopyInto(out *HealthProbeInitParameters) {
	*out = *in
	if in.IntervalInSeconds != nil {
		in, out := &in.IntervalInSeconds, &out.IntervalInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RequestType != nil {
		in, out := &in.RequestType, &out.RequestType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthProbeInitParameters.
func (in *HealthProbeInitParameters) DeepCopy() *HealthProbeInitParameters {
	if in == nil {
		return nil
	}
	out := new(HealthProbeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthProbeObservation) DeepCopyInto(out *HealthProbeObservation) {
	*out = *in
	if in.IntervalInSeconds != nil {
		in, out := &in.IntervalInSeconds, &out.IntervalInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RequestType != nil {
		in, out := &in.RequestType, &out.RequestType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthProbeObservation.
func (in *HealthProbeObservation) DeepCopy() *HealthProbeObservation {
	if in == nil {
		return nil
	}
	out := new(HealthProbeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthProbeParameters) DeepCopyInto(out *HealthProbeParameters) {
	*out = *in
	if in.IntervalInSeconds != nil {
		in, out := &in.IntervalInSeconds, &out.IntervalInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RequestType != nil {
		in, out := &in.RequestType, &out.RequestType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthProbeParameters.
func (in *HealthProbeParameters) DeepCopy() *HealthProbeParameters {
	if in == nil {
		return nil
	}
	out := new(HealthProbeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostNameConditionInitParameters) DeepCopyInto(out *HostNameConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostNameConditionInitParameters.
func (in *HostNameConditionInitParameters) DeepCopy() *HostNameConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(HostNameConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostNameConditionObservation) DeepCopyInto(out *HostNameConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostNameConditionObservation.
func (in *HostNameConditionObservation) DeepCopy() *HostNameConditionObservation {
	if in == nil {
		return nil
	}
	out := new(HostNameConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostNameConditionParameters) DeepCopyInto(out *HostNameConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostNameConditionParameters.
func (in *HostNameConditionParameters) DeepCopy() *HostNameConditionParameters {
	if in == nil {
		return nil
	}
	out := new(HostNameConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IsDeviceConditionInitParameters) DeepCopyInto(out *IsDeviceConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IsDeviceConditionInitParameters.
func (in *IsDeviceConditionInitParameters) DeepCopy() *IsDeviceConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(IsDeviceConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IsDeviceConditionObservation) DeepCopyInto(out *IsDeviceConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IsDeviceConditionObservation.
func (in *IsDeviceConditionObservation) DeepCopy() *IsDeviceConditionObservation {
	if in == nil {
		return nil
	}
	out := new(IsDeviceConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IsDeviceConditionParameters) DeepCopyInto(out *IsDeviceConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IsDeviceConditionParameters.
func (in *IsDeviceConditionParameters) DeepCopy() *IsDeviceConditionParameters {
	if in == nil {
		return nil
	}
	out := new(IsDeviceConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancingInitParameters) DeepCopyInto(out *LoadBalancingInitParameters) {
	*out = *in
	if in.AdditionalLatencyInMilliseconds != nil {
		in, out := &in.AdditionalLatencyInMilliseconds, &out.AdditionalLatencyInMilliseconds
		*out = new(float64)
		**out = **in
	}
	if in.SampleSize != nil {
		in, out := &in.SampleSize, &out.SampleSize
		*out = new(float64)
		**out = **in
	}
	if in.SuccessfulSamplesRequired != nil {
		in, out := &in.SuccessfulSamplesRequired, &out.SuccessfulSamplesRequired
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancingInitParameters.
func (in *LoadBalancingInitParameters) DeepCopy() *LoadBalancingInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancingObservation) DeepCopyInto(out *LoadBalancingObservation) {
	*out = *in
	if in.AdditionalLatencyInMilliseconds != nil {
		in, out := &in.AdditionalLatencyInMilliseconds, &out.AdditionalLatencyInMilliseconds
		*out = new(float64)
		**out = **in
	}
	if in.SampleSize != nil {
		in, out := &in.SampleSize, &out.SampleSize
		*out = new(float64)
		**out = **in
	}
	if in.SuccessfulSamplesRequired != nil {
		in, out := &in.SuccessfulSamplesRequired, &out.SuccessfulSamplesRequired
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancingObservation.
func (in *LoadBalancingObservation) DeepCopy() *LoadBalancingObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancingParameters) DeepCopyInto(out *LoadBalancingParameters) {
	*out = *in
	if in.AdditionalLatencyInMilliseconds != nil {
		in, out := &in.AdditionalLatencyInMilliseconds, &out.AdditionalLatencyInMilliseconds
		*out = new(float64)
		**out = **in
	}
	if in.SampleSize != nil {
		in, out := &in.SampleSize, &out.SampleSize
		*out = new(float64)
		**out = **in
	}
	if in.SuccessfulSamplesRequired != nil {
		in, out := &in.SuccessfulSamplesRequired, &out.SuccessfulSamplesRequired
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancingParameters.
func (in *LoadBalancingParameters) DeepCopy() *LoadBalancingParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModifyRequestHeaderActionInitParameters) DeepCopyInto(out *ModifyRequestHeaderActionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModifyRequestHeaderActionInitParameters.
func (in *ModifyRequestHeaderActionInitParameters) DeepCopy() *ModifyRequestHeaderActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ModifyRequestHeaderActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModifyRequestHeaderActionObservation) DeepCopyInto(out *ModifyRequestHeaderActionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModifyRequestHeaderActionObservation.
func (in *ModifyRequestHeaderActionObservation) DeepCopy() *ModifyRequestHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(ModifyRequestHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModifyRequestHeaderActionParameters) DeepCopyInto(out *ModifyRequestHeaderActionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModifyRequestHeaderActionParameters.
func (in *ModifyRequestHeaderActionParameters) DeepCopy() *ModifyRequestHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(ModifyRequestHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModifyResponseHeaderActionInitParameters) DeepCopyInto(out *ModifyResponseHeaderActionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModifyResponseHeaderActionInitParameters.
func (in *ModifyResponseHeaderActionInitParameters) DeepCopy() *ModifyResponseHeaderActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ModifyResponseHeaderActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModifyResponseHeaderActionObservation) DeepCopyInto(out *ModifyResponseHeaderActionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModifyResponseHeaderActionObservation.
func (in *ModifyResponseHeaderActionObservation) DeepCopy() *ModifyResponseHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(ModifyResponseHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModifyResponseHeaderActionParameters) DeepCopyInto(out *ModifyResponseHeaderActionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModifyResponseHeaderActionParameters.
func (in *ModifyResponseHeaderActionParameters) DeepCopy() *ModifyResponseHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(ModifyResponseHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OriginInitParameters) DeepCopyInto(out *OriginInitParameters) {
	*out = *in
	if in.HTTPPort != nil {
		in, out := &in.HTTPPort, &out.HTTPPort
		*out = new(float64)
		**out = **in
	}
	if in.HTTPSPort != nil {
		in, out := &in.HTTPSPort, &out.HTTPSPort
		*out = new(float64)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OriginInitParameters.
func (in *OriginInitParameters) DeepCopy() *OriginInitParameters {
	if in == nil {
		return nil
	}
	out := new(OriginInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OriginObservation) DeepCopyInto(out *OriginObservation) {
	*out = *in
	if in.HTTPPort != nil {
		in, out := &in.HTTPPort, &out.HTTPPort
		*out = new(float64)
		**out = **in
	}
	if in.HTTPSPort != nil {
		in, out := &in.HTTPSPort, &out.HTTPSPort
		*out = new(float64)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OriginObservation.
func (in *OriginObservation) DeepCopy() *OriginObservation {
	if in == nil {
		return nil
	}
	out := new(OriginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OriginParameters) DeepCopyInto(out *OriginParameters) {
	*out = *in
	if in.HTTPPort != nil {
		in, out := &in.HTTPPort, &out.HTTPPort
		*out = new(float64)
		**out = **in
	}
	if in.HTTPSPort != nil {
		in, out := &in.HTTPSPort, &out.HTTPSPort
		*out = new(float64)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OriginParameters.
func (in *OriginParameters) DeepCopy() *OriginParameters {
	if in == nil {
		return nil
	}
	out := new(OriginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostArgConditionInitParameters) DeepCopyInto(out *PostArgConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostArgConditionInitParameters.
func (in *PostArgConditionInitParameters) DeepCopy() *PostArgConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostArgConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostArgConditionObservation) DeepCopyInto(out *PostArgConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostArgConditionObservation.
func (in *PostArgConditionObservation) DeepCopy() *PostArgConditionObservation {
	if in == nil {
		return nil
	}
	out := new(PostArgConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostArgConditionParameters) DeepCopyInto(out *PostArgConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostArgConditionParameters.
func (in *PostArgConditionParameters) DeepCopy() *PostArgConditionParameters {
	if in == nil {
		return nil
	}
	out := new(PostArgConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostArgsConditionInitParameters) DeepCopyInto(out *PostArgsConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.PostArgsName != nil {
		in, out := &in.PostArgsName, &out.PostArgsName
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostArgsConditionInitParameters.
func (in *PostArgsConditionInitParameters) DeepCopy() *PostArgsConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostArgsConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostArgsConditionObservation) DeepCopyInto(out *PostArgsConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.PostArgsName != nil {
		in, out := &in.PostArgsName, &out.PostArgsName
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostArgsConditionObservation.
func (in *PostArgsConditionObservation) DeepCopy() *PostArgsConditionObservation {
	if in == nil {
		return nil
	}
	out := new(PostArgsConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostArgsConditionParameters) DeepCopyInto(out *PostArgsConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.PostArgsName != nil {
		in, out := &in.PostArgsName, &out.PostArgsName
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostArgsConditionParameters.
func (in *PostArgsConditionParameters) DeepCopy() *PostArgsConditionParameters {
	if in == nil {
		return nil
	}
	out := new(PostArgsConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkInitParameters) DeepCopyInto(out *PrivateLinkInitParameters) {
	*out = *in
	if in.RequestMessage != nil {
		in, out := &in.RequestMessage, &out.RequestMessage
		*out = new(string)
		**out = **in
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkInitParameters.
func (in *PrivateLinkInitParameters) DeepCopy() *PrivateLinkInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkObservation) DeepCopyInto(out *PrivateLinkObservation) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkTargetID != nil {
		in, out := &in.PrivateLinkTargetID, &out.PrivateLinkTargetID
		*out = new(string)
		**out = **in
	}
	if in.RequestMessage != nil {
		in, out := &in.RequestMessage, &out.RequestMessage
		*out = new(string)
		**out = **in
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkObservation.
func (in *PrivateLinkObservation) DeepCopy() *PrivateLinkObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkParameters) DeepCopyInto(out *PrivateLinkParameters) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.LocationRef != nil {
		in, out := &in.LocationRef, &out.LocationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LocationSelector != nil {
		in, out := &in.LocationSelector, &out.LocationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateLinkTargetID != nil {
		in, out := &in.PrivateLinkTargetID, &out.PrivateLinkTargetID
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkTargetIDRef != nil {
		in, out := &in.PrivateLinkTargetIDRef, &out.PrivateLinkTargetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateLinkTargetIDSelector != nil {
		in, out := &in.PrivateLinkTargetIDSelector, &out.PrivateLinkTargetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RequestMessage != nil {
		in, out := &in.RequestMessage, &out.RequestMessage
		*out = new(string)
		**out = **in
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkParameters.
func (in *PrivateLinkParameters) DeepCopy() *PrivateLinkParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Profile) DeepCopyInto(out *Profile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Profile.
func (in *Profile) DeepCopy() *Profile {
	if in == nil {
		return nil
	}
	out := new(Profile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Profile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileInitParameters) DeepCopyInto(out *ProfileInitParameters) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileInitParameters.
func (in *ProfileInitParameters) DeepCopy() *ProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileList) DeepCopyInto(out *ProfileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Profile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileList.
func (in *ProfileList) DeepCopy() *ProfileList {
	if in == nil {
		return nil
	}
	out := new(ProfileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProfileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileObservation) DeepCopyInto(out *ProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileObservation.
func (in *ProfileObservation) DeepCopy() *ProfileObservation {
	if in == nil {
		return nil
	}
	out := new(ProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileParameters) DeepCopyInto(out *ProfileParameters) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileParameters.
func (in *ProfileParameters) DeepCopy() *ProfileParameters {
	if in == nil {
		return nil
	}
	out := new(ProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileSpec) DeepCopyInto(out *ProfileSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileSpec.
func (in *ProfileSpec) DeepCopy() *ProfileSpec {
	if in == nil {
		return nil
	}
	out := new(ProfileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileStatus) DeepCopyInto(out *ProfileStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileStatus.
func (in *ProfileStatus) DeepCopy() *ProfileStatus {
	if in == nil {
		return nil
	}
	out := new(ProfileStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryStringConditionInitParameters) DeepCopyInto(out *QueryStringConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryStringConditionInitParameters.
func (in *QueryStringConditionInitParameters) DeepCopy() *QueryStringConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueryStringConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryStringConditionObservation) DeepCopyInto(out *QueryStringConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryStringConditionObservation.
func (in *QueryStringConditionObservation) DeepCopy() *QueryStringConditionObservation {
	if in == nil {
		return nil
	}
	out := new(QueryStringConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryStringConditionParameters) DeepCopyInto(out *QueryStringConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryStringConditionParameters.
func (in *QueryStringConditionParameters) DeepCopy() *QueryStringConditionParameters {
	if in == nil {
		return nil
	}
	out := new(QueryStringConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteAddressConditionInitParameters) DeepCopyInto(out *RemoteAddressConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteAddressConditionInitParameters.
func (in *RemoteAddressConditionInitParameters) DeepCopy() *RemoteAddressConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RemoteAddressConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteAddressConditionObservation) DeepCopyInto(out *RemoteAddressConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteAddressConditionObservation.
func (in *RemoteAddressConditionObservation) DeepCopy() *RemoteAddressConditionObservation {
	if in == nil {
		return nil
	}
	out := new(RemoteAddressConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteAddressConditionParameters) DeepCopyInto(out *RemoteAddressConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteAddressConditionParameters.
func (in *RemoteAddressConditionParameters) DeepCopy() *RemoteAddressConditionParameters {
	if in == nil {
		return nil
	}
	out := new(RemoteAddressConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestBodyConditionInitParameters) DeepCopyInto(out *RequestBodyConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestBodyConditionInitParameters.
func (in *RequestBodyConditionInitParameters) DeepCopy() *RequestBodyConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestBodyConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestBodyConditionObservation) DeepCopyInto(out *RequestBodyConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestBodyConditionObservation.
func (in *RequestBodyConditionObservation) DeepCopy() *RequestBodyConditionObservation {
	if in == nil {
		return nil
	}
	out := new(RequestBodyConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestBodyConditionParameters) DeepCopyInto(out *RequestBodyConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestBodyConditionParameters.
func (in *RequestBodyConditionParameters) DeepCopy() *RequestBodyConditionParameters {
	if in == nil {
		return nil
	}
	out := new(RequestBodyConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestHeaderActionInitParameters) DeepCopyInto(out *RequestHeaderActionInitParameters) {
	*out = *in
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = new(string)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestHeaderActionInitParameters.
func (in *RequestHeaderActionInitParameters) DeepCopy() *RequestHeaderActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestHeaderActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestHeaderActionObservation) DeepCopyInto(out *RequestHeaderActionObservation) {
	*out = *in
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = new(string)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestHeaderActionObservation.
func (in *RequestHeaderActionObservation) DeepCopy() *RequestHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(RequestHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestHeaderActionParameters) DeepCopyInto(out *RequestHeaderActionParameters) {
	*out = *in
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = new(string)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestHeaderActionParameters.
func (in *RequestHeaderActionParameters) DeepCopy() *RequestHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(RequestHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestHeaderConditionInitParameters) DeepCopyInto(out *RequestHeaderConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestHeaderConditionInitParameters.
func (in *RequestHeaderConditionInitParameters) DeepCopy() *RequestHeaderConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestHeaderConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestHeaderConditionObservation) DeepCopyInto(out *RequestHeaderConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestHeaderConditionObservation.
func (in *RequestHeaderConditionObservation) DeepCopy() *RequestHeaderConditionObservation {
	if in == nil {
		return nil
	}
	out := new(RequestHeaderConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestHeaderConditionParameters) DeepCopyInto(out *RequestHeaderConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestHeaderConditionParameters.
func (in *RequestHeaderConditionParameters) DeepCopy() *RequestHeaderConditionParameters {
	if in == nil {
		return nil
	}
	out := new(RequestHeaderConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestMethodConditionInitParameters) DeepCopyInto(out *RequestMethodConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestMethodConditionInitParameters.
func (in *RequestMethodConditionInitParameters) DeepCopy() *RequestMethodConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestMethodConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestMethodConditionObservation) DeepCopyInto(out *RequestMethodConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestMethodConditionObservation.
func (in *RequestMethodConditionObservation) DeepCopy() *RequestMethodConditionObservation {
	if in == nil {
		return nil
	}
	out := new(RequestMethodConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestMethodConditionParameters) DeepCopyInto(out *RequestMethodConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestMethodConditionParameters.
func (in *RequestMethodConditionParameters) DeepCopy() *RequestMethodConditionParameters {
	if in == nil {
		return nil
	}
	out := new(RequestMethodConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestSchemeConditionInitParameters) DeepCopyInto(out *RequestSchemeConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestSchemeConditionInitParameters.
func (in *RequestSchemeConditionInitParameters) DeepCopy() *RequestSchemeConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestSchemeConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestSchemeConditionObservation) DeepCopyInto(out *RequestSchemeConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestSchemeConditionObservation.
func (in *RequestSchemeConditionObservation) DeepCopy() *RequestSchemeConditionObservation {
	if in == nil {
		return nil
	}
	out := new(RequestSchemeConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestSchemeConditionParameters) DeepCopyInto(out *RequestSchemeConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestSchemeConditionParameters.
func (in *RequestSchemeConditionParameters) DeepCopy() *RequestSchemeConditionParameters {
	if in == nil {
		return nil
	}
	out := new(RequestSchemeConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestURIConditionInitParameters) DeepCopyInto(out *RequestURIConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestURIConditionInitParameters.
func (in *RequestURIConditionInitParameters) DeepCopy() *RequestURIConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestURIConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestURIConditionObservation) DeepCopyInto(out *RequestURIConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestURIConditionObservation.
func (in *RequestURIConditionObservation) DeepCopy() *RequestURIConditionObservation {
	if in == nil {
		return nil
	}
	out := new(RequestURIConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestURIConditionParameters) DeepCopyInto(out *RequestURIConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestURIConditionParameters.
func (in *RequestURIConditionParameters) DeepCopy() *RequestURIConditionParameters {
	if in == nil {
		return nil
	}
	out := new(RequestURIConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseHeaderActionInitParameters) DeepCopyInto(out *ResponseHeaderActionInitParameters) {
	*out = *in
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = new(string)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseHeaderActionInitParameters.
func (in *ResponseHeaderActionInitParameters) DeepCopy() *ResponseHeaderActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResponseHeaderActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseHeaderActionObservation) DeepCopyInto(out *ResponseHeaderActionObservation) {
	*out = *in
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = new(string)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseHeaderActionObservation.
func (in *ResponseHeaderActionObservation) DeepCopy() *ResponseHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(ResponseHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseHeaderActionParameters) DeepCopyInto(out *ResponseHeaderActionParameters) {
	*out = *in
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = new(string)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseHeaderActionParameters.
func (in *ResponseHeaderActionParameters) DeepCopy() *ResponseHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(ResponseHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteConfigurationOverrideActionInitParameters) DeepCopyInto(out *RouteConfigurationOverrideActionInitParameters) {
	*out = *in
	if in.CacheBehavior != nil {
		in, out := &in.CacheBehavior, &out.CacheBehavior
		*out = new(string)
		**out = **in
	}
	if in.CacheDuration != nil {
		in, out := &in.CacheDuration, &out.CacheDuration
		*out = new(string)
		**out = **in
	}
	if in.CompressionEnabled != nil {
		in, out := &in.CompressionEnabled, &out.CompressionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ForwardingProtocol != nil {
		in, out := &in.ForwardingProtocol, &out.ForwardingProtocol
		*out = new(string)
		**out = **in
	}
	if in.QueryStringCachingBehavior != nil {
		in, out := &in.QueryStringCachingBehavior, &out.QueryStringCachingBehavior
		*out = new(string)
		**out = **in
	}
	if in.QueryStringParameters != nil {
		in, out := &in.QueryStringParameters, &out.QueryStringParameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteConfigurationOverrideActionInitParameters.
func (in *RouteConfigurationOverrideActionInitParameters) DeepCopy() *RouteConfigurationOverrideActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteConfigurationOverrideActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteConfigurationOverrideActionObservation) DeepCopyInto(out *RouteConfigurationOverrideActionObservation) {
	*out = *in
	if in.CacheBehavior != nil {
		in, out := &in.CacheBehavior, &out.CacheBehavior
		*out = new(string)
		**out = **in
	}
	if in.CacheDuration != nil {
		in, out := &in.CacheDuration, &out.CacheDuration
		*out = new(string)
		**out = **in
	}
	if in.CdnFrontdoorOriginGroupID != nil {
		in, out := &in.CdnFrontdoorOriginGroupID, &out.CdnFrontdoorOriginGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompressionEnabled != nil {
		in, out := &in.CompressionEnabled, &out.CompressionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ForwardingProtocol != nil {
		in, out := &in.ForwardingProtocol, &out.ForwardingProtocol
		*out = new(string)
		**out = **in
	}
	if in.QueryStringCachingBehavior != nil {
		in, out := &in.QueryStringCachingBehavior, &out.QueryStringCachingBehavior
		*out = new(string)
		**out = **in
	}
	if in.QueryStringParameters != nil {
		in, out := &in.QueryStringParameters, &out.QueryStringParameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteConfigurationOverrideActionObservation.
func (in *RouteConfigurationOverrideActionObservation) DeepCopy() *RouteConfigurationOverrideActionObservation {
	if in == nil {
		return nil
	}
	out := new(RouteConfigurationOverrideActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteConfigurationOverrideActionParameters) DeepCopyInto(out *RouteConfigurationOverrideActionParameters) {
	*out = *in
	if in.CacheBehavior != nil {
		in, out := &in.CacheBehavior, &out.CacheBehavior
		*out = new(string)
		**out = **in
	}
	if in.CacheDuration != nil {
		in, out := &in.CacheDuration, &out.CacheDuration
		*out = new(string)
		**out = **in
	}
	if in.CdnFrontdoorOriginGroupID != nil {
		in, out := &in.CdnFrontdoorOriginGroupID, &out.CdnFrontdoorOriginGroupID
		*out = new(string)
		**out = **in
	}
	if in.CdnFrontdoorOriginGroupIDRef != nil {
		in, out := &in.CdnFrontdoorOriginGroupIDRef, &out.CdnFrontdoorOriginGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CdnFrontdoorOriginGroupIDSelector != nil {
		in, out := &in.CdnFrontdoorOriginGroupIDSelector, &out.CdnFrontdoorOriginGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CompressionEnabled != nil {
		in, out := &in.CompressionEnabled, &out.CompressionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ForwardingProtocol != nil {
		in, out := &in.ForwardingProtocol, &out.ForwardingProtocol
		*out = new(string)
		**out = **in
	}
	if in.QueryStringCachingBehavior != nil {
		in, out := &in.QueryStringCachingBehavior, &out.QueryStringCachingBehavior
		*out = new(string)
		**out = **in
	}
	if in.QueryStringParameters != nil {
		in, out := &in.QueryStringParameters, &out.QueryStringParameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteConfigurationOverrideActionParameters.
func (in *RouteConfigurationOverrideActionParameters) DeepCopy() *RouteConfigurationOverrideActionParameters {
	if in == nil {
		return nil
	}
	out := new(RouteConfigurationOverrideActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLProtocolConditionInitParameters) DeepCopyInto(out *SSLProtocolConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLProtocolConditionInitParameters.
func (in *SSLProtocolConditionInitParameters) DeepCopy() *SSLProtocolConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SSLProtocolConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLProtocolConditionObservation) DeepCopyInto(out *SSLProtocolConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLProtocolConditionObservation.
func (in *SSLProtocolConditionObservation) DeepCopy() *SSLProtocolConditionObservation {
	if in == nil {
		return nil
	}
	out := new(SSLProtocolConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLProtocolConditionParameters) DeepCopyInto(out *SSLProtocolConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLProtocolConditionParameters.
func (in *SSLProtocolConditionParameters) DeepCopy() *SSLProtocolConditionParameters {
	if in == nil {
		return nil
	}
	out := new(SSLProtocolConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerPortConditionInitParameters) DeepCopyInto(out *ServerPortConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerPortConditionInitParameters.
func (in *ServerPortConditionInitParameters) DeepCopy() *ServerPortConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServerPortConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerPortConditionObservation) DeepCopyInto(out *ServerPortConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerPortConditionObservation.
func (in *ServerPortConditionObservation) DeepCopy() *ServerPortConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ServerPortConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerPortConditionParameters) DeepCopyInto(out *ServerPortConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerPortConditionParameters.
func (in *ServerPortConditionParameters) DeepCopy() *ServerPortConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ServerPortConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SocketAddressConditionInitParameters) DeepCopyInto(out *SocketAddressConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SocketAddressConditionInitParameters.
func (in *SocketAddressConditionInitParameters) DeepCopy() *SocketAddressConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SocketAddressConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SocketAddressConditionObservation) DeepCopyInto(out *SocketAddressConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SocketAddressConditionObservation.
func (in *SocketAddressConditionObservation) DeepCopy() *SocketAddressConditionObservation {
	if in == nil {
		return nil
	}
	out := new(SocketAddressConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SocketAddressConditionParameters) DeepCopyInto(out *SocketAddressConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SocketAddressConditionParameters.
func (in *SocketAddressConditionParameters) DeepCopy() *SocketAddressConditionParameters {
	if in == nil {
		return nil
	}
	out := new(SocketAddressConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSInitParameters) DeepCopyInto(out *TLSInitParameters) {
	*out = *in
	if in.CdnFrontdoorSecretID != nil {
		in, out := &in.CdnFrontdoorSecretID, &out.CdnFrontdoorSecretID
		*out = new(string)
		**out = **in
	}
	if in.CertificateType != nil {
		in, out := &in.CertificateType, &out.CertificateType
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSInitParameters.
func (in *TLSInitParameters) DeepCopy() *TLSInitParameters {
	if in == nil {
		return nil
	}
	out := new(TLSInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSObservation) DeepCopyInto(out *TLSObservation) {
	*out = *in
	if in.CdnFrontdoorSecretID != nil {
		in, out := &in.CdnFrontdoorSecretID, &out.CdnFrontdoorSecretID
		*out = new(string)
		**out = **in
	}
	if in.CertificateType != nil {
		in, out := &in.CertificateType, &out.CertificateType
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSObservation.
func (in *TLSObservation) DeepCopy() *TLSObservation {
	if in == nil {
		return nil
	}
	out := new(TLSObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSParameters) DeepCopyInto(out *TLSParameters) {
	*out = *in
	if in.CdnFrontdoorSecretID != nil {
		in, out := &in.CdnFrontdoorSecretID, &out.CdnFrontdoorSecretID
		*out = new(string)
		**out = **in
	}
	if in.CertificateType != nil {
		in, out := &in.CertificateType, &out.CertificateType
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSParameters.
func (in *TLSParameters) DeepCopy() *TLSParameters {
	if in == nil {
		return nil
	}
	out := new(TLSParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLFileExtensionConditionInitParameters) DeepCopyInto(out *URLFileExtensionConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLFileExtensionConditionInitParameters.
func (in *URLFileExtensionConditionInitParameters) DeepCopy() *URLFileExtensionConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(URLFileExtensionConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLFileExtensionConditionObservation) DeepCopyInto(out *URLFileExtensionConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLFileExtensionConditionObservation.
func (in *URLFileExtensionConditionObservation) DeepCopy() *URLFileExtensionConditionObservation {
	if in == nil {
		return nil
	}
	out := new(URLFileExtensionConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLFileExtensionConditionParameters) DeepCopyInto(out *URLFileExtensionConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLFileExtensionConditionParameters.
func (in *URLFileExtensionConditionParameters) DeepCopy() *URLFileExtensionConditionParameters {
	if in == nil {
		return nil
	}
	out := new(URLFileExtensionConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLFileNameConditionInitParameters) DeepCopyInto(out *URLFileNameConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLFileNameConditionInitParameters.
func (in *URLFileNameConditionInitParameters) DeepCopy() *URLFileNameConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(URLFileNameConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLFileNameConditionObservation) DeepCopyInto(out *URLFileNameConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLFileNameConditionObservation.
func (in *URLFileNameConditionObservation) DeepCopy() *URLFileNameConditionObservation {
	if in == nil {
		return nil
	}
	out := new(URLFileNameConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLFileNameConditionParameters) DeepCopyInto(out *URLFileNameConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLFileNameConditionParameters.
func (in *URLFileNameConditionParameters) DeepCopy() *URLFileNameConditionParameters {
	if in == nil {
		return nil
	}
	out := new(URLFileNameConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLFilenameConditionInitParameters) DeepCopyInto(out *URLFilenameConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLFilenameConditionInitParameters.
func (in *URLFilenameConditionInitParameters) DeepCopy() *URLFilenameConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(URLFilenameConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLFilenameConditionObservation) DeepCopyInto(out *URLFilenameConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLFilenameConditionObservation.
func (in *URLFilenameConditionObservation) DeepCopy() *URLFilenameConditionObservation {
	if in == nil {
		return nil
	}
	out := new(URLFilenameConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLFilenameConditionParameters) DeepCopyInto(out *URLFilenameConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLFilenameConditionParameters.
func (in *URLFilenameConditionParameters) DeepCopy() *URLFilenameConditionParameters {
	if in == nil {
		return nil
	}
	out := new(URLFilenameConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLPathConditionInitParameters) DeepCopyInto(out *URLPathConditionInitParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLPathConditionInitParameters.
func (in *URLPathConditionInitParameters) DeepCopy() *URLPathConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(URLPathConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLPathConditionObservation) DeepCopyInto(out *URLPathConditionObservation) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLPathConditionObservation.
func (in *URLPathConditionObservation) DeepCopy() *URLPathConditionObservation {
	if in == nil {
		return nil
	}
	out := new(URLPathConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLPathConditionParameters) DeepCopyInto(out *URLPathConditionParameters) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLPathConditionParameters.
func (in *URLPathConditionParameters) DeepCopy() *URLPathConditionParameters {
	if in == nil {
		return nil
	}
	out := new(URLPathConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLRedirectActionInitParameters) DeepCopyInto(out *URLRedirectActionInitParameters) {
	*out = *in
	if in.Fragment != nil {
		in, out := &in.Fragment, &out.Fragment
		*out = new(string)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.QueryString != nil {
		in, out := &in.QueryString, &out.QueryString
		*out = new(string)
		**out = **in
	}
	if in.RedirectType != nil {
		in, out := &in.RedirectType, &out.RedirectType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLRedirectActionInitParameters.
func (in *URLRedirectActionInitParameters) DeepCopy() *URLRedirectActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(URLRedirectActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLRedirectActionObservation) DeepCopyInto(out *URLRedirectActionObservation) {
	*out = *in
	if in.Fragment != nil {
		in, out := &in.Fragment, &out.Fragment
		*out = new(string)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.QueryString != nil {
		in, out := &in.QueryString, &out.QueryString
		*out = new(string)
		**out = **in
	}
	if in.RedirectType != nil {
		in, out := &in.RedirectType, &out.RedirectType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLRedirectActionObservation.
func (in *URLRedirectActionObservation) DeepCopy() *URLRedirectActionObservation {
	if in == nil {
		return nil
	}
	out := new(URLRedirectActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLRedirectActionParameters) DeepCopyInto(out *URLRedirectActionParameters) {
	*out = *in
	if in.Fragment != nil {
		in, out := &in.Fragment, &out.Fragment
		*out = new(string)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.QueryString != nil {
		in, out := &in.QueryString, &out.QueryString
		*out = new(string)
		**out = **in
	}
	if in.RedirectType != nil {
		in, out := &in.RedirectType, &out.RedirectType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLRedirectActionParameters.
func (in *URLRedirectActionParameters) DeepCopy() *URLRedirectActionParameters {
	if in == nil {
		return nil
	}
	out := new(URLRedirectActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLRewriteActionInitParameters) DeepCopyInto(out *URLRewriteActionInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.PreserveUnmatchedPath != nil {
		in, out := &in.PreserveUnmatchedPath, &out.PreserveUnmatchedPath
		*out = new(bool)
		**out = **in
	}
	if in.SourcePattern != nil {
		in, out := &in.SourcePattern, &out.SourcePattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLRewriteActionInitParameters.
func (in *URLRewriteActionInitParameters) DeepCopy() *URLRewriteActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(URLRewriteActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLRewriteActionObservation) DeepCopyInto(out *URLRewriteActionObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.PreserveUnmatchedPath != nil {
		in, out := &in.PreserveUnmatchedPath, &out.PreserveUnmatchedPath
		*out = new(bool)
		**out = **in
	}
	if in.SourcePattern != nil {
		in, out := &in.SourcePattern, &out.SourcePattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLRewriteActionObservation.
func (in *URLRewriteActionObservation) DeepCopy() *URLRewriteActionObservation {
	if in == nil {
		return nil
	}
	out := new(URLRewriteActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLRewriteActionParameters) DeepCopyInto(out *URLRewriteActionParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.PreserveUnmatchedPath != nil {
		in, out := &in.PreserveUnmatchedPath, &out.PreserveUnmatchedPath
		*out = new(bool)
		**out = **in
	}
	if in.SourcePattern != nil {
		in, out := &in.SourcePattern, &out.SourcePattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLRewriteActionParameters.
func (in *URLRewriteActionParameters) DeepCopy() *URLRewriteActionParameters {
	if in == nil {
		return nil
	}
	out := new(URLRewriteActionParameters)
	in.DeepCopyInto(out)
	return out
}
