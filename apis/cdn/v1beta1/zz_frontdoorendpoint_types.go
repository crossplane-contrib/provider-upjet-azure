// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type FrontdoorEndpointInitParameters struct {

	// Specifies if this Front Door Endpoint is enabled? Defaults to true.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Specifies a mapping of tags which should be assigned to the Front Door Endpoint.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type FrontdoorEndpointObservation struct {

	// The ID of the Front Door Profile within which this Front Door Endpoint should exist. Changing this forces a new Front Door Endpoint to be created.
	CdnFrontdoorProfileID *string `json:"cdnFrontdoorProfileId,omitempty" tf:"cdn_frontdoor_profile_id,omitempty"`

	// Specifies if this Front Door Endpoint is enabled? Defaults to true.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The host name of the Front Door Endpoint, in the format {endpointName}.{dnsZone} (for example, contoso.azureedge.net).
	HostName *string `json:"hostName,omitempty" tf:"host_name,omitempty"`

	// The ID of this Front Door Endpoint.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies a mapping of tags which should be assigned to the Front Door Endpoint.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type FrontdoorEndpointParameters struct {

	// The ID of the Front Door Profile within which this Front Door Endpoint should exist. Changing this forces a new Front Door Endpoint to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/cdn/v1beta1.FrontdoorProfile
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	CdnFrontdoorProfileID *string `json:"cdnFrontdoorProfileId,omitempty" tf:"cdn_frontdoor_profile_id,omitempty"`

	// Reference to a FrontdoorProfile in cdn to populate cdnFrontdoorProfileId.
	// +kubebuilder:validation:Optional
	CdnFrontdoorProfileIDRef *v1.Reference `json:"cdnFrontdoorProfileIdRef,omitempty" tf:"-"`

	// Selector for a FrontdoorProfile in cdn to populate cdnFrontdoorProfileId.
	// +kubebuilder:validation:Optional
	CdnFrontdoorProfileIDSelector *v1.Selector `json:"cdnFrontdoorProfileIdSelector,omitempty" tf:"-"`

	// Specifies if this Front Door Endpoint is enabled? Defaults to true.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Specifies a mapping of tags which should be assigned to the Front Door Endpoint.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// FrontdoorEndpointSpec defines the desired state of FrontdoorEndpoint
type FrontdoorEndpointSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     FrontdoorEndpointParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider FrontdoorEndpointInitParameters `json:"initProvider,omitempty"`
}

// FrontdoorEndpointStatus defines the observed state of FrontdoorEndpoint.
type FrontdoorEndpointStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FrontdoorEndpointObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// FrontdoorEndpoint is the Schema for the FrontdoorEndpoints API. Manages a Front Door (standard/premium) Endpoint.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type FrontdoorEndpoint struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FrontdoorEndpointSpec   `json:"spec"`
	Status            FrontdoorEndpointStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FrontdoorEndpointList contains a list of FrontdoorEndpoints
type FrontdoorEndpointList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FrontdoorEndpoint `json:"items"`
}

// Repository type metadata.
var (
	FrontdoorEndpoint_Kind             = "FrontdoorEndpoint"
	FrontdoorEndpoint_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: FrontdoorEndpoint_Kind}.String()
	FrontdoorEndpoint_KindAPIVersion   = FrontdoorEndpoint_Kind + "." + CRDGroupVersion.String()
	FrontdoorEndpoint_GroupVersionKind = CRDGroupVersion.WithKind(FrontdoorEndpoint_Kind)
)

func init() {
	SchemeBuilder.Register(&FrontdoorEndpoint{}, &FrontdoorEndpointList{})
}
