// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AuthorizationInitParameters struct {

	// Specifies a role definition identifier for the provider. This role will define all the permissions that the provider must have on the managed application's container resource group. This role definition cannot have permission to delete the resource group.
	RoleDefinitionID *string `json:"roleDefinitionId,omitempty" tf:"role_definition_id,omitempty"`

	// Specifies a service principal identifier for the provider. This is the identity that the provider will use to call ARM to manage the managed application resources.
	ServicePrincipalID *string `json:"servicePrincipalId,omitempty" tf:"service_principal_id,omitempty"`
}

type AuthorizationObservation struct {

	// Specifies a role definition identifier for the provider. This role will define all the permissions that the provider must have on the managed application's container resource group. This role definition cannot have permission to delete the resource group.
	RoleDefinitionID *string `json:"roleDefinitionId,omitempty" tf:"role_definition_id,omitempty"`

	// Specifies a service principal identifier for the provider. This is the identity that the provider will use to call ARM to manage the managed application resources.
	ServicePrincipalID *string `json:"servicePrincipalId,omitempty" tf:"service_principal_id,omitempty"`
}

type AuthorizationParameters struct {

	// Specifies a role definition identifier for the provider. This role will define all the permissions that the provider must have on the managed application's container resource group. This role definition cannot have permission to delete the resource group.
	// +kubebuilder:validation:Optional
	RoleDefinitionID *string `json:"roleDefinitionId" tf:"role_definition_id,omitempty"`

	// Specifies a service principal identifier for the provider. This is the identity that the provider will use to call ARM to manage the managed application resources.
	// +kubebuilder:validation:Optional
	ServicePrincipalID *string `json:"servicePrincipalId" tf:"service_principal_id,omitempty"`
}

type ManagedApplicationDefinitionInitParameters struct {

	// One or more authorization block defined below.
	Authorization []AuthorizationInitParameters `json:"authorization,omitempty" tf:"authorization,omitempty"`

	// Specifies the createUiDefinition JSON for the backing template with Microsoft.Solutions/applications resource.
	CreateUIDefinition *string `json:"createUiDefinition,omitempty" tf:"create_ui_definition,omitempty"`

	// Specifies the managed application definition description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the managed application definition display name.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Specifies the managed application lock level. Valid values include CanNotDelete, None, ReadOnly. Changing this forces a new resource to be created.
	LockLevel *string `json:"lockLevel,omitempty" tf:"lock_level,omitempty"`

	// Specifies the inline main template JSON which has resources to be provisioned.
	MainTemplate *string `json:"mainTemplate,omitempty" tf:"main_template,omitempty"`

	// Is the package enabled? Defaults to true.
	PackageEnabled *bool `json:"packageEnabled,omitempty" tf:"package_enabled,omitempty"`

	// Specifies the managed application definition package file Uri.
	PackageFileURI *string `json:"packageFileUri,omitempty" tf:"package_file_uri,omitempty"`

	// A mapping of tags to assign to the resource.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type ManagedApplicationDefinitionObservation struct {

	// One or more authorization block defined below.
	Authorization []AuthorizationObservation `json:"authorization,omitempty" tf:"authorization,omitempty"`

	// Specifies the createUiDefinition JSON for the backing template with Microsoft.Solutions/applications resource.
	CreateUIDefinition *string `json:"createUiDefinition,omitempty" tf:"create_ui_definition,omitempty"`

	// Specifies the managed application definition description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the managed application definition display name.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The ID of the Managed Application Definition.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Specifies the managed application lock level. Valid values include CanNotDelete, None, ReadOnly. Changing this forces a new resource to be created.
	LockLevel *string `json:"lockLevel,omitempty" tf:"lock_level,omitempty"`

	// Specifies the inline main template JSON which has resources to be provisioned.
	MainTemplate *string `json:"mainTemplate,omitempty" tf:"main_template,omitempty"`

	// Is the package enabled? Defaults to true.
	PackageEnabled *bool `json:"packageEnabled,omitempty" tf:"package_enabled,omitempty"`

	// Specifies the managed application definition package file Uri.
	PackageFileURI *string `json:"packageFileUri,omitempty" tf:"package_file_uri,omitempty"`

	// The name of the Resource Group where the Managed Application Definition should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// A mapping of tags to assign to the resource.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type ManagedApplicationDefinitionParameters struct {

	// One or more authorization block defined below.
	// +kubebuilder:validation:Optional
	Authorization []AuthorizationParameters `json:"authorization,omitempty" tf:"authorization,omitempty"`

	// Specifies the createUiDefinition JSON for the backing template with Microsoft.Solutions/applications resource.
	// +kubebuilder:validation:Optional
	CreateUIDefinition *string `json:"createUiDefinition,omitempty" tf:"create_ui_definition,omitempty"`

	// Specifies the managed application definition description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the managed application definition display name.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Specifies the managed application lock level. Valid values include CanNotDelete, None, ReadOnly. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	LockLevel *string `json:"lockLevel,omitempty" tf:"lock_level,omitempty"`

	// Specifies the inline main template JSON which has resources to be provisioned.
	// +kubebuilder:validation:Optional
	MainTemplate *string `json:"mainTemplate,omitempty" tf:"main_template,omitempty"`

	// Is the package enabled? Defaults to true.
	// +kubebuilder:validation:Optional
	PackageEnabled *bool `json:"packageEnabled,omitempty" tf:"package_enabled,omitempty"`

	// Specifies the managed application definition package file Uri.
	// +kubebuilder:validation:Optional
	PackageFileURI *string `json:"packageFileUri,omitempty" tf:"package_file_uri,omitempty"`

	// The name of the Resource Group where the Managed Application Definition should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// ManagedApplicationDefinitionSpec defines the desired state of ManagedApplicationDefinition
type ManagedApplicationDefinitionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ManagedApplicationDefinitionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ManagedApplicationDefinitionInitParameters `json:"initProvider,omitempty"`
}

// ManagedApplicationDefinitionStatus defines the observed state of ManagedApplicationDefinition.
type ManagedApplicationDefinitionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ManagedApplicationDefinitionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ManagedApplicationDefinition is the Schema for the ManagedApplicationDefinitions API. Manages a Managed Application Definition.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type ManagedApplicationDefinition struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.displayName) || (has(self.initProvider) && has(self.initProvider.displayName))",message="spec.forProvider.displayName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.lockLevel) || (has(self.initProvider) && has(self.initProvider.lockLevel))",message="spec.forProvider.lockLevel is a required parameter"
	Spec   ManagedApplicationDefinitionSpec   `json:"spec"`
	Status ManagedApplicationDefinitionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ManagedApplicationDefinitionList contains a list of ManagedApplicationDefinitions
type ManagedApplicationDefinitionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ManagedApplicationDefinition `json:"items"`
}

// Repository type metadata.
var (
	ManagedApplicationDefinition_Kind             = "ManagedApplicationDefinition"
	ManagedApplicationDefinition_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ManagedApplicationDefinition_Kind}.String()
	ManagedApplicationDefinition_KindAPIVersion   = ManagedApplicationDefinition_Kind + "." + CRDGroupVersion.String()
	ManagedApplicationDefinition_GroupVersionKind = CRDGroupVersion.WithKind(ManagedApplicationDefinition_Kind)
)

func init() {
	SchemeBuilder.Register(&ManagedApplicationDefinition{}, &ManagedApplicationDefinitionList{})
}
