//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AADAuthInitParameters) DeepCopyInto(out *AADAuthInitParameters) {
	*out = *in
	if in.IdentifierURI != nil {
		in, out := &in.IdentifierURI, &out.IdentifierURI
		*out = new(string)
		**out = **in
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AADAuthInitParameters.
func (in *AADAuthInitParameters) DeepCopy() *AADAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(AADAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AADAuthObservation) DeepCopyInto(out *AADAuthObservation) {
	*out = *in
	if in.IdentifierURI != nil {
		in, out := &in.IdentifierURI, &out.IdentifierURI
		*out = new(string)
		**out = **in
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AADAuthObservation.
func (in *AADAuthObservation) DeepCopy() *AADAuthObservation {
	if in == nil {
		return nil
	}
	out := new(AADAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AADAuthParameters) DeepCopyInto(out *AADAuthParameters) {
	*out = *in
	if in.IdentifierURI != nil {
		in, out := &in.IdentifierURI, &out.IdentifierURI
		*out = new(string)
		**out = **in
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AADAuthParameters.
func (in *AADAuthParameters) DeepCopy() *AADAuthParameters {
	if in == nil {
		return nil
	}
	out := new(AADAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionInitParameters) DeepCopyInto(out *ActionInitParameters) {
	*out = *in
	if in.WebhookProperties != nil {
		in, out := &in.WebhookProperties, &out.WebhookProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionInitParameters.
func (in *ActionInitParameters) DeepCopy() *ActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionObservation) DeepCopyInto(out *ActionObservation) {
	*out = *in
	if in.ActionGroupID != nil {
		in, out := &in.ActionGroupID, &out.ActionGroupID
		*out = new(string)
		**out = **in
	}
	if in.WebhookProperties != nil {
		in, out := &in.WebhookProperties, &out.WebhookProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionObservation.
func (in *ActionObservation) DeepCopy() *ActionObservation {
	if in == nil {
		return nil
	}
	out := new(ActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionParameters) DeepCopyInto(out *ActionParameters) {
	*out = *in
	if in.ActionGroupID != nil {
		in, out := &in.ActionGroupID, &out.ActionGroupID
		*out = new(string)
		**out = **in
	}
	if in.ActionGroupIDRef != nil {
		in, out := &in.ActionGroupIDRef, &out.ActionGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ActionGroupIDSelector != nil {
		in, out := &in.ActionGroupIDSelector, &out.ActionGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.WebhookProperties != nil {
		in, out := &in.WebhookProperties, &out.WebhookProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionParameters.
func (in *ActionParameters) DeepCopy() *ActionParameters {
	if in == nil {
		return nil
	}
	out := new(ActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsights) DeepCopyInto(out *ApplicationInsights) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsights.
func (in *ApplicationInsights) DeepCopy() *ApplicationInsights {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsights)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationInsights) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsAPIKey) DeepCopyInto(out *ApplicationInsightsAPIKey) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsAPIKey.
func (in *ApplicationInsightsAPIKey) DeepCopy() *ApplicationInsightsAPIKey {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsAPIKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationInsightsAPIKey) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsAPIKeyInitParameters) DeepCopyInto(out *ApplicationInsightsAPIKeyInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReadPermissions != nil {
		in, out := &in.ReadPermissions, &out.ReadPermissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WritePermissions != nil {
		in, out := &in.WritePermissions, &out.WritePermissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsAPIKeyInitParameters.
func (in *ApplicationInsightsAPIKeyInitParameters) DeepCopy() *ApplicationInsightsAPIKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsAPIKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsAPIKeyList) DeepCopyInto(out *ApplicationInsightsAPIKeyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApplicationInsightsAPIKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsAPIKeyList.
func (in *ApplicationInsightsAPIKeyList) DeepCopy() *ApplicationInsightsAPIKeyList {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsAPIKeyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationInsightsAPIKeyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsAPIKeyObservation) DeepCopyInto(out *ApplicationInsightsAPIKeyObservation) {
	*out = *in
	if in.ApplicationInsightsID != nil {
		in, out := &in.ApplicationInsightsID, &out.ApplicationInsightsID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReadPermissions != nil {
		in, out := &in.ReadPermissions, &out.ReadPermissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WritePermissions != nil {
		in, out := &in.WritePermissions, &out.WritePermissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsAPIKeyObservation.
func (in *ApplicationInsightsAPIKeyObservation) DeepCopy() *ApplicationInsightsAPIKeyObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsAPIKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsAPIKeyParameters) DeepCopyInto(out *ApplicationInsightsAPIKeyParameters) {
	*out = *in
	if in.ApplicationInsightsID != nil {
		in, out := &in.ApplicationInsightsID, &out.ApplicationInsightsID
		*out = new(string)
		**out = **in
	}
	if in.ApplicationInsightsIDRef != nil {
		in, out := &in.ApplicationInsightsIDRef, &out.ApplicationInsightsIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ApplicationInsightsIDSelector != nil {
		in, out := &in.ApplicationInsightsIDSelector, &out.ApplicationInsightsIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReadPermissions != nil {
		in, out := &in.ReadPermissions, &out.ReadPermissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WritePermissions != nil {
		in, out := &in.WritePermissions, &out.WritePermissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsAPIKeyParameters.
func (in *ApplicationInsightsAPIKeyParameters) DeepCopy() *ApplicationInsightsAPIKeyParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsAPIKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsAPIKeySpec) DeepCopyInto(out *ApplicationInsightsAPIKeySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsAPIKeySpec.
func (in *ApplicationInsightsAPIKeySpec) DeepCopy() *ApplicationInsightsAPIKeySpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsAPIKeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsAPIKeyStatus) DeepCopyInto(out *ApplicationInsightsAPIKeyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsAPIKeyStatus.
func (in *ApplicationInsightsAPIKeyStatus) DeepCopy() *ApplicationInsightsAPIKeyStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsAPIKeyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsAnalyticsItem) DeepCopyInto(out *ApplicationInsightsAnalyticsItem) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsAnalyticsItem.
func (in *ApplicationInsightsAnalyticsItem) DeepCopy() *ApplicationInsightsAnalyticsItem {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsAnalyticsItem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationInsightsAnalyticsItem) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsAnalyticsItemInitParameters) DeepCopyInto(out *ApplicationInsightsAnalyticsItemInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.FunctionAlias != nil {
		in, out := &in.FunctionAlias, &out.FunctionAlias
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsAnalyticsItemInitParameters.
func (in *ApplicationInsightsAnalyticsItemInitParameters) DeepCopy() *ApplicationInsightsAnalyticsItemInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsAnalyticsItemInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsAnalyticsItemList) DeepCopyInto(out *ApplicationInsightsAnalyticsItemList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApplicationInsightsAnalyticsItem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsAnalyticsItemList.
func (in *ApplicationInsightsAnalyticsItemList) DeepCopy() *ApplicationInsightsAnalyticsItemList {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsAnalyticsItemList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationInsightsAnalyticsItemList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsAnalyticsItemObservation) DeepCopyInto(out *ApplicationInsightsAnalyticsItemObservation) {
	*out = *in
	if in.ApplicationInsightsID != nil {
		in, out := &in.ApplicationInsightsID, &out.ApplicationInsightsID
		*out = new(string)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.FunctionAlias != nil {
		in, out := &in.FunctionAlias, &out.FunctionAlias
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeModified != nil {
		in, out := &in.TimeModified, &out.TimeModified
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsAnalyticsItemObservation.
func (in *ApplicationInsightsAnalyticsItemObservation) DeepCopy() *ApplicationInsightsAnalyticsItemObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsAnalyticsItemObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsAnalyticsItemParameters) DeepCopyInto(out *ApplicationInsightsAnalyticsItemParameters) {
	*out = *in
	if in.ApplicationInsightsID != nil {
		in, out := &in.ApplicationInsightsID, &out.ApplicationInsightsID
		*out = new(string)
		**out = **in
	}
	if in.ApplicationInsightsIDRef != nil {
		in, out := &in.ApplicationInsightsIDRef, &out.ApplicationInsightsIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ApplicationInsightsIDSelector != nil {
		in, out := &in.ApplicationInsightsIDSelector, &out.ApplicationInsightsIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.FunctionAlias != nil {
		in, out := &in.FunctionAlias, &out.FunctionAlias
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsAnalyticsItemParameters.
func (in *ApplicationInsightsAnalyticsItemParameters) DeepCopy() *ApplicationInsightsAnalyticsItemParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsAnalyticsItemParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsAnalyticsItemSpec) DeepCopyInto(out *ApplicationInsightsAnalyticsItemSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsAnalyticsItemSpec.
func (in *ApplicationInsightsAnalyticsItemSpec) DeepCopy() *ApplicationInsightsAnalyticsItemSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsAnalyticsItemSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsAnalyticsItemStatus) DeepCopyInto(out *ApplicationInsightsAnalyticsItemStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsAnalyticsItemStatus.
func (in *ApplicationInsightsAnalyticsItemStatus) DeepCopy() *ApplicationInsightsAnalyticsItemStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsAnalyticsItemStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsInitParameters) DeepCopyInto(out *ApplicationInsightsInitParameters) {
	*out = *in
	if in.ApplicationType != nil {
		in, out := &in.ApplicationType, &out.ApplicationType
		*out = new(string)
		**out = **in
	}
	if in.DailyDataCapInGb != nil {
		in, out := &in.DailyDataCapInGb, &out.DailyDataCapInGb
		*out = new(float64)
		**out = **in
	}
	if in.DailyDataCapNotificationsDisabled != nil {
		in, out := &in.DailyDataCapNotificationsDisabled, &out.DailyDataCapNotificationsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.DisableIPMasking != nil {
		in, out := &in.DisableIPMasking, &out.DisableIPMasking
		*out = new(bool)
		**out = **in
	}
	if in.ForceCustomerStorageForProfiler != nil {
		in, out := &in.ForceCustomerStorageForProfiler, &out.ForceCustomerStorageForProfiler
		*out = new(bool)
		**out = **in
	}
	if in.InternetIngestionEnabled != nil {
		in, out := &in.InternetIngestionEnabled, &out.InternetIngestionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.InternetQueryEnabled != nil {
		in, out := &in.InternetQueryEnabled, &out.InternetQueryEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LocalAuthenticationDisabled != nil {
		in, out := &in.LocalAuthenticationDisabled, &out.LocalAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.SamplingPercentage != nil {
		in, out := &in.SamplingPercentage, &out.SamplingPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsInitParameters.
func (in *ApplicationInsightsInitParameters) DeepCopy() *ApplicationInsightsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsList) DeepCopyInto(out *ApplicationInsightsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApplicationInsights, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsList.
func (in *ApplicationInsightsList) DeepCopy() *ApplicationInsightsList {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationInsightsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsObservation) DeepCopyInto(out *ApplicationInsightsObservation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.ApplicationType != nil {
		in, out := &in.ApplicationType, &out.ApplicationType
		*out = new(string)
		**out = **in
	}
	if in.DailyDataCapInGb != nil {
		in, out := &in.DailyDataCapInGb, &out.DailyDataCapInGb
		*out = new(float64)
		**out = **in
	}
	if in.DailyDataCapNotificationsDisabled != nil {
		in, out := &in.DailyDataCapNotificationsDisabled, &out.DailyDataCapNotificationsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.DisableIPMasking != nil {
		in, out := &in.DisableIPMasking, &out.DisableIPMasking
		*out = new(bool)
		**out = **in
	}
	if in.ForceCustomerStorageForProfiler != nil {
		in, out := &in.ForceCustomerStorageForProfiler, &out.ForceCustomerStorageForProfiler
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InternetIngestionEnabled != nil {
		in, out := &in.InternetIngestionEnabled, &out.InternetIngestionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.InternetQueryEnabled != nil {
		in, out := &in.InternetQueryEnabled, &out.InternetQueryEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LocalAuthenticationDisabled != nil {
		in, out := &in.LocalAuthenticationDisabled, &out.LocalAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.SamplingPercentage != nil {
		in, out := &in.SamplingPercentage, &out.SamplingPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsObservation.
func (in *ApplicationInsightsObservation) DeepCopy() *ApplicationInsightsObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsParameters) DeepCopyInto(out *ApplicationInsightsParameters) {
	*out = *in
	if in.ApplicationType != nil {
		in, out := &in.ApplicationType, &out.ApplicationType
		*out = new(string)
		**out = **in
	}
	if in.DailyDataCapInGb != nil {
		in, out := &in.DailyDataCapInGb, &out.DailyDataCapInGb
		*out = new(float64)
		**out = **in
	}
	if in.DailyDataCapNotificationsDisabled != nil {
		in, out := &in.DailyDataCapNotificationsDisabled, &out.DailyDataCapNotificationsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.DisableIPMasking != nil {
		in, out := &in.DisableIPMasking, &out.DisableIPMasking
		*out = new(bool)
		**out = **in
	}
	if in.ForceCustomerStorageForProfiler != nil {
		in, out := &in.ForceCustomerStorageForProfiler, &out.ForceCustomerStorageForProfiler
		*out = new(bool)
		**out = **in
	}
	if in.InternetIngestionEnabled != nil {
		in, out := &in.InternetIngestionEnabled, &out.InternetIngestionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.InternetQueryEnabled != nil {
		in, out := &in.InternetQueryEnabled, &out.InternetQueryEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LocalAuthenticationDisabled != nil {
		in, out := &in.LocalAuthenticationDisabled, &out.LocalAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.SamplingPercentage != nil {
		in, out := &in.SamplingPercentage, &out.SamplingPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceIDRef != nil {
		in, out := &in.WorkspaceIDRef, &out.WorkspaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkspaceIDSelector != nil {
		in, out := &in.WorkspaceIDSelector, &out.WorkspaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsParameters.
func (in *ApplicationInsightsParameters) DeepCopy() *ApplicationInsightsParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsSmartDetectionRule) DeepCopyInto(out *ApplicationInsightsSmartDetectionRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsSmartDetectionRule.
func (in *ApplicationInsightsSmartDetectionRule) DeepCopy() *ApplicationInsightsSmartDetectionRule {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsSmartDetectionRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationInsightsSmartDetectionRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsSmartDetectionRuleInitParameters) DeepCopyInto(out *ApplicationInsightsSmartDetectionRuleInitParameters) {
	*out = *in
	if in.AdditionalEmailRecipients != nil {
		in, out := &in.AdditionalEmailRecipients, &out.AdditionalEmailRecipients
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SendEmailsToSubscriptionOwners != nil {
		in, out := &in.SendEmailsToSubscriptionOwners, &out.SendEmailsToSubscriptionOwners
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsSmartDetectionRuleInitParameters.
func (in *ApplicationInsightsSmartDetectionRuleInitParameters) DeepCopy() *ApplicationInsightsSmartDetectionRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsSmartDetectionRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsSmartDetectionRuleList) DeepCopyInto(out *ApplicationInsightsSmartDetectionRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApplicationInsightsSmartDetectionRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsSmartDetectionRuleList.
func (in *ApplicationInsightsSmartDetectionRuleList) DeepCopy() *ApplicationInsightsSmartDetectionRuleList {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsSmartDetectionRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationInsightsSmartDetectionRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsSmartDetectionRuleObservation) DeepCopyInto(out *ApplicationInsightsSmartDetectionRuleObservation) {
	*out = *in
	if in.AdditionalEmailRecipients != nil {
		in, out := &in.AdditionalEmailRecipients, &out.AdditionalEmailRecipients
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ApplicationInsightsID != nil {
		in, out := &in.ApplicationInsightsID, &out.ApplicationInsightsID
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SendEmailsToSubscriptionOwners != nil {
		in, out := &in.SendEmailsToSubscriptionOwners, &out.SendEmailsToSubscriptionOwners
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsSmartDetectionRuleObservation.
func (in *ApplicationInsightsSmartDetectionRuleObservation) DeepCopy() *ApplicationInsightsSmartDetectionRuleObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsSmartDetectionRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsSmartDetectionRuleParameters) DeepCopyInto(out *ApplicationInsightsSmartDetectionRuleParameters) {
	*out = *in
	if in.AdditionalEmailRecipients != nil {
		in, out := &in.AdditionalEmailRecipients, &out.AdditionalEmailRecipients
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ApplicationInsightsID != nil {
		in, out := &in.ApplicationInsightsID, &out.ApplicationInsightsID
		*out = new(string)
		**out = **in
	}
	if in.ApplicationInsightsIDRef != nil {
		in, out := &in.ApplicationInsightsIDRef, &out.ApplicationInsightsIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ApplicationInsightsIDSelector != nil {
		in, out := &in.ApplicationInsightsIDSelector, &out.ApplicationInsightsIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SendEmailsToSubscriptionOwners != nil {
		in, out := &in.SendEmailsToSubscriptionOwners, &out.SendEmailsToSubscriptionOwners
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsSmartDetectionRuleParameters.
func (in *ApplicationInsightsSmartDetectionRuleParameters) DeepCopy() *ApplicationInsightsSmartDetectionRuleParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsSmartDetectionRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsSmartDetectionRuleSpec) DeepCopyInto(out *ApplicationInsightsSmartDetectionRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsSmartDetectionRuleSpec.
func (in *ApplicationInsightsSmartDetectionRuleSpec) DeepCopy() *ApplicationInsightsSmartDetectionRuleSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsSmartDetectionRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsSmartDetectionRuleStatus) DeepCopyInto(out *ApplicationInsightsSmartDetectionRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsSmartDetectionRuleStatus.
func (in *ApplicationInsightsSmartDetectionRuleStatus) DeepCopy() *ApplicationInsightsSmartDetectionRuleStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsSmartDetectionRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsSpec) DeepCopyInto(out *ApplicationInsightsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsSpec.
func (in *ApplicationInsightsSpec) DeepCopy() *ApplicationInsightsSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsStandardWebTest) DeepCopyInto(out *ApplicationInsightsStandardWebTest) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsStandardWebTest.
func (in *ApplicationInsightsStandardWebTest) DeepCopy() *ApplicationInsightsStandardWebTest {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsStandardWebTest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationInsightsStandardWebTest) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsStandardWebTestInitParameters) DeepCopyInto(out *ApplicationInsightsStandardWebTestInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(float64)
		**out = **in
	}
	if in.GeoLocations != nil {
		in, out := &in.GeoLocations, &out.GeoLocations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = make([]RequestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryEnabled != nil {
		in, out := &in.RetryEnabled, &out.RetryEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.ValidationRules != nil {
		in, out := &in.ValidationRules, &out.ValidationRules
		*out = make([]ValidationRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsStandardWebTestInitParameters.
func (in *ApplicationInsightsStandardWebTestInitParameters) DeepCopy() *ApplicationInsightsStandardWebTestInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsStandardWebTestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsStandardWebTestList) DeepCopyInto(out *ApplicationInsightsStandardWebTestList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApplicationInsightsStandardWebTest, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsStandardWebTestList.
func (in *ApplicationInsightsStandardWebTestList) DeepCopy() *ApplicationInsightsStandardWebTestList {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsStandardWebTestList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationInsightsStandardWebTestList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsStandardWebTestObservation) DeepCopyInto(out *ApplicationInsightsStandardWebTestObservation) {
	*out = *in
	if in.ApplicationInsightsID != nil {
		in, out := &in.ApplicationInsightsID, &out.ApplicationInsightsID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(float64)
		**out = **in
	}
	if in.GeoLocations != nil {
		in, out := &in.GeoLocations, &out.GeoLocations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = make([]RequestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.RetryEnabled != nil {
		in, out := &in.RetryEnabled, &out.RetryEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SyntheticMonitorID != nil {
		in, out := &in.SyntheticMonitorID, &out.SyntheticMonitorID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.ValidationRules != nil {
		in, out := &in.ValidationRules, &out.ValidationRules
		*out = make([]ValidationRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsStandardWebTestObservation.
func (in *ApplicationInsightsStandardWebTestObservation) DeepCopy() *ApplicationInsightsStandardWebTestObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsStandardWebTestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsStandardWebTestParameters) DeepCopyInto(out *ApplicationInsightsStandardWebTestParameters) {
	*out = *in
	if in.ApplicationInsightsID != nil {
		in, out := &in.ApplicationInsightsID, &out.ApplicationInsightsID
		*out = new(string)
		**out = **in
	}
	if in.ApplicationInsightsIDRef != nil {
		in, out := &in.ApplicationInsightsIDRef, &out.ApplicationInsightsIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ApplicationInsightsIDSelector != nil {
		in, out := &in.ApplicationInsightsIDSelector, &out.ApplicationInsightsIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(float64)
		**out = **in
	}
	if in.GeoLocations != nil {
		in, out := &in.GeoLocations, &out.GeoLocations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = make([]RequestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryEnabled != nil {
		in, out := &in.RetryEnabled, &out.RetryEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.ValidationRules != nil {
		in, out := &in.ValidationRules, &out.ValidationRules
		*out = make([]ValidationRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsStandardWebTestParameters.
func (in *ApplicationInsightsStandardWebTestParameters) DeepCopy() *ApplicationInsightsStandardWebTestParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsStandardWebTestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsStandardWebTestSpec) DeepCopyInto(out *ApplicationInsightsStandardWebTestSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsStandardWebTestSpec.
func (in *ApplicationInsightsStandardWebTestSpec) DeepCopy() *ApplicationInsightsStandardWebTestSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsStandardWebTestSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsStandardWebTestStatus) DeepCopyInto(out *ApplicationInsightsStandardWebTestStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsStandardWebTestStatus.
func (in *ApplicationInsightsStandardWebTestStatus) DeepCopy() *ApplicationInsightsStandardWebTestStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsStandardWebTestStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsStatus) DeepCopyInto(out *ApplicationInsightsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsStatus.
func (in *ApplicationInsightsStatus) DeepCopy() *ApplicationInsightsStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWebTest) DeepCopyInto(out *ApplicationInsightsWebTest) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWebTest.
func (in *ApplicationInsightsWebTest) DeepCopy() *ApplicationInsightsWebTest {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWebTest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationInsightsWebTest) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWebTestInitParameters) DeepCopyInto(out *ApplicationInsightsWebTestInitParameters) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(float64)
		**out = **in
	}
	if in.GeoLocations != nil {
		in, out := &in.GeoLocations, &out.GeoLocations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RetryEnabled != nil {
		in, out := &in.RetryEnabled, &out.RetryEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWebTestInitParameters.
func (in *ApplicationInsightsWebTestInitParameters) DeepCopy() *ApplicationInsightsWebTestInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWebTestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWebTestList) DeepCopyInto(out *ApplicationInsightsWebTestList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApplicationInsightsWebTest, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWebTestList.
func (in *ApplicationInsightsWebTestList) DeepCopy() *ApplicationInsightsWebTestList {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWebTestList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationInsightsWebTestList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWebTestLocationAvailabilityCriteriaInitParameters) DeepCopyInto(out *ApplicationInsightsWebTestLocationAvailabilityCriteriaInitParameters) {
	*out = *in
	if in.ComponentID != nil {
		in, out := &in.ComponentID, &out.ComponentID
		*out = new(string)
		**out = **in
	}
	if in.FailedLocationCount != nil {
		in, out := &in.FailedLocationCount, &out.FailedLocationCount
		*out = new(float64)
		**out = **in
	}
	if in.WebTestID != nil {
		in, out := &in.WebTestID, &out.WebTestID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWebTestLocationAvailabilityCriteriaInitParameters.
func (in *ApplicationInsightsWebTestLocationAvailabilityCriteriaInitParameters) DeepCopy() *ApplicationInsightsWebTestLocationAvailabilityCriteriaInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWebTestLocationAvailabilityCriteriaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWebTestLocationAvailabilityCriteriaObservation) DeepCopyInto(out *ApplicationInsightsWebTestLocationAvailabilityCriteriaObservation) {
	*out = *in
	if in.ComponentID != nil {
		in, out := &in.ComponentID, &out.ComponentID
		*out = new(string)
		**out = **in
	}
	if in.FailedLocationCount != nil {
		in, out := &in.FailedLocationCount, &out.FailedLocationCount
		*out = new(float64)
		**out = **in
	}
	if in.WebTestID != nil {
		in, out := &in.WebTestID, &out.WebTestID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWebTestLocationAvailabilityCriteriaObservation.
func (in *ApplicationInsightsWebTestLocationAvailabilityCriteriaObservation) DeepCopy() *ApplicationInsightsWebTestLocationAvailabilityCriteriaObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWebTestLocationAvailabilityCriteriaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWebTestLocationAvailabilityCriteriaParameters) DeepCopyInto(out *ApplicationInsightsWebTestLocationAvailabilityCriteriaParameters) {
	*out = *in
	if in.ComponentID != nil {
		in, out := &in.ComponentID, &out.ComponentID
		*out = new(string)
		**out = **in
	}
	if in.FailedLocationCount != nil {
		in, out := &in.FailedLocationCount, &out.FailedLocationCount
		*out = new(float64)
		**out = **in
	}
	if in.WebTestID != nil {
		in, out := &in.WebTestID, &out.WebTestID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWebTestLocationAvailabilityCriteriaParameters.
func (in *ApplicationInsightsWebTestLocationAvailabilityCriteriaParameters) DeepCopy() *ApplicationInsightsWebTestLocationAvailabilityCriteriaParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWebTestLocationAvailabilityCriteriaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWebTestObservation) DeepCopyInto(out *ApplicationInsightsWebTestObservation) {
	*out = *in
	if in.ApplicationInsightsID != nil {
		in, out := &in.ApplicationInsightsID, &out.ApplicationInsightsID
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(float64)
		**out = **in
	}
	if in.GeoLocations != nil {
		in, out := &in.GeoLocations, &out.GeoLocations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.RetryEnabled != nil {
		in, out := &in.RetryEnabled, &out.RetryEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SyntheticMonitorID != nil {
		in, out := &in.SyntheticMonitorID, &out.SyntheticMonitorID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWebTestObservation.
func (in *ApplicationInsightsWebTestObservation) DeepCopy() *ApplicationInsightsWebTestObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWebTestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWebTestParameters) DeepCopyInto(out *ApplicationInsightsWebTestParameters) {
	*out = *in
	if in.ApplicationInsightsID != nil {
		in, out := &in.ApplicationInsightsID, &out.ApplicationInsightsID
		*out = new(string)
		**out = **in
	}
	if in.ApplicationInsightsIDRef != nil {
		in, out := &in.ApplicationInsightsIDRef, &out.ApplicationInsightsIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ApplicationInsightsIDSelector != nil {
		in, out := &in.ApplicationInsightsIDSelector, &out.ApplicationInsightsIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(float64)
		**out = **in
	}
	if in.GeoLocations != nil {
		in, out := &in.GeoLocations, &out.GeoLocations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryEnabled != nil {
		in, out := &in.RetryEnabled, &out.RetryEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWebTestParameters.
func (in *ApplicationInsightsWebTestParameters) DeepCopy() *ApplicationInsightsWebTestParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWebTestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWebTestSpec) DeepCopyInto(out *ApplicationInsightsWebTestSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWebTestSpec.
func (in *ApplicationInsightsWebTestSpec) DeepCopy() *ApplicationInsightsWebTestSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWebTestSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWebTestStatus) DeepCopyInto(out *ApplicationInsightsWebTestStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWebTestStatus.
func (in *ApplicationInsightsWebTestStatus) DeepCopy() *ApplicationInsightsWebTestStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWebTestStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWorkbook) DeepCopyInto(out *ApplicationInsightsWorkbook) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWorkbook.
func (in *ApplicationInsightsWorkbook) DeepCopy() *ApplicationInsightsWorkbook {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWorkbook)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationInsightsWorkbook) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWorkbookInitParameters) DeepCopyInto(out *ApplicationInsightsWorkbookInitParameters) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.DataJSON != nil {
		in, out := &in.DataJSON, &out.DataJSON
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
	if in.StorageContainerID != nil {
		in, out := &in.StorageContainerID, &out.StorageContainerID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWorkbookInitParameters.
func (in *ApplicationInsightsWorkbookInitParameters) DeepCopy() *ApplicationInsightsWorkbookInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWorkbookInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWorkbookList) DeepCopyInto(out *ApplicationInsightsWorkbookList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApplicationInsightsWorkbook, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWorkbookList.
func (in *ApplicationInsightsWorkbookList) DeepCopy() *ApplicationInsightsWorkbookList {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWorkbookList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationInsightsWorkbookList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWorkbookObservation) DeepCopyInto(out *ApplicationInsightsWorkbookObservation) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.DataJSON != nil {
		in, out := &in.DataJSON, &out.DataJSON
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
	if in.StorageContainerID != nil {
		in, out := &in.StorageContainerID, &out.StorageContainerID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWorkbookObservation.
func (in *ApplicationInsightsWorkbookObservation) DeepCopy() *ApplicationInsightsWorkbookObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWorkbookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWorkbookParameters) DeepCopyInto(out *ApplicationInsightsWorkbookParameters) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.DataJSON != nil {
		in, out := &in.DataJSON, &out.DataJSON
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
	if in.StorageContainerID != nil {
		in, out := &in.StorageContainerID, &out.StorageContainerID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWorkbookParameters.
func (in *ApplicationInsightsWorkbookParameters) DeepCopy() *ApplicationInsightsWorkbookParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWorkbookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWorkbookSpec) DeepCopyInto(out *ApplicationInsightsWorkbookSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWorkbookSpec.
func (in *ApplicationInsightsWorkbookSpec) DeepCopy() *ApplicationInsightsWorkbookSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWorkbookSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWorkbookStatus) DeepCopyInto(out *ApplicationInsightsWorkbookStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWorkbookStatus.
func (in *ApplicationInsightsWorkbookStatus) DeepCopy() *ApplicationInsightsWorkbookStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWorkbookStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWorkbookTemplate) DeepCopyInto(out *ApplicationInsightsWorkbookTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWorkbookTemplate.
func (in *ApplicationInsightsWorkbookTemplate) DeepCopy() *ApplicationInsightsWorkbookTemplate {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWorkbookTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationInsightsWorkbookTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWorkbookTemplateInitParameters) DeepCopyInto(out *ApplicationInsightsWorkbookTemplateInitParameters) {
	*out = *in
	if in.Author != nil {
		in, out := &in.Author, &out.Author
		*out = new(string)
		**out = **in
	}
	if in.Galleries != nil {
		in, out := &in.Galleries, &out.Galleries
		*out = make([]GalleriesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Localized != nil {
		in, out := &in.Localized, &out.Localized
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TemplateData != nil {
		in, out := &in.TemplateData, &out.TemplateData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWorkbookTemplateInitParameters.
func (in *ApplicationInsightsWorkbookTemplateInitParameters) DeepCopy() *ApplicationInsightsWorkbookTemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWorkbookTemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWorkbookTemplateList) DeepCopyInto(out *ApplicationInsightsWorkbookTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApplicationInsightsWorkbookTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWorkbookTemplateList.
func (in *ApplicationInsightsWorkbookTemplateList) DeepCopy() *ApplicationInsightsWorkbookTemplateList {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWorkbookTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationInsightsWorkbookTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWorkbookTemplateObservation) DeepCopyInto(out *ApplicationInsightsWorkbookTemplateObservation) {
	*out = *in
	if in.Author != nil {
		in, out := &in.Author, &out.Author
		*out = new(string)
		**out = **in
	}
	if in.Galleries != nil {
		in, out := &in.Galleries, &out.Galleries
		*out = make([]GalleriesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Localized != nil {
		in, out := &in.Localized, &out.Localized
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TemplateData != nil {
		in, out := &in.TemplateData, &out.TemplateData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWorkbookTemplateObservation.
func (in *ApplicationInsightsWorkbookTemplateObservation) DeepCopy() *ApplicationInsightsWorkbookTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWorkbookTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWorkbookTemplateParameters) DeepCopyInto(out *ApplicationInsightsWorkbookTemplateParameters) {
	*out = *in
	if in.Author != nil {
		in, out := &in.Author, &out.Author
		*out = new(string)
		**out = **in
	}
	if in.Galleries != nil {
		in, out := &in.Galleries, &out.Galleries
		*out = make([]GalleriesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Localized != nil {
		in, out := &in.Localized, &out.Localized
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TemplateData != nil {
		in, out := &in.TemplateData, &out.TemplateData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWorkbookTemplateParameters.
func (in *ApplicationInsightsWorkbookTemplateParameters) DeepCopy() *ApplicationInsightsWorkbookTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWorkbookTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWorkbookTemplateSpec) DeepCopyInto(out *ApplicationInsightsWorkbookTemplateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWorkbookTemplateSpec.
func (in *ApplicationInsightsWorkbookTemplateSpec) DeepCopy() *ApplicationInsightsWorkbookTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWorkbookTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInsightsWorkbookTemplateStatus) DeepCopyInto(out *ApplicationInsightsWorkbookTemplateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInsightsWorkbookTemplateStatus.
func (in *ApplicationInsightsWorkbookTemplateStatus) DeepCopy() *ApplicationInsightsWorkbookTemplateStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationInsightsWorkbookTemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmRoleReceiverInitParameters) DeepCopyInto(out *ArmRoleReceiverInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RoleID != nil {
		in, out := &in.RoleID, &out.RoleID
		*out = new(string)
		**out = **in
	}
	if in.UseCommonAlertSchema != nil {
		in, out := &in.UseCommonAlertSchema, &out.UseCommonAlertSchema
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmRoleReceiverInitParameters.
func (in *ArmRoleReceiverInitParameters) DeepCopy() *ArmRoleReceiverInitParameters {
	if in == nil {
		return nil
	}
	out := new(ArmRoleReceiverInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmRoleReceiverObservation) DeepCopyInto(out *ArmRoleReceiverObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RoleID != nil {
		in, out := &in.RoleID, &out.RoleID
		*out = new(string)
		**out = **in
	}
	if in.UseCommonAlertSchema != nil {
		in, out := &in.UseCommonAlertSchema, &out.UseCommonAlertSchema
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmRoleReceiverObservation.
func (in *ArmRoleReceiverObservation) DeepCopy() *ArmRoleReceiverObservation {
	if in == nil {
		return nil
	}
	out := new(ArmRoleReceiverObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmRoleReceiverParameters) DeepCopyInto(out *ArmRoleReceiverParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RoleID != nil {
		in, out := &in.RoleID, &out.RoleID
		*out = new(string)
		**out = **in
	}
	if in.UseCommonAlertSchema != nil {
		in, out := &in.UseCommonAlertSchema, &out.UseCommonAlertSchema
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmRoleReceiverParameters.
func (in *ArmRoleReceiverParameters) DeepCopy() *ArmRoleReceiverParameters {
	if in == nil {
		return nil
	}
	out := new(ArmRoleReceiverParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationRunBookReceiverInitParameters) DeepCopyInto(out *AutomationRunBookReceiverInitParameters) {
	*out = *in
	if in.AutomationAccountID != nil {
		in, out := &in.AutomationAccountID, &out.AutomationAccountID
		*out = new(string)
		**out = **in
	}
	if in.IsGlobalRunBook != nil {
		in, out := &in.IsGlobalRunBook, &out.IsGlobalRunBook
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RunBookName != nil {
		in, out := &in.RunBookName, &out.RunBookName
		*out = new(string)
		**out = **in
	}
	if in.ServiceURI != nil {
		in, out := &in.ServiceURI, &out.ServiceURI
		*out = new(string)
		**out = **in
	}
	if in.UseCommonAlertSchema != nil {
		in, out := &in.UseCommonAlertSchema, &out.UseCommonAlertSchema
		*out = new(bool)
		**out = **in
	}
	if in.WebhookResourceID != nil {
		in, out := &in.WebhookResourceID, &out.WebhookResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationRunBookReceiverInitParameters.
func (in *AutomationRunBookReceiverInitParameters) DeepCopy() *AutomationRunBookReceiverInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutomationRunBookReceiverInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationRunBookReceiverObservation) DeepCopyInto(out *AutomationRunBookReceiverObservation) {
	*out = *in
	if in.AutomationAccountID != nil {
		in, out := &in.AutomationAccountID, &out.AutomationAccountID
		*out = new(string)
		**out = **in
	}
	if in.IsGlobalRunBook != nil {
		in, out := &in.IsGlobalRunBook, &out.IsGlobalRunBook
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RunBookName != nil {
		in, out := &in.RunBookName, &out.RunBookName
		*out = new(string)
		**out = **in
	}
	if in.ServiceURI != nil {
		in, out := &in.ServiceURI, &out.ServiceURI
		*out = new(string)
		**out = **in
	}
	if in.UseCommonAlertSchema != nil {
		in, out := &in.UseCommonAlertSchema, &out.UseCommonAlertSchema
		*out = new(bool)
		**out = **in
	}
	if in.WebhookResourceID != nil {
		in, out := &in.WebhookResourceID, &out.WebhookResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationRunBookReceiverObservation.
func (in *AutomationRunBookReceiverObservation) DeepCopy() *AutomationRunBookReceiverObservation {
	if in == nil {
		return nil
	}
	out := new(AutomationRunBookReceiverObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationRunBookReceiverParameters) DeepCopyInto(out *AutomationRunBookReceiverParameters) {
	*out = *in
	if in.AutomationAccountID != nil {
		in, out := &in.AutomationAccountID, &out.AutomationAccountID
		*out = new(string)
		**out = **in
	}
	if in.IsGlobalRunBook != nil {
		in, out := &in.IsGlobalRunBook, &out.IsGlobalRunBook
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RunBookName != nil {
		in, out := &in.RunBookName, &out.RunBookName
		*out = new(string)
		**out = **in
	}
	if in.ServiceURI != nil {
		in, out := &in.ServiceURI, &out.ServiceURI
		*out = new(string)
		**out = **in
	}
	if in.UseCommonAlertSchema != nil {
		in, out := &in.UseCommonAlertSchema, &out.UseCommonAlertSchema
		*out = new(bool)
		**out = **in
	}
	if in.WebhookResourceID != nil {
		in, out := &in.WebhookResourceID, &out.WebhookResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationRunBookReceiverParameters.
func (in *AutomationRunBookReceiverParameters) DeepCopy() *AutomationRunBookReceiverParameters {
	if in == nil {
		return nil
	}
	out := new(AutomationRunBookReceiverParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAppPushReceiverInitParameters) DeepCopyInto(out *AzureAppPushReceiverInitParameters) {
	*out = *in
	if in.EmailAddress != nil {
		in, out := &in.EmailAddress, &out.EmailAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAppPushReceiverInitParameters.
func (in *AzureAppPushReceiverInitParameters) DeepCopy() *AzureAppPushReceiverInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureAppPushReceiverInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAppPushReceiverObservation) DeepCopyInto(out *AzureAppPushReceiverObservation) {
	*out = *in
	if in.EmailAddress != nil {
		in, out := &in.EmailAddress, &out.EmailAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAppPushReceiverObservation.
func (in *AzureAppPushReceiverObservation) DeepCopy() *AzureAppPushReceiverObservation {
	if in == nil {
		return nil
	}
	out := new(AzureAppPushReceiverObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureAppPushReceiverParameters) DeepCopyInto(out *AzureAppPushReceiverParameters) {
	*out = *in
	if in.EmailAddress != nil {
		in, out := &in.EmailAddress, &out.EmailAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureAppPushReceiverParameters.
func (in *AzureAppPushReceiverParameters) DeepCopy() *AzureAppPushReceiverParameters {
	if in == nil {
		return nil
	}
	out := new(AzureAppPushReceiverParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFunctionReceiverInitParameters) DeepCopyInto(out *AzureFunctionReceiverInitParameters) {
	*out = *in
	if in.FunctionAppResourceID != nil {
		in, out := &in.FunctionAppResourceID, &out.FunctionAppResourceID
		*out = new(string)
		**out = **in
	}
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.HTTPTriggerURL != nil {
		in, out := &in.HTTPTriggerURL, &out.HTTPTriggerURL
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UseCommonAlertSchema != nil {
		in, out := &in.UseCommonAlertSchema, &out.UseCommonAlertSchema
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFunctionReceiverInitParameters.
func (in *AzureFunctionReceiverInitParameters) DeepCopy() *AzureFunctionReceiverInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureFunctionReceiverInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFunctionReceiverObservation) DeepCopyInto(out *AzureFunctionReceiverObservation) {
	*out = *in
	if in.FunctionAppResourceID != nil {
		in, out := &in.FunctionAppResourceID, &out.FunctionAppResourceID
		*out = new(string)
		**out = **in
	}
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.HTTPTriggerURL != nil {
		in, out := &in.HTTPTriggerURL, &out.HTTPTriggerURL
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UseCommonAlertSchema != nil {
		in, out := &in.UseCommonAlertSchema, &out.UseCommonAlertSchema
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFunctionReceiverObservation.
func (in *AzureFunctionReceiverObservation) DeepCopy() *AzureFunctionReceiverObservation {
	if in == nil {
		return nil
	}
	out := new(AzureFunctionReceiverObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFunctionReceiverParameters) DeepCopyInto(out *AzureFunctionReceiverParameters) {
	*out = *in
	if in.FunctionAppResourceID != nil {
		in, out := &in.FunctionAppResourceID, &out.FunctionAppResourceID
		*out = new(string)
		**out = **in
	}
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.HTTPTriggerURL != nil {
		in, out := &in.HTTPTriggerURL, &out.HTTPTriggerURL
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UseCommonAlertSchema != nil {
		in, out := &in.UseCommonAlertSchema, &out.UseCommonAlertSchema
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFunctionReceiverParameters.
func (in *AzureFunctionReceiverParameters) DeepCopy() *AzureFunctionReceiverParameters {
	if in == nil {
		return nil
	}
	out := new(AzureFunctionReceiverParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureMonitorMetricsInitParameters) DeepCopyInto(out *AzureMonitorMetricsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureMonitorMetricsInitParameters.
func (in *AzureMonitorMetricsInitParameters) DeepCopy() *AzureMonitorMetricsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureMonitorMetricsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureMonitorMetricsObservation) DeepCopyInto(out *AzureMonitorMetricsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureMonitorMetricsObservation.
func (in *AzureMonitorMetricsObservation) DeepCopy() *AzureMonitorMetricsObservation {
	if in == nil {
		return nil
	}
	out := new(AzureMonitorMetricsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureMonitorMetricsParameters) DeepCopyInto(out *AzureMonitorMetricsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureMonitorMetricsParameters.
func (in *AzureMonitorMetricsParameters) DeepCopy() *AzureMonitorMetricsParameters {
	if in == nil {
		return nil
	}
	out := new(AzureMonitorMetricsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityInitParameters) DeepCopyInto(out *CapacityInitParameters) {
	*out = *in
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(float64)
		**out = **in
	}
	if in.Maximum != nil {
		in, out := &in.Maximum, &out.Maximum
		*out = new(float64)
		**out = **in
	}
	if in.Minimum != nil {
		in, out := &in.Minimum, &out.Minimum
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityInitParameters.
func (in *CapacityInitParameters) DeepCopy() *CapacityInitParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityObservation) DeepCopyInto(out *CapacityObservation) {
	*out = *in
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(float64)
		**out = **in
	}
	if in.Maximum != nil {
		in, out := &in.Maximum, &out.Maximum
		*out = new(float64)
		**out = **in
	}
	if in.Minimum != nil {
		in, out := &in.Minimum, &out.Minimum
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityObservation.
func (in *CapacityObservation) DeepCopy() *CapacityObservation {
	if in == nil {
		return nil
	}
	out := new(CapacityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityParameters) DeepCopyInto(out *CapacityParameters) {
	*out = *in
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(float64)
		**out = **in
	}
	if in.Maximum != nil {
		in, out := &in.Maximum, &out.Maximum
		*out = new(float64)
		**out = **in
	}
	if in.Minimum != nil {
		in, out := &in.Minimum, &out.Minimum
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityParameters.
func (in *CapacityParameters) DeepCopy() *CapacityParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnInitParameters) DeepCopyInto(out *ColumnInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnInitParameters.
func (in *ColumnInitParameters) DeepCopy() *ColumnInitParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnObservation) DeepCopyInto(out *ColumnObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnObservation.
func (in *ColumnObservation) DeepCopy() *ColumnObservation {
	if in == nil {
		return nil
	}
	out := new(ColumnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnParameters) DeepCopyInto(out *ColumnParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnParameters.
func (in *ColumnParameters) DeepCopy() *ColumnParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContentInitParameters) DeepCopyInto(out *ContentInitParameters) {
	*out = *in
	if in.ContentMatch != nil {
		in, out := &in.ContentMatch, &out.ContentMatch
		*out = new(string)
		**out = **in
	}
	if in.IgnoreCase != nil {
		in, out := &in.IgnoreCase, &out.IgnoreCase
		*out = new(bool)
		**out = **in
	}
	if in.PassIfTextFound != nil {
		in, out := &in.PassIfTextFound, &out.PassIfTextFound
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContentInitParameters.
func (in *ContentInitParameters) DeepCopy() *ContentInitParameters {
	if in == nil {
		return nil
	}
	out := new(ContentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContentObservation) DeepCopyInto(out *ContentObservation) {
	*out = *in
	if in.ContentMatch != nil {
		in, out := &in.ContentMatch, &out.ContentMatch
		*out = new(string)
		**out = **in
	}
	if in.IgnoreCase != nil {
		in, out := &in.IgnoreCase, &out.IgnoreCase
		*out = new(bool)
		**out = **in
	}
	if in.PassIfTextFound != nil {
		in, out := &in.PassIfTextFound, &out.PassIfTextFound
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContentObservation.
func (in *ContentObservation) DeepCopy() *ContentObservation {
	if in == nil {
		return nil
	}
	out := new(ContentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContentParameters) DeepCopyInto(out *ContentParameters) {
	*out = *in
	if in.ContentMatch != nil {
		in, out := &in.ContentMatch, &out.ContentMatch
		*out = new(string)
		**out = **in
	}
	if in.IgnoreCase != nil {
		in, out := &in.IgnoreCase, &out.IgnoreCase
		*out = new(bool)
		**out = **in
	}
	if in.PassIfTextFound != nil {
		in, out := &in.PassIfTextFound, &out.PassIfTextFound
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContentParameters.
func (in *ContentParameters) DeepCopy() *ContentParameters {
	if in == nil {
		return nil
	}
	out := new(ContentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CriteriaDimensionInitParameters) DeepCopyInto(out *CriteriaDimensionInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CriteriaDimensionInitParameters.
func (in *CriteriaDimensionInitParameters) DeepCopy() *CriteriaDimensionInitParameters {
	if in == nil {
		return nil
	}
	out := new(CriteriaDimensionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CriteriaDimensionObservation) DeepCopyInto(out *CriteriaDimensionObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CriteriaDimensionObservation.
func (in *CriteriaDimensionObservation) DeepCopy() *CriteriaDimensionObservation {
	if in == nil {
		return nil
	}
	out := new(CriteriaDimensionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CriteriaDimensionParameters) DeepCopyInto(out *CriteriaDimensionParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CriteriaDimensionParameters.
func (in *CriteriaDimensionParameters) DeepCopy() *CriteriaDimensionParameters {
	if in == nil {
		return nil
	}
	out := new(CriteriaDimensionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CriteriaInitParameters) DeepCopyInto(out *CriteriaInitParameters) {
	*out = *in
	if in.Caller != nil {
		in, out := &in.Caller, &out.Caller
		*out = new(string)
		**out = **in
	}
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.OperationName != nil {
		in, out := &in.OperationName, &out.OperationName
		*out = new(string)
		**out = **in
	}
	if in.RecommendationCategory != nil {
		in, out := &in.RecommendationCategory, &out.RecommendationCategory
		*out = new(string)
		**out = **in
	}
	if in.RecommendationImpact != nil {
		in, out := &in.RecommendationImpact, &out.RecommendationImpact
		*out = new(string)
		**out = **in
	}
	if in.RecommendationType != nil {
		in, out := &in.RecommendationType, &out.RecommendationType
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.ResourceHealth != nil {
		in, out := &in.ResourceHealth, &out.ResourceHealth
		*out = make([]ResourceHealthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceProvider != nil {
		in, out := &in.ResourceProvider, &out.ResourceProvider
		*out = new(string)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.ServiceHealth != nil {
		in, out := &in.ServiceHealth, &out.ServiceHealth
		*out = make([]ServiceHealthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SubStatus != nil {
		in, out := &in.SubStatus, &out.SubStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CriteriaInitParameters.
func (in *CriteriaInitParameters) DeepCopy() *CriteriaInitParameters {
	if in == nil {
		return nil
	}
	out := new(CriteriaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CriteriaObservation) DeepCopyInto(out *CriteriaObservation) {
	*out = *in
	if in.Caller != nil {
		in, out := &in.Caller, &out.Caller
		*out = new(string)
		**out = **in
	}
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.OperationName != nil {
		in, out := &in.OperationName, &out.OperationName
		*out = new(string)
		**out = **in
	}
	if in.RecommendationCategory != nil {
		in, out := &in.RecommendationCategory, &out.RecommendationCategory
		*out = new(string)
		**out = **in
	}
	if in.RecommendationImpact != nil {
		in, out := &in.RecommendationImpact, &out.RecommendationImpact
		*out = new(string)
		**out = **in
	}
	if in.RecommendationType != nil {
		in, out := &in.RecommendationType, &out.RecommendationType
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.ResourceHealth != nil {
		in, out := &in.ResourceHealth, &out.ResourceHealth
		*out = make([]ResourceHealthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.ResourceProvider != nil {
		in, out := &in.ResourceProvider, &out.ResourceProvider
		*out = new(string)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.ServiceHealth != nil {
		in, out := &in.ServiceHealth, &out.ServiceHealth
		*out = make([]ServiceHealthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SubStatus != nil {
		in, out := &in.SubStatus, &out.SubStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CriteriaObservation.
func (in *CriteriaObservation) DeepCopy() *CriteriaObservation {
	if in == nil {
		return nil
	}
	out := new(CriteriaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CriteriaParameters) DeepCopyInto(out *CriteriaParameters) {
	*out = *in
	if in.Caller != nil {
		in, out := &in.Caller, &out.Caller
		*out = new(string)
		**out = **in
	}
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.OperationName != nil {
		in, out := &in.OperationName, &out.OperationName
		*out = new(string)
		**out = **in
	}
	if in.RecommendationCategory != nil {
		in, out := &in.RecommendationCategory, &out.RecommendationCategory
		*out = new(string)
		**out = **in
	}
	if in.RecommendationImpact != nil {
		in, out := &in.RecommendationImpact, &out.RecommendationImpact
		*out = new(string)
		**out = **in
	}
	if in.RecommendationType != nil {
		in, out := &in.RecommendationType, &out.RecommendationType
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.ResourceHealth != nil {
		in, out := &in.ResourceHealth, &out.ResourceHealth
		*out = make([]ResourceHealthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.ResourceIDRef != nil {
		in, out := &in.ResourceIDRef, &out.ResourceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceIDSelector != nil {
		in, out := &in.ResourceIDSelector, &out.ResourceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceProvider != nil {
		in, out := &in.ResourceProvider, &out.ResourceProvider
		*out = new(string)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.ServiceHealth != nil {
		in, out := &in.ServiceHealth, &out.ServiceHealth
		*out = make([]ServiceHealthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SubStatus != nil {
		in, out := &in.SubStatus, &out.SubStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CriteriaParameters.
func (in *CriteriaParameters) DeepCopy() *CriteriaParameters {
	if in == nil {
		return nil
	}
	out := new(CriteriaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataFlowInitParameters) DeepCopyInto(out *DataFlowInitParameters) {
	*out = *in
	if in.BuiltInTransform != nil {
		in, out := &in.BuiltInTransform, &out.BuiltInTransform
		*out = new(string)
		**out = **in
	}
	if in.Destinations != nil {
		in, out := &in.Destinations, &out.Destinations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OutputStream != nil {
		in, out := &in.OutputStream, &out.OutputStream
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TransformKql != nil {
		in, out := &in.TransformKql, &out.TransformKql
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataFlowInitParameters.
func (in *DataFlowInitParameters) DeepCopy() *DataFlowInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataFlowInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataFlowObservation) DeepCopyInto(out *DataFlowObservation) {
	*out = *in
	if in.BuiltInTransform != nil {
		in, out := &in.BuiltInTransform, &out.BuiltInTransform
		*out = new(string)
		**out = **in
	}
	if in.Destinations != nil {
		in, out := &in.Destinations, &out.Destinations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OutputStream != nil {
		in, out := &in.OutputStream, &out.OutputStream
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TransformKql != nil {
		in, out := &in.TransformKql, &out.TransformKql
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataFlowObservation.
func (in *DataFlowObservation) DeepCopy() *DataFlowObservation {
	if in == nil {
		return nil
	}
	out := new(DataFlowObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataFlowParameters) DeepCopyInto(out *DataFlowParameters) {
	*out = *in
	if in.BuiltInTransform != nil {
		in, out := &in.BuiltInTransform, &out.BuiltInTransform
		*out = new(string)
		**out = **in
	}
	if in.Destinations != nil {
		in, out := &in.Destinations, &out.Destinations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OutputStream != nil {
		in, out := &in.OutputStream, &out.OutputStream
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TransformKql != nil {
		in, out := &in.TransformKql, &out.TransformKql
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataFlowParameters.
func (in *DataFlowParameters) DeepCopy() *DataFlowParameters {
	if in == nil {
		return nil
	}
	out := new(DataFlowParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataImportInitParameters) DeepCopyInto(out *DataImportInitParameters) {
	*out = *in
	if in.EventHubDataSource != nil {
		in, out := &in.EventHubDataSource, &out.EventHubDataSource
		*out = make([]EventHubDataSourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataImportInitParameters.
func (in *DataImportInitParameters) DeepCopy() *DataImportInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataImportInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataImportObservation) DeepCopyInto(out *DataImportObservation) {
	*out = *in
	if in.EventHubDataSource != nil {
		in, out := &in.EventHubDataSource, &out.EventHubDataSource
		*out = make([]EventHubDataSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataImportObservation.
func (in *DataImportObservation) DeepCopy() *DataImportObservation {
	if in == nil {
		return nil
	}
	out := new(DataImportObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataImportParameters) DeepCopyInto(out *DataImportParameters) {
	*out = *in
	if in.EventHubDataSource != nil {
		in, out := &in.EventHubDataSource, &out.EventHubDataSource
		*out = make([]EventHubDataSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataImportParameters.
func (in *DataImportParameters) DeepCopy() *DataImportParameters {
	if in == nil {
		return nil
	}
	out := new(DataImportParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSourcesInitParameters) DeepCopyInto(out *DataSourcesInitParameters) {
	*out = *in
	if in.DataImport != nil {
		in, out := &in.DataImport, &out.DataImport
		*out = make([]DataImportInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Extension != nil {
		in, out := &in.Extension, &out.Extension
		*out = make([]ExtensionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IisLog != nil {
		in, out := &in.IisLog, &out.IisLog
		*out = make([]IisLogInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogFile != nil {
		in, out := &in.LogFile, &out.LogFile
		*out = make([]LogFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PerformanceCounter != nil {
		in, out := &in.PerformanceCounter, &out.PerformanceCounter
		*out = make([]PerformanceCounterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlatformTelemetry != nil {
		in, out := &in.PlatformTelemetry, &out.PlatformTelemetry
		*out = make([]PlatformTelemetryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrometheusForwarder != nil {
		in, out := &in.PrometheusForwarder, &out.PrometheusForwarder
		*out = make([]PrometheusForwarderInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Syslog != nil {
		in, out := &in.Syslog, &out.Syslog
		*out = make([]SyslogInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WindowsEventLog != nil {
		in, out := &in.WindowsEventLog, &out.WindowsEventLog
		*out = make([]WindowsEventLogInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WindowsFirewallLog != nil {
		in, out := &in.WindowsFirewallLog, &out.WindowsFirewallLog
		*out = make([]WindowsFirewallLogInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSourcesInitParameters.
func (in *DataSourcesInitParameters) DeepCopy() *DataSourcesInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataSourcesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSourcesObservation) DeepCopyInto(out *DataSourcesObservation) {
	*out = *in
	if in.DataImport != nil {
		in, out := &in.DataImport, &out.DataImport
		*out = make([]DataImportObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Extension != nil {
		in, out := &in.Extension, &out.Extension
		*out = make([]ExtensionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IisLog != nil {
		in, out := &in.IisLog, &out.IisLog
		*out = make([]IisLogObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogFile != nil {
		in, out := &in.LogFile, &out.LogFile
		*out = make([]LogFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PerformanceCounter != nil {
		in, out := &in.PerformanceCounter, &out.PerformanceCounter
		*out = make([]PerformanceCounterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlatformTelemetry != nil {
		in, out := &in.PlatformTelemetry, &out.PlatformTelemetry
		*out = make([]PlatformTelemetryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrometheusForwarder != nil {
		in, out := &in.PrometheusForwarder, &out.PrometheusForwarder
		*out = make([]PrometheusForwarderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Syslog != nil {
		in, out := &in.Syslog, &out.Syslog
		*out = make([]SyslogObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WindowsEventLog != nil {
		in, out := &in.WindowsEventLog, &out.WindowsEventLog
		*out = make([]WindowsEventLogObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WindowsFirewallLog != nil {
		in, out := &in.WindowsFirewallLog, &out.WindowsFirewallLog
		*out = make([]WindowsFirewallLogObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSourcesObservation.
func (in *DataSourcesObservation) DeepCopy() *DataSourcesObservation {
	if in == nil {
		return nil
	}
	out := new(DataSourcesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSourcesParameters) DeepCopyInto(out *DataSourcesParameters) {
	*out = *in
	if in.DataImport != nil {
		in, out := &in.DataImport, &out.DataImport
		*out = make([]DataImportParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Extension != nil {
		in, out := &in.Extension, &out.Extension
		*out = make([]ExtensionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IisLog != nil {
		in, out := &in.IisLog, &out.IisLog
		*out = make([]IisLogParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogFile != nil {
		in, out := &in.LogFile, &out.LogFile
		*out = make([]LogFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PerformanceCounter != nil {
		in, out := &in.PerformanceCounter, &out.PerformanceCounter
		*out = make([]PerformanceCounterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlatformTelemetry != nil {
		in, out := &in.PlatformTelemetry, &out.PlatformTelemetry
		*out = make([]PlatformTelemetryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrometheusForwarder != nil {
		in, out := &in.PrometheusForwarder, &out.PrometheusForwarder
		*out = make([]PrometheusForwarderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Syslog != nil {
		in, out := &in.Syslog, &out.Syslog
		*out = make([]SyslogParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WindowsEventLog != nil {
		in, out := &in.WindowsEventLog, &out.WindowsEventLog
		*out = make([]WindowsEventLogParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WindowsFirewallLog != nil {
		in, out := &in.WindowsFirewallLog, &out.WindowsFirewallLog
		*out = make([]WindowsFirewallLogParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSourcesParameters.
func (in *DataSourcesParameters) DeepCopy() *DataSourcesParameters {
	if in == nil {
		return nil
	}
	out := new(DataSourcesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationsInitParameters) DeepCopyInto(out *DestinationsInitParameters) {
	*out = *in
	if in.AzureMonitorMetrics != nil {
		in, out := &in.AzureMonitorMetrics, &out.AzureMonitorMetrics
		*out = make([]AzureMonitorMetricsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EventHub != nil {
		in, out := &in.EventHub, &out.EventHub
		*out = make([]EventHubInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EventHubDirect != nil {
		in, out := &in.EventHubDirect, &out.EventHubDirect
		*out = make([]EventHubDirectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogAnalytics != nil {
		in, out := &in.LogAnalytics, &out.LogAnalytics
		*out = make([]LogAnalyticsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MonitorAccount != nil {
		in, out := &in.MonitorAccount, &out.MonitorAccount
		*out = make([]MonitorAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageBlob != nil {
		in, out := &in.StorageBlob, &out.StorageBlob
		*out = make([]StorageBlobInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageBlobDirect != nil {
		in, out := &in.StorageBlobDirect, &out.StorageBlobDirect
		*out = make([]StorageBlobDirectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageTableDirect != nil {
		in, out := &in.StorageTableDirect, &out.StorageTableDirect
		*out = make([]StorageTableDirectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationsInitParameters.
func (in *DestinationsInitParameters) DeepCopy() *DestinationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationsObservation) DeepCopyInto(out *DestinationsObservation) {
	*out = *in
	if in.AzureMonitorMetrics != nil {
		in, out := &in.AzureMonitorMetrics, &out.AzureMonitorMetrics
		*out = make([]AzureMonitorMetricsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EventHub != nil {
		in, out := &in.EventHub, &out.EventHub
		*out = make([]EventHubObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EventHubDirect != nil {
		in, out := &in.EventHubDirect, &out.EventHubDirect
		*out = make([]EventHubDirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogAnalytics != nil {
		in, out := &in.LogAnalytics, &out.LogAnalytics
		*out = make([]LogAnalyticsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MonitorAccount != nil {
		in, out := &in.MonitorAccount, &out.MonitorAccount
		*out = make([]MonitorAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageBlob != nil {
		in, out := &in.StorageBlob, &out.StorageBlob
		*out = make([]StorageBlobObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageBlobDirect != nil {
		in, out := &in.StorageBlobDirect, &out.StorageBlobDirect
		*out = make([]StorageBlobDirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageTableDirect != nil {
		in, out := &in.StorageTableDirect, &out.StorageTableDirect
		*out = make([]StorageTableDirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationsObservation.
func (in *DestinationsObservation) DeepCopy() *DestinationsObservation {
	if in == nil {
		return nil
	}
	out := new(DestinationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationsParameters) DeepCopyInto(out *DestinationsParameters) {
	*out = *in
	if in.AzureMonitorMetrics != nil {
		in, out := &in.AzureMonitorMetrics, &out.AzureMonitorMetrics
		*out = make([]AzureMonitorMetricsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EventHub != nil {
		in, out := &in.EventHub, &out.EventHub
		*out = make([]EventHubParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EventHubDirect != nil {
		in, out := &in.EventHubDirect, &out.EventHubDirect
		*out = make([]EventHubDirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogAnalytics != nil {
		in, out := &in.LogAnalytics, &out.LogAnalytics
		*out = make([]LogAnalyticsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MonitorAccount != nil {
		in, out := &in.MonitorAccount, &out.MonitorAccount
		*out = make([]MonitorAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageBlob != nil {
		in, out := &in.StorageBlob, &out.StorageBlob
		*out = make([]StorageBlobParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageBlobDirect != nil {
		in, out := &in.StorageBlobDirect, &out.StorageBlobDirect
		*out = make([]StorageBlobDirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageTableDirect != nil {
		in, out := &in.StorageTableDirect, &out.StorageTableDirect
		*out = make([]StorageTableDirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationsParameters.
func (in *DestinationsParameters) DeepCopy() *DestinationsParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DimensionInitParameters) DeepCopyInto(out *DimensionInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DimensionInitParameters.
func (in *DimensionInitParameters) DeepCopy() *DimensionInitParameters {
	if in == nil {
		return nil
	}
	out := new(DimensionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DimensionObservation) DeepCopyInto(out *DimensionObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DimensionObservation.
func (in *DimensionObservation) DeepCopy() *DimensionObservation {
	if in == nil {
		return nil
	}
	out := new(DimensionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DimensionParameters) DeepCopyInto(out *DimensionParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DimensionParameters.
func (in *DimensionParameters) DeepCopy() *DimensionParameters {
	if in == nil {
		return nil
	}
	out := new(DimensionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DimensionsInitParameters) DeepCopyInto(out *DimensionsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DimensionsInitParameters.
func (in *DimensionsInitParameters) DeepCopy() *DimensionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DimensionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DimensionsObservation) DeepCopyInto(out *DimensionsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DimensionsObservation.
func (in *DimensionsObservation) DeepCopy() *DimensionsObservation {
	if in == nil {
		return nil
	}
	out := new(DimensionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DimensionsParameters) DeepCopyInto(out *DimensionsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DimensionsParameters.
func (in *DimensionsParameters) DeepCopy() *DimensionsParameters {
	if in == nil {
		return nil
	}
	out := new(DimensionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicCriteriaDimensionInitParameters) DeepCopyInto(out *DynamicCriteriaDimensionInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicCriteriaDimensionInitParameters.
func (in *DynamicCriteriaDimensionInitParameters) DeepCopy() *DynamicCriteriaDimensionInitParameters {
	if in == nil {
		return nil
	}
	out := new(DynamicCriteriaDimensionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicCriteriaDimensionObservation) DeepCopyInto(out *DynamicCriteriaDimensionObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicCriteriaDimensionObservation.
func (in *DynamicCriteriaDimensionObservation) DeepCopy() *DynamicCriteriaDimensionObservation {
	if in == nil {
		return nil
	}
	out := new(DynamicCriteriaDimensionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicCriteriaDimensionParameters) DeepCopyInto(out *DynamicCriteriaDimensionParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicCriteriaDimensionParameters.
func (in *DynamicCriteriaDimensionParameters) DeepCopy() *DynamicCriteriaDimensionParameters {
	if in == nil {
		return nil
	}
	out := new(DynamicCriteriaDimensionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicCriteriaInitParameters) DeepCopyInto(out *DynamicCriteriaInitParameters) {
	*out = *in
	if in.Aggregation != nil {
		in, out := &in.Aggregation, &out.Aggregation
		*out = new(string)
		**out = **in
	}
	if in.AlertSensitivity != nil {
		in, out := &in.AlertSensitivity, &out.AlertSensitivity
		*out = new(string)
		**out = **in
	}
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = make([]DynamicCriteriaDimensionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EvaluationFailureCount != nil {
		in, out := &in.EvaluationFailureCount, &out.EvaluationFailureCount
		*out = new(float64)
		**out = **in
	}
	if in.EvaluationTotalCount != nil {
		in, out := &in.EvaluationTotalCount, &out.EvaluationTotalCount
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreDataBefore != nil {
		in, out := &in.IgnoreDataBefore, &out.IgnoreDataBefore
		*out = new(string)
		**out = **in
	}
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.MetricNamespace != nil {
		in, out := &in.MetricNamespace, &out.MetricNamespace
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.SkipMetricValidation != nil {
		in, out := &in.SkipMetricValidation, &out.SkipMetricValidation
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicCriteriaInitParameters.
func (in *DynamicCriteriaInitParameters) DeepCopy() *DynamicCriteriaInitParameters {
	if in == nil {
		return nil
	}
	out := new(DynamicCriteriaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicCriteriaObservation) DeepCopyInto(out *DynamicCriteriaObservation) {
	*out = *in
	if in.Aggregation != nil {
		in, out := &in.Aggregation, &out.Aggregation
		*out = new(string)
		**out = **in
	}
	if in.AlertSensitivity != nil {
		in, out := &in.AlertSensitivity, &out.AlertSensitivity
		*out = new(string)
		**out = **in
	}
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = make([]DynamicCriteriaDimensionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EvaluationFailureCount != nil {
		in, out := &in.EvaluationFailureCount, &out.EvaluationFailureCount
		*out = new(float64)
		**out = **in
	}
	if in.EvaluationTotalCount != nil {
		in, out := &in.EvaluationTotalCount, &out.EvaluationTotalCount
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreDataBefore != nil {
		in, out := &in.IgnoreDataBefore, &out.IgnoreDataBefore
		*out = new(string)
		**out = **in
	}
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.MetricNamespace != nil {
		in, out := &in.MetricNamespace, &out.MetricNamespace
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.SkipMetricValidation != nil {
		in, out := &in.SkipMetricValidation, &out.SkipMetricValidation
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicCriteriaObservation.
func (in *DynamicCriteriaObservation) DeepCopy() *DynamicCriteriaObservation {
	if in == nil {
		return nil
	}
	out := new(DynamicCriteriaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicCriteriaParameters) DeepCopyInto(out *DynamicCriteriaParameters) {
	*out = *in
	if in.Aggregation != nil {
		in, out := &in.Aggregation, &out.Aggregation
		*out = new(string)
		**out = **in
	}
	if in.AlertSensitivity != nil {
		in, out := &in.AlertSensitivity, &out.AlertSensitivity
		*out = new(string)
		**out = **in
	}
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = make([]DynamicCriteriaDimensionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EvaluationFailureCount != nil {
		in, out := &in.EvaluationFailureCount, &out.EvaluationFailureCount
		*out = new(float64)
		**out = **in
	}
	if in.EvaluationTotalCount != nil {
		in, out := &in.EvaluationTotalCount, &out.EvaluationTotalCount
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreDataBefore != nil {
		in, out := &in.IgnoreDataBefore, &out.IgnoreDataBefore
		*out = new(string)
		**out = **in
	}
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.MetricNamespace != nil {
		in, out := &in.MetricNamespace, &out.MetricNamespace
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.SkipMetricValidation != nil {
		in, out := &in.SkipMetricValidation, &out.SkipMetricValidation
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicCriteriaParameters.
func (in *DynamicCriteriaParameters) DeepCopy() *DynamicCriteriaParameters {
	if in == nil {
		return nil
	}
	out := new(DynamicCriteriaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailInitParameters) DeepCopyInto(out *EmailInitParameters) {
	*out = *in
	if in.CustomEmails != nil {
		in, out := &in.CustomEmails, &out.CustomEmails
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SendToSubscriptionAdministrator != nil {
		in, out := &in.SendToSubscriptionAdministrator, &out.SendToSubscriptionAdministrator
		*out = new(bool)
		**out = **in
	}
	if in.SendToSubscriptionCoAdministrator != nil {
		in, out := &in.SendToSubscriptionCoAdministrator, &out.SendToSubscriptionCoAdministrator
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailInitParameters.
func (in *EmailInitParameters) DeepCopy() *EmailInitParameters {
	if in == nil {
		return nil
	}
	out := new(EmailInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailObservation) DeepCopyInto(out *EmailObservation) {
	*out = *in
	if in.CustomEmails != nil {
		in, out := &in.CustomEmails, &out.CustomEmails
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SendToSubscriptionAdministrator != nil {
		in, out := &in.SendToSubscriptionAdministrator, &out.SendToSubscriptionAdministrator
		*out = new(bool)
		**out = **in
	}
	if in.SendToSubscriptionCoAdministrator != nil {
		in, out := &in.SendToSubscriptionCoAdministrator, &out.SendToSubscriptionCoAdministrator
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailObservation.
func (in *EmailObservation) DeepCopy() *EmailObservation {
	if in == nil {
		return nil
	}
	out := new(EmailObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailParameters) DeepCopyInto(out *EmailParameters) {
	*out = *in
	if in.CustomEmails != nil {
		in, out := &in.CustomEmails, &out.CustomEmails
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SendToSubscriptionAdministrator != nil {
		in, out := &in.SendToSubscriptionAdministrator, &out.SendToSubscriptionAdministrator
		*out = new(bool)
		**out = **in
	}
	if in.SendToSubscriptionCoAdministrator != nil {
		in, out := &in.SendToSubscriptionCoAdministrator, &out.SendToSubscriptionCoAdministrator
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailParameters.
func (in *EmailParameters) DeepCopy() *EmailParameters {
	if in == nil {
		return nil
	}
	out := new(EmailParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailReceiverInitParameters) DeepCopyInto(out *EmailReceiverInitParameters) {
	*out = *in
	if in.EmailAddress != nil {
		in, out := &in.EmailAddress, &out.EmailAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UseCommonAlertSchema != nil {
		in, out := &in.UseCommonAlertSchema, &out.UseCommonAlertSchema
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailReceiverInitParameters.
func (in *EmailReceiverInitParameters) DeepCopy() *EmailReceiverInitParameters {
	if in == nil {
		return nil
	}
	out := new(EmailReceiverInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailReceiverObservation) DeepCopyInto(out *EmailReceiverObservation) {
	*out = *in
	if in.EmailAddress != nil {
		in, out := &in.EmailAddress, &out.EmailAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UseCommonAlertSchema != nil {
		in, out := &in.UseCommonAlertSchema, &out.UseCommonAlertSchema
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailReceiverObservation.
func (in *EmailReceiverObservation) DeepCopy() *EmailReceiverObservation {
	if in == nil {
		return nil
	}
	out := new(EmailReceiverObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailReceiverParameters) DeepCopyInto(out *EmailReceiverParameters) {
	*out = *in
	if in.EmailAddress != nil {
		in, out := &in.EmailAddress, &out.EmailAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UseCommonAlertSchema != nil {
		in, out := &in.UseCommonAlertSchema, &out.UseCommonAlertSchema
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailReceiverParameters.
func (in *EmailReceiverParameters) DeepCopy() *EmailReceiverParameters {
	if in == nil {
		return nil
	}
	out := new(EmailReceiverParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnabledLogInitParameters) DeepCopyInto(out *EnabledLogInitParameters) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.CategoryGroup != nil {
		in, out := &in.CategoryGroup, &out.CategoryGroup
		*out = new(string)
		**out = **in
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = make([]RetentionPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnabledLogInitParameters.
func (in *EnabledLogInitParameters) DeepCopy() *EnabledLogInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnabledLogInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnabledLogObservation) DeepCopyInto(out *EnabledLogObservation) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.CategoryGroup != nil {
		in, out := &in.CategoryGroup, &out.CategoryGroup
		*out = new(string)
		**out = **in
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = make([]RetentionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnabledLogObservation.
func (in *EnabledLogObservation) DeepCopy() *EnabledLogObservation {
	if in == nil {
		return nil
	}
	out := new(EnabledLogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnabledLogParameters) DeepCopyInto(out *EnabledLogParameters) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.CategoryGroup != nil {
		in, out := &in.CategoryGroup, &out.CategoryGroup
		*out = new(string)
		**out = **in
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = make([]RetentionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnabledLogParameters.
func (in *EnabledLogParameters) DeepCopy() *EnabledLogParameters {
	if in == nil {
		return nil
	}
	out := new(EnabledLogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventHubDataSourceInitParameters) DeepCopyInto(out *EventHubDataSourceInitParameters) {
	*out = *in
	if in.ConsumerGroup != nil {
		in, out := &in.ConsumerGroup, &out.ConsumerGroup
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Stream != nil {
		in, out := &in.Stream, &out.Stream
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventHubDataSourceInitParameters.
func (in *EventHubDataSourceInitParameters) DeepCopy() *EventHubDataSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(EventHubDataSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventHubDataSourceObservation) DeepCopyInto(out *EventHubDataSourceObservation) {
	*out = *in
	if in.ConsumerGroup != nil {
		in, out := &in.ConsumerGroup, &out.ConsumerGroup
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Stream != nil {
		in, out := &in.Stream, &out.Stream
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventHubDataSourceObservation.
func (in *EventHubDataSourceObservation) DeepCopy() *EventHubDataSourceObservation {
	if in == nil {
		return nil
	}
	out := new(EventHubDataSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventHubDataSourceParameters) DeepCopyInto(out *EventHubDataSourceParameters) {
	*out = *in
	if in.ConsumerGroup != nil {
		in, out := &in.ConsumerGroup, &out.ConsumerGroup
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Stream != nil {
		in, out := &in.Stream, &out.Stream
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventHubDataSourceParameters.
func (in *EventHubDataSourceParameters) DeepCopy() *EventHubDataSourceParameters {
	if in == nil {
		return nil
	}
	out := new(EventHubDataSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventHubDirectInitParameters) DeepCopyInto(out *EventHubDirectInitParameters) {
	*out = *in
	if in.EventHubID != nil {
		in, out := &in.EventHubID, &out.EventHubID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventHubDirectInitParameters.
func (in *EventHubDirectInitParameters) DeepCopy() *EventHubDirectInitParameters {
	if in == nil {
		return nil
	}
	out := new(EventHubDirectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventHubDirectObservation) DeepCopyInto(out *EventHubDirectObservation) {
	*out = *in
	if in.EventHubID != nil {
		in, out := &in.EventHubID, &out.EventHubID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventHubDirectObservation.
func (in *EventHubDirectObservation) DeepCopy() *EventHubDirectObservation {
	if in == nil {
		return nil
	}
	out := new(EventHubDirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventHubDirectParameters) DeepCopyInto(out *EventHubDirectParameters) {
	*out = *in
	if in.EventHubID != nil {
		in, out := &in.EventHubID, &out.EventHubID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventHubDirectParameters.
func (in *EventHubDirectParameters) DeepCopy() *EventHubDirectParameters {
	if in == nil {
		return nil
	}
	out := new(EventHubDirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventHubInitParameters) DeepCopyInto(out *EventHubInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventHubInitParameters.
func (in *EventHubInitParameters) DeepCopy() *EventHubInitParameters {
	if in == nil {
		return nil
	}
	out := new(EventHubInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventHubObservation) DeepCopyInto(out *EventHubObservation) {
	*out = *in
	if in.EventHubID != nil {
		in, out := &in.EventHubID, &out.EventHubID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventHubObservation.
func (in *EventHubObservation) DeepCopy() *EventHubObservation {
	if in == nil {
		return nil
	}
	out := new(EventHubObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventHubParameters) DeepCopyInto(out *EventHubParameters) {
	*out = *in
	if in.EventHubID != nil {
		in, out := &in.EventHubID, &out.EventHubID
		*out = new(string)
		**out = **in
	}
	if in.EventHubIDRef != nil {
		in, out := &in.EventHubIDRef, &out.EventHubIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EventHubIDSelector != nil {
		in, out := &in.EventHubIDSelector, &out.EventHubIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventHubParameters.
func (in *EventHubParameters) DeepCopy() *EventHubParameters {
	if in == nil {
		return nil
	}
	out := new(EventHubParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventHubReceiverInitParameters) DeepCopyInto(out *EventHubReceiverInitParameters) {
	*out = *in
	if in.EventHubID != nil {
		in, out := &in.EventHubID, &out.EventHubID
		*out = new(string)
		**out = **in
	}
	if in.EventHubName != nil {
		in, out := &in.EventHubName, &out.EventHubName
		*out = new(string)
		**out = **in
	}
	if in.EventHubNamespace != nil {
		in, out := &in.EventHubNamespace, &out.EventHubNamespace
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.UseCommonAlertSchema != nil {
		in, out := &in.UseCommonAlertSchema, &out.UseCommonAlertSchema
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventHubReceiverInitParameters.
func (in *EventHubReceiverInitParameters) DeepCopy() *EventHubReceiverInitParameters {
	if in == nil {
		return nil
	}
	out := new(EventHubReceiverInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventHubReceiverObservation) DeepCopyInto(out *EventHubReceiverObservation) {
	*out = *in
	if in.EventHubID != nil {
		in, out := &in.EventHubID, &out.EventHubID
		*out = new(string)
		**out = **in
	}
	if in.EventHubName != nil {
		in, out := &in.EventHubName, &out.EventHubName
		*out = new(string)
		**out = **in
	}
	if in.EventHubNamespace != nil {
		in, out := &in.EventHubNamespace, &out.EventHubNamespace
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.UseCommonAlertSchema != nil {
		in, out := &in.UseCommonAlertSchema, &out.UseCommonAlertSchema
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventHubReceiverObservation.
func (in *EventHubReceiverObservation) DeepCopy() *EventHubReceiverObservation {
	if in == nil {
		return nil
	}
	out := new(EventHubReceiverObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventHubReceiverParameters) DeepCopyInto(out *EventHubReceiverParameters) {
	*out = *in
	if in.EventHubID != nil {
		in, out := &in.EventHubID, &out.EventHubID
		*out = new(string)
		**out = **in
	}
	if in.EventHubName != nil {
		in, out := &in.EventHubName, &out.EventHubName
		*out = new(string)
		**out = **in
	}
	if in.EventHubNamespace != nil {
		in, out := &in.EventHubNamespace, &out.EventHubNamespace
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.UseCommonAlertSchema != nil {
		in, out := &in.UseCommonAlertSchema, &out.UseCommonAlertSchema
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventHubReceiverParameters.
func (in *EventHubReceiverParameters) DeepCopy() *EventHubReceiverParameters {
	if in == nil {
		return nil
	}
	out := new(EventHubReceiverParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionInitParameters) DeepCopyInto(out *ExtensionInitParameters) {
	*out = *in
	if in.ExtensionJSON != nil {
		in, out := &in.ExtensionJSON, &out.ExtensionJSON
		*out = new(string)
		**out = **in
	}
	if in.ExtensionName != nil {
		in, out := &in.ExtensionName, &out.ExtensionName
		*out = new(string)
		**out = **in
	}
	if in.InputDataSources != nil {
		in, out := &in.InputDataSources, &out.InputDataSources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionInitParameters.
func (in *ExtensionInitParameters) DeepCopy() *ExtensionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExtensionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionObservation) DeepCopyInto(out *ExtensionObservation) {
	*out = *in
	if in.ExtensionJSON != nil {
		in, out := &in.ExtensionJSON, &out.ExtensionJSON
		*out = new(string)
		**out = **in
	}
	if in.ExtensionName != nil {
		in, out := &in.ExtensionName, &out.ExtensionName
		*out = new(string)
		**out = **in
	}
	if in.InputDataSources != nil {
		in, out := &in.InputDataSources, &out.InputDataSources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionObservation.
func (in *ExtensionObservation) DeepCopy() *ExtensionObservation {
	if in == nil {
		return nil
	}
	out := new(ExtensionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionParameters) DeepCopyInto(out *ExtensionParameters) {
	*out = *in
	if in.ExtensionJSON != nil {
		in, out := &in.ExtensionJSON, &out.ExtensionJSON
		*out = new(string)
		**out = **in
	}
	if in.ExtensionName != nil {
		in, out := &in.ExtensionName, &out.ExtensionName
		*out = new(string)
		**out = **in
	}
	if in.InputDataSources != nil {
		in, out := &in.InputDataSources, &out.InputDataSources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionParameters.
func (in *ExtensionParameters) DeepCopy() *ExtensionParameters {
	if in == nil {
		return nil
	}
	out := new(ExtensionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailingPeriodsInitParameters) DeepCopyInto(out *FailingPeriodsInitParameters) {
	*out = *in
	if in.MinimumFailingPeriodsToTriggerAlert != nil {
		in, out := &in.MinimumFailingPeriodsToTriggerAlert, &out.MinimumFailingPeriodsToTriggerAlert
		*out = new(float64)
		**out = **in
	}
	if in.NumberOfEvaluationPeriods != nil {
		in, out := &in.NumberOfEvaluationPeriods, &out.NumberOfEvaluationPeriods
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailingPeriodsInitParameters.
func (in *FailingPeriodsInitParameters) DeepCopy() *FailingPeriodsInitParameters {
	if in == nil {
		return nil
	}
	out := new(FailingPeriodsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailingPeriodsObservation) DeepCopyInto(out *FailingPeriodsObservation) {
	*out = *in
	if in.MinimumFailingPeriodsToTriggerAlert != nil {
		in, out := &in.MinimumFailingPeriodsToTriggerAlert, &out.MinimumFailingPeriodsToTriggerAlert
		*out = new(float64)
		**out = **in
	}
	if in.NumberOfEvaluationPeriods != nil {
		in, out := &in.NumberOfEvaluationPeriods, &out.NumberOfEvaluationPeriods
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailingPeriodsObservation.
func (in *FailingPeriodsObservation) DeepCopy() *FailingPeriodsObservation {
	if in == nil {
		return nil
	}
	out := new(FailingPeriodsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailingPeriodsParameters) DeepCopyInto(out *FailingPeriodsParameters) {
	*out = *in
	if in.MinimumFailingPeriodsToTriggerAlert != nil {
		in, out := &in.MinimumFailingPeriodsToTriggerAlert, &out.MinimumFailingPeriodsToTriggerAlert
		*out = new(float64)
		**out = **in
	}
	if in.NumberOfEvaluationPeriods != nil {
		in, out := &in.NumberOfEvaluationPeriods, &out.NumberOfEvaluationPeriods
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailingPeriodsParameters.
func (in *FailingPeriodsParameters) DeepCopy() *FailingPeriodsParameters {
	if in == nil {
		return nil
	}
	out := new(FailingPeriodsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FixedDateInitParameters) DeepCopyInto(out *FixedDateInitParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FixedDateInitParameters.
func (in *FixedDateInitParameters) DeepCopy() *FixedDateInitParameters {
	if in == nil {
		return nil
	}
	out := new(FixedDateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FixedDateObservation) DeepCopyInto(out *FixedDateObservation) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FixedDateObservation.
func (in *FixedDateObservation) DeepCopy() *FixedDateObservation {
	if in == nil {
		return nil
	}
	out := new(FixedDateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FixedDateParameters) DeepCopyInto(out *FixedDateParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FixedDateParameters.
func (in *FixedDateParameters) DeepCopy() *FixedDateParameters {
	if in == nil {
		return nil
	}
	out := new(FixedDateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GalleriesInitParameters) DeepCopyInto(out *GalleriesInitParameters) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(float64)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GalleriesInitParameters.
func (in *GalleriesInitParameters) DeepCopy() *GalleriesInitParameters {
	if in == nil {
		return nil
	}
	out := new(GalleriesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GalleriesObservation) DeepCopyInto(out *GalleriesObservation) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(float64)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GalleriesObservation.
func (in *GalleriesObservation) DeepCopy() *GalleriesObservation {
	if in == nil {
		return nil
	}
	out := new(GalleriesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GalleriesParameters) DeepCopyInto(out *GalleriesParameters) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(float64)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GalleriesParameters.
func (in *GalleriesParameters) DeepCopy() *GalleriesParameters {
	if in == nil {
		return nil
	}
	out := new(GalleriesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderInitParameters) DeepCopyInto(out *HeaderInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderInitParameters.
func (in *HeaderInitParameters) DeepCopy() *HeaderInitParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderObservation) DeepCopyInto(out *HeaderObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderObservation.
func (in *HeaderObservation) DeepCopy() *HeaderObservation {
	if in == nil {
		return nil
	}
	out := new(HeaderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderParameters) DeepCopyInto(out *HeaderParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderParameters.
func (in *HeaderParameters) DeepCopy() *HeaderParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityInitParameters) DeepCopyInto(out *IdentityInitParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityInitParameters.
func (in *IdentityInitParameters) DeepCopy() *IdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityObservation) DeepCopyInto(out *IdentityObservation) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityObservation.
func (in *IdentityObservation) DeepCopy() *IdentityObservation {
	if in == nil {
		return nil
	}
	out := new(IdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityParameters) DeepCopyInto(out *IdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityParameters.
func (in *IdentityParameters) DeepCopy() *IdentityParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IisLogInitParameters) DeepCopyInto(out *IisLogInitParameters) {
	*out = *in
	if in.LogDirectories != nil {
		in, out := &in.LogDirectories, &out.LogDirectories
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IisLogInitParameters.
func (in *IisLogInitParameters) DeepCopy() *IisLogInitParameters {
	if in == nil {
		return nil
	}
	out := new(IisLogInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IisLogObservation) DeepCopyInto(out *IisLogObservation) {
	*out = *in
	if in.LogDirectories != nil {
		in, out := &in.LogDirectories, &out.LogDirectories
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IisLogObservation.
func (in *IisLogObservation) DeepCopy() *IisLogObservation {
	if in == nil {
		return nil
	}
	out := new(IisLogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IisLogParameters) DeepCopyInto(out *IisLogParameters) {
	*out = *in
	if in.LogDirectories != nil {
		in, out := &in.LogDirectories, &out.LogDirectories
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IisLogParameters.
func (in *IisLogParameters) DeepCopy() *IisLogParameters {
	if in == nil {
		return nil
	}
	out := new(IisLogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ItsmReceiverInitParameters) DeepCopyInto(out *ItsmReceiverInitParameters) {
	*out = *in
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TicketConfiguration != nil {
		in, out := &in.TicketConfiguration, &out.TicketConfiguration
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ItsmReceiverInitParameters.
func (in *ItsmReceiverInitParameters) DeepCopy() *ItsmReceiverInitParameters {
	if in == nil {
		return nil
	}
	out := new(ItsmReceiverInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ItsmReceiverObservation) DeepCopyInto(out *ItsmReceiverObservation) {
	*out = *in
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TicketConfiguration != nil {
		in, out := &in.TicketConfiguration, &out.TicketConfiguration
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ItsmReceiverObservation.
func (in *ItsmReceiverObservation) DeepCopy() *ItsmReceiverObservation {
	if in == nil {
		return nil
	}
	out := new(ItsmReceiverObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ItsmReceiverParameters) DeepCopyInto(out *ItsmReceiverParameters) {
	*out = *in
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TicketConfiguration != nil {
		in, out := &in.TicketConfiguration, &out.TicketConfiguration
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ItsmReceiverParameters.
func (in *ItsmReceiverParameters) DeepCopy() *ItsmReceiverParameters {
	if in == nil {
		return nil
	}
	out := new(ItsmReceiverParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelIncludeFilterInitParameters) DeepCopyInto(out *LabelIncludeFilterInitParameters) {
	*out = *in
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelIncludeFilterInitParameters.
func (in *LabelIncludeFilterInitParameters) DeepCopy() *LabelIncludeFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(LabelIncludeFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelIncludeFilterObservation) DeepCopyInto(out *LabelIncludeFilterObservation) {
	*out = *in
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelIncludeFilterObservation.
func (in *LabelIncludeFilterObservation) DeepCopy() *LabelIncludeFilterObservation {
	if in == nil {
		return nil
	}
	out := new(LabelIncludeFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelIncludeFilterParameters) DeepCopyInto(out *LabelIncludeFilterParameters) {
	*out = *in
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelIncludeFilterParameters.
func (in *LabelIncludeFilterParameters) DeepCopy() *LabelIncludeFilterParameters {
	if in == nil {
		return nil
	}
	out := new(LabelIncludeFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogAnalyticsInitParameters) DeepCopyInto(out *LogAnalyticsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogAnalyticsInitParameters.
func (in *LogAnalyticsInitParameters) DeepCopy() *LogAnalyticsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogAnalyticsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogAnalyticsObservation) DeepCopyInto(out *LogAnalyticsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceResourceID != nil {
		in, out := &in.WorkspaceResourceID, &out.WorkspaceResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogAnalyticsObservation.
func (in *LogAnalyticsObservation) DeepCopy() *LogAnalyticsObservation {
	if in == nil {
		return nil
	}
	out := new(LogAnalyticsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogAnalyticsParameters) DeepCopyInto(out *LogAnalyticsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceResourceID != nil {
		in, out := &in.WorkspaceResourceID, &out.WorkspaceResourceID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceResourceIDRef != nil {
		in, out := &in.WorkspaceResourceIDRef, &out.WorkspaceResourceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkspaceResourceIDSelector != nil {
		in, out := &in.WorkspaceResourceIDSelector, &out.WorkspaceResourceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogAnalyticsParameters.
func (in *LogAnalyticsParameters) DeepCopy() *LogAnalyticsParameters {
	if in == nil {
		return nil
	}
	out := new(LogAnalyticsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogFileInitParameters) DeepCopyInto(out *LogFileInitParameters) {
	*out = *in
	if in.FilePatterns != nil {
		in, out := &in.FilePatterns, &out.FilePatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]SettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogFileInitParameters.
func (in *LogFileInitParameters) DeepCopy() *LogFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogFileObservation) DeepCopyInto(out *LogFileObservation) {
	*out = *in
	if in.FilePatterns != nil {
		in, out := &in.FilePatterns, &out.FilePatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]SettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogFileObservation.
func (in *LogFileObservation) DeepCopy() *LogFileObservation {
	if in == nil {
		return nil
	}
	out := new(LogFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogFileParameters) DeepCopyInto(out *LogFileParameters) {
	*out = *in
	if in.FilePatterns != nil {
		in, out := &in.FilePatterns, &out.FilePatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]SettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogFileParameters.
func (in *LogFileParameters) DeepCopy() *LogFileParameters {
	if in == nil {
		return nil
	}
	out := new(LogFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogInitParameters) DeepCopyInto(out *LogInitParameters) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.CategoryGroup != nil {
		in, out := &in.CategoryGroup, &out.CategoryGroup
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = make([]LogRetentionPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogInitParameters.
func (in *LogInitParameters) DeepCopy() *LogInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogObservation) DeepCopyInto(out *LogObservation) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.CategoryGroup != nil {
		in, out := &in.CategoryGroup, &out.CategoryGroup
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = make([]LogRetentionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogObservation.
func (in *LogObservation) DeepCopy() *LogObservation {
	if in == nil {
		return nil
	}
	out := new(LogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogParameters) DeepCopyInto(out *LogParameters) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.CategoryGroup != nil {
		in, out := &in.CategoryGroup, &out.CategoryGroup
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = make([]LogRetentionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogParameters.
func (in *LogParameters) DeepCopy() *LogParameters {
	if in == nil {
		return nil
	}
	out := new(LogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogRetentionPolicyInitParameters) DeepCopyInto(out *LogRetentionPolicyInitParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogRetentionPolicyInitParameters.
func (in *LogRetentionPolicyInitParameters) DeepCopy() *LogRetentionPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogRetentionPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogRetentionPolicyObservation) DeepCopyInto(out *LogRetentionPolicyObservation) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogRetentionPolicyObservation.
func (in *LogRetentionPolicyObservation) DeepCopy() *LogRetentionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(LogRetentionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogRetentionPolicyParameters) DeepCopyInto(out *LogRetentionPolicyParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogRetentionPolicyParameters.
func (in *LogRetentionPolicyParameters) DeepCopy() *LogRetentionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(LogRetentionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogicAppReceiverInitParameters) DeepCopyInto(out *LogicAppReceiverInitParameters) {
	*out = *in
	if in.CallbackURL != nil {
		in, out := &in.CallbackURL, &out.CallbackURL
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.UseCommonAlertSchema != nil {
		in, out := &in.UseCommonAlertSchema, &out.UseCommonAlertSchema
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogicAppReceiverInitParameters.
func (in *LogicAppReceiverInitParameters) DeepCopy() *LogicAppReceiverInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogicAppReceiverInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogicAppReceiverObservation) DeepCopyInto(out *LogicAppReceiverObservation) {
	*out = *in
	if in.CallbackURL != nil {
		in, out := &in.CallbackURL, &out.CallbackURL
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.UseCommonAlertSchema != nil {
		in, out := &in.UseCommonAlertSchema, &out.UseCommonAlertSchema
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogicAppReceiverObservation.
func (in *LogicAppReceiverObservation) DeepCopy() *LogicAppReceiverObservation {
	if in == nil {
		return nil
	}
	out := new(LogicAppReceiverObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogicAppReceiverParameters) DeepCopyInto(out *LogicAppReceiverParameters) {
	*out = *in
	if in.CallbackURL != nil {
		in, out := &in.CallbackURL, &out.CallbackURL
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.UseCommonAlertSchema != nil {
		in, out := &in.UseCommonAlertSchema, &out.UseCommonAlertSchema
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogicAppReceiverParameters.
func (in *LogicAppReceiverParameters) DeepCopy() *LogicAppReceiverParameters {
	if in == nil {
		return nil
	}
	out := new(LogicAppReceiverParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricInitParameters) DeepCopyInto(out *MetricInitParameters) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = make([]MetricRetentionPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricInitParameters.
func (in *MetricInitParameters) DeepCopy() *MetricInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetricInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricObservation) DeepCopyInto(out *MetricObservation) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = make([]MetricRetentionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricObservation.
func (in *MetricObservation) DeepCopy() *MetricObservation {
	if in == nil {
		return nil
	}
	out := new(MetricObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricParameters) DeepCopyInto(out *MetricParameters) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = make([]MetricRetentionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricParameters.
func (in *MetricParameters) DeepCopy() *MetricParameters {
	if in == nil {
		return nil
	}
	out := new(MetricParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricRetentionPolicyInitParameters) DeepCopyInto(out *MetricRetentionPolicyInitParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricRetentionPolicyInitParameters.
func (in *MetricRetentionPolicyInitParameters) DeepCopy() *MetricRetentionPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetricRetentionPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricRetentionPolicyObservation) DeepCopyInto(out *MetricRetentionPolicyObservation) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricRetentionPolicyObservation.
func (in *MetricRetentionPolicyObservation) DeepCopy() *MetricRetentionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(MetricRetentionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricRetentionPolicyParameters) DeepCopyInto(out *MetricRetentionPolicyParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricRetentionPolicyParameters.
func (in *MetricRetentionPolicyParameters) DeepCopy() *MetricRetentionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(MetricRetentionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricTriggerInitParameters) DeepCopyInto(out *MetricTriggerInitParameters) {
	*out = *in
	if in.Dimensions != nil {
		in, out := &in.Dimensions, &out.Dimensions
		*out = make([]DimensionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DivideByInstanceCount != nil {
		in, out := &in.DivideByInstanceCount, &out.DivideByInstanceCount
		*out = new(bool)
		**out = **in
	}
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.MetricNamespace != nil {
		in, out := &in.MetricNamespace, &out.MetricNamespace
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Statistic != nil {
		in, out := &in.Statistic, &out.Statistic
		*out = new(string)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
	if in.TimeAggregation != nil {
		in, out := &in.TimeAggregation, &out.TimeAggregation
		*out = new(string)
		**out = **in
	}
	if in.TimeGrain != nil {
		in, out := &in.TimeGrain, &out.TimeGrain
		*out = new(string)
		**out = **in
	}
	if in.TimeWindow != nil {
		in, out := &in.TimeWindow, &out.TimeWindow
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricTriggerInitParameters.
func (in *MetricTriggerInitParameters) DeepCopy() *MetricTriggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetricTriggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricTriggerObservation) DeepCopyInto(out *MetricTriggerObservation) {
	*out = *in
	if in.Dimensions != nil {
		in, out := &in.Dimensions, &out.Dimensions
		*out = make([]DimensionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DivideByInstanceCount != nil {
		in, out := &in.DivideByInstanceCount, &out.DivideByInstanceCount
		*out = new(bool)
		**out = **in
	}
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.MetricNamespace != nil {
		in, out := &in.MetricNamespace, &out.MetricNamespace
		*out = new(string)
		**out = **in
	}
	if in.MetricResourceID != nil {
		in, out := &in.MetricResourceID, &out.MetricResourceID
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Statistic != nil {
		in, out := &in.Statistic, &out.Statistic
		*out = new(string)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
	if in.TimeAggregation != nil {
		in, out := &in.TimeAggregation, &out.TimeAggregation
		*out = new(string)
		**out = **in
	}
	if in.TimeGrain != nil {
		in, out := &in.TimeGrain, &out.TimeGrain
		*out = new(string)
		**out = **in
	}
	if in.TimeWindow != nil {
		in, out := &in.TimeWindow, &out.TimeWindow
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricTriggerObservation.
func (in *MetricTriggerObservation) DeepCopy() *MetricTriggerObservation {
	if in == nil {
		return nil
	}
	out := new(MetricTriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricTriggerParameters) DeepCopyInto(out *MetricTriggerParameters) {
	*out = *in
	if in.Dimensions != nil {
		in, out := &in.Dimensions, &out.Dimensions
		*out = make([]DimensionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DivideByInstanceCount != nil {
		in, out := &in.DivideByInstanceCount, &out.DivideByInstanceCount
		*out = new(bool)
		**out = **in
	}
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.MetricNamespace != nil {
		in, out := &in.MetricNamespace, &out.MetricNamespace
		*out = new(string)
		**out = **in
	}
	if in.MetricResourceID != nil {
		in, out := &in.MetricResourceID, &out.MetricResourceID
		*out = new(string)
		**out = **in
	}
	if in.MetricResourceIDRef != nil {
		in, out := &in.MetricResourceIDRef, &out.MetricResourceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MetricResourceIDSelector != nil {
		in, out := &in.MetricResourceIDSelector, &out.MetricResourceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Statistic != nil {
		in, out := &in.Statistic, &out.Statistic
		*out = new(string)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
	if in.TimeAggregation != nil {
		in, out := &in.TimeAggregation, &out.TimeAggregation
		*out = new(string)
		**out = **in
	}
	if in.TimeGrain != nil {
		in, out := &in.TimeGrain, &out.TimeGrain
		*out = new(string)
		**out = **in
	}
	if in.TimeWindow != nil {
		in, out := &in.TimeWindow, &out.TimeWindow
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricTriggerParameters.
func (in *MetricTriggerParameters) DeepCopy() *MetricTriggerParameters {
	if in == nil {
		return nil
	}
	out := new(MetricTriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorAccountInitParameters) DeepCopyInto(out *MonitorAccountInitParameters) {
	*out = *in
	if in.MonitorAccountID != nil {
		in, out := &in.MonitorAccountID, &out.MonitorAccountID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorAccountInitParameters.
func (in *MonitorAccountInitParameters) DeepCopy() *MonitorAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorAccountObservation) DeepCopyInto(out *MonitorAccountObservation) {
	*out = *in
	if in.MonitorAccountID != nil {
		in, out := &in.MonitorAccountID, &out.MonitorAccountID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorAccountObservation.
func (in *MonitorAccountObservation) DeepCopy() *MonitorAccountObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorAccountParameters) DeepCopyInto(out *MonitorAccountParameters) {
	*out = *in
	if in.MonitorAccountID != nil {
		in, out := &in.MonitorAccountID, &out.MonitorAccountID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorAccountParameters.
func (in *MonitorAccountParameters) DeepCopy() *MonitorAccountParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorActionGroup) DeepCopyInto(out *MonitorActionGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorActionGroup.
func (in *MonitorActionGroup) DeepCopy() *MonitorActionGroup {
	if in == nil {
		return nil
	}
	out := new(MonitorActionGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorActionGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorActionGroupInitParameters) DeepCopyInto(out *MonitorActionGroupInitParameters) {
	*out = *in
	if in.ArmRoleReceiver != nil {
		in, out := &in.ArmRoleReceiver, &out.ArmRoleReceiver
		*out = make([]ArmRoleReceiverInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutomationRunBookReceiver != nil {
		in, out := &in.AutomationRunBookReceiver, &out.AutomationRunBookReceiver
		*out = make([]AutomationRunBookReceiverInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAppPushReceiver != nil {
		in, out := &in.AzureAppPushReceiver, &out.AzureAppPushReceiver
		*out = make([]AzureAppPushReceiverInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureFunctionReceiver != nil {
		in, out := &in.AzureFunctionReceiver, &out.AzureFunctionReceiver
		*out = make([]AzureFunctionReceiverInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EmailReceiver != nil {
		in, out := &in.EmailReceiver, &out.EmailReceiver
		*out = make([]EmailReceiverInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EventHubReceiver != nil {
		in, out := &in.EventHubReceiver, &out.EventHubReceiver
		*out = make([]EventHubReceiverInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ItsmReceiver != nil {
		in, out := &in.ItsmReceiver, &out.ItsmReceiver
		*out = make([]ItsmReceiverInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.LogicAppReceiver != nil {
		in, out := &in.LogicAppReceiver, &out.LogicAppReceiver
		*out = make([]LogicAppReceiverInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SMSReceiver != nil {
		in, out := &in.SMSReceiver, &out.SMSReceiver
		*out = make([]SMSReceiverInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShortName != nil {
		in, out := &in.ShortName, &out.ShortName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VoiceReceiver != nil {
		in, out := &in.VoiceReceiver, &out.VoiceReceiver
		*out = make([]VoiceReceiverInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WebhookReceiver != nil {
		in, out := &in.WebhookReceiver, &out.WebhookReceiver
		*out = make([]WebhookReceiverInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorActionGroupInitParameters.
func (in *MonitorActionGroupInitParameters) DeepCopy() *MonitorActionGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorActionGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorActionGroupList) DeepCopyInto(out *MonitorActionGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MonitorActionGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorActionGroupList.
func (in *MonitorActionGroupList) DeepCopy() *MonitorActionGroupList {
	if in == nil {
		return nil
	}
	out := new(MonitorActionGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorActionGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorActionGroupObservation) DeepCopyInto(out *MonitorActionGroupObservation) {
	*out = *in
	if in.ArmRoleReceiver != nil {
		in, out := &in.ArmRoleReceiver, &out.ArmRoleReceiver
		*out = make([]ArmRoleReceiverObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutomationRunBookReceiver != nil {
		in, out := &in.AutomationRunBookReceiver, &out.AutomationRunBookReceiver
		*out = make([]AutomationRunBookReceiverObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAppPushReceiver != nil {
		in, out := &in.AzureAppPushReceiver, &out.AzureAppPushReceiver
		*out = make([]AzureAppPushReceiverObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureFunctionReceiver != nil {
		in, out := &in.AzureFunctionReceiver, &out.AzureFunctionReceiver
		*out = make([]AzureFunctionReceiverObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EmailReceiver != nil {
		in, out := &in.EmailReceiver, &out.EmailReceiver
		*out = make([]EmailReceiverObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EventHubReceiver != nil {
		in, out := &in.EventHubReceiver, &out.EventHubReceiver
		*out = make([]EventHubReceiverObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ItsmReceiver != nil {
		in, out := &in.ItsmReceiver, &out.ItsmReceiver
		*out = make([]ItsmReceiverObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.LogicAppReceiver != nil {
		in, out := &in.LogicAppReceiver, &out.LogicAppReceiver
		*out = make([]LogicAppReceiverObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SMSReceiver != nil {
		in, out := &in.SMSReceiver, &out.SMSReceiver
		*out = make([]SMSReceiverObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShortName != nil {
		in, out := &in.ShortName, &out.ShortName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VoiceReceiver != nil {
		in, out := &in.VoiceReceiver, &out.VoiceReceiver
		*out = make([]VoiceReceiverObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WebhookReceiver != nil {
		in, out := &in.WebhookReceiver, &out.WebhookReceiver
		*out = make([]WebhookReceiverObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorActionGroupObservation.
func (in *MonitorActionGroupObservation) DeepCopy() *MonitorActionGroupObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorActionGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorActionGroupParameters) DeepCopyInto(out *MonitorActionGroupParameters) {
	*out = *in
	if in.ArmRoleReceiver != nil {
		in, out := &in.ArmRoleReceiver, &out.ArmRoleReceiver
		*out = make([]ArmRoleReceiverParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutomationRunBookReceiver != nil {
		in, out := &in.AutomationRunBookReceiver, &out.AutomationRunBookReceiver
		*out = make([]AutomationRunBookReceiverParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureAppPushReceiver != nil {
		in, out := &in.AzureAppPushReceiver, &out.AzureAppPushReceiver
		*out = make([]AzureAppPushReceiverParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureFunctionReceiver != nil {
		in, out := &in.AzureFunctionReceiver, &out.AzureFunctionReceiver
		*out = make([]AzureFunctionReceiverParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EmailReceiver != nil {
		in, out := &in.EmailReceiver, &out.EmailReceiver
		*out = make([]EmailReceiverParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EventHubReceiver != nil {
		in, out := &in.EventHubReceiver, &out.EventHubReceiver
		*out = make([]EventHubReceiverParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ItsmReceiver != nil {
		in, out := &in.ItsmReceiver, &out.ItsmReceiver
		*out = make([]ItsmReceiverParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.LogicAppReceiver != nil {
		in, out := &in.LogicAppReceiver, &out.LogicAppReceiver
		*out = make([]LogicAppReceiverParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SMSReceiver != nil {
		in, out := &in.SMSReceiver, &out.SMSReceiver
		*out = make([]SMSReceiverParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShortName != nil {
		in, out := &in.ShortName, &out.ShortName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VoiceReceiver != nil {
		in, out := &in.VoiceReceiver, &out.VoiceReceiver
		*out = make([]VoiceReceiverParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WebhookReceiver != nil {
		in, out := &in.WebhookReceiver, &out.WebhookReceiver
		*out = make([]WebhookReceiverParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorActionGroupParameters.
func (in *MonitorActionGroupParameters) DeepCopy() *MonitorActionGroupParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorActionGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorActionGroupSpec) DeepCopyInto(out *MonitorActionGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorActionGroupSpec.
func (in *MonitorActionGroupSpec) DeepCopy() *MonitorActionGroupSpec {
	if in == nil {
		return nil
	}
	out := new(MonitorActionGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorActionGroupStatus) DeepCopyInto(out *MonitorActionGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorActionGroupStatus.
func (in *MonitorActionGroupStatus) DeepCopy() *MonitorActionGroupStatus {
	if in == nil {
		return nil
	}
	out := new(MonitorActionGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorActivityLogAlert) DeepCopyInto(out *MonitorActivityLogAlert) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorActivityLogAlert.
func (in *MonitorActivityLogAlert) DeepCopy() *MonitorActivityLogAlert {
	if in == nil {
		return nil
	}
	out := new(MonitorActivityLogAlert)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorActivityLogAlert) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorActivityLogAlertInitParameters) DeepCopyInto(out *MonitorActivityLogAlertInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Criteria != nil {
		in, out := &in.Criteria, &out.Criteria
		*out = make([]CriteriaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorActivityLogAlertInitParameters.
func (in *MonitorActivityLogAlertInitParameters) DeepCopy() *MonitorActivityLogAlertInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorActivityLogAlertInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorActivityLogAlertList) DeepCopyInto(out *MonitorActivityLogAlertList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MonitorActivityLogAlert, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorActivityLogAlertList.
func (in *MonitorActivityLogAlertList) DeepCopy() *MonitorActivityLogAlertList {
	if in == nil {
		return nil
	}
	out := new(MonitorActivityLogAlertList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorActivityLogAlertList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorActivityLogAlertObservation) DeepCopyInto(out *MonitorActivityLogAlertObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Criteria != nil {
		in, out := &in.Criteria, &out.Criteria
		*out = make([]CriteriaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorActivityLogAlertObservation.
func (in *MonitorActivityLogAlertObservation) DeepCopy() *MonitorActivityLogAlertObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorActivityLogAlertObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorActivityLogAlertParameters) DeepCopyInto(out *MonitorActivityLogAlertParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Criteria != nil {
		in, out := &in.Criteria, &out.Criteria
		*out = make([]CriteriaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScopesRefs != nil {
		in, out := &in.ScopesRefs, &out.ScopesRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScopesSelector != nil {
		in, out := &in.ScopesSelector, &out.ScopesSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorActivityLogAlertParameters.
func (in *MonitorActivityLogAlertParameters) DeepCopy() *MonitorActivityLogAlertParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorActivityLogAlertParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorActivityLogAlertSpec) DeepCopyInto(out *MonitorActivityLogAlertSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorActivityLogAlertSpec.
func (in *MonitorActivityLogAlertSpec) DeepCopy() *MonitorActivityLogAlertSpec {
	if in == nil {
		return nil
	}
	out := new(MonitorActivityLogAlertSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorActivityLogAlertStatus) DeepCopyInto(out *MonitorActivityLogAlertStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorActivityLogAlertStatus.
func (in *MonitorActivityLogAlertStatus) DeepCopy() *MonitorActivityLogAlertStatus {
	if in == nil {
		return nil
	}
	out := new(MonitorActivityLogAlertStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorAutoscaleSetting) DeepCopyInto(out *MonitorAutoscaleSetting) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorAutoscaleSetting.
func (in *MonitorAutoscaleSetting) DeepCopy() *MonitorAutoscaleSetting {
	if in == nil {
		return nil
	}
	out := new(MonitorAutoscaleSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorAutoscaleSetting) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorAutoscaleSettingInitParameters) DeepCopyInto(out *MonitorAutoscaleSettingInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Notification != nil {
		in, out := &in.Notification, &out.Notification
		*out = make([]NotificationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Profile != nil {
		in, out := &in.Profile, &out.Profile
		*out = make([]ProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorAutoscaleSettingInitParameters.
func (in *MonitorAutoscaleSettingInitParameters) DeepCopy() *MonitorAutoscaleSettingInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorAutoscaleSettingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorAutoscaleSettingList) DeepCopyInto(out *MonitorAutoscaleSettingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MonitorAutoscaleSetting, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorAutoscaleSettingList.
func (in *MonitorAutoscaleSettingList) DeepCopy() *MonitorAutoscaleSettingList {
	if in == nil {
		return nil
	}
	out := new(MonitorAutoscaleSettingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorAutoscaleSettingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorAutoscaleSettingObservation) DeepCopyInto(out *MonitorAutoscaleSettingObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Notification != nil {
		in, out := &in.Notification, &out.Notification
		*out = make([]NotificationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Profile != nil {
		in, out := &in.Profile, &out.Profile
		*out = make([]ProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetResourceID != nil {
		in, out := &in.TargetResourceID, &out.TargetResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorAutoscaleSettingObservation.
func (in *MonitorAutoscaleSettingObservation) DeepCopy() *MonitorAutoscaleSettingObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorAutoscaleSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorAutoscaleSettingParameters) DeepCopyInto(out *MonitorAutoscaleSettingParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Notification != nil {
		in, out := &in.Notification, &out.Notification
		*out = make([]NotificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Profile != nil {
		in, out := &in.Profile, &out.Profile
		*out = make([]ProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetResourceID != nil {
		in, out := &in.TargetResourceID, &out.TargetResourceID
		*out = new(string)
		**out = **in
	}
	if in.TargetResourceIDRef != nil {
		in, out := &in.TargetResourceIDRef, &out.TargetResourceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetResourceIDSelector != nil {
		in, out := &in.TargetResourceIDSelector, &out.TargetResourceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorAutoscaleSettingParameters.
func (in *MonitorAutoscaleSettingParameters) DeepCopy() *MonitorAutoscaleSettingParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorAutoscaleSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorAutoscaleSettingSpec) DeepCopyInto(out *MonitorAutoscaleSettingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorAutoscaleSettingSpec.
func (in *MonitorAutoscaleSettingSpec) DeepCopy() *MonitorAutoscaleSettingSpec {
	if in == nil {
		return nil
	}
	out := new(MonitorAutoscaleSettingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorAutoscaleSettingStatus) DeepCopyInto(out *MonitorAutoscaleSettingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorAutoscaleSettingStatus.
func (in *MonitorAutoscaleSettingStatus) DeepCopy() *MonitorAutoscaleSettingStatus {
	if in == nil {
		return nil
	}
	out := new(MonitorAutoscaleSettingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionEndpoint) DeepCopyInto(out *MonitorDataCollectionEndpoint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionEndpoint.
func (in *MonitorDataCollectionEndpoint) DeepCopy() *MonitorDataCollectionEndpoint {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorDataCollectionEndpoint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionEndpointInitParameters) DeepCopyInto(out *MonitorDataCollectionEndpointInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionEndpointInitParameters.
func (in *MonitorDataCollectionEndpointInitParameters) DeepCopy() *MonitorDataCollectionEndpointInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionEndpointInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionEndpointList) DeepCopyInto(out *MonitorDataCollectionEndpointList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MonitorDataCollectionEndpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionEndpointList.
func (in *MonitorDataCollectionEndpointList) DeepCopy() *MonitorDataCollectionEndpointList {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionEndpointList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorDataCollectionEndpointList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionEndpointObservation) DeepCopyInto(out *MonitorDataCollectionEndpointObservation) {
	*out = *in
	if in.ConfigurationAccessEndpoint != nil {
		in, out := &in.ConfigurationAccessEndpoint, &out.ConfigurationAccessEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.LogsIngestionEndpoint != nil {
		in, out := &in.LogsIngestionEndpoint, &out.LogsIngestionEndpoint
		*out = new(string)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionEndpointObservation.
func (in *MonitorDataCollectionEndpointObservation) DeepCopy() *MonitorDataCollectionEndpointObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionEndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionEndpointParameters) DeepCopyInto(out *MonitorDataCollectionEndpointParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionEndpointParameters.
func (in *MonitorDataCollectionEndpointParameters) DeepCopy() *MonitorDataCollectionEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionEndpointSpec) DeepCopyInto(out *MonitorDataCollectionEndpointSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionEndpointSpec.
func (in *MonitorDataCollectionEndpointSpec) DeepCopy() *MonitorDataCollectionEndpointSpec {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionEndpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionEndpointStatus) DeepCopyInto(out *MonitorDataCollectionEndpointStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionEndpointStatus.
func (in *MonitorDataCollectionEndpointStatus) DeepCopy() *MonitorDataCollectionEndpointStatus {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionEndpointStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionRule) DeepCopyInto(out *MonitorDataCollectionRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionRule.
func (in *MonitorDataCollectionRule) DeepCopy() *MonitorDataCollectionRule {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorDataCollectionRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionRuleAssociation) DeepCopyInto(out *MonitorDataCollectionRuleAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionRuleAssociation.
func (in *MonitorDataCollectionRuleAssociation) DeepCopy() *MonitorDataCollectionRuleAssociation {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionRuleAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorDataCollectionRuleAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionRuleAssociationInitParameters) DeepCopyInto(out *MonitorDataCollectionRuleAssociationInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionRuleAssociationInitParameters.
func (in *MonitorDataCollectionRuleAssociationInitParameters) DeepCopy() *MonitorDataCollectionRuleAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionRuleAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionRuleAssociationList) DeepCopyInto(out *MonitorDataCollectionRuleAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MonitorDataCollectionRuleAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionRuleAssociationList.
func (in *MonitorDataCollectionRuleAssociationList) DeepCopy() *MonitorDataCollectionRuleAssociationList {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionRuleAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorDataCollectionRuleAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionRuleAssociationObservation) DeepCopyInto(out *MonitorDataCollectionRuleAssociationObservation) {
	*out = *in
	if in.DataCollectionEndpointID != nil {
		in, out := &in.DataCollectionEndpointID, &out.DataCollectionEndpointID
		*out = new(string)
		**out = **in
	}
	if in.DataCollectionRuleID != nil {
		in, out := &in.DataCollectionRuleID, &out.DataCollectionRuleID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.TargetResourceID != nil {
		in, out := &in.TargetResourceID, &out.TargetResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionRuleAssociationObservation.
func (in *MonitorDataCollectionRuleAssociationObservation) DeepCopy() *MonitorDataCollectionRuleAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionRuleAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionRuleAssociationParameters) DeepCopyInto(out *MonitorDataCollectionRuleAssociationParameters) {
	*out = *in
	if in.DataCollectionEndpointID != nil {
		in, out := &in.DataCollectionEndpointID, &out.DataCollectionEndpointID
		*out = new(string)
		**out = **in
	}
	if in.DataCollectionEndpointIDRef != nil {
		in, out := &in.DataCollectionEndpointIDRef, &out.DataCollectionEndpointIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataCollectionEndpointIDSelector != nil {
		in, out := &in.DataCollectionEndpointIDSelector, &out.DataCollectionEndpointIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DataCollectionRuleID != nil {
		in, out := &in.DataCollectionRuleID, &out.DataCollectionRuleID
		*out = new(string)
		**out = **in
	}
	if in.DataCollectionRuleIDRef != nil {
		in, out := &in.DataCollectionRuleIDRef, &out.DataCollectionRuleIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataCollectionRuleIDSelector != nil {
		in, out := &in.DataCollectionRuleIDSelector, &out.DataCollectionRuleIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.TargetResourceID != nil {
		in, out := &in.TargetResourceID, &out.TargetResourceID
		*out = new(string)
		**out = **in
	}
	if in.TargetResourceIDRef != nil {
		in, out := &in.TargetResourceIDRef, &out.TargetResourceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetResourceIDSelector != nil {
		in, out := &in.TargetResourceIDSelector, &out.TargetResourceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionRuleAssociationParameters.
func (in *MonitorDataCollectionRuleAssociationParameters) DeepCopy() *MonitorDataCollectionRuleAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionRuleAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionRuleAssociationSpec) DeepCopyInto(out *MonitorDataCollectionRuleAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionRuleAssociationSpec.
func (in *MonitorDataCollectionRuleAssociationSpec) DeepCopy() *MonitorDataCollectionRuleAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionRuleAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionRuleAssociationStatus) DeepCopyInto(out *MonitorDataCollectionRuleAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionRuleAssociationStatus.
func (in *MonitorDataCollectionRuleAssociationStatus) DeepCopy() *MonitorDataCollectionRuleAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionRuleAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionRuleIdentityInitParameters) DeepCopyInto(out *MonitorDataCollectionRuleIdentityInitParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionRuleIdentityInitParameters.
func (in *MonitorDataCollectionRuleIdentityInitParameters) DeepCopy() *MonitorDataCollectionRuleIdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionRuleIdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionRuleIdentityObservation) DeepCopyInto(out *MonitorDataCollectionRuleIdentityObservation) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionRuleIdentityObservation.
func (in *MonitorDataCollectionRuleIdentityObservation) DeepCopy() *MonitorDataCollectionRuleIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionRuleIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionRuleIdentityParameters) DeepCopyInto(out *MonitorDataCollectionRuleIdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionRuleIdentityParameters.
func (in *MonitorDataCollectionRuleIdentityParameters) DeepCopy() *MonitorDataCollectionRuleIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionRuleIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionRuleInitParameters) DeepCopyInto(out *MonitorDataCollectionRuleInitParameters) {
	*out = *in
	if in.DataFlow != nil {
		in, out := &in.DataFlow, &out.DataFlow
		*out = make([]DataFlowInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataSources != nil {
		in, out := &in.DataSources, &out.DataSources
		*out = make([]DataSourcesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Destinations != nil {
		in, out := &in.Destinations, &out.Destinations
		*out = make([]DestinationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]MonitorDataCollectionRuleIdentityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.StreamDeclaration != nil {
		in, out := &in.StreamDeclaration, &out.StreamDeclaration
		*out = make([]StreamDeclarationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionRuleInitParameters.
func (in *MonitorDataCollectionRuleInitParameters) DeepCopy() *MonitorDataCollectionRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionRuleList) DeepCopyInto(out *MonitorDataCollectionRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MonitorDataCollectionRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionRuleList.
func (in *MonitorDataCollectionRuleList) DeepCopy() *MonitorDataCollectionRuleList {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorDataCollectionRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionRuleObservation) DeepCopyInto(out *MonitorDataCollectionRuleObservation) {
	*out = *in
	if in.DataCollectionEndpointID != nil {
		in, out := &in.DataCollectionEndpointID, &out.DataCollectionEndpointID
		*out = new(string)
		**out = **in
	}
	if in.DataFlow != nil {
		in, out := &in.DataFlow, &out.DataFlow
		*out = make([]DataFlowObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataSources != nil {
		in, out := &in.DataSources, &out.DataSources
		*out = make([]DataSourcesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Destinations != nil {
		in, out := &in.Destinations, &out.Destinations
		*out = make([]DestinationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]MonitorDataCollectionRuleIdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImmutableID != nil {
		in, out := &in.ImmutableID, &out.ImmutableID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.StreamDeclaration != nil {
		in, out := &in.StreamDeclaration, &out.StreamDeclaration
		*out = make([]StreamDeclarationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionRuleObservation.
func (in *MonitorDataCollectionRuleObservation) DeepCopy() *MonitorDataCollectionRuleObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionRuleParameters) DeepCopyInto(out *MonitorDataCollectionRuleParameters) {
	*out = *in
	if in.DataCollectionEndpointID != nil {
		in, out := &in.DataCollectionEndpointID, &out.DataCollectionEndpointID
		*out = new(string)
		**out = **in
	}
	if in.DataCollectionEndpointIDRef != nil {
		in, out := &in.DataCollectionEndpointIDRef, &out.DataCollectionEndpointIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataCollectionEndpointIDSelector != nil {
		in, out := &in.DataCollectionEndpointIDSelector, &out.DataCollectionEndpointIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFlow != nil {
		in, out := &in.DataFlow, &out.DataFlow
		*out = make([]DataFlowParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataSources != nil {
		in, out := &in.DataSources, &out.DataSources
		*out = make([]DataSourcesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Destinations != nil {
		in, out := &in.Destinations, &out.Destinations
		*out = make([]DestinationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]MonitorDataCollectionRuleIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StreamDeclaration != nil {
		in, out := &in.StreamDeclaration, &out.StreamDeclaration
		*out = make([]StreamDeclarationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionRuleParameters.
func (in *MonitorDataCollectionRuleParameters) DeepCopy() *MonitorDataCollectionRuleParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionRuleSpec) DeepCopyInto(out *MonitorDataCollectionRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionRuleSpec.
func (in *MonitorDataCollectionRuleSpec) DeepCopy() *MonitorDataCollectionRuleSpec {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDataCollectionRuleStatus) DeepCopyInto(out *MonitorDataCollectionRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDataCollectionRuleStatus.
func (in *MonitorDataCollectionRuleStatus) DeepCopy() *MonitorDataCollectionRuleStatus {
	if in == nil {
		return nil
	}
	out := new(MonitorDataCollectionRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDiagnosticSetting) DeepCopyInto(out *MonitorDiagnosticSetting) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDiagnosticSetting.
func (in *MonitorDiagnosticSetting) DeepCopy() *MonitorDiagnosticSetting {
	if in == nil {
		return nil
	}
	out := new(MonitorDiagnosticSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorDiagnosticSetting) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDiagnosticSettingInitParameters) DeepCopyInto(out *MonitorDiagnosticSettingInitParameters) {
	*out = *in
	if in.EnabledLog != nil {
		in, out := &in.EnabledLog, &out.EnabledLog
		*out = make([]EnabledLogInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EventHubAuthorizationRuleID != nil {
		in, out := &in.EventHubAuthorizationRuleID, &out.EventHubAuthorizationRuleID
		*out = new(string)
		**out = **in
	}
	if in.EventHubName != nil {
		in, out := &in.EventHubName, &out.EventHubName
		*out = new(string)
		**out = **in
	}
	if in.Log != nil {
		in, out := &in.Log, &out.Log
		*out = make([]LogInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogAnalyticsDestinationType != nil {
		in, out := &in.LogAnalyticsDestinationType, &out.LogAnalyticsDestinationType
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = make([]MetricInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PartnerSolutionID != nil {
		in, out := &in.PartnerSolutionID, &out.PartnerSolutionID
		*out = new(string)
		**out = **in
	}
	if in.TargetResourceID != nil {
		in, out := &in.TargetResourceID, &out.TargetResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDiagnosticSettingInitParameters.
func (in *MonitorDiagnosticSettingInitParameters) DeepCopy() *MonitorDiagnosticSettingInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorDiagnosticSettingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDiagnosticSettingList) DeepCopyInto(out *MonitorDiagnosticSettingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MonitorDiagnosticSetting, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDiagnosticSettingList.
func (in *MonitorDiagnosticSettingList) DeepCopy() *MonitorDiagnosticSettingList {
	if in == nil {
		return nil
	}
	out := new(MonitorDiagnosticSettingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorDiagnosticSettingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDiagnosticSettingObservation) DeepCopyInto(out *MonitorDiagnosticSettingObservation) {
	*out = *in
	if in.EnabledLog != nil {
		in, out := &in.EnabledLog, &out.EnabledLog
		*out = make([]EnabledLogObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EventHubAuthorizationRuleID != nil {
		in, out := &in.EventHubAuthorizationRuleID, &out.EventHubAuthorizationRuleID
		*out = new(string)
		**out = **in
	}
	if in.EventHubName != nil {
		in, out := &in.EventHubName, &out.EventHubName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Log != nil {
		in, out := &in.Log, &out.Log
		*out = make([]LogObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogAnalyticsDestinationType != nil {
		in, out := &in.LogAnalyticsDestinationType, &out.LogAnalyticsDestinationType
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = make([]MetricObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PartnerSolutionID != nil {
		in, out := &in.PartnerSolutionID, &out.PartnerSolutionID
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountID != nil {
		in, out := &in.StorageAccountID, &out.StorageAccountID
		*out = new(string)
		**out = **in
	}
	if in.TargetResourceID != nil {
		in, out := &in.TargetResourceID, &out.TargetResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDiagnosticSettingObservation.
func (in *MonitorDiagnosticSettingObservation) DeepCopy() *MonitorDiagnosticSettingObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorDiagnosticSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDiagnosticSettingParameters) DeepCopyInto(out *MonitorDiagnosticSettingParameters) {
	*out = *in
	if in.EnabledLog != nil {
		in, out := &in.EnabledLog, &out.EnabledLog
		*out = make([]EnabledLogParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EventHubAuthorizationRuleID != nil {
		in, out := &in.EventHubAuthorizationRuleID, &out.EventHubAuthorizationRuleID
		*out = new(string)
		**out = **in
	}
	if in.EventHubName != nil {
		in, out := &in.EventHubName, &out.EventHubName
		*out = new(string)
		**out = **in
	}
	if in.Log != nil {
		in, out := &in.Log, &out.Log
		*out = make([]LogParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogAnalyticsDestinationType != nil {
		in, out := &in.LogAnalyticsDestinationType, &out.LogAnalyticsDestinationType
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = make([]MetricParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PartnerSolutionID != nil {
		in, out := &in.PartnerSolutionID, &out.PartnerSolutionID
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountID != nil {
		in, out := &in.StorageAccountID, &out.StorageAccountID
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountIDRef != nil {
		in, out := &in.StorageAccountIDRef, &out.StorageAccountIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountIDSelector != nil {
		in, out := &in.StorageAccountIDSelector, &out.StorageAccountIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetResourceID != nil {
		in, out := &in.TargetResourceID, &out.TargetResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDiagnosticSettingParameters.
func (in *MonitorDiagnosticSettingParameters) DeepCopy() *MonitorDiagnosticSettingParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorDiagnosticSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDiagnosticSettingSpec) DeepCopyInto(out *MonitorDiagnosticSettingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDiagnosticSettingSpec.
func (in *MonitorDiagnosticSettingSpec) DeepCopy() *MonitorDiagnosticSettingSpec {
	if in == nil {
		return nil
	}
	out := new(MonitorDiagnosticSettingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorDiagnosticSettingStatus) DeepCopyInto(out *MonitorDiagnosticSettingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorDiagnosticSettingStatus.
func (in *MonitorDiagnosticSettingStatus) DeepCopy() *MonitorDiagnosticSettingStatus {
	if in == nil {
		return nil
	}
	out := new(MonitorDiagnosticSettingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorMetricAlert) DeepCopyInto(out *MonitorMetricAlert) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorMetricAlert.
func (in *MonitorMetricAlert) DeepCopy() *MonitorMetricAlert {
	if in == nil {
		return nil
	}
	out := new(MonitorMetricAlert)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorMetricAlert) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorMetricAlertActionInitParameters) DeepCopyInto(out *MonitorMetricAlertActionInitParameters) {
	*out = *in
	if in.WebhookProperties != nil {
		in, out := &in.WebhookProperties, &out.WebhookProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorMetricAlertActionInitParameters.
func (in *MonitorMetricAlertActionInitParameters) DeepCopy() *MonitorMetricAlertActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorMetricAlertActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorMetricAlertActionObservation) DeepCopyInto(out *MonitorMetricAlertActionObservation) {
	*out = *in
	if in.ActionGroupID != nil {
		in, out := &in.ActionGroupID, &out.ActionGroupID
		*out = new(string)
		**out = **in
	}
	if in.WebhookProperties != nil {
		in, out := &in.WebhookProperties, &out.WebhookProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorMetricAlertActionObservation.
func (in *MonitorMetricAlertActionObservation) DeepCopy() *MonitorMetricAlertActionObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorMetricAlertActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorMetricAlertActionParameters) DeepCopyInto(out *MonitorMetricAlertActionParameters) {
	*out = *in
	if in.ActionGroupID != nil {
		in, out := &in.ActionGroupID, &out.ActionGroupID
		*out = new(string)
		**out = **in
	}
	if in.ActionGroupIDRef != nil {
		in, out := &in.ActionGroupIDRef, &out.ActionGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ActionGroupIDSelector != nil {
		in, out := &in.ActionGroupIDSelector, &out.ActionGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.WebhookProperties != nil {
		in, out := &in.WebhookProperties, &out.WebhookProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorMetricAlertActionParameters.
func (in *MonitorMetricAlertActionParameters) DeepCopy() *MonitorMetricAlertActionParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorMetricAlertActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorMetricAlertCriteriaInitParameters) DeepCopyInto(out *MonitorMetricAlertCriteriaInitParameters) {
	*out = *in
	if in.Aggregation != nil {
		in, out := &in.Aggregation, &out.Aggregation
		*out = new(string)
		**out = **in
	}
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = make([]DimensionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.MetricNamespace != nil {
		in, out := &in.MetricNamespace, &out.MetricNamespace
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.SkipMetricValidation != nil {
		in, out := &in.SkipMetricValidation, &out.SkipMetricValidation
		*out = new(bool)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorMetricAlertCriteriaInitParameters.
func (in *MonitorMetricAlertCriteriaInitParameters) DeepCopy() *MonitorMetricAlertCriteriaInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorMetricAlertCriteriaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorMetricAlertCriteriaObservation) DeepCopyInto(out *MonitorMetricAlertCriteriaObservation) {
	*out = *in
	if in.Aggregation != nil {
		in, out := &in.Aggregation, &out.Aggregation
		*out = new(string)
		**out = **in
	}
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = make([]DimensionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.MetricNamespace != nil {
		in, out := &in.MetricNamespace, &out.MetricNamespace
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.SkipMetricValidation != nil {
		in, out := &in.SkipMetricValidation, &out.SkipMetricValidation
		*out = new(bool)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorMetricAlertCriteriaObservation.
func (in *MonitorMetricAlertCriteriaObservation) DeepCopy() *MonitorMetricAlertCriteriaObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorMetricAlertCriteriaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorMetricAlertCriteriaParameters) DeepCopyInto(out *MonitorMetricAlertCriteriaParameters) {
	*out = *in
	if in.Aggregation != nil {
		in, out := &in.Aggregation, &out.Aggregation
		*out = new(string)
		**out = **in
	}
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = make([]DimensionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.MetricNamespace != nil {
		in, out := &in.MetricNamespace, &out.MetricNamespace
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.SkipMetricValidation != nil {
		in, out := &in.SkipMetricValidation, &out.SkipMetricValidation
		*out = new(bool)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorMetricAlertCriteriaParameters.
func (in *MonitorMetricAlertCriteriaParameters) DeepCopy() *MonitorMetricAlertCriteriaParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorMetricAlertCriteriaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorMetricAlertInitParameters) DeepCopyInto(out *MonitorMetricAlertInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]MonitorMetricAlertActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationInsightsWebTestLocationAvailabilityCriteria != nil {
		in, out := &in.ApplicationInsightsWebTestLocationAvailabilityCriteria, &out.ApplicationInsightsWebTestLocationAvailabilityCriteria
		*out = make([]ApplicationInsightsWebTestLocationAvailabilityCriteriaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoMitigate != nil {
		in, out := &in.AutoMitigate, &out.AutoMitigate
		*out = new(bool)
		**out = **in
	}
	if in.Criteria != nil {
		in, out := &in.Criteria, &out.Criteria
		*out = make([]MonitorMetricAlertCriteriaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DynamicCriteria != nil {
		in, out := &in.DynamicCriteria, &out.DynamicCriteria
		*out = make([]DynamicCriteriaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetResourceLocation != nil {
		in, out := &in.TargetResourceLocation, &out.TargetResourceLocation
		*out = new(string)
		**out = **in
	}
	if in.TargetResourceType != nil {
		in, out := &in.TargetResourceType, &out.TargetResourceType
		*out = new(string)
		**out = **in
	}
	if in.WindowSize != nil {
		in, out := &in.WindowSize, &out.WindowSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorMetricAlertInitParameters.
func (in *MonitorMetricAlertInitParameters) DeepCopy() *MonitorMetricAlertInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorMetricAlertInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorMetricAlertList) DeepCopyInto(out *MonitorMetricAlertList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MonitorMetricAlert, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorMetricAlertList.
func (in *MonitorMetricAlertList) DeepCopy() *MonitorMetricAlertList {
	if in == nil {
		return nil
	}
	out := new(MonitorMetricAlertList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorMetricAlertList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorMetricAlertObservation) DeepCopyInto(out *MonitorMetricAlertObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]MonitorMetricAlertActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationInsightsWebTestLocationAvailabilityCriteria != nil {
		in, out := &in.ApplicationInsightsWebTestLocationAvailabilityCriteria, &out.ApplicationInsightsWebTestLocationAvailabilityCriteria
		*out = make([]ApplicationInsightsWebTestLocationAvailabilityCriteriaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoMitigate != nil {
		in, out := &in.AutoMitigate, &out.AutoMitigate
		*out = new(bool)
		**out = **in
	}
	if in.Criteria != nil {
		in, out := &in.Criteria, &out.Criteria
		*out = make([]MonitorMetricAlertCriteriaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DynamicCriteria != nil {
		in, out := &in.DynamicCriteria, &out.DynamicCriteria
		*out = make([]DynamicCriteriaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetResourceLocation != nil {
		in, out := &in.TargetResourceLocation, &out.TargetResourceLocation
		*out = new(string)
		**out = **in
	}
	if in.TargetResourceType != nil {
		in, out := &in.TargetResourceType, &out.TargetResourceType
		*out = new(string)
		**out = **in
	}
	if in.WindowSize != nil {
		in, out := &in.WindowSize, &out.WindowSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorMetricAlertObservation.
func (in *MonitorMetricAlertObservation) DeepCopy() *MonitorMetricAlertObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorMetricAlertObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorMetricAlertParameters) DeepCopyInto(out *MonitorMetricAlertParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]MonitorMetricAlertActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationInsightsWebTestLocationAvailabilityCriteria != nil {
		in, out := &in.ApplicationInsightsWebTestLocationAvailabilityCriteria, &out.ApplicationInsightsWebTestLocationAvailabilityCriteria
		*out = make([]ApplicationInsightsWebTestLocationAvailabilityCriteriaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoMitigate != nil {
		in, out := &in.AutoMitigate, &out.AutoMitigate
		*out = new(bool)
		**out = **in
	}
	if in.Criteria != nil {
		in, out := &in.Criteria, &out.Criteria
		*out = make([]MonitorMetricAlertCriteriaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DynamicCriteria != nil {
		in, out := &in.DynamicCriteria, &out.DynamicCriteria
		*out = make([]DynamicCriteriaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScopesRefs != nil {
		in, out := &in.ScopesRefs, &out.ScopesRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScopesSelector != nil {
		in, out := &in.ScopesSelector, &out.ScopesSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetResourceLocation != nil {
		in, out := &in.TargetResourceLocation, &out.TargetResourceLocation
		*out = new(string)
		**out = **in
	}
	if in.TargetResourceType != nil {
		in, out := &in.TargetResourceType, &out.TargetResourceType
		*out = new(string)
		**out = **in
	}
	if in.WindowSize != nil {
		in, out := &in.WindowSize, &out.WindowSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorMetricAlertParameters.
func (in *MonitorMetricAlertParameters) DeepCopy() *MonitorMetricAlertParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorMetricAlertParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorMetricAlertSpec) DeepCopyInto(out *MonitorMetricAlertSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorMetricAlertSpec.
func (in *MonitorMetricAlertSpec) DeepCopy() *MonitorMetricAlertSpec {
	if in == nil {
		return nil
	}
	out := new(MonitorMetricAlertSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorMetricAlertStatus) DeepCopyInto(out *MonitorMetricAlertStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorMetricAlertStatus.
func (in *MonitorMetricAlertStatus) DeepCopy() *MonitorMetricAlertStatus {
	if in == nil {
		return nil
	}
	out := new(MonitorMetricAlertStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorPrivateLinkScope) DeepCopyInto(out *MonitorPrivateLinkScope) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorPrivateLinkScope.
func (in *MonitorPrivateLinkScope) DeepCopy() *MonitorPrivateLinkScope {
	if in == nil {
		return nil
	}
	out := new(MonitorPrivateLinkScope)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorPrivateLinkScope) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorPrivateLinkScopeInitParameters) DeepCopyInto(out *MonitorPrivateLinkScopeInitParameters) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorPrivateLinkScopeInitParameters.
func (in *MonitorPrivateLinkScopeInitParameters) DeepCopy() *MonitorPrivateLinkScopeInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorPrivateLinkScopeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorPrivateLinkScopeList) DeepCopyInto(out *MonitorPrivateLinkScopeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MonitorPrivateLinkScope, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorPrivateLinkScopeList.
func (in *MonitorPrivateLinkScopeList) DeepCopy() *MonitorPrivateLinkScopeList {
	if in == nil {
		return nil
	}
	out := new(MonitorPrivateLinkScopeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorPrivateLinkScopeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorPrivateLinkScopeObservation) DeepCopyInto(out *MonitorPrivateLinkScopeObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorPrivateLinkScopeObservation.
func (in *MonitorPrivateLinkScopeObservation) DeepCopy() *MonitorPrivateLinkScopeObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorPrivateLinkScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorPrivateLinkScopeParameters) DeepCopyInto(out *MonitorPrivateLinkScopeParameters) {
	*out = *in
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorPrivateLinkScopeParameters.
func (in *MonitorPrivateLinkScopeParameters) DeepCopy() *MonitorPrivateLinkScopeParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorPrivateLinkScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorPrivateLinkScopeSpec) DeepCopyInto(out *MonitorPrivateLinkScopeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorPrivateLinkScopeSpec.
func (in *MonitorPrivateLinkScopeSpec) DeepCopy() *MonitorPrivateLinkScopeSpec {
	if in == nil {
		return nil
	}
	out := new(MonitorPrivateLinkScopeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorPrivateLinkScopeStatus) DeepCopyInto(out *MonitorPrivateLinkScopeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorPrivateLinkScopeStatus.
func (in *MonitorPrivateLinkScopeStatus) DeepCopy() *MonitorPrivateLinkScopeStatus {
	if in == nil {
		return nil
	}
	out := new(MonitorPrivateLinkScopeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorPrivateLinkScopedService) DeepCopyInto(out *MonitorPrivateLinkScopedService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorPrivateLinkScopedService.
func (in *MonitorPrivateLinkScopedService) DeepCopy() *MonitorPrivateLinkScopedService {
	if in == nil {
		return nil
	}
	out := new(MonitorPrivateLinkScopedService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorPrivateLinkScopedService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorPrivateLinkScopedServiceInitParameters) DeepCopyInto(out *MonitorPrivateLinkScopedServiceInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorPrivateLinkScopedServiceInitParameters.
func (in *MonitorPrivateLinkScopedServiceInitParameters) DeepCopy() *MonitorPrivateLinkScopedServiceInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorPrivateLinkScopedServiceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorPrivateLinkScopedServiceList) DeepCopyInto(out *MonitorPrivateLinkScopedServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MonitorPrivateLinkScopedService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorPrivateLinkScopedServiceList.
func (in *MonitorPrivateLinkScopedServiceList) DeepCopy() *MonitorPrivateLinkScopedServiceList {
	if in == nil {
		return nil
	}
	out := new(MonitorPrivateLinkScopedServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorPrivateLinkScopedServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorPrivateLinkScopedServiceObservation) DeepCopyInto(out *MonitorPrivateLinkScopedServiceObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LinkedResourceID != nil {
		in, out := &in.LinkedResourceID, &out.LinkedResourceID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ScopeName != nil {
		in, out := &in.ScopeName, &out.ScopeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorPrivateLinkScopedServiceObservation.
func (in *MonitorPrivateLinkScopedServiceObservation) DeepCopy() *MonitorPrivateLinkScopedServiceObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorPrivateLinkScopedServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorPrivateLinkScopedServiceParameters) DeepCopyInto(out *MonitorPrivateLinkScopedServiceParameters) {
	*out = *in
	if in.LinkedResourceID != nil {
		in, out := &in.LinkedResourceID, &out.LinkedResourceID
		*out = new(string)
		**out = **in
	}
	if in.LinkedResourceIDRef != nil {
		in, out := &in.LinkedResourceIDRef, &out.LinkedResourceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LinkedResourceIDSelector != nil {
		in, out := &in.LinkedResourceIDSelector, &out.LinkedResourceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ScopeName != nil {
		in, out := &in.ScopeName, &out.ScopeName
		*out = new(string)
		**out = **in
	}
	if in.ScopeNameRef != nil {
		in, out := &in.ScopeNameRef, &out.ScopeNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ScopeNameSelector != nil {
		in, out := &in.ScopeNameSelector, &out.ScopeNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorPrivateLinkScopedServiceParameters.
func (in *MonitorPrivateLinkScopedServiceParameters) DeepCopy() *MonitorPrivateLinkScopedServiceParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorPrivateLinkScopedServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorPrivateLinkScopedServiceSpec) DeepCopyInto(out *MonitorPrivateLinkScopedServiceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	out.InitProvider = in.InitProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorPrivateLinkScopedServiceSpec.
func (in *MonitorPrivateLinkScopedServiceSpec) DeepCopy() *MonitorPrivateLinkScopedServiceSpec {
	if in == nil {
		return nil
	}
	out := new(MonitorPrivateLinkScopedServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorPrivateLinkScopedServiceStatus) DeepCopyInto(out *MonitorPrivateLinkScopedServiceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorPrivateLinkScopedServiceStatus.
func (in *MonitorPrivateLinkScopedServiceStatus) DeepCopy() *MonitorPrivateLinkScopedServiceStatus {
	if in == nil {
		return nil
	}
	out := new(MonitorPrivateLinkScopedServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlert) DeepCopyInto(out *MonitorScheduledQueryRulesAlert) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlert.
func (in *MonitorScheduledQueryRulesAlert) DeepCopy() *MonitorScheduledQueryRulesAlert {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlert)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorScheduledQueryRulesAlert) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlertActionInitParameters) DeepCopyInto(out *MonitorScheduledQueryRulesAlertActionInitParameters) {
	*out = *in
	if in.CustomWebhookPayload != nil {
		in, out := &in.CustomWebhookPayload, &out.CustomWebhookPayload
		*out = new(string)
		**out = **in
	}
	if in.EmailSubject != nil {
		in, out := &in.EmailSubject, &out.EmailSubject
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlertActionInitParameters.
func (in *MonitorScheduledQueryRulesAlertActionInitParameters) DeepCopy() *MonitorScheduledQueryRulesAlertActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlertActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlertActionObservation) DeepCopyInto(out *MonitorScheduledQueryRulesAlertActionObservation) {
	*out = *in
	if in.ActionGroup != nil {
		in, out := &in.ActionGroup, &out.ActionGroup
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomWebhookPayload != nil {
		in, out := &in.CustomWebhookPayload, &out.CustomWebhookPayload
		*out = new(string)
		**out = **in
	}
	if in.EmailSubject != nil {
		in, out := &in.EmailSubject, &out.EmailSubject
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlertActionObservation.
func (in *MonitorScheduledQueryRulesAlertActionObservation) DeepCopy() *MonitorScheduledQueryRulesAlertActionObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlertActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlertActionParameters) DeepCopyInto(out *MonitorScheduledQueryRulesAlertActionParameters) {
	*out = *in
	if in.ActionGroup != nil {
		in, out := &in.ActionGroup, &out.ActionGroup
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ActionGroupRefs != nil {
		in, out := &in.ActionGroupRefs, &out.ActionGroupRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ActionGroupSelector != nil {
		in, out := &in.ActionGroupSelector, &out.ActionGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomWebhookPayload != nil {
		in, out := &in.CustomWebhookPayload, &out.CustomWebhookPayload
		*out = new(string)
		**out = **in
	}
	if in.EmailSubject != nil {
		in, out := &in.EmailSubject, &out.EmailSubject
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlertActionParameters.
func (in *MonitorScheduledQueryRulesAlertActionParameters) DeepCopy() *MonitorScheduledQueryRulesAlertActionParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlertActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlertInitParameters) DeepCopyInto(out *MonitorScheduledQueryRulesAlertInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]MonitorScheduledQueryRulesAlertActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthorizedResourceIds != nil {
		in, out := &in.AuthorizedResourceIds, &out.AuthorizedResourceIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AutoMitigationEnabled != nil {
		in, out := &in.AutoMitigationEnabled, &out.AutoMitigationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(float64)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.QueryType != nil {
		in, out := &in.QueryType, &out.QueryType
		*out = new(string)
		**out = **in
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throttling != nil {
		in, out := &in.Throttling, &out.Throttling
		*out = new(float64)
		**out = **in
	}
	if in.TimeWindow != nil {
		in, out := &in.TimeWindow, &out.TimeWindow
		*out = new(float64)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlertInitParameters.
func (in *MonitorScheduledQueryRulesAlertInitParameters) DeepCopy() *MonitorScheduledQueryRulesAlertInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlertInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlertList) DeepCopyInto(out *MonitorScheduledQueryRulesAlertList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MonitorScheduledQueryRulesAlert, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlertList.
func (in *MonitorScheduledQueryRulesAlertList) DeepCopy() *MonitorScheduledQueryRulesAlertList {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlertList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorScheduledQueryRulesAlertList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlertObservation) DeepCopyInto(out *MonitorScheduledQueryRulesAlertObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]MonitorScheduledQueryRulesAlertActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthorizedResourceIds != nil {
		in, out := &in.AuthorizedResourceIds, &out.AuthorizedResourceIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AutoMitigationEnabled != nil {
		in, out := &in.AutoMitigationEnabled, &out.AutoMitigationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DataSourceID != nil {
		in, out := &in.DataSourceID, &out.DataSourceID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.QueryType != nil {
		in, out := &in.QueryType, &out.QueryType
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throttling != nil {
		in, out := &in.Throttling, &out.Throttling
		*out = new(float64)
		**out = **in
	}
	if in.TimeWindow != nil {
		in, out := &in.TimeWindow, &out.TimeWindow
		*out = new(float64)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlertObservation.
func (in *MonitorScheduledQueryRulesAlertObservation) DeepCopy() *MonitorScheduledQueryRulesAlertObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlertObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlertParameters) DeepCopyInto(out *MonitorScheduledQueryRulesAlertParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]MonitorScheduledQueryRulesAlertActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthorizedResourceIds != nil {
		in, out := &in.AuthorizedResourceIds, &out.AuthorizedResourceIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AutoMitigationEnabled != nil {
		in, out := &in.AutoMitigationEnabled, &out.AutoMitigationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DataSourceID != nil {
		in, out := &in.DataSourceID, &out.DataSourceID
		*out = new(string)
		**out = **in
	}
	if in.DataSourceIDRef != nil {
		in, out := &in.DataSourceIDRef, &out.DataSourceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataSourceIDSelector != nil {
		in, out := &in.DataSourceIDSelector, &out.DataSourceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(float64)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.QueryType != nil {
		in, out := &in.QueryType, &out.QueryType
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throttling != nil {
		in, out := &in.Throttling, &out.Throttling
		*out = new(float64)
		**out = **in
	}
	if in.TimeWindow != nil {
		in, out := &in.TimeWindow, &out.TimeWindow
		*out = new(float64)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlertParameters.
func (in *MonitorScheduledQueryRulesAlertParameters) DeepCopy() *MonitorScheduledQueryRulesAlertParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlertParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlertSpec) DeepCopyInto(out *MonitorScheduledQueryRulesAlertSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlertSpec.
func (in *MonitorScheduledQueryRulesAlertSpec) DeepCopy() *MonitorScheduledQueryRulesAlertSpec {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlertSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlertStatus) DeepCopyInto(out *MonitorScheduledQueryRulesAlertStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlertStatus.
func (in *MonitorScheduledQueryRulesAlertStatus) DeepCopy() *MonitorScheduledQueryRulesAlertStatus {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlertStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlertV2) DeepCopyInto(out *MonitorScheduledQueryRulesAlertV2) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlertV2.
func (in *MonitorScheduledQueryRulesAlertV2) DeepCopy() *MonitorScheduledQueryRulesAlertV2 {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlertV2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorScheduledQueryRulesAlertV2) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlertV2ActionInitParameters) DeepCopyInto(out *MonitorScheduledQueryRulesAlertV2ActionInitParameters) {
	*out = *in
	if in.ActionGroups != nil {
		in, out := &in.ActionGroups, &out.ActionGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomProperties != nil {
		in, out := &in.CustomProperties, &out.CustomProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlertV2ActionInitParameters.
func (in *MonitorScheduledQueryRulesAlertV2ActionInitParameters) DeepCopy() *MonitorScheduledQueryRulesAlertV2ActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlertV2ActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlertV2ActionObservation) DeepCopyInto(out *MonitorScheduledQueryRulesAlertV2ActionObservation) {
	*out = *in
	if in.ActionGroups != nil {
		in, out := &in.ActionGroups, &out.ActionGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomProperties != nil {
		in, out := &in.CustomProperties, &out.CustomProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlertV2ActionObservation.
func (in *MonitorScheduledQueryRulesAlertV2ActionObservation) DeepCopy() *MonitorScheduledQueryRulesAlertV2ActionObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlertV2ActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlertV2ActionParameters) DeepCopyInto(out *MonitorScheduledQueryRulesAlertV2ActionParameters) {
	*out = *in
	if in.ActionGroups != nil {
		in, out := &in.ActionGroups, &out.ActionGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomProperties != nil {
		in, out := &in.CustomProperties, &out.CustomProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlertV2ActionParameters.
func (in *MonitorScheduledQueryRulesAlertV2ActionParameters) DeepCopy() *MonitorScheduledQueryRulesAlertV2ActionParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlertV2ActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlertV2CriteriaInitParameters) DeepCopyInto(out *MonitorScheduledQueryRulesAlertV2CriteriaInitParameters) {
	*out = *in
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = make([]CriteriaDimensionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FailingPeriods != nil {
		in, out := &in.FailingPeriods, &out.FailingPeriods
		*out = make([]FailingPeriodsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetricMeasureColumn != nil {
		in, out := &in.MetricMeasureColumn, &out.MetricMeasureColumn
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.ResourceIDColumn != nil {
		in, out := &in.ResourceIDColumn, &out.ResourceIDColumn
		*out = new(string)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
	if in.TimeAggregationMethod != nil {
		in, out := &in.TimeAggregationMethod, &out.TimeAggregationMethod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlertV2CriteriaInitParameters.
func (in *MonitorScheduledQueryRulesAlertV2CriteriaInitParameters) DeepCopy() *MonitorScheduledQueryRulesAlertV2CriteriaInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlertV2CriteriaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlertV2CriteriaObservation) DeepCopyInto(out *MonitorScheduledQueryRulesAlertV2CriteriaObservation) {
	*out = *in
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = make([]CriteriaDimensionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FailingPeriods != nil {
		in, out := &in.FailingPeriods, &out.FailingPeriods
		*out = make([]FailingPeriodsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetricMeasureColumn != nil {
		in, out := &in.MetricMeasureColumn, &out.MetricMeasureColumn
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.ResourceIDColumn != nil {
		in, out := &in.ResourceIDColumn, &out.ResourceIDColumn
		*out = new(string)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
	if in.TimeAggregationMethod != nil {
		in, out := &in.TimeAggregationMethod, &out.TimeAggregationMethod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlertV2CriteriaObservation.
func (in *MonitorScheduledQueryRulesAlertV2CriteriaObservation) DeepCopy() *MonitorScheduledQueryRulesAlertV2CriteriaObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlertV2CriteriaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlertV2CriteriaParameters) DeepCopyInto(out *MonitorScheduledQueryRulesAlertV2CriteriaParameters) {
	*out = *in
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = make([]CriteriaDimensionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FailingPeriods != nil {
		in, out := &in.FailingPeriods, &out.FailingPeriods
		*out = make([]FailingPeriodsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetricMeasureColumn != nil {
		in, out := &in.MetricMeasureColumn, &out.MetricMeasureColumn
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.ResourceIDColumn != nil {
		in, out := &in.ResourceIDColumn, &out.ResourceIDColumn
		*out = new(string)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
	if in.TimeAggregationMethod != nil {
		in, out := &in.TimeAggregationMethod, &out.TimeAggregationMethod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlertV2CriteriaParameters.
func (in *MonitorScheduledQueryRulesAlertV2CriteriaParameters) DeepCopy() *MonitorScheduledQueryRulesAlertV2CriteriaParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlertV2CriteriaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlertV2InitParameters) DeepCopyInto(out *MonitorScheduledQueryRulesAlertV2InitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]MonitorScheduledQueryRulesAlertV2ActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoMitigationEnabled != nil {
		in, out := &in.AutoMitigationEnabled, &out.AutoMitigationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Criteria != nil {
		in, out := &in.Criteria, &out.Criteria
		*out = make([]MonitorScheduledQueryRulesAlertV2CriteriaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EvaluationFrequency != nil {
		in, out := &in.EvaluationFrequency, &out.EvaluationFrequency
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MuteActionsAfterAlertDuration != nil {
		in, out := &in.MuteActionsAfterAlertDuration, &out.MuteActionsAfterAlertDuration
		*out = new(string)
		**out = **in
	}
	if in.QueryTimeRangeOverride != nil {
		in, out := &in.QueryTimeRangeOverride, &out.QueryTimeRangeOverride
		*out = new(string)
		**out = **in
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(float64)
		**out = **in
	}
	if in.SkipQueryValidation != nil {
		in, out := &in.SkipQueryValidation, &out.SkipQueryValidation
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetResourceTypes != nil {
		in, out := &in.TargetResourceTypes, &out.TargetResourceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WindowDuration != nil {
		in, out := &in.WindowDuration, &out.WindowDuration
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAlertsStorageEnabled != nil {
		in, out := &in.WorkspaceAlertsStorageEnabled, &out.WorkspaceAlertsStorageEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlertV2InitParameters.
func (in *MonitorScheduledQueryRulesAlertV2InitParameters) DeepCopy() *MonitorScheduledQueryRulesAlertV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlertV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlertV2List) DeepCopyInto(out *MonitorScheduledQueryRulesAlertV2List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MonitorScheduledQueryRulesAlertV2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlertV2List.
func (in *MonitorScheduledQueryRulesAlertV2List) DeepCopy() *MonitorScheduledQueryRulesAlertV2List {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlertV2List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorScheduledQueryRulesAlertV2List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlertV2Observation) DeepCopyInto(out *MonitorScheduledQueryRulesAlertV2Observation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]MonitorScheduledQueryRulesAlertV2ActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoMitigationEnabled != nil {
		in, out := &in.AutoMitigationEnabled, &out.AutoMitigationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CreatedWithAPIVersion != nil {
		in, out := &in.CreatedWithAPIVersion, &out.CreatedWithAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.Criteria != nil {
		in, out := &in.Criteria, &out.Criteria
		*out = make([]MonitorScheduledQueryRulesAlertV2CriteriaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EvaluationFrequency != nil {
		in, out := &in.EvaluationFrequency, &out.EvaluationFrequency
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsALegacyLogAnalyticsRule != nil {
		in, out := &in.IsALegacyLogAnalyticsRule, &out.IsALegacyLogAnalyticsRule
		*out = new(bool)
		**out = **in
	}
	if in.IsWorkspaceAlertsStorageConfigured != nil {
		in, out := &in.IsWorkspaceAlertsStorageConfigured, &out.IsWorkspaceAlertsStorageConfigured
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MuteActionsAfterAlertDuration != nil {
		in, out := &in.MuteActionsAfterAlertDuration, &out.MuteActionsAfterAlertDuration
		*out = new(string)
		**out = **in
	}
	if in.QueryTimeRangeOverride != nil {
		in, out := &in.QueryTimeRangeOverride, &out.QueryTimeRangeOverride
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(float64)
		**out = **in
	}
	if in.SkipQueryValidation != nil {
		in, out := &in.SkipQueryValidation, &out.SkipQueryValidation
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetResourceTypes != nil {
		in, out := &in.TargetResourceTypes, &out.TargetResourceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WindowDuration != nil {
		in, out := &in.WindowDuration, &out.WindowDuration
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAlertsStorageEnabled != nil {
		in, out := &in.WorkspaceAlertsStorageEnabled, &out.WorkspaceAlertsStorageEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlertV2Observation.
func (in *MonitorScheduledQueryRulesAlertV2Observation) DeepCopy() *MonitorScheduledQueryRulesAlertV2Observation {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlertV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlertV2Parameters) DeepCopyInto(out *MonitorScheduledQueryRulesAlertV2Parameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]MonitorScheduledQueryRulesAlertV2ActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoMitigationEnabled != nil {
		in, out := &in.AutoMitigationEnabled, &out.AutoMitigationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Criteria != nil {
		in, out := &in.Criteria, &out.Criteria
		*out = make([]MonitorScheduledQueryRulesAlertV2CriteriaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EvaluationFrequency != nil {
		in, out := &in.EvaluationFrequency, &out.EvaluationFrequency
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MuteActionsAfterAlertDuration != nil {
		in, out := &in.MuteActionsAfterAlertDuration, &out.MuteActionsAfterAlertDuration
		*out = new(string)
		**out = **in
	}
	if in.QueryTimeRangeOverride != nil {
		in, out := &in.QueryTimeRangeOverride, &out.QueryTimeRangeOverride
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScopesRefs != nil {
		in, out := &in.ScopesRefs, &out.ScopesRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScopesSelector != nil {
		in, out := &in.ScopesSelector, &out.ScopesSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(float64)
		**out = **in
	}
	if in.SkipQueryValidation != nil {
		in, out := &in.SkipQueryValidation, &out.SkipQueryValidation
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetResourceTypes != nil {
		in, out := &in.TargetResourceTypes, &out.TargetResourceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WindowDuration != nil {
		in, out := &in.WindowDuration, &out.WindowDuration
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceAlertsStorageEnabled != nil {
		in, out := &in.WorkspaceAlertsStorageEnabled, &out.WorkspaceAlertsStorageEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlertV2Parameters.
func (in *MonitorScheduledQueryRulesAlertV2Parameters) DeepCopy() *MonitorScheduledQueryRulesAlertV2Parameters {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlertV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlertV2Spec) DeepCopyInto(out *MonitorScheduledQueryRulesAlertV2Spec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlertV2Spec.
func (in *MonitorScheduledQueryRulesAlertV2Spec) DeepCopy() *MonitorScheduledQueryRulesAlertV2Spec {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlertV2Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesAlertV2Status) DeepCopyInto(out *MonitorScheduledQueryRulesAlertV2Status) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesAlertV2Status.
func (in *MonitorScheduledQueryRulesAlertV2Status) DeepCopy() *MonitorScheduledQueryRulesAlertV2Status {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesAlertV2Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesLog) DeepCopyInto(out *MonitorScheduledQueryRulesLog) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesLog.
func (in *MonitorScheduledQueryRulesLog) DeepCopy() *MonitorScheduledQueryRulesLog {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesLog)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorScheduledQueryRulesLog) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesLogCriteriaDimensionInitParameters) DeepCopyInto(out *MonitorScheduledQueryRulesLogCriteriaDimensionInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesLogCriteriaDimensionInitParameters.
func (in *MonitorScheduledQueryRulesLogCriteriaDimensionInitParameters) DeepCopy() *MonitorScheduledQueryRulesLogCriteriaDimensionInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesLogCriteriaDimensionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesLogCriteriaDimensionObservation) DeepCopyInto(out *MonitorScheduledQueryRulesLogCriteriaDimensionObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesLogCriteriaDimensionObservation.
func (in *MonitorScheduledQueryRulesLogCriteriaDimensionObservation) DeepCopy() *MonitorScheduledQueryRulesLogCriteriaDimensionObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesLogCriteriaDimensionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesLogCriteriaDimensionParameters) DeepCopyInto(out *MonitorScheduledQueryRulesLogCriteriaDimensionParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesLogCriteriaDimensionParameters.
func (in *MonitorScheduledQueryRulesLogCriteriaDimensionParameters) DeepCopy() *MonitorScheduledQueryRulesLogCriteriaDimensionParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesLogCriteriaDimensionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesLogCriteriaInitParameters) DeepCopyInto(out *MonitorScheduledQueryRulesLogCriteriaInitParameters) {
	*out = *in
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = make([]MonitorScheduledQueryRulesLogCriteriaDimensionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesLogCriteriaInitParameters.
func (in *MonitorScheduledQueryRulesLogCriteriaInitParameters) DeepCopy() *MonitorScheduledQueryRulesLogCriteriaInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesLogCriteriaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesLogCriteriaObservation) DeepCopyInto(out *MonitorScheduledQueryRulesLogCriteriaObservation) {
	*out = *in
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = make([]MonitorScheduledQueryRulesLogCriteriaDimensionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesLogCriteriaObservation.
func (in *MonitorScheduledQueryRulesLogCriteriaObservation) DeepCopy() *MonitorScheduledQueryRulesLogCriteriaObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesLogCriteriaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesLogCriteriaParameters) DeepCopyInto(out *MonitorScheduledQueryRulesLogCriteriaParameters) {
	*out = *in
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = make([]MonitorScheduledQueryRulesLogCriteriaDimensionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesLogCriteriaParameters.
func (in *MonitorScheduledQueryRulesLogCriteriaParameters) DeepCopy() *MonitorScheduledQueryRulesLogCriteriaParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesLogCriteriaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesLogInitParameters) DeepCopyInto(out *MonitorScheduledQueryRulesLogInitParameters) {
	*out = *in
	if in.AuthorizedResourceIds != nil {
		in, out := &in.AuthorizedResourceIds, &out.AuthorizedResourceIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Criteria != nil {
		in, out := &in.Criteria, &out.Criteria
		*out = make([]MonitorScheduledQueryRulesLogCriteriaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesLogInitParameters.
func (in *MonitorScheduledQueryRulesLogInitParameters) DeepCopy() *MonitorScheduledQueryRulesLogInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesLogInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesLogList) DeepCopyInto(out *MonitorScheduledQueryRulesLogList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MonitorScheduledQueryRulesLog, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesLogList.
func (in *MonitorScheduledQueryRulesLogList) DeepCopy() *MonitorScheduledQueryRulesLogList {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesLogList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorScheduledQueryRulesLogList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesLogObservation) DeepCopyInto(out *MonitorScheduledQueryRulesLogObservation) {
	*out = *in
	if in.AuthorizedResourceIds != nil {
		in, out := &in.AuthorizedResourceIds, &out.AuthorizedResourceIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Criteria != nil {
		in, out := &in.Criteria, &out.Criteria
		*out = make([]MonitorScheduledQueryRulesLogCriteriaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataSourceID != nil {
		in, out := &in.DataSourceID, &out.DataSourceID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesLogObservation.
func (in *MonitorScheduledQueryRulesLogObservation) DeepCopy() *MonitorScheduledQueryRulesLogObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesLogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesLogParameters) DeepCopyInto(out *MonitorScheduledQueryRulesLogParameters) {
	*out = *in
	if in.AuthorizedResourceIds != nil {
		in, out := &in.AuthorizedResourceIds, &out.AuthorizedResourceIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Criteria != nil {
		in, out := &in.Criteria, &out.Criteria
		*out = make([]MonitorScheduledQueryRulesLogCriteriaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataSourceID != nil {
		in, out := &in.DataSourceID, &out.DataSourceID
		*out = new(string)
		**out = **in
	}
	if in.DataSourceIDRef != nil {
		in, out := &in.DataSourceIDRef, &out.DataSourceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DataSourceIDSelector != nil {
		in, out := &in.DataSourceIDSelector, &out.DataSourceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesLogParameters.
func (in *MonitorScheduledQueryRulesLogParameters) DeepCopy() *MonitorScheduledQueryRulesLogParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesLogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesLogSpec) DeepCopyInto(out *MonitorScheduledQueryRulesLogSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesLogSpec.
func (in *MonitorScheduledQueryRulesLogSpec) DeepCopy() *MonitorScheduledQueryRulesLogSpec {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesLogSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorScheduledQueryRulesLogStatus) DeepCopyInto(out *MonitorScheduledQueryRulesLogStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorScheduledQueryRulesLogStatus.
func (in *MonitorScheduledQueryRulesLogStatus) DeepCopy() *MonitorScheduledQueryRulesLogStatus {
	if in == nil {
		return nil
	}
	out := new(MonitorScheduledQueryRulesLogStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationInitParameters) DeepCopyInto(out *NotificationInitParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = make([]EmailInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Webhook != nil {
		in, out := &in.Webhook, &out.Webhook
		*out = make([]WebhookInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationInitParameters.
func (in *NotificationInitParameters) DeepCopy() *NotificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationObservation) DeepCopyInto(out *NotificationObservation) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = make([]EmailObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Webhook != nil {
		in, out := &in.Webhook, &out.Webhook
		*out = make([]WebhookObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationObservation.
func (in *NotificationObservation) DeepCopy() *NotificationObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationParameters) DeepCopyInto(out *NotificationParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = make([]EmailParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Webhook != nil {
		in, out := &in.Webhook, &out.Webhook
		*out = make([]WebhookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationParameters.
func (in *NotificationParameters) DeepCopy() *NotificationParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerformanceCounterInitParameters) DeepCopyInto(out *PerformanceCounterInitParameters) {
	*out = *in
	if in.CounterSpecifiers != nil {
		in, out := &in.CounterSpecifiers, &out.CounterSpecifiers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SamplingFrequencyInSeconds != nil {
		in, out := &in.SamplingFrequencyInSeconds, &out.SamplingFrequencyInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerformanceCounterInitParameters.
func (in *PerformanceCounterInitParameters) DeepCopy() *PerformanceCounterInitParameters {
	if in == nil {
		return nil
	}
	out := new(PerformanceCounterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerformanceCounterObservation) DeepCopyInto(out *PerformanceCounterObservation) {
	*out = *in
	if in.CounterSpecifiers != nil {
		in, out := &in.CounterSpecifiers, &out.CounterSpecifiers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SamplingFrequencyInSeconds != nil {
		in, out := &in.SamplingFrequencyInSeconds, &out.SamplingFrequencyInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerformanceCounterObservation.
func (in *PerformanceCounterObservation) DeepCopy() *PerformanceCounterObservation {
	if in == nil {
		return nil
	}
	out := new(PerformanceCounterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerformanceCounterParameters) DeepCopyInto(out *PerformanceCounterParameters) {
	*out = *in
	if in.CounterSpecifiers != nil {
		in, out := &in.CounterSpecifiers, &out.CounterSpecifiers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SamplingFrequencyInSeconds != nil {
		in, out := &in.SamplingFrequencyInSeconds, &out.SamplingFrequencyInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerformanceCounterParameters.
func (in *PerformanceCounterParameters) DeepCopy() *PerformanceCounterParameters {
	if in == nil {
		return nil
	}
	out := new(PerformanceCounterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformTelemetryInitParameters) DeepCopyInto(out *PlatformTelemetryInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformTelemetryInitParameters.
func (in *PlatformTelemetryInitParameters) DeepCopy() *PlatformTelemetryInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlatformTelemetryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformTelemetryObservation) DeepCopyInto(out *PlatformTelemetryObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformTelemetryObservation.
func (in *PlatformTelemetryObservation) DeepCopy() *PlatformTelemetryObservation {
	if in == nil {
		return nil
	}
	out := new(PlatformTelemetryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformTelemetryParameters) DeepCopyInto(out *PlatformTelemetryParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformTelemetryParameters.
func (in *PlatformTelemetryParameters) DeepCopy() *PlatformTelemetryParameters {
	if in == nil {
		return nil
	}
	out := new(PlatformTelemetryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileInitParameters) DeepCopyInto(out *ProfileInitParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = make([]CapacityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FixedDate != nil {
		in, out := &in.FixedDate, &out.FixedDate
		*out = make([]FixedDateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = make([]RecurrenceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]RuleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileInitParameters.
func (in *ProfileInitParameters) DeepCopy() *ProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileObservation) DeepCopyInto(out *ProfileObservation) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = make([]CapacityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FixedDate != nil {
		in, out := &in.FixedDate, &out.FixedDate
		*out = make([]FixedDateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = make([]RecurrenceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]RuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileObservation.
func (in *ProfileObservation) DeepCopy() *ProfileObservation {
	if in == nil {
		return nil
	}
	out := new(ProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileParameters) DeepCopyInto(out *ProfileParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = make([]CapacityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FixedDate != nil {
		in, out := &in.FixedDate, &out.FixedDate
		*out = make([]FixedDateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = make([]RecurrenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]RuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileParameters.
func (in *ProfileParameters) DeepCopy() *ProfileParameters {
	if in == nil {
		return nil
	}
	out := new(ProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrometheusForwarderInitParameters) DeepCopyInto(out *PrometheusForwarderInitParameters) {
	*out = *in
	if in.LabelIncludeFilter != nil {
		in, out := &in.LabelIncludeFilter, &out.LabelIncludeFilter
		*out = make([]LabelIncludeFilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrometheusForwarderInitParameters.
func (in *PrometheusForwarderInitParameters) DeepCopy() *PrometheusForwarderInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrometheusForwarderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrometheusForwarderObservation) DeepCopyInto(out *PrometheusForwarderObservation) {
	*out = *in
	if in.LabelIncludeFilter != nil {
		in, out := &in.LabelIncludeFilter, &out.LabelIncludeFilter
		*out = make([]LabelIncludeFilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrometheusForwarderObservation.
func (in *PrometheusForwarderObservation) DeepCopy() *PrometheusForwarderObservation {
	if in == nil {
		return nil
	}
	out := new(PrometheusForwarderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrometheusForwarderParameters) DeepCopyInto(out *PrometheusForwarderParameters) {
	*out = *in
	if in.LabelIncludeFilter != nil {
		in, out := &in.LabelIncludeFilter, &out.LabelIncludeFilter
		*out = make([]LabelIncludeFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrometheusForwarderParameters.
func (in *PrometheusForwarderParameters) DeepCopy() *PrometheusForwarderParameters {
	if in == nil {
		return nil
	}
	out := new(PrometheusForwarderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecurrenceInitParameters) DeepCopyInto(out *RecurrenceInitParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Hours != nil {
		in, out := &in.Hours, &out.Hours
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Minutes != nil {
		in, out := &in.Minutes, &out.Minutes
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecurrenceInitParameters.
func (in *RecurrenceInitParameters) DeepCopy() *RecurrenceInitParameters {
	if in == nil {
		return nil
	}
	out := new(RecurrenceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecurrenceObservation) DeepCopyInto(out *RecurrenceObservation) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Hours != nil {
		in, out := &in.Hours, &out.Hours
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Minutes != nil {
		in, out := &in.Minutes, &out.Minutes
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecurrenceObservation.
func (in *RecurrenceObservation) DeepCopy() *RecurrenceObservation {
	if in == nil {
		return nil
	}
	out := new(RecurrenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecurrenceParameters) DeepCopyInto(out *RecurrenceParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Hours != nil {
		in, out := &in.Hours, &out.Hours
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Minutes != nil {
		in, out := &in.Minutes, &out.Minutes
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecurrenceParameters.
func (in *RecurrenceParameters) DeepCopy() *RecurrenceParameters {
	if in == nil {
		return nil
	}
	out := new(RecurrenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestInitParameters) DeepCopyInto(out *RequestInitParameters) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.FollowRedirectsEnabled != nil {
		in, out := &in.FollowRedirectsEnabled, &out.FollowRedirectsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPVerb != nil {
		in, out := &in.HTTPVerb, &out.HTTPVerb
		*out = new(string)
		**out = **in
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]HeaderInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ParseDependentRequestsEnabled != nil {
		in, out := &in.ParseDependentRequestsEnabled, &out.ParseDependentRequestsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestInitParameters.
func (in *RequestInitParameters) DeepCopy() *RequestInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestObservation) DeepCopyInto(out *RequestObservation) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.FollowRedirectsEnabled != nil {
		in, out := &in.FollowRedirectsEnabled, &out.FollowRedirectsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPVerb != nil {
		in, out := &in.HTTPVerb, &out.HTTPVerb
		*out = new(string)
		**out = **in
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]HeaderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ParseDependentRequestsEnabled != nil {
		in, out := &in.ParseDependentRequestsEnabled, &out.ParseDependentRequestsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestObservation.
func (in *RequestObservation) DeepCopy() *RequestObservation {
	if in == nil {
		return nil
	}
	out := new(RequestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestParameters) DeepCopyInto(out *RequestParameters) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.FollowRedirectsEnabled != nil {
		in, out := &in.FollowRedirectsEnabled, &out.FollowRedirectsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPVerb != nil {
		in, out := &in.HTTPVerb, &out.HTTPVerb
		*out = new(string)
		**out = **in
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]HeaderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ParseDependentRequestsEnabled != nil {
		in, out := &in.ParseDependentRequestsEnabled, &out.ParseDependentRequestsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestParameters.
func (in *RequestParameters) DeepCopy() *RequestParameters {
	if in == nil {
		return nil
	}
	out := new(RequestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceHealthInitParameters) DeepCopyInto(out *ResourceHealthInitParameters) {
	*out = *in
	if in.Current != nil {
		in, out := &in.Current, &out.Current
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Previous != nil {
		in, out := &in.Previous, &out.Previous
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceHealthInitParameters.
func (in *ResourceHealthInitParameters) DeepCopy() *ResourceHealthInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceHealthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceHealthObservation) DeepCopyInto(out *ResourceHealthObservation) {
	*out = *in
	if in.Current != nil {
		in, out := &in.Current, &out.Current
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Previous != nil {
		in, out := &in.Previous, &out.Previous
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceHealthObservation.
func (in *ResourceHealthObservation) DeepCopy() *ResourceHealthObservation {
	if in == nil {
		return nil
	}
	out := new(ResourceHealthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceHealthParameters) DeepCopyInto(out *ResourceHealthParameters) {
	*out = *in
	if in.Current != nil {
		in, out := &in.Current, &out.Current
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Previous != nil {
		in, out := &in.Previous, &out.Previous
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceHealthParameters.
func (in *ResourceHealthParameters) DeepCopy() *ResourceHealthParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceHealthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetentionPolicyInitParameters) DeepCopyInto(out *RetentionPolicyInitParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetentionPolicyInitParameters.
func (in *RetentionPolicyInitParameters) DeepCopy() *RetentionPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RetentionPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetentionPolicyObservation) DeepCopyInto(out *RetentionPolicyObservation) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetentionPolicyObservation.
func (in *RetentionPolicyObservation) DeepCopy() *RetentionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RetentionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetentionPolicyParameters) DeepCopyInto(out *RetentionPolicyParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetentionPolicyParameters.
func (in *RetentionPolicyParameters) DeepCopy() *RetentionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RetentionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleInitParameters) DeepCopyInto(out *RuleInitParameters) {
	*out = *in
	if in.MetricTrigger != nil {
		in, out := &in.MetricTrigger, &out.MetricTrigger
		*out = make([]MetricTriggerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScaleAction != nil {
		in, out := &in.ScaleAction, &out.ScaleAction
		*out = make([]ScaleActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleInitParameters.
func (in *RuleInitParameters) DeepCopy() *RuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(RuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleObservation) DeepCopyInto(out *RuleObservation) {
	*out = *in
	if in.MetricTrigger != nil {
		in, out := &in.MetricTrigger, &out.MetricTrigger
		*out = make([]MetricTriggerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScaleAction != nil {
		in, out := &in.ScaleAction, &out.ScaleAction
		*out = make([]ScaleActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleObservation.
func (in *RuleObservation) DeepCopy() *RuleObservation {
	if in == nil {
		return nil
	}
	out := new(RuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleParameters) DeepCopyInto(out *RuleParameters) {
	*out = *in
	if in.MetricTrigger != nil {
		in, out := &in.MetricTrigger, &out.MetricTrigger
		*out = make([]MetricTriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScaleAction != nil {
		in, out := &in.ScaleAction, &out.ScaleAction
		*out = make([]ScaleActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleParameters.
func (in *RuleParameters) DeepCopy() *RuleParameters {
	if in == nil {
		return nil
	}
	out := new(RuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SMSReceiverInitParameters) DeepCopyInto(out *SMSReceiverInitParameters) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PhoneNumber != nil {
		in, out := &in.PhoneNumber, &out.PhoneNumber
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SMSReceiverInitParameters.
func (in *SMSReceiverInitParameters) DeepCopy() *SMSReceiverInitParameters {
	if in == nil {
		return nil
	}
	out := new(SMSReceiverInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SMSReceiverObservation) DeepCopyInto(out *SMSReceiverObservation) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PhoneNumber != nil {
		in, out := &in.PhoneNumber, &out.PhoneNumber
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SMSReceiverObservation.
func (in *SMSReceiverObservation) DeepCopy() *SMSReceiverObservation {
	if in == nil {
		return nil
	}
	out := new(SMSReceiverObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SMSReceiverParameters) DeepCopyInto(out *SMSReceiverParameters) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PhoneNumber != nil {
		in, out := &in.PhoneNumber, &out.PhoneNumber
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SMSReceiverParameters.
func (in *SMSReceiverParameters) DeepCopy() *SMSReceiverParameters {
	if in == nil {
		return nil
	}
	out := new(SMSReceiverParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScaleActionInitParameters) DeepCopyInto(out *ScaleActionInitParameters) {
	*out = *in
	if in.Cooldown != nil {
		in, out := &in.Cooldown, &out.Cooldown
		*out = new(string)
		**out = **in
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScaleActionInitParameters.
func (in *ScaleActionInitParameters) DeepCopy() *ScaleActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScaleActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScaleActionObservation) DeepCopyInto(out *ScaleActionObservation) {
	*out = *in
	if in.Cooldown != nil {
		in, out := &in.Cooldown, &out.Cooldown
		*out = new(string)
		**out = **in
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScaleActionObservation.
func (in *ScaleActionObservation) DeepCopy() *ScaleActionObservation {
	if in == nil {
		return nil
	}
	out := new(ScaleActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScaleActionParameters) DeepCopyInto(out *ScaleActionParameters) {
	*out = *in
	if in.Cooldown != nil {
		in, out := &in.Cooldown, &out.Cooldown
		*out = new(string)
		**out = **in
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScaleActionParameters.
func (in *ScaleActionParameters) DeepCopy() *ScaleActionParameters {
	if in == nil {
		return nil
	}
	out := new(ScaleActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceHealthInitParameters) DeepCopyInto(out *ServiceHealthInitParameters) {
	*out = *in
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Locations != nil {
		in, out := &in.Locations, &out.Locations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceHealthInitParameters.
func (in *ServiceHealthInitParameters) DeepCopy() *ServiceHealthInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceHealthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceHealthObservation) DeepCopyInto(out *ServiceHealthObservation) {
	*out = *in
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Locations != nil {
		in, out := &in.Locations, &out.Locations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceHealthObservation.
func (in *ServiceHealthObservation) DeepCopy() *ServiceHealthObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceHealthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceHealthParameters) DeepCopyInto(out *ServiceHealthParameters) {
	*out = *in
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Locations != nil {
		in, out := &in.Locations, &out.Locations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceHealthParameters.
func (in *ServiceHealthParameters) DeepCopy() *ServiceHealthParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceHealthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsInitParameters) DeepCopyInto(out *SettingsInitParameters) {
	*out = *in
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = make([]TextInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsInitParameters.
func (in *SettingsInitParameters) DeepCopy() *SettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsObservation) DeepCopyInto(out *SettingsObservation) {
	*out = *in
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = make([]TextObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsObservation.
func (in *SettingsObservation) DeepCopy() *SettingsObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsParameters) DeepCopyInto(out *SettingsParameters) {
	*out = *in
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = make([]TextParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsParameters.
func (in *SettingsParameters) DeepCopy() *SettingsParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageBlobDirectInitParameters) DeepCopyInto(out *StorageBlobDirectInitParameters) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountID != nil {
		in, out := &in.StorageAccountID, &out.StorageAccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageBlobDirectInitParameters.
func (in *StorageBlobDirectInitParameters) DeepCopy() *StorageBlobDirectInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageBlobDirectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageBlobDirectObservation) DeepCopyInto(out *StorageBlobDirectObservation) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountID != nil {
		in, out := &in.StorageAccountID, &out.StorageAccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageBlobDirectObservation.
func (in *StorageBlobDirectObservation) DeepCopy() *StorageBlobDirectObservation {
	if in == nil {
		return nil
	}
	out := new(StorageBlobDirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageBlobDirectParameters) DeepCopyInto(out *StorageBlobDirectParameters) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountID != nil {
		in, out := &in.StorageAccountID, &out.StorageAccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageBlobDirectParameters.
func (in *StorageBlobDirectParameters) DeepCopy() *StorageBlobDirectParameters {
	if in == nil {
		return nil
	}
	out := new(StorageBlobDirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageBlobInitParameters) DeepCopyInto(out *StorageBlobInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageBlobInitParameters.
func (in *StorageBlobInitParameters) DeepCopy() *StorageBlobInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageBlobInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageBlobObservation) DeepCopyInto(out *StorageBlobObservation) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountID != nil {
		in, out := &in.StorageAccountID, &out.StorageAccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageBlobObservation.
func (in *StorageBlobObservation) DeepCopy() *StorageBlobObservation {
	if in == nil {
		return nil
	}
	out := new(StorageBlobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageBlobParameters) DeepCopyInto(out *StorageBlobParameters) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.ContainerNameRef != nil {
		in, out := &in.ContainerNameRef, &out.ContainerNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerNameSelector != nil {
		in, out := &in.ContainerNameSelector, &out.ContainerNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountID != nil {
		in, out := &in.StorageAccountID, &out.StorageAccountID
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountIDRef != nil {
		in, out := &in.StorageAccountIDRef, &out.StorageAccountIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountIDSelector != nil {
		in, out := &in.StorageAccountIDSelector, &out.StorageAccountIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageBlobParameters.
func (in *StorageBlobParameters) DeepCopy() *StorageBlobParameters {
	if in == nil {
		return nil
	}
	out := new(StorageBlobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageTableDirectInitParameters) DeepCopyInto(out *StorageTableDirectInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountID != nil {
		in, out := &in.StorageAccountID, &out.StorageAccountID
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageTableDirectInitParameters.
func (in *StorageTableDirectInitParameters) DeepCopy() *StorageTableDirectInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageTableDirectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageTableDirectObservation) DeepCopyInto(out *StorageTableDirectObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountID != nil {
		in, out := &in.StorageAccountID, &out.StorageAccountID
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageTableDirectObservation.
func (in *StorageTableDirectObservation) DeepCopy() *StorageTableDirectObservation {
	if in == nil {
		return nil
	}
	out := new(StorageTableDirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageTableDirectParameters) DeepCopyInto(out *StorageTableDirectParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountID != nil {
		in, out := &in.StorageAccountID, &out.StorageAccountID
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageTableDirectParameters.
func (in *StorageTableDirectParameters) DeepCopy() *StorageTableDirectParameters {
	if in == nil {
		return nil
	}
	out := new(StorageTableDirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamDeclarationInitParameters) DeepCopyInto(out *StreamDeclarationInitParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]ColumnInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StreamName != nil {
		in, out := &in.StreamName, &out.StreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamDeclarationInitParameters.
func (in *StreamDeclarationInitParameters) DeepCopy() *StreamDeclarationInitParameters {
	if in == nil {
		return nil
	}
	out := new(StreamDeclarationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamDeclarationObservation) DeepCopyInto(out *StreamDeclarationObservation) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]ColumnObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StreamName != nil {
		in, out := &in.StreamName, &out.StreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamDeclarationObservation.
func (in *StreamDeclarationObservation) DeepCopy() *StreamDeclarationObservation {
	if in == nil {
		return nil
	}
	out := new(StreamDeclarationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamDeclarationParameters) DeepCopyInto(out *StreamDeclarationParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]ColumnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StreamName != nil {
		in, out := &in.StreamName, &out.StreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamDeclarationParameters.
func (in *StreamDeclarationParameters) DeepCopy() *StreamDeclarationParameters {
	if in == nil {
		return nil
	}
	out := new(StreamDeclarationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyslogInitParameters) DeepCopyInto(out *SyslogInitParameters) {
	*out = *in
	if in.FacilityNames != nil {
		in, out := &in.FacilityNames, &out.FacilityNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LogLevels != nil {
		in, out := &in.LogLevels, &out.LogLevels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyslogInitParameters.
func (in *SyslogInitParameters) DeepCopy() *SyslogInitParameters {
	if in == nil {
		return nil
	}
	out := new(SyslogInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyslogObservation) DeepCopyInto(out *SyslogObservation) {
	*out = *in
	if in.FacilityNames != nil {
		in, out := &in.FacilityNames, &out.FacilityNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LogLevels != nil {
		in, out := &in.LogLevels, &out.LogLevels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyslogObservation.
func (in *SyslogObservation) DeepCopy() *SyslogObservation {
	if in == nil {
		return nil
	}
	out := new(SyslogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyslogParameters) DeepCopyInto(out *SyslogParameters) {
	*out = *in
	if in.FacilityNames != nil {
		in, out := &in.FacilityNames, &out.FacilityNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LogLevels != nil {
		in, out := &in.LogLevels, &out.LogLevels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyslogParameters.
func (in *SyslogParameters) DeepCopy() *SyslogParameters {
	if in == nil {
		return nil
	}
	out := new(SyslogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextInitParameters) DeepCopyInto(out *TextInitParameters) {
	*out = *in
	if in.RecordStartTimestampFormat != nil {
		in, out := &in.RecordStartTimestampFormat, &out.RecordStartTimestampFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextInitParameters.
func (in *TextInitParameters) DeepCopy() *TextInitParameters {
	if in == nil {
		return nil
	}
	out := new(TextInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextObservation) DeepCopyInto(out *TextObservation) {
	*out = *in
	if in.RecordStartTimestampFormat != nil {
		in, out := &in.RecordStartTimestampFormat, &out.RecordStartTimestampFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextObservation.
func (in *TextObservation) DeepCopy() *TextObservation {
	if in == nil {
		return nil
	}
	out := new(TextObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextParameters) DeepCopyInto(out *TextParameters) {
	*out = *in
	if in.RecordStartTimestampFormat != nil {
		in, out := &in.RecordStartTimestampFormat, &out.RecordStartTimestampFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextParameters.
func (in *TextParameters) DeepCopy() *TextParameters {
	if in == nil {
		return nil
	}
	out := new(TextParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerInitParameters) DeepCopyInto(out *TriggerInitParameters) {
	*out = *in
	if in.MetricTrigger != nil {
		in, out := &in.MetricTrigger, &out.MetricTrigger
		*out = make([]TriggerMetricTriggerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerInitParameters.
func (in *TriggerInitParameters) DeepCopy() *TriggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerMetricTriggerInitParameters) DeepCopyInto(out *TriggerMetricTriggerInitParameters) {
	*out = *in
	if in.MetricColumn != nil {
		in, out := &in.MetricColumn, &out.MetricColumn
		*out = new(string)
		**out = **in
	}
	if in.MetricTriggerType != nil {
		in, out := &in.MetricTriggerType, &out.MetricTriggerType
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerMetricTriggerInitParameters.
func (in *TriggerMetricTriggerInitParameters) DeepCopy() *TriggerMetricTriggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerMetricTriggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerMetricTriggerObservation) DeepCopyInto(out *TriggerMetricTriggerObservation) {
	*out = *in
	if in.MetricColumn != nil {
		in, out := &in.MetricColumn, &out.MetricColumn
		*out = new(string)
		**out = **in
	}
	if in.MetricTriggerType != nil {
		in, out := &in.MetricTriggerType, &out.MetricTriggerType
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerMetricTriggerObservation.
func (in *TriggerMetricTriggerObservation) DeepCopy() *TriggerMetricTriggerObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerMetricTriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerMetricTriggerParameters) DeepCopyInto(out *TriggerMetricTriggerParameters) {
	*out = *in
	if in.MetricColumn != nil {
		in, out := &in.MetricColumn, &out.MetricColumn
		*out = new(string)
		**out = **in
	}
	if in.MetricTriggerType != nil {
		in, out := &in.MetricTriggerType, &out.MetricTriggerType
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerMetricTriggerParameters.
func (in *TriggerMetricTriggerParameters) DeepCopy() *TriggerMetricTriggerParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerMetricTriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerObservation) DeepCopyInto(out *TriggerObservation) {
	*out = *in
	if in.MetricTrigger != nil {
		in, out := &in.MetricTrigger, &out.MetricTrigger
		*out = make([]TriggerMetricTriggerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerObservation.
func (in *TriggerObservation) DeepCopy() *TriggerObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerParameters) DeepCopyInto(out *TriggerParameters) {
	*out = *in
	if in.MetricTrigger != nil {
		in, out := &in.MetricTrigger, &out.MetricTrigger
		*out = make([]TriggerMetricTriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerParameters.
func (in *TriggerParameters) DeepCopy() *TriggerParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidationRulesInitParameters) DeepCopyInto(out *ValidationRulesInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = make([]ContentInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExpectedStatusCode != nil {
		in, out := &in.ExpectedStatusCode, &out.ExpectedStatusCode
		*out = new(float64)
		**out = **in
	}
	if in.SSLCertRemainingLifetime != nil {
		in, out := &in.SSLCertRemainingLifetime, &out.SSLCertRemainingLifetime
		*out = new(float64)
		**out = **in
	}
	if in.SSLCheckEnabled != nil {
		in, out := &in.SSLCheckEnabled, &out.SSLCheckEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidationRulesInitParameters.
func (in *ValidationRulesInitParameters) DeepCopy() *ValidationRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ValidationRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidationRulesObservation) DeepCopyInto(out *ValidationRulesObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = make([]ContentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExpectedStatusCode != nil {
		in, out := &in.ExpectedStatusCode, &out.ExpectedStatusCode
		*out = new(float64)
		**out = **in
	}
	if in.SSLCertRemainingLifetime != nil {
		in, out := &in.SSLCertRemainingLifetime, &out.SSLCertRemainingLifetime
		*out = new(float64)
		**out = **in
	}
	if in.SSLCheckEnabled != nil {
		in, out := &in.SSLCheckEnabled, &out.SSLCheckEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidationRulesObservation.
func (in *ValidationRulesObservation) DeepCopy() *ValidationRulesObservation {
	if in == nil {
		return nil
	}
	out := new(ValidationRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidationRulesParameters) DeepCopyInto(out *ValidationRulesParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = make([]ContentParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExpectedStatusCode != nil {
		in, out := &in.ExpectedStatusCode, &out.ExpectedStatusCode
		*out = new(float64)
		**out = **in
	}
	if in.SSLCertRemainingLifetime != nil {
		in, out := &in.SSLCertRemainingLifetime, &out.SSLCertRemainingLifetime
		*out = new(float64)
		**out = **in
	}
	if in.SSLCheckEnabled != nil {
		in, out := &in.SSLCheckEnabled, &out.SSLCheckEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidationRulesParameters.
func (in *ValidationRulesParameters) DeepCopy() *ValidationRulesParameters {
	if in == nil {
		return nil
	}
	out := new(ValidationRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VoiceReceiverInitParameters) DeepCopyInto(out *VoiceReceiverInitParameters) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PhoneNumber != nil {
		in, out := &in.PhoneNumber, &out.PhoneNumber
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VoiceReceiverInitParameters.
func (in *VoiceReceiverInitParameters) DeepCopy() *VoiceReceiverInitParameters {
	if in == nil {
		return nil
	}
	out := new(VoiceReceiverInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VoiceReceiverObservation) DeepCopyInto(out *VoiceReceiverObservation) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PhoneNumber != nil {
		in, out := &in.PhoneNumber, &out.PhoneNumber
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VoiceReceiverObservation.
func (in *VoiceReceiverObservation) DeepCopy() *VoiceReceiverObservation {
	if in == nil {
		return nil
	}
	out := new(VoiceReceiverObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VoiceReceiverParameters) DeepCopyInto(out *VoiceReceiverParameters) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PhoneNumber != nil {
		in, out := &in.PhoneNumber, &out.PhoneNumber
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VoiceReceiverParameters.
func (in *VoiceReceiverParameters) DeepCopy() *VoiceReceiverParameters {
	if in == nil {
		return nil
	}
	out := new(VoiceReceiverParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookInitParameters) DeepCopyInto(out *WebhookInitParameters) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ServiceURI != nil {
		in, out := &in.ServiceURI, &out.ServiceURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookInitParameters.
func (in *WebhookInitParameters) DeepCopy() *WebhookInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookObservation) DeepCopyInto(out *WebhookObservation) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ServiceURI != nil {
		in, out := &in.ServiceURI, &out.ServiceURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookObservation.
func (in *WebhookObservation) DeepCopy() *WebhookObservation {
	if in == nil {
		return nil
	}
	out := new(WebhookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookParameters) DeepCopyInto(out *WebhookParameters) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ServiceURI != nil {
		in, out := &in.ServiceURI, &out.ServiceURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookParameters.
func (in *WebhookParameters) DeepCopy() *WebhookParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookReceiverInitParameters) DeepCopyInto(out *WebhookReceiverInitParameters) {
	*out = *in
	if in.AADAuth != nil {
		in, out := &in.AADAuth, &out.AADAuth
		*out = make([]AADAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServiceURI != nil {
		in, out := &in.ServiceURI, &out.ServiceURI
		*out = new(string)
		**out = **in
	}
	if in.UseCommonAlertSchema != nil {
		in, out := &in.UseCommonAlertSchema, &out.UseCommonAlertSchema
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookReceiverInitParameters.
func (in *WebhookReceiverInitParameters) DeepCopy() *WebhookReceiverInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookReceiverInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookReceiverObservation) DeepCopyInto(out *WebhookReceiverObservation) {
	*out = *in
	if in.AADAuth != nil {
		in, out := &in.AADAuth, &out.AADAuth
		*out = make([]AADAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServiceURI != nil {
		in, out := &in.ServiceURI, &out.ServiceURI
		*out = new(string)
		**out = **in
	}
	if in.UseCommonAlertSchema != nil {
		in, out := &in.UseCommonAlertSchema, &out.UseCommonAlertSchema
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookReceiverObservation.
func (in *WebhookReceiverObservation) DeepCopy() *WebhookReceiverObservation {
	if in == nil {
		return nil
	}
	out := new(WebhookReceiverObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookReceiverParameters) DeepCopyInto(out *WebhookReceiverParameters) {
	*out = *in
	if in.AADAuth != nil {
		in, out := &in.AADAuth, &out.AADAuth
		*out = make([]AADAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServiceURI != nil {
		in, out := &in.ServiceURI, &out.ServiceURI
		*out = new(string)
		**out = **in
	}
	if in.UseCommonAlertSchema != nil {
		in, out := &in.UseCommonAlertSchema, &out.UseCommonAlertSchema
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookReceiverParameters.
func (in *WebhookReceiverParameters) DeepCopy() *WebhookReceiverParameters {
	if in == nil {
		return nil
	}
	out := new(WebhookReceiverParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsEventLogInitParameters) DeepCopyInto(out *WindowsEventLogInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XPathQueries != nil {
		in, out := &in.XPathQueries, &out.XPathQueries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsEventLogInitParameters.
func (in *WindowsEventLogInitParameters) DeepCopy() *WindowsEventLogInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsEventLogInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsEventLogObservation) DeepCopyInto(out *WindowsEventLogObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XPathQueries != nil {
		in, out := &in.XPathQueries, &out.XPathQueries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsEventLogObservation.
func (in *WindowsEventLogObservation) DeepCopy() *WindowsEventLogObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsEventLogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsEventLogParameters) DeepCopyInto(out *WindowsEventLogParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XPathQueries != nil {
		in, out := &in.XPathQueries, &out.XPathQueries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsEventLogParameters.
func (in *WindowsEventLogParameters) DeepCopy() *WindowsEventLogParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsEventLogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFirewallLogInitParameters) DeepCopyInto(out *WindowsFirewallLogInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFirewallLogInitParameters.
func (in *WindowsFirewallLogInitParameters) DeepCopy() *WindowsFirewallLogInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFirewallLogInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFirewallLogObservation) DeepCopyInto(out *WindowsFirewallLogObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFirewallLogObservation.
func (in *WindowsFirewallLogObservation) DeepCopy() *WindowsFirewallLogObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFirewallLogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFirewallLogParameters) DeepCopyInto(out *WindowsFirewallLogParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFirewallLogParameters.
func (in *WindowsFirewallLogParameters) DeepCopy() *WindowsFirewallLogParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFirewallLogParameters)
	in.DeepCopyInto(out)
	return out
}
