/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ActionObservation struct {
}

type ActionParameters struct {

	// The ID of the Action Group can be sourced from the
	// +crossplane:generate:reference:type=MonitorActionGroup
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ActionGroupID *string `json:"actionGroupId,omitempty" tf:"action_group_id,omitempty"`

	// Reference to a MonitorActionGroup to populate actionGroupId.
	// +kubebuilder:validation:Optional
	ActionGroupIDRef *v1.Reference `json:"actionGroupIdRef,omitempty" tf:"-"`

	// Selector for a MonitorActionGroup to populate actionGroupId.
	// +kubebuilder:validation:Optional
	ActionGroupIDSelector *v1.Selector `json:"actionGroupIdSelector,omitempty" tf:"-"`

	// The map of custom string properties to include with the post operation. These data are appended to the webhook payload.
	// +kubebuilder:validation:Optional
	WebhookProperties map[string]*string `json:"webhookProperties,omitempty" tf:"webhook_properties,omitempty"`
}

type ApplicationInsightsWebTestLocationAvailabilityCriteriaObservation struct {
}

type ApplicationInsightsWebTestLocationAvailabilityCriteriaParameters struct {

	// The ID of the Application Insights Resource.
	// +kubebuilder:validation:Required
	ComponentID *string `json:"componentId" tf:"component_id,omitempty"`

	// The number of failed locations.
	// +kubebuilder:validation:Required
	FailedLocationCount *float64 `json:"failedLocationCount" tf:"failed_location_count,omitempty"`

	// The ID of the Application Insights Web Test.
	// +kubebuilder:validation:Required
	WebTestID *string `json:"webTestId" tf:"web_test_id,omitempty"`
}

type CriteriaObservation struct {
}

type CriteriaParameters struct {

	// The statistic that runs over the metric values. Possible values are Average, Count, Minimum, Maximum and Total.
	// +kubebuilder:validation:Required
	Aggregation *string `json:"aggregation" tf:"aggregation,omitempty"`

	// One or more dimension blocks as defined below.
	// +kubebuilder:validation:Optional
	Dimension []DimensionParameters `json:"dimension,omitempty" tf:"dimension,omitempty"`

	// One of the metric names to be monitored.
	// +kubebuilder:validation:Required
	MetricName *string `json:"metricName" tf:"metric_name,omitempty"`

	// One of the metric namespaces to be monitored.
	// +kubebuilder:validation:Required
	MetricNamespace *string `json:"metricNamespace" tf:"metric_namespace,omitempty"`

	// The criteria operator. Possible values are Equals, NotEquals, GreaterThan, GreaterThanOrEqual, LessThan and LessThanOrEqual.
	// +kubebuilder:validation:Required
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// Skip the metric validation to allow creating an alert rule on a custom metric that isn't yet emitted? Defaults to false.
	// +kubebuilder:validation:Optional
	SkipMetricValidation *bool `json:"skipMetricValidation,omitempty" tf:"skip_metric_validation,omitempty"`

	// The criteria threshold value that activates the alert.
	// +kubebuilder:validation:Required
	Threshold *float64 `json:"threshold" tf:"threshold,omitempty"`
}

type DimensionObservation struct {
}

type DimensionParameters struct {

	// The name of the Metric Alert. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// The criteria operator. Possible values are LessThan, GreaterThan and GreaterOrLessThan.
	// +kubebuilder:validation:Required
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// The list of dimension values.
	// +kubebuilder:validation:Required
	Values []*string `json:"values" tf:"values,omitempty"`
}

type DynamicCriteriaDimensionObservation struct {
}

type DynamicCriteriaDimensionParameters struct {

	// The name of the Metric Alert. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// The criteria operator. Possible values are LessThan, GreaterThan and GreaterOrLessThan.
	// +kubebuilder:validation:Required
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// The list of dimension values.
	// +kubebuilder:validation:Required
	Values []*string `json:"values" tf:"values,omitempty"`
}

type DynamicCriteriaObservation struct {
}

type DynamicCriteriaParameters struct {

	// The statistic that runs over the metric values. Possible values are Average, Count, Minimum, Maximum and Total.
	// +kubebuilder:validation:Required
	Aggregation *string `json:"aggregation" tf:"aggregation,omitempty"`

	// The extent of deviation required to trigger an alert. Possible values are Low, Medium and High.
	// +kubebuilder:validation:Required
	AlertSensitivity *string `json:"alertSensitivity" tf:"alert_sensitivity,omitempty"`

	// One or more dimension blocks as defined below.
	// +kubebuilder:validation:Optional
	Dimension []DynamicCriteriaDimensionParameters `json:"dimension,omitempty" tf:"dimension,omitempty"`

	// The number of violations to trigger an alert. Should be smaller or equal to evaluation_total_count. Defaults to 4.
	// +kubebuilder:validation:Optional
	EvaluationFailureCount *float64 `json:"evaluationFailureCount,omitempty" tf:"evaluation_failure_count,omitempty"`

	// The number of aggregated lookback points. The lookback time window is calculated based on the aggregation granularity (window_size) and the selected number of aggregated points. Defaults to 4.
	// +kubebuilder:validation:Optional
	EvaluationTotalCount *float64 `json:"evaluationTotalCount,omitempty" tf:"evaluation_total_count,omitempty"`

	// The ISO8601 date from which to start learning the metric historical data and calculate the dynamic thresholds.
	// +kubebuilder:validation:Optional
	IgnoreDataBefore *string `json:"ignoreDataBefore,omitempty" tf:"ignore_data_before,omitempty"`

	// One of the metric names to be monitored.
	// +kubebuilder:validation:Required
	MetricName *string `json:"metricName" tf:"metric_name,omitempty"`

	// One of the metric namespaces to be monitored.
	// +kubebuilder:validation:Required
	MetricNamespace *string `json:"metricNamespace" tf:"metric_namespace,omitempty"`

	// The criteria operator. Possible values are LessThan, GreaterThan and GreaterOrLessThan.
	// +kubebuilder:validation:Required
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// Skip the metric validation to allow creating an alert rule on a custom metric that isn't yet emitted?
	// +kubebuilder:validation:Optional
	SkipMetricValidation *bool `json:"skipMetricValidation,omitempty" tf:"skip_metric_validation,omitempty"`
}

type MonitorMetricAlertObservation struct {

	// The ID of the metric alert.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type MonitorMetricAlertParameters struct {

	// One or more action blocks as defined below.
	// +kubebuilder:validation:Optional
	Action []ActionParameters `json:"action,omitempty" tf:"action,omitempty"`

	// A application_insights_web_test_location_availability_criteria block as defined below.
	// +kubebuilder:validation:Optional
	ApplicationInsightsWebTestLocationAvailabilityCriteria []ApplicationInsightsWebTestLocationAvailabilityCriteriaParameters `json:"applicationInsightsWebTestLocationAvailabilityCriteria,omitempty" tf:"application_insights_web_test_location_availability_criteria,omitempty"`

	// Should the alerts in this Metric Alert be auto resolved? Defaults to true.
	// +kubebuilder:validation:Optional
	AutoMitigate *bool `json:"autoMitigate,omitempty" tf:"auto_mitigate,omitempty"`

	// One or more (static) criteria blocks as defined below.
	// +kubebuilder:validation:Optional
	Criteria []CriteriaParameters `json:"criteria,omitempty" tf:"criteria,omitempty"`

	// The description of this Metric Alert.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// A dynamic_criteria block as defined below.
	// +kubebuilder:validation:Optional
	DynamicCriteria []DynamicCriteriaParameters `json:"dynamicCriteria,omitempty" tf:"dynamic_criteria,omitempty"`

	// Should this Metric Alert be enabled? Defaults to true.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The evaluation frequency of this Metric Alert, represented in ISO 8601 duration format. Possible values are PT1M, PT5M, PT15M, PT30M and PT1H. Defaults to PT1M.
	// +kubebuilder:validation:Optional
	Frequency *string `json:"frequency,omitempty" tf:"frequency,omitempty"`

	// The name of the resource group in which to create the Metric Alert instance. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// A set of strings of resource IDs at which the metric criteria should be applied.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	Scopes []*string `json:"scopes,omitempty" tf:"scopes,omitempty"`

	// References to Account in storage to populate scopes.
	// +kubebuilder:validation:Optional
	ScopesRefs []v1.Reference `json:"scopesRefs,omitempty" tf:"-"`

	// Selector for a list of Account in storage to populate scopes.
	// +kubebuilder:validation:Optional
	ScopesSelector *v1.Selector `json:"scopesSelector,omitempty" tf:"-"`

	// The severity of this Metric Alert. Possible values are 0, 1, 2, 3 and 4. Defaults to 3.
	// +kubebuilder:validation:Optional
	Severity *float64 `json:"severity,omitempty" tf:"severity,omitempty"`

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The location of the target resource.
	// The location of the target pluginsdk. Required when using subscription, resource group scope or multiple scopes.
	// +kubebuilder:validation:Optional
	TargetResourceLocation *string `json:"targetResourceLocation,omitempty" tf:"target_resource_location,omitempty"`

	// The resource type (e.g. Microsoft.Compute/virtualMachines) of the target resource.
	// The resource type (e.g. Microsoft.Compute/virtualMachines) of the target pluginsdk. Required when using subscription, resource group scope or multiple scopes.
	// +kubebuilder:validation:Optional
	TargetResourceType *string `json:"targetResourceType,omitempty" tf:"target_resource_type,omitempty"`

	// The period of time that is used to monitor alert activity, represented in ISO 8601 duration format. This value must be greater than frequency. Possible values are PT1M, PT5M, PT15M, PT30M, PT1H, PT6H, PT12H and P1D. Defaults to PT5M.
	// +kubebuilder:validation:Optional
	WindowSize *string `json:"windowSize,omitempty" tf:"window_size,omitempty"`
}

// MonitorMetricAlertSpec defines the desired state of MonitorMetricAlert
type MonitorMetricAlertSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MonitorMetricAlertParameters `json:"forProvider"`
}

// MonitorMetricAlertStatus defines the observed state of MonitorMetricAlert.
type MonitorMetricAlertStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MonitorMetricAlertObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// MonitorMetricAlert is the Schema for the MonitorMetricAlerts API. Manages a Metric Alert within Azure Monitor
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type MonitorMetricAlert struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MonitorMetricAlertSpec   `json:"spec"`
	Status            MonitorMetricAlertStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MonitorMetricAlertList contains a list of MonitorMetricAlerts
type MonitorMetricAlertList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MonitorMetricAlert `json:"items"`
}

// Repository type metadata.
var (
	MonitorMetricAlert_Kind             = "MonitorMetricAlert"
	MonitorMetricAlert_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MonitorMetricAlert_Kind}.String()
	MonitorMetricAlert_KindAPIVersion   = MonitorMetricAlert_Kind + "." + CRDGroupVersion.String()
	MonitorMetricAlert_GroupVersionKind = CRDGroupVersion.WithKind(MonitorMetricAlert_Kind)
)

func init() {
	SchemeBuilder.Register(&MonitorMetricAlert{}, &MonitorMetricAlertList{})
}
