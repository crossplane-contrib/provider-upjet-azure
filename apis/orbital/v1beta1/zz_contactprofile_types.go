// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ChannelsInitParameters struct {

	// Bandwidth in MHz.
	BandwidthMhz *float64 `json:"bandwidthMhz,omitempty" tf:"bandwidth_mhz,omitempty"`

	// Center frequency in MHz.
	CenterFrequencyMhz *float64 `json:"centerFrequencyMhz,omitempty" tf:"center_frequency_mhz,omitempty"`

	// Copy of the modem configuration file such as Kratos QRadio or Kratos QuantumRx. Only valid for downlink directions. If provided, the modem connects to the customer endpoint and sends demodulated data instead of a VITA.49 stream.
	DemodulationConfiguration *string `json:"demodulationConfiguration,omitempty" tf:"demodulation_configuration,omitempty"`

	// Customer End point to store/retrieve data during a contact. An end_point block as defined below.
	EndPoint []EndPointInitParameters `json:"endPoint,omitempty" tf:"end_point,omitempty"`

	// Copy of the modem configuration file such as Kratos QRadio. Only valid for uplink directions. If provided, the modem connects to the customer endpoint and accepts commands from the customer instead of a VITA.49 stream.
	ModulationConfiguration *string `json:"modulationConfiguration,omitempty" tf:"modulation_configuration,omitempty"`

	// The name of the contact profile. Changing this forces a new resource to be created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ChannelsObservation struct {

	// Bandwidth in MHz.
	BandwidthMhz *float64 `json:"bandwidthMhz,omitempty" tf:"bandwidth_mhz,omitempty"`

	// Center frequency in MHz.
	CenterFrequencyMhz *float64 `json:"centerFrequencyMhz,omitempty" tf:"center_frequency_mhz,omitempty"`

	// Copy of the modem configuration file such as Kratos QRadio or Kratos QuantumRx. Only valid for downlink directions. If provided, the modem connects to the customer endpoint and sends demodulated data instead of a VITA.49 stream.
	DemodulationConfiguration *string `json:"demodulationConfiguration,omitempty" tf:"demodulation_configuration,omitempty"`

	// Customer End point to store/retrieve data during a contact. An end_point block as defined below.
	EndPoint []EndPointObservation `json:"endPoint,omitempty" tf:"end_point,omitempty"`

	// Copy of the modem configuration file such as Kratos QRadio. Only valid for uplink directions. If provided, the modem connects to the customer endpoint and accepts commands from the customer instead of a VITA.49 stream.
	ModulationConfiguration *string `json:"modulationConfiguration,omitempty" tf:"modulation_configuration,omitempty"`

	// The name of the contact profile. Changing this forces a new resource to be created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ChannelsParameters struct {

	// Bandwidth in MHz.
	// +kubebuilder:validation:Optional
	BandwidthMhz *float64 `json:"bandwidthMhz" tf:"bandwidth_mhz,omitempty"`

	// Center frequency in MHz.
	// +kubebuilder:validation:Optional
	CenterFrequencyMhz *float64 `json:"centerFrequencyMhz" tf:"center_frequency_mhz,omitempty"`

	// Copy of the modem configuration file such as Kratos QRadio or Kratos QuantumRx. Only valid for downlink directions. If provided, the modem connects to the customer endpoint and sends demodulated data instead of a VITA.49 stream.
	// +kubebuilder:validation:Optional
	DemodulationConfiguration *string `json:"demodulationConfiguration,omitempty" tf:"demodulation_configuration,omitempty"`

	// Customer End point to store/retrieve data during a contact. An end_point block as defined below.
	// +kubebuilder:validation:Optional
	EndPoint []EndPointParameters `json:"endPoint" tf:"end_point,omitempty"`

	// Copy of the modem configuration file such as Kratos QRadio. Only valid for uplink directions. If provided, the modem connects to the customer endpoint and accepts commands from the customer instead of a VITA.49 stream.
	// +kubebuilder:validation:Optional
	ModulationConfiguration *string `json:"modulationConfiguration,omitempty" tf:"modulation_configuration,omitempty"`

	// The name of the contact profile. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type ContactProfileInitParameters struct {

	// Auto-tracking configurations for a spacecraft. Possible values are disabled, xBand and sBand.
	AutoTracking *string `json:"autoTracking,omitempty" tf:"auto_tracking,omitempty"`

	// ARM resource identifier of the Event Hub used for telemetry. Requires granting Orbital Resource Provider the rights to send telemetry into the hub.
	EventHubURI *string `json:"eventHubUri,omitempty" tf:"event_hub_uri,omitempty"`

	// A list of spacecraft links. A links block as defined below. Changing this forces a new resource to be created.
	Links []LinksInitParameters `json:"links,omitempty" tf:"links,omitempty"`

	// The location where the contact profile exists. Changing this forces a new resource to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Maximum elevation of the antenna during the contact in decimal degrees.
	MinimumElevationDegrees *float64 `json:"minimumElevationDegrees,omitempty" tf:"minimum_elevation_degrees,omitempty"`

	// Minimum viable contact duration in ISO 8601 format. Used for listing the available contacts with a spacecraft at a given ground station.
	MinimumVariableContactDuration *string `json:"minimumVariableContactDuration,omitempty" tf:"minimum_variable_contact_duration,omitempty"`

	// A mapping of tags to assign to the resource.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type ContactProfileObservation struct {

	// Auto-tracking configurations for a spacecraft. Possible values are disabled, xBand and sBand.
	AutoTracking *string `json:"autoTracking,omitempty" tf:"auto_tracking,omitempty"`

	// ARM resource identifier of the Event Hub used for telemetry. Requires granting Orbital Resource Provider the rights to send telemetry into the hub.
	EventHubURI *string `json:"eventHubUri,omitempty" tf:"event_hub_uri,omitempty"`

	// The ID of the contact profile.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A list of spacecraft links. A links block as defined below. Changing this forces a new resource to be created.
	Links []LinksObservation `json:"links,omitempty" tf:"links,omitempty"`

	// The location where the contact profile exists. Changing this forces a new resource to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Maximum elevation of the antenna during the contact in decimal degrees.
	MinimumElevationDegrees *float64 `json:"minimumElevationDegrees,omitempty" tf:"minimum_elevation_degrees,omitempty"`

	// Minimum viable contact duration in ISO 8601 format. Used for listing the available contacts with a spacecraft at a given ground station.
	MinimumVariableContactDuration *string `json:"minimumVariableContactDuration,omitempty" tf:"minimum_variable_contact_duration,omitempty"`

	// ARM resource identifier of the subnet delegated to the Microsoft.Orbital/orbitalGateways. Needs to be at least a class C subnet, and should not have any IP created in it. Changing this forces a new resource to be created.
	NetworkConfigurationSubnetID *string `json:"networkConfigurationSubnetId,omitempty" tf:"network_configuration_subnet_id,omitempty"`

	// The name of the Resource Group where the contact profile exists. Changing this forces a new resource to be created.
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// A mapping of tags to assign to the resource.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type ContactProfileParameters struct {

	// Auto-tracking configurations for a spacecraft. Possible values are disabled, xBand and sBand.
	// +kubebuilder:validation:Optional
	AutoTracking *string `json:"autoTracking,omitempty" tf:"auto_tracking,omitempty"`

	// ARM resource identifier of the Event Hub used for telemetry. Requires granting Orbital Resource Provider the rights to send telemetry into the hub.
	// +kubebuilder:validation:Optional
	EventHubURI *string `json:"eventHubUri,omitempty" tf:"event_hub_uri,omitempty"`

	// A list of spacecraft links. A links block as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	Links []LinksParameters `json:"links,omitempty" tf:"links,omitempty"`

	// The location where the contact profile exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Maximum elevation of the antenna during the contact in decimal degrees.
	// +kubebuilder:validation:Optional
	MinimumElevationDegrees *float64 `json:"minimumElevationDegrees,omitempty" tf:"minimum_elevation_degrees,omitempty"`

	// Minimum viable contact duration in ISO 8601 format. Used for listing the available contacts with a spacecraft at a given ground station.
	// +kubebuilder:validation:Optional
	MinimumVariableContactDuration *string `json:"minimumVariableContactDuration,omitempty" tf:"minimum_variable_contact_duration,omitempty"`

	// ARM resource identifier of the subnet delegated to the Microsoft.Orbital/orbitalGateways. Needs to be at least a class C subnet, and should not have any IP created in it. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.Subnet
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	NetworkConfigurationSubnetID *string `json:"networkConfigurationSubnetId,omitempty" tf:"network_configuration_subnet_id,omitempty"`

	// Reference to a Subnet in network to populate networkConfigurationSubnetId.
	// +kubebuilder:validation:Optional
	NetworkConfigurationSubnetIDRef *v1.Reference `json:"networkConfigurationSubnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in network to populate networkConfigurationSubnetId.
	// +kubebuilder:validation:Optional
	NetworkConfigurationSubnetIDSelector *v1.Selector `json:"networkConfigurationSubnetIdSelector,omitempty" tf:"-"`

	// The name of the Resource Group where the contact profile exists. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type EndPointInitParameters struct {

	// Name of an end point.
	EndPointName *string `json:"endPointName,omitempty" tf:"end_point_name,omitempty"`

	// IP address of an end point.
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// TCP port to listen on to receive data.
	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	// Protocol of an end point. Possible values are TCP and UDP.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`
}

type EndPointObservation struct {

	// Name of an end point.
	EndPointName *string `json:"endPointName,omitempty" tf:"end_point_name,omitempty"`

	// IP address of an end point.
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// TCP port to listen on to receive data.
	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	// Protocol of an end point. Possible values are TCP and UDP.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`
}

type EndPointParameters struct {

	// Name of an end point.
	// +kubebuilder:validation:Optional
	EndPointName *string `json:"endPointName" tf:"end_point_name,omitempty"`

	// IP address of an end point.
	// +kubebuilder:validation:Optional
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// TCP port to listen on to receive data.
	// +kubebuilder:validation:Optional
	Port *string `json:"port" tf:"port,omitempty"`

	// Protocol of an end point. Possible values are TCP and UDP.
	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol" tf:"protocol,omitempty"`
}

type LinksInitParameters struct {

	// A list of contact profile link channels. A channels block as defined below. Changing this forces a new resource to be created.
	Channels []ChannelsInitParameters `json:"channels,omitempty" tf:"channels,omitempty"`

	// Direction of the link. Possible values are Uplink and Downlink.
	Direction *string `json:"direction,omitempty" tf:"direction,omitempty"`

	// Name of the link.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Polarization of the link. Possible values are LHCP, RHCP, linearVertical and linearHorizontal.
	Polarization *string `json:"polarization,omitempty" tf:"polarization,omitempty"`
}

type LinksObservation struct {

	// A list of contact profile link channels. A channels block as defined below. Changing this forces a new resource to be created.
	Channels []ChannelsObservation `json:"channels,omitempty" tf:"channels,omitempty"`

	// Direction of the link. Possible values are Uplink and Downlink.
	Direction *string `json:"direction,omitempty" tf:"direction,omitempty"`

	// Name of the link.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Polarization of the link. Possible values are LHCP, RHCP, linearVertical and linearHorizontal.
	Polarization *string `json:"polarization,omitempty" tf:"polarization,omitempty"`
}

type LinksParameters struct {

	// A list of contact profile link channels. A channels block as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	Channels []ChannelsParameters `json:"channels" tf:"channels,omitempty"`

	// Direction of the link. Possible values are Uplink and Downlink.
	// +kubebuilder:validation:Optional
	Direction *string `json:"direction" tf:"direction,omitempty"`

	// Name of the link.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Polarization of the link. Possible values are LHCP, RHCP, linearVertical and linearHorizontal.
	// +kubebuilder:validation:Optional
	Polarization *string `json:"polarization" tf:"polarization,omitempty"`
}

// ContactProfileSpec defines the desired state of ContactProfile
type ContactProfileSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ContactProfileParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ContactProfileInitParameters `json:"initProvider,omitempty"`
}

// ContactProfileStatus defines the observed state of ContactProfile.
type ContactProfileStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ContactProfileObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ContactProfile is the Schema for the ContactProfiles API. Manages a orbital contact profile resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type ContactProfile struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.autoTracking) || (has(self.initProvider) && has(self.initProvider.autoTracking))",message="spec.forProvider.autoTracking is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.links) || (has(self.initProvider) && has(self.initProvider.links))",message="spec.forProvider.links is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.minimumVariableContactDuration) || (has(self.initProvider) && has(self.initProvider.minimumVariableContactDuration))",message="spec.forProvider.minimumVariableContactDuration is a required parameter"
	Spec   ContactProfileSpec   `json:"spec"`
	Status ContactProfileStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ContactProfileList contains a list of ContactProfiles
type ContactProfileList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ContactProfile `json:"items"`
}

// Repository type metadata.
var (
	ContactProfile_Kind             = "ContactProfile"
	ContactProfile_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ContactProfile_Kind}.String()
	ContactProfile_KindAPIVersion   = ContactProfile_Kind + "." + CRDGroupVersion.String()
	ContactProfile_GroupVersionKind = CRDGroupVersion.WithKind(ContactProfile_Kind)
)

func init() {
	SchemeBuilder.Register(&ContactProfile{}, &ContactProfileList{})
}
