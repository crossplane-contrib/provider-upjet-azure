// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AksAssignedIdentityInitParameters struct {
}

type AksAssignedIdentityObservation struct {

	// The principal ID of resource identity.
	PrincipalID *string `json:"principalId,omitempty" tf:"principal_id,omitempty"`

	// The tenant ID of resource.
	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`

	// The identity type.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AksAssignedIdentityParameters struct {
}

type KubernetesClusterExtensionInitParameters struct {

	// Specifies the Cluster ID. Changing this forces a new Kubernetes Cluster Extension to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/containerservice/v1beta2.KubernetesCluster
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Reference to a KubernetesCluster in containerservice to populate clusterId.
	// +kubebuilder:validation:Optional
	ClusterIDRef *v1.Reference `json:"clusterIdRef,omitempty" tf:"-"`

	// Selector for a KubernetesCluster in containerservice to populate clusterId.
	// +kubebuilder:validation:Optional
	ClusterIDSelector *v1.Selector `json:"clusterIdSelector,omitempty" tf:"-"`

	// Configuration settings that are sensitive, as name-value pairs for configuring this extension.
	// +mapType=granular
	ConfigurationProtectedSettings map[string]*string `json:"configurationProtectedSettings,omitempty" tf:"configuration_protected_settings,omitempty"`

	// Configuration settings, as name-value pairs for configuring this extension.
	// +mapType=granular
	ConfigurationSettings map[string]*string `json:"configurationSettings,omitempty" tf:"configuration_settings,omitempty"`

	// Specifies the type of extension. It must be one of the extension types registered with Microsoft.KubernetesConfiguration by the Extension publisher. For more information, please refer to Available Extensions for AKS. Changing this forces a new Kubernetes Cluster Extension to be created.
	ExtensionType *string `json:"extensionType,omitempty" tf:"extension_type,omitempty"`

	// A plan block as defined below. Changing this forces a new resource to be created.
	Plan *PlanInitParameters `json:"plan,omitempty" tf:"plan,omitempty"`

	// Namespace where the extension release must be placed for a cluster scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
	ReleaseNamespace *string `json:"releaseNamespace,omitempty" tf:"release_namespace,omitempty"`

	// The release train used by this extension. Possible values include but are not limited to Stable, Preview. Changing this forces a new Kubernetes Cluster Extension to be created.
	ReleaseTrain *string `json:"releaseTrain,omitempty" tf:"release_train,omitempty"`

	// Namespace where the extension will be created for a namespace scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
	TargetNamespace *string `json:"targetNamespace,omitempty" tf:"target_namespace,omitempty"`

	// User-specified version that the extension should pin to. If it is not set, Azure will use the latest version and auto upgrade it. Changing this forces a new Kubernetes Cluster Extension to be created.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type KubernetesClusterExtensionObservation struct {

	// An aks_assigned_identity block as defined below.
	AksAssignedIdentity []AksAssignedIdentityObservation `json:"aksAssignedIdentity,omitempty" tf:"aks_assigned_identity,omitempty"`

	// Specifies the Cluster ID. Changing this forces a new Kubernetes Cluster Extension to be created.
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Configuration settings that are sensitive, as name-value pairs for configuring this extension.
	// +mapType=granular
	ConfigurationProtectedSettings map[string]*string `json:"configurationProtectedSettings,omitempty" tf:"configuration_protected_settings,omitempty"`

	// Configuration settings, as name-value pairs for configuring this extension.
	// +mapType=granular
	ConfigurationSettings map[string]*string `json:"configurationSettings,omitempty" tf:"configuration_settings,omitempty"`

	// The current version of the extension.
	CurrentVersion *string `json:"currentVersion,omitempty" tf:"current_version,omitempty"`

	// Specifies the type of extension. It must be one of the extension types registered with Microsoft.KubernetesConfiguration by the Extension publisher. For more information, please refer to Available Extensions for AKS. Changing this forces a new Kubernetes Cluster Extension to be created.
	ExtensionType *string `json:"extensionType,omitempty" tf:"extension_type,omitempty"`

	// The ID of the Kubernetes Cluster Extension.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A plan block as defined below. Changing this forces a new resource to be created.
	Plan *PlanObservation `json:"plan,omitempty" tf:"plan,omitempty"`

	// Namespace where the extension release must be placed for a cluster scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
	ReleaseNamespace *string `json:"releaseNamespace,omitempty" tf:"release_namespace,omitempty"`

	// The release train used by this extension. Possible values include but are not limited to Stable, Preview. Changing this forces a new Kubernetes Cluster Extension to be created.
	ReleaseTrain *string `json:"releaseTrain,omitempty" tf:"release_train,omitempty"`

	// Namespace where the extension will be created for a namespace scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
	TargetNamespace *string `json:"targetNamespace,omitempty" tf:"target_namespace,omitempty"`

	// User-specified version that the extension should pin to. If it is not set, Azure will use the latest version and auto upgrade it. Changing this forces a new Kubernetes Cluster Extension to be created.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type KubernetesClusterExtensionParameters struct {

	// Specifies the Cluster ID. Changing this forces a new Kubernetes Cluster Extension to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/containerservice/v1beta2.KubernetesCluster
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Reference to a KubernetesCluster in containerservice to populate clusterId.
	// +kubebuilder:validation:Optional
	ClusterIDRef *v1.Reference `json:"clusterIdRef,omitempty" tf:"-"`

	// Selector for a KubernetesCluster in containerservice to populate clusterId.
	// +kubebuilder:validation:Optional
	ClusterIDSelector *v1.Selector `json:"clusterIdSelector,omitempty" tf:"-"`

	// Configuration settings that are sensitive, as name-value pairs for configuring this extension.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	ConfigurationProtectedSettings map[string]*string `json:"configurationProtectedSettings,omitempty" tf:"configuration_protected_settings,omitempty"`

	// Configuration settings, as name-value pairs for configuring this extension.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	ConfigurationSettings map[string]*string `json:"configurationSettings,omitempty" tf:"configuration_settings,omitempty"`

	// Specifies the type of extension. It must be one of the extension types registered with Microsoft.KubernetesConfiguration by the Extension publisher. For more information, please refer to Available Extensions for AKS. Changing this forces a new Kubernetes Cluster Extension to be created.
	// +kubebuilder:validation:Optional
	ExtensionType *string `json:"extensionType,omitempty" tf:"extension_type,omitempty"`

	// A plan block as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	Plan *PlanParameters `json:"plan,omitempty" tf:"plan,omitempty"`

	// Namespace where the extension release must be placed for a cluster scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
	// +kubebuilder:validation:Optional
	ReleaseNamespace *string `json:"releaseNamespace,omitempty" tf:"release_namespace,omitempty"`

	// The release train used by this extension. Possible values include but are not limited to Stable, Preview. Changing this forces a new Kubernetes Cluster Extension to be created.
	// +kubebuilder:validation:Optional
	ReleaseTrain *string `json:"releaseTrain,omitempty" tf:"release_train,omitempty"`

	// Namespace where the extension will be created for a namespace scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
	// +kubebuilder:validation:Optional
	TargetNamespace *string `json:"targetNamespace,omitempty" tf:"target_namespace,omitempty"`

	// User-specified version that the extension should pin to. If it is not set, Azure will use the latest version and auto upgrade it. Changing this forces a new Kubernetes Cluster Extension to be created.
	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type PlanInitParameters struct {

	// Specifies the name of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the product of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.
	Product *string `json:"product,omitempty" tf:"product,omitempty"`

	// Specifies the promotion code to use with the plan. Changing this forces a new Kubernetes Cluster Extension to be created.
	PromotionCode *string `json:"promotionCode,omitempty" tf:"promotion_code,omitempty"`

	// Specifies the publisher of the plan. Changing this forces a new Kubernetes Cluster Extension to be created.
	Publisher *string `json:"publisher,omitempty" tf:"publisher,omitempty"`

	// Specifies the version of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type PlanObservation struct {

	// Specifies the name of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the product of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.
	Product *string `json:"product,omitempty" tf:"product,omitempty"`

	// Specifies the promotion code to use with the plan. Changing this forces a new Kubernetes Cluster Extension to be created.
	PromotionCode *string `json:"promotionCode,omitempty" tf:"promotion_code,omitempty"`

	// Specifies the publisher of the plan. Changing this forces a new Kubernetes Cluster Extension to be created.
	Publisher *string `json:"publisher,omitempty" tf:"publisher,omitempty"`

	// Specifies the version of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type PlanParameters struct {

	// Specifies the name of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies the product of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.
	// +kubebuilder:validation:Optional
	Product *string `json:"product" tf:"product,omitempty"`

	// Specifies the promotion code to use with the plan. Changing this forces a new Kubernetes Cluster Extension to be created.
	// +kubebuilder:validation:Optional
	PromotionCode *string `json:"promotionCode,omitempty" tf:"promotion_code,omitempty"`

	// Specifies the publisher of the plan. Changing this forces a new Kubernetes Cluster Extension to be created.
	// +kubebuilder:validation:Optional
	Publisher *string `json:"publisher" tf:"publisher,omitempty"`

	// Specifies the version of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.
	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

// KubernetesClusterExtensionSpec defines the desired state of KubernetesClusterExtension
type KubernetesClusterExtensionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     KubernetesClusterExtensionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider KubernetesClusterExtensionInitParameters `json:"initProvider,omitempty"`
}

// KubernetesClusterExtensionStatus defines the observed state of KubernetesClusterExtension.
type KubernetesClusterExtensionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        KubernetesClusterExtensionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// KubernetesClusterExtension is the Schema for the KubernetesClusterExtensions API. Manages a Kubernetes Cluster Extension.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type KubernetesClusterExtension struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.extensionType) || (has(self.initProvider) && has(self.initProvider.extensionType))",message="spec.forProvider.extensionType is a required parameter"
	Spec   KubernetesClusterExtensionSpec   `json:"spec"`
	Status KubernetesClusterExtensionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// KubernetesClusterExtensionList contains a list of KubernetesClusterExtensions
type KubernetesClusterExtensionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []KubernetesClusterExtension `json:"items"`
}

// Repository type metadata.
var (
	KubernetesClusterExtension_Kind             = "KubernetesClusterExtension"
	KubernetesClusterExtension_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: KubernetesClusterExtension_Kind}.String()
	KubernetesClusterExtension_KindAPIVersion   = KubernetesClusterExtension_Kind + "." + CRDGroupVersion.String()
	KubernetesClusterExtension_GroupVersionKind = CRDGroupVersion.WithKind(KubernetesClusterExtension_Kind)
)

func init() {
	SchemeBuilder.Register(&KubernetesClusterExtension{}, &KubernetesClusterExtensionList{})
}
