// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type WindowsFunctionAppAuthSettingsActiveDirectoryInitParameters struct {

	// Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
	// Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
	AllowedAudiences []*string `json:"allowedAudiences,omitempty" tf:"allowed_audiences,omitempty"`

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The ID of the Client to use to authenticate with Azure Active Directory.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`
}

type WindowsFunctionAppAuthSettingsActiveDirectoryObservation struct {

	// Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
	// Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
	AllowedAudiences []*string `json:"allowedAudiences,omitempty" tf:"allowed_audiences,omitempty"`

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The ID of the Client to use to authenticate with Azure Active Directory.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`
}

type WindowsFunctionAppAuthSettingsActiveDirectoryParameters struct {

	// Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
	// Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
	// +kubebuilder:validation:Optional
	AllowedAudiences []*string `json:"allowedAudiences,omitempty" tf:"allowed_audiences,omitempty"`

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The ID of the Client to use to authenticate with Azure Active Directory.
	// +kubebuilder:validation:Optional
	ClientID *string `json:"clientId" tf:"client_id,omitempty"`

	// The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.
	// The Client Secret for the Client ID. Cannot be used with `client_secret_setting_name`.
	// +kubebuilder:validation:Optional
	ClientSecretSecretRef *v1.SecretKeySelector `json:"clientSecretSecretRef,omitempty" tf:"-"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.
	// +kubebuilder:validation:Optional
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`
}

type WindowsFunctionAppAuthSettingsFacebookInitParameters struct {

	// The App ID of the Facebook app used for login.
	// The App ID of the Facebook app used for login.
	AppID *string `json:"appId,omitempty" tf:"app_id,omitempty"`

	// The app setting name that contains the app_secret value used for Facebook Login.
	// The app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.
	AppSecretSettingName *string `json:"appSecretSettingName,omitempty" tf:"app_secret_setting_name,omitempty"`

	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
	// Specifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.
	OauthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsFacebookObservation struct {

	// The App ID of the Facebook app used for login.
	// The App ID of the Facebook app used for login.
	AppID *string `json:"appId,omitempty" tf:"app_id,omitempty"`

	// The app setting name that contains the app_secret value used for Facebook Login.
	// The app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.
	AppSecretSettingName *string `json:"appSecretSettingName,omitempty" tf:"app_secret_setting_name,omitempty"`

	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
	// Specifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.
	OauthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsFacebookParameters struct {

	// The App ID of the Facebook app used for login.
	// The App ID of the Facebook app used for login.
	// +kubebuilder:validation:Optional
	AppID *string `json:"appId" tf:"app_id,omitempty"`

	// The App Secret of the Facebook app used for Facebook login. Cannot be specified with app_secret_setting_name.
	// The App Secret of the Facebook app used for Facebook Login. Cannot be specified with `app_secret_setting_name`.
	// +kubebuilder:validation:Optional
	AppSecretSecretRef *v1.SecretKeySelector `json:"appSecretSecretRef,omitempty" tf:"-"`

	// The app setting name that contains the app_secret value used for Facebook Login.
	// The app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.
	// +kubebuilder:validation:Optional
	AppSecretSettingName *string `json:"appSecretSettingName,omitempty" tf:"app_secret_setting_name,omitempty"`

	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
	// Specifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.
	// +kubebuilder:validation:Optional
	OauthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsGithubInitParameters struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The ID of the GitHub app used for login.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
	// Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
	OauthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsGithubObservation struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The ID of the GitHub app used for login.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
	// Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
	OauthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsGithubParameters struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The ID of the GitHub app used for login.
	// +kubebuilder:validation:Optional
	ClientID *string `json:"clientId" tf:"client_id,omitempty"`

	// The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.
	// The Client Secret of the GitHub app used for GitHub Login. Cannot be specified with `client_secret_setting_name`.
	// +kubebuilder:validation:Optional
	ClientSecretSecretRef *v1.SecretKeySelector `json:"clientSecretSecretRef,omitempty" tf:"-"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.
	// +kubebuilder:validation:Optional
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
	// Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
	// +kubebuilder:validation:Optional
	OauthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsGoogleInitParameters struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The OpenID Connect Client ID for the Google web application.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, "openid", "profile", and "email" are used as default scopes.
	OauthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsGoogleObservation struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The OpenID Connect Client ID for the Google web application.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, "openid", "profile", and "email" are used as default scopes.
	OauthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsGoogleParameters struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The OpenID Connect Client ID for the Google web application.
	// +kubebuilder:validation:Optional
	ClientID *string `json:"clientId" tf:"client_id,omitempty"`

	// The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.
	// The client secret associated with the Google web application.  Cannot be specified with `client_secret_setting_name`.
	// +kubebuilder:validation:Optional
	ClientSecretSecretRef *v1.SecretKeySelector `json:"clientSecretSecretRef,omitempty" tf:"-"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.
	// +kubebuilder:validation:Optional
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, "openid", "profile", and "email" are used as default scopes.
	// +kubebuilder:validation:Optional
	OauthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsInitParameters struct {

	// An active_directory block as defined above.
	ActiveDirectory []WindowsFunctionAppAuthSettingsActiveDirectoryInitParameters `json:"activeDirectory,omitempty" tf:"active_directory,omitempty"`

	// Specifies a map of login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
	// Specifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
	AdditionalLoginParameters map[string]*string `json:"additionalLoginParameters,omitempty" tf:"additional_login_parameters,omitempty"`

	// Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Function App.
	// Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.
	AllowedExternalRedirectUrls []*string `json:"allowedExternalRedirectUrls,omitempty" tf:"allowed_external_redirect_urls,omitempty"`

	// The default authentication provider to use when multiple providers are configured. Possible values include: AzureActiveDirectory, Facebook, Google, MicrosoftAccount, Twitter, Github
	// The default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.
	DefaultProvider *string `json:"defaultProvider,omitempty" tf:"default_provider,omitempty"`

	// Should the Authentication / Authorization feature be enabled for the Windows Function App?
	// Should the Authentication / Authorization feature be enabled?
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// A facebook block as defined below.
	Facebook []WindowsFunctionAppAuthSettingsFacebookInitParameters `json:"facebook,omitempty" tf:"facebook,omitempty"`

	// A github block as defined below.
	Github []WindowsFunctionAppAuthSettingsGithubInitParameters `json:"github,omitempty" tf:"github,omitempty"`

	// A google block as defined below.
	Google []WindowsFunctionAppAuthSettingsGoogleInitParameters `json:"google,omitempty" tf:"google,omitempty"`

	// The OpenID Connect Issuer URI that represents the entity which issues access tokens for this Windows Function App.
	// The OpenID Connect Issuer URI that represents the entity which issues access tokens.
	Issuer *string `json:"issuer,omitempty" tf:"issuer,omitempty"`

	// A microsoft block as defined below.
	Microsoft []WindowsFunctionAppAuthSettingsMicrosoftInitParameters `json:"microsoft,omitempty" tf:"microsoft,omitempty"`

	// The Runtime Version of the Authentication / Authorization feature in use for the Windows Function App.
	// The RuntimeVersion of the Authentication / Authorization feature in use.
	RuntimeVersion *string `json:"runtimeVersion,omitempty" tf:"runtime_version,omitempty"`

	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.
	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
	TokenRefreshExtensionHours *float64 `json:"tokenRefreshExtensionHours,omitempty" tf:"token_refresh_extension_hours,omitempty"`

	// Should the Windows Function App durably store platform-specific security tokens that are obtained during login flows? Defaults to false.
	// Should the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.
	TokenStoreEnabled *bool `json:"tokenStoreEnabled,omitempty" tf:"token_store_enabled,omitempty"`

	// A twitter block as defined below.
	Twitter []WindowsFunctionAppAuthSettingsTwitterInitParameters `json:"twitter,omitempty" tf:"twitter,omitempty"`

	// The action to take when an unauthenticated client attempts to access the app. Possible values include: RedirectToLoginPage, AllowAnonymous.
	// The action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.
	UnauthenticatedClientAction *string `json:"unauthenticatedClientAction,omitempty" tf:"unauthenticated_client_action,omitempty"`
}

type WindowsFunctionAppAuthSettingsMicrosoftInitParameters struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The OAuth 2.0 client ID that was created for the app used for authentication.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
	// The list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.
	OauthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsMicrosoftObservation struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The OAuth 2.0 client ID that was created for the app used for authentication.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
	// The list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.
	OauthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsMicrosoftParameters struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// +kubebuilder:validation:Optional
	ClientID *string `json:"clientId" tf:"client_id,omitempty"`

	// The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.
	// The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret_setting_name`.
	// +kubebuilder:validation:Optional
	ClientSecretSecretRef *v1.SecretKeySelector `json:"clientSecretSecretRef,omitempty" tf:"-"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.
	// +kubebuilder:validation:Optional
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
	// The list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.
	// +kubebuilder:validation:Optional
	OauthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsObservation struct {

	// An active_directory block as defined above.
	ActiveDirectory []WindowsFunctionAppAuthSettingsActiveDirectoryObservation `json:"activeDirectory,omitempty" tf:"active_directory,omitempty"`

	// Specifies a map of login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
	// Specifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
	AdditionalLoginParameters map[string]*string `json:"additionalLoginParameters,omitempty" tf:"additional_login_parameters,omitempty"`

	// Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Function App.
	// Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.
	AllowedExternalRedirectUrls []*string `json:"allowedExternalRedirectUrls,omitempty" tf:"allowed_external_redirect_urls,omitempty"`

	// The default authentication provider to use when multiple providers are configured. Possible values include: AzureActiveDirectory, Facebook, Google, MicrosoftAccount, Twitter, Github
	// The default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.
	DefaultProvider *string `json:"defaultProvider,omitempty" tf:"default_provider,omitempty"`

	// Should the Authentication / Authorization feature be enabled for the Windows Function App?
	// Should the Authentication / Authorization feature be enabled?
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// A facebook block as defined below.
	Facebook []WindowsFunctionAppAuthSettingsFacebookObservation `json:"facebook,omitempty" tf:"facebook,omitempty"`

	// A github block as defined below.
	Github []WindowsFunctionAppAuthSettingsGithubObservation `json:"github,omitempty" tf:"github,omitempty"`

	// A google block as defined below.
	Google []WindowsFunctionAppAuthSettingsGoogleObservation `json:"google,omitempty" tf:"google,omitempty"`

	// The OpenID Connect Issuer URI that represents the entity which issues access tokens for this Windows Function App.
	// The OpenID Connect Issuer URI that represents the entity which issues access tokens.
	Issuer *string `json:"issuer,omitempty" tf:"issuer,omitempty"`

	// A microsoft block as defined below.
	Microsoft []WindowsFunctionAppAuthSettingsMicrosoftObservation `json:"microsoft,omitempty" tf:"microsoft,omitempty"`

	// The Runtime Version of the Authentication / Authorization feature in use for the Windows Function App.
	// The RuntimeVersion of the Authentication / Authorization feature in use.
	RuntimeVersion *string `json:"runtimeVersion,omitempty" tf:"runtime_version,omitempty"`

	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.
	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
	TokenRefreshExtensionHours *float64 `json:"tokenRefreshExtensionHours,omitempty" tf:"token_refresh_extension_hours,omitempty"`

	// Should the Windows Function App durably store platform-specific security tokens that are obtained during login flows? Defaults to false.
	// Should the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.
	TokenStoreEnabled *bool `json:"tokenStoreEnabled,omitempty" tf:"token_store_enabled,omitempty"`

	// A twitter block as defined below.
	Twitter []WindowsFunctionAppAuthSettingsTwitterObservation `json:"twitter,omitempty" tf:"twitter,omitempty"`

	// The action to take when an unauthenticated client attempts to access the app. Possible values include: RedirectToLoginPage, AllowAnonymous.
	// The action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.
	UnauthenticatedClientAction *string `json:"unauthenticatedClientAction,omitempty" tf:"unauthenticated_client_action,omitempty"`
}

type WindowsFunctionAppAuthSettingsParameters struct {

	// An active_directory block as defined above.
	// +kubebuilder:validation:Optional
	ActiveDirectory []WindowsFunctionAppAuthSettingsActiveDirectoryParameters `json:"activeDirectory,omitempty" tf:"active_directory,omitempty"`

	// Specifies a map of login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
	// Specifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
	// +kubebuilder:validation:Optional
	AdditionalLoginParameters map[string]*string `json:"additionalLoginParameters,omitempty" tf:"additional_login_parameters,omitempty"`

	// Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Function App.
	// Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.
	// +kubebuilder:validation:Optional
	AllowedExternalRedirectUrls []*string `json:"allowedExternalRedirectUrls,omitempty" tf:"allowed_external_redirect_urls,omitempty"`

	// The default authentication provider to use when multiple providers are configured. Possible values include: AzureActiveDirectory, Facebook, Google, MicrosoftAccount, Twitter, Github
	// The default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.
	// +kubebuilder:validation:Optional
	DefaultProvider *string `json:"defaultProvider,omitempty" tf:"default_provider,omitempty"`

	// Should the Authentication / Authorization feature be enabled for the Windows Function App?
	// Should the Authentication / Authorization feature be enabled?
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// A facebook block as defined below.
	// +kubebuilder:validation:Optional
	Facebook []WindowsFunctionAppAuthSettingsFacebookParameters `json:"facebook,omitempty" tf:"facebook,omitempty"`

	// A github block as defined below.
	// +kubebuilder:validation:Optional
	Github []WindowsFunctionAppAuthSettingsGithubParameters `json:"github,omitempty" tf:"github,omitempty"`

	// A google block as defined below.
	// +kubebuilder:validation:Optional
	Google []WindowsFunctionAppAuthSettingsGoogleParameters `json:"google,omitempty" tf:"google,omitempty"`

	// The OpenID Connect Issuer URI that represents the entity which issues access tokens for this Windows Function App.
	// The OpenID Connect Issuer URI that represents the entity which issues access tokens.
	// +kubebuilder:validation:Optional
	Issuer *string `json:"issuer,omitempty" tf:"issuer,omitempty"`

	// A microsoft block as defined below.
	// +kubebuilder:validation:Optional
	Microsoft []WindowsFunctionAppAuthSettingsMicrosoftParameters `json:"microsoft,omitempty" tf:"microsoft,omitempty"`

	// The Runtime Version of the Authentication / Authorization feature in use for the Windows Function App.
	// The RuntimeVersion of the Authentication / Authorization feature in use.
	// +kubebuilder:validation:Optional
	RuntimeVersion *string `json:"runtimeVersion,omitempty" tf:"runtime_version,omitempty"`

	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.
	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
	// +kubebuilder:validation:Optional
	TokenRefreshExtensionHours *float64 `json:"tokenRefreshExtensionHours,omitempty" tf:"token_refresh_extension_hours,omitempty"`

	// Should the Windows Function App durably store platform-specific security tokens that are obtained during login flows? Defaults to false.
	// Should the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.
	// +kubebuilder:validation:Optional
	TokenStoreEnabled *bool `json:"tokenStoreEnabled,omitempty" tf:"token_store_enabled,omitempty"`

	// A twitter block as defined below.
	// +kubebuilder:validation:Optional
	Twitter []WindowsFunctionAppAuthSettingsTwitterParameters `json:"twitter,omitempty" tf:"twitter,omitempty"`

	// The action to take when an unauthenticated client attempts to access the app. Possible values include: RedirectToLoginPage, AllowAnonymous.
	// The action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.
	// +kubebuilder:validation:Optional
	UnauthenticatedClientAction *string `json:"unauthenticatedClientAction,omitempty" tf:"unauthenticated_client_action,omitempty"`
}

type WindowsFunctionAppAuthSettingsTwitterInitParameters struct {

	// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
	// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
	ConsumerKey *string `json:"consumerKey,omitempty" tf:"consumer_key,omitempty"`

	// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
	// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.
	ConsumerSecretSettingName *string `json:"consumerSecretSettingName,omitempty" tf:"consumer_secret_setting_name,omitempty"`
}

type WindowsFunctionAppAuthSettingsTwitterObservation struct {

	// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
	// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
	ConsumerKey *string `json:"consumerKey,omitempty" tf:"consumer_key,omitempty"`

	// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
	// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.
	ConsumerSecretSettingName *string `json:"consumerSecretSettingName,omitempty" tf:"consumer_secret_setting_name,omitempty"`
}

type WindowsFunctionAppAuthSettingsTwitterParameters struct {

	// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
	// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
	// +kubebuilder:validation:Optional
	ConsumerKey *string `json:"consumerKey" tf:"consumer_key,omitempty"`

	// The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with consumer_secret_setting_name.
	// The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret_setting_name`.
	// +kubebuilder:validation:Optional
	ConsumerSecretSecretRef *v1.SecretKeySelector `json:"consumerSecretSecretRef,omitempty" tf:"-"`

	// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
	// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.
	// +kubebuilder:validation:Optional
	ConsumerSecretSettingName *string `json:"consumerSecretSettingName,omitempty" tf:"consumer_secret_setting_name,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2InitParameters struct {

	// The list of allowed Applications for the Default Authorisation Policy.
	// The list of allowed Applications for the Default Authorisation Policy.
	AllowedApplications []*string `json:"allowedApplications,omitempty" tf:"allowed_applications,omitempty"`

	// Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
	// Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
	AllowedAudiences []*string `json:"allowedAudiences,omitempty" tf:"allowed_audiences,omitempty"`

	// The list of allowed Group Names for the Default Authorisation Policy.
	// The list of allowed Group Names for the Default Authorisation Policy.
	AllowedGroups []*string `json:"allowedGroups,omitempty" tf:"allowed_groups,omitempty"`

	// The list of allowed Identities for the Default Authorisation Policy.
	// The list of allowed Identities for the Default Authorisation Policy.
	AllowedIdentities []*string `json:"allowedIdentities,omitempty" tf:"allowed_identities,omitempty"`

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The ID of the Client to use to authenticate with Azure Active Directory.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// The thumbprint of the certificate used for signing purposes.
	// The thumbprint of the certificate used for signing purposes.
	ClientSecretCertificateThumbprint *string `json:"clientSecretCertificateThumbprint,omitempty" tf:"client_secret_certificate_thumbprint,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The App Setting name that contains the client secret of the Client.
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// A list of Allowed Client Applications in the JWT Claim.
	// A list of Allowed Client Applications in the JWT Claim.
	JwtAllowedClientApplications []*string `json:"jwtAllowedClientApplications,omitempty" tf:"jwt_allowed_client_applications,omitempty"`

	// A list of Allowed Groups in the JWT Claim.
	// A list of Allowed Groups in the JWT Claim.
	JwtAllowedGroups []*string `json:"jwtAllowedGroups,omitempty" tf:"jwt_allowed_groups,omitempty"`

	// A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.
	// A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.
	LoginParameters map[string]*string `json:"loginParameters,omitempty" tf:"login_parameters,omitempty"`

	// The Azure Tenant Endpoint for the Authenticating Tenant. e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/
	// The Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.
	TenantAuthEndpoint *string `json:"tenantAuthEndpoint,omitempty" tf:"tenant_auth_endpoint,omitempty"`

	// Should the www-authenticate provider should be omitted from the request? Defaults to false
	// Should the www-authenticate provider should be omitted from the request? Defaults to `false`
	WwwAuthenticationDisabled *bool `json:"wwwAuthenticationDisabled,omitempty" tf:"www_authentication_disabled,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2Observation struct {

	// The list of allowed Applications for the Default Authorisation Policy.
	// The list of allowed Applications for the Default Authorisation Policy.
	AllowedApplications []*string `json:"allowedApplications,omitempty" tf:"allowed_applications,omitempty"`

	// Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
	// Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
	AllowedAudiences []*string `json:"allowedAudiences,omitempty" tf:"allowed_audiences,omitempty"`

	// The list of allowed Group Names for the Default Authorisation Policy.
	// The list of allowed Group Names for the Default Authorisation Policy.
	AllowedGroups []*string `json:"allowedGroups,omitempty" tf:"allowed_groups,omitempty"`

	// The list of allowed Identities for the Default Authorisation Policy.
	// The list of allowed Identities for the Default Authorisation Policy.
	AllowedIdentities []*string `json:"allowedIdentities,omitempty" tf:"allowed_identities,omitempty"`

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The ID of the Client to use to authenticate with Azure Active Directory.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// The thumbprint of the certificate used for signing purposes.
	// The thumbprint of the certificate used for signing purposes.
	ClientSecretCertificateThumbprint *string `json:"clientSecretCertificateThumbprint,omitempty" tf:"client_secret_certificate_thumbprint,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The App Setting name that contains the client secret of the Client.
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// A list of Allowed Client Applications in the JWT Claim.
	// A list of Allowed Client Applications in the JWT Claim.
	JwtAllowedClientApplications []*string `json:"jwtAllowedClientApplications,omitempty" tf:"jwt_allowed_client_applications,omitempty"`

	// A list of Allowed Groups in the JWT Claim.
	// A list of Allowed Groups in the JWT Claim.
	JwtAllowedGroups []*string `json:"jwtAllowedGroups,omitempty" tf:"jwt_allowed_groups,omitempty"`

	// A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.
	// A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.
	LoginParameters map[string]*string `json:"loginParameters,omitempty" tf:"login_parameters,omitempty"`

	// The Azure Tenant Endpoint for the Authenticating Tenant. e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/
	// The Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.
	TenantAuthEndpoint *string `json:"tenantAuthEndpoint,omitempty" tf:"tenant_auth_endpoint,omitempty"`

	// Should the www-authenticate provider should be omitted from the request? Defaults to false
	// Should the www-authenticate provider should be omitted from the request? Defaults to `false`
	WwwAuthenticationDisabled *bool `json:"wwwAuthenticationDisabled,omitempty" tf:"www_authentication_disabled,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2Parameters struct {

	// The list of allowed Applications for the Default Authorisation Policy.
	// The list of allowed Applications for the Default Authorisation Policy.
	// +kubebuilder:validation:Optional
	AllowedApplications []*string `json:"allowedApplications,omitempty" tf:"allowed_applications,omitempty"`

	// Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
	// Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
	// +kubebuilder:validation:Optional
	AllowedAudiences []*string `json:"allowedAudiences,omitempty" tf:"allowed_audiences,omitempty"`

	// The list of allowed Group Names for the Default Authorisation Policy.
	// The list of allowed Group Names for the Default Authorisation Policy.
	// +kubebuilder:validation:Optional
	AllowedGroups []*string `json:"allowedGroups,omitempty" tf:"allowed_groups,omitempty"`

	// The list of allowed Identities for the Default Authorisation Policy.
	// The list of allowed Identities for the Default Authorisation Policy.
	// +kubebuilder:validation:Optional
	AllowedIdentities []*string `json:"allowedIdentities,omitempty" tf:"allowed_identities,omitempty"`

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The ID of the Client to use to authenticate with Azure Active Directory.
	// +kubebuilder:validation:Optional
	ClientID *string `json:"clientId" tf:"client_id,omitempty"`

	// The thumbprint of the certificate used for signing purposes.
	// The thumbprint of the certificate used for signing purposes.
	// +kubebuilder:validation:Optional
	ClientSecretCertificateThumbprint *string `json:"clientSecretCertificateThumbprint,omitempty" tf:"client_secret_certificate_thumbprint,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The App Setting name that contains the client secret of the Client.
	// +kubebuilder:validation:Optional
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// A list of Allowed Client Applications in the JWT Claim.
	// A list of Allowed Client Applications in the JWT Claim.
	// +kubebuilder:validation:Optional
	JwtAllowedClientApplications []*string `json:"jwtAllowedClientApplications,omitempty" tf:"jwt_allowed_client_applications,omitempty"`

	// A list of Allowed Groups in the JWT Claim.
	// A list of Allowed Groups in the JWT Claim.
	// +kubebuilder:validation:Optional
	JwtAllowedGroups []*string `json:"jwtAllowedGroups,omitempty" tf:"jwt_allowed_groups,omitempty"`

	// A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.
	// A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.
	// +kubebuilder:validation:Optional
	LoginParameters map[string]*string `json:"loginParameters,omitempty" tf:"login_parameters,omitempty"`

	// The Azure Tenant Endpoint for the Authenticating Tenant. e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/
	// The Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.
	// +kubebuilder:validation:Optional
	TenantAuthEndpoint *string `json:"tenantAuthEndpoint" tf:"tenant_auth_endpoint,omitempty"`

	// Should the www-authenticate provider should be omitted from the request? Defaults to false
	// Should the www-authenticate provider should be omitted from the request? Defaults to `false`
	// +kubebuilder:validation:Optional
	WwwAuthenticationDisabled *bool `json:"wwwAuthenticationDisabled,omitempty" tf:"www_authentication_disabled,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2AppleV2InitParameters struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The OpenID Connect Client ID for the Apple web application.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The app setting name that contains the `client_secret` value used for Apple Login.
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2AppleV2Observation struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The OpenID Connect Client ID for the Apple web application.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The app setting name that contains the `client_secret` value used for Apple Login.
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// The list of Login scopes that should be requested as part of Microsoft Account authentication.
	LoginScopes []*string `json:"loginScopes,omitempty" tf:"login_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2AppleV2Parameters struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The OpenID Connect Client ID for the Apple web application.
	// +kubebuilder:validation:Optional
	ClientID *string `json:"clientId" tf:"client_id,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The app setting name that contains the `client_secret` value used for Apple Login.
	// +kubebuilder:validation:Optional
	ClientSecretSettingName *string `json:"clientSecretSettingName" tf:"client_secret_setting_name,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2InitParameters struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The ID of the Client to use to authenticate with Azure Static Web App Authentication.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2Observation struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The ID of the Client to use to authenticate with Azure Static Web App Authentication.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2Parameters struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The ID of the Client to use to authenticate with Azure Static Web App Authentication.
	// +kubebuilder:validation:Optional
	ClientID *string `json:"clientId" tf:"client_id,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2CustomOidcV2InitParameters struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The ID of the Client to use to authenticate with this Custom OIDC.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// The name which should be used for this Storage Account.
	// The name of the Custom OIDC Authentication Provider.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The name of the claim that contains the users name.
	// The name of the claim that contains the users name.
	NameClaimType *string `json:"nameClaimType,omitempty" tf:"name_claim_type,omitempty"`

	// The app setting name that contains the client_secret value used for the Custom OIDC Login.
	// The endpoint that contains all the configuration endpoints for this Custom OIDC provider.
	OpenIDConfigurationEndpoint *string `json:"openidConfigurationEndpoint,omitempty" tf:"openid_configuration_endpoint,omitempty"`

	// The list of the scopes that should be requested while authenticating.
	// The list of the scopes that should be requested while authenticating.
	Scopes []*string `json:"scopes,omitempty" tf:"scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2CustomOidcV2Observation struct {

	// The endpoint to make the Authorisation Request as supplied by openid_configuration_endpoint response.
	// The endpoint to make the Authorisation Request.
	AuthorisationEndpoint *string `json:"authorisationEndpoint,omitempty" tf:"authorisation_endpoint,omitempty"`

	// The endpoint that provides the keys necessary to validate the token as supplied by openid_configuration_endpoint response.
	// The endpoint that provides the keys necessary to validate the token.
	CertificationURI *string `json:"certificationUri,omitempty" tf:"certification_uri,omitempty"`

	// The Client Credential Method used.
	// The Client Credential Method used. Currently the only supported value is `ClientSecretPost`.
	ClientCredentialMethod *string `json:"clientCredentialMethod,omitempty" tf:"client_credential_method,omitempty"`

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The ID of the Client to use to authenticate with this Custom OIDC.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The App Setting name that contains the secret for this Custom OIDC Client.
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// The endpoint that issued the Token as supplied by openid_configuration_endpoint response.
	// The endpoint that issued the Token.
	IssuerEndpoint *string `json:"issuerEndpoint,omitempty" tf:"issuer_endpoint,omitempty"`

	// The name which should be used for this Storage Account.
	// The name of the Custom OIDC Authentication Provider.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The name of the claim that contains the users name.
	// The name of the claim that contains the users name.
	NameClaimType *string `json:"nameClaimType,omitempty" tf:"name_claim_type,omitempty"`

	// The app setting name that contains the client_secret value used for the Custom OIDC Login.
	// The endpoint that contains all the configuration endpoints for this Custom OIDC provider.
	OpenIDConfigurationEndpoint *string `json:"openidConfigurationEndpoint,omitempty" tf:"openid_configuration_endpoint,omitempty"`

	// The list of the scopes that should be requested while authenticating.
	// The list of the scopes that should be requested while authenticating.
	Scopes []*string `json:"scopes,omitempty" tf:"scopes,omitempty"`

	// The endpoint used to request a Token as supplied by openid_configuration_endpoint response.
	// The endpoint used to request a Token.
	TokenEndpoint *string `json:"tokenEndpoint,omitempty" tf:"token_endpoint,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2CustomOidcV2Parameters struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The ID of the Client to use to authenticate with this Custom OIDC.
	// +kubebuilder:validation:Optional
	ClientID *string `json:"clientId" tf:"client_id,omitempty"`

	// The name which should be used for this Storage Account.
	// The name of the Custom OIDC Authentication Provider.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The name of the claim that contains the users name.
	// The name of the claim that contains the users name.
	// +kubebuilder:validation:Optional
	NameClaimType *string `json:"nameClaimType,omitempty" tf:"name_claim_type,omitempty"`

	// The app setting name that contains the client_secret value used for the Custom OIDC Login.
	// The endpoint that contains all the configuration endpoints for this Custom OIDC provider.
	// +kubebuilder:validation:Optional
	OpenIDConfigurationEndpoint *string `json:"openidConfigurationEndpoint" tf:"openid_configuration_endpoint,omitempty"`

	// The list of the scopes that should be requested while authenticating.
	// The list of the scopes that should be requested while authenticating.
	// +kubebuilder:validation:Optional
	Scopes []*string `json:"scopes,omitempty" tf:"scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2FacebookV2InitParameters struct {

	// The App ID of the Facebook app used for login.
	// The App ID of the Facebook app used for login.
	AppID *string `json:"appId,omitempty" tf:"app_id,omitempty"`

	// The app setting name that contains the app_secret value used for Facebook Login.
	// The app setting name that contains the `app_secret` value used for Facebook Login.
	AppSecretSettingName *string `json:"appSecretSettingName,omitempty" tf:"app_secret_setting_name,omitempty"`

	// The version of the Facebook API to be used while logging in.
	// The version of the Facebook API to be used while logging in.
	GraphAPIVersion *string `json:"graphApiVersion,omitempty" tf:"graph_api_version,omitempty"`

	// The list of Login scopes that should be requested as part of Microsoft Account authentication.
	// Specifies a list of scopes to be requested as part of Facebook Login authentication.
	LoginScopes []*string `json:"loginScopes,omitempty" tf:"login_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2FacebookV2Observation struct {

	// The App ID of the Facebook app used for login.
	// The App ID of the Facebook app used for login.
	AppID *string `json:"appId,omitempty" tf:"app_id,omitempty"`

	// The app setting name that contains the app_secret value used for Facebook Login.
	// The app setting name that contains the `app_secret` value used for Facebook Login.
	AppSecretSettingName *string `json:"appSecretSettingName,omitempty" tf:"app_secret_setting_name,omitempty"`

	// The version of the Facebook API to be used while logging in.
	// The version of the Facebook API to be used while logging in.
	GraphAPIVersion *string `json:"graphApiVersion,omitempty" tf:"graph_api_version,omitempty"`

	// The list of Login scopes that should be requested as part of Microsoft Account authentication.
	// Specifies a list of scopes to be requested as part of Facebook Login authentication.
	LoginScopes []*string `json:"loginScopes,omitempty" tf:"login_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2FacebookV2Parameters struct {

	// The App ID of the Facebook app used for login.
	// The App ID of the Facebook app used for login.
	// +kubebuilder:validation:Optional
	AppID *string `json:"appId" tf:"app_id,omitempty"`

	// The app setting name that contains the app_secret value used for Facebook Login.
	// The app setting name that contains the `app_secret` value used for Facebook Login.
	// +kubebuilder:validation:Optional
	AppSecretSettingName *string `json:"appSecretSettingName" tf:"app_secret_setting_name,omitempty"`

	// The version of the Facebook API to be used while logging in.
	// The version of the Facebook API to be used while logging in.
	// +kubebuilder:validation:Optional
	GraphAPIVersion *string `json:"graphApiVersion,omitempty" tf:"graph_api_version,omitempty"`

	// The list of Login scopes that should be requested as part of Microsoft Account authentication.
	// Specifies a list of scopes to be requested as part of Facebook Login authentication.
	// +kubebuilder:validation:Optional
	LoginScopes []*string `json:"loginScopes,omitempty" tf:"login_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2GithubV2InitParameters struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The ID of the GitHub app used for login.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The app setting name that contains the `client_secret` value used for GitHub Login.
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// The list of Login scopes that should be requested as part of Microsoft Account authentication.
	// Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
	LoginScopes []*string `json:"loginScopes,omitempty" tf:"login_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2GithubV2Observation struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The ID of the GitHub app used for login.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The app setting name that contains the `client_secret` value used for GitHub Login.
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// The list of Login scopes that should be requested as part of Microsoft Account authentication.
	// Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
	LoginScopes []*string `json:"loginScopes,omitempty" tf:"login_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2GithubV2Parameters struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The ID of the GitHub app used for login.
	// +kubebuilder:validation:Optional
	ClientID *string `json:"clientId" tf:"client_id,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The app setting name that contains the `client_secret` value used for GitHub Login.
	// +kubebuilder:validation:Optional
	ClientSecretSettingName *string `json:"clientSecretSettingName" tf:"client_secret_setting_name,omitempty"`

	// The list of Login scopes that should be requested as part of Microsoft Account authentication.
	// Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
	// +kubebuilder:validation:Optional
	LoginScopes []*string `json:"loginScopes,omitempty" tf:"login_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2GoogleV2InitParameters struct {

	// Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
	// Specifies a list of Allowed Audiences that will be requested as part of Google Sign-In authentication.
	AllowedAudiences []*string `json:"allowedAudiences,omitempty" tf:"allowed_audiences,omitempty"`

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The OpenID Connect Client ID for the Google web application.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The app setting name that contains the `client_secret` value used for Google Login.
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// The list of Login scopes that should be requested as part of Microsoft Account authentication.
	// Specifies a list of Login scopes that will be requested as part of Google Sign-In authentication.
	LoginScopes []*string `json:"loginScopes,omitempty" tf:"login_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2GoogleV2Observation struct {

	// Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
	// Specifies a list of Allowed Audiences that will be requested as part of Google Sign-In authentication.
	AllowedAudiences []*string `json:"allowedAudiences,omitempty" tf:"allowed_audiences,omitempty"`

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The OpenID Connect Client ID for the Google web application.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The app setting name that contains the `client_secret` value used for Google Login.
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// The list of Login scopes that should be requested as part of Microsoft Account authentication.
	// Specifies a list of Login scopes that will be requested as part of Google Sign-In authentication.
	LoginScopes []*string `json:"loginScopes,omitempty" tf:"login_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2GoogleV2Parameters struct {

	// Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
	// Specifies a list of Allowed Audiences that will be requested as part of Google Sign-In authentication.
	// +kubebuilder:validation:Optional
	AllowedAudiences []*string `json:"allowedAudiences,omitempty" tf:"allowed_audiences,omitempty"`

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The OpenID Connect Client ID for the Google web application.
	// +kubebuilder:validation:Optional
	ClientID *string `json:"clientId" tf:"client_id,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The app setting name that contains the `client_secret` value used for Google Login.
	// +kubebuilder:validation:Optional
	ClientSecretSettingName *string `json:"clientSecretSettingName" tf:"client_secret_setting_name,omitempty"`

	// The list of Login scopes that should be requested as part of Microsoft Account authentication.
	// Specifies a list of Login scopes that will be requested as part of Google Sign-In authentication.
	// +kubebuilder:validation:Optional
	LoginScopes []*string `json:"loginScopes,omitempty" tf:"login_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2InitParameters struct {

	// An active_directory_v2 block as defined below.
	ActiveDirectoryV2 []WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2InitParameters `json:"activeDirectoryV2,omitempty" tf:"active_directory_v2,omitempty"`

	// An apple_v2 block as defined below.
	AppleV2 []WindowsFunctionAppAuthSettingsV2AppleV2InitParameters `json:"appleV2,omitempty" tf:"apple_v2,omitempty"`

	// Should the AuthV2 Settings be enabled. Defaults to false.
	// Should the AuthV2 Settings be enabled. Defaults to `false`
	AuthEnabled *bool `json:"authEnabled,omitempty" tf:"auth_enabled,omitempty"`

	// An azure_static_web_app_v2 block as defined below.
	AzureStaticWebAppV2 []WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2InitParameters `json:"azureStaticWebAppV2,omitempty" tf:"azure_static_web_app_v2,omitempty"`

	// The path to the App Auth settings.
	// The path to the App Auth settings. **Note:** Relative Paths are evaluated from the Site Root directory.
	ConfigFilePath *string `json:"configFilePath,omitempty" tf:"config_file_path,omitempty"`

	// Zero or more custom_oidc_v2 blocks as defined below.
	CustomOidcV2 []WindowsFunctionAppAuthSettingsV2CustomOidcV2InitParameters `json:"customOidcV2,omitempty" tf:"custom_oidc_v2,omitempty"`

	// The Default Authentication Provider to use when more than one Authentication Provider is configured and the unauthenticated_action is set to RedirectToLoginPage.
	// The Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`.
	DefaultProvider *string `json:"defaultProvider,omitempty" tf:"default_provider,omitempty"`

	// The paths which should be excluded from the unauthenticated_action when it is set to RedirectToLoginPage.
	// The paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.
	ExcludedPaths []*string `json:"excludedPaths,omitempty" tf:"excluded_paths,omitempty"`

	// A facebook_v2 block as defined below.
	FacebookV2 []WindowsFunctionAppAuthSettingsV2FacebookV2InitParameters `json:"facebookV2,omitempty" tf:"facebook_v2,omitempty"`

	// The convention used to determine the url of the request made. Possible values include ForwardProxyConventionNoProxy, ForwardProxyConventionStandard, ForwardProxyConventionCustom. Defaults to ForwardProxyConventionNoProxy.
	// The convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`
	ForwardProxyConvention *string `json:"forwardProxyConvention,omitempty" tf:"forward_proxy_convention,omitempty"`

	// The name of the custom header containing the host of the request.
	// The name of the header containing the host of the request.
	ForwardProxyCustomHostHeaderName *string `json:"forwardProxyCustomHostHeaderName,omitempty" tf:"forward_proxy_custom_host_header_name,omitempty"`

	// The name of the custom header containing the scheme of the request.
	// The name of the header containing the scheme of the request.
	ForwardProxyCustomSchemeHeaderName *string `json:"forwardProxyCustomSchemeHeaderName,omitempty" tf:"forward_proxy_custom_scheme_header_name,omitempty"`

	// A github_v2 block as defined below.
	GithubV2 []WindowsFunctionAppAuthSettingsV2GithubV2InitParameters `json:"githubV2,omitempty" tf:"github_v2,omitempty"`

	// A google_v2 block as defined below.
	GoogleV2 []WindowsFunctionAppAuthSettingsV2GoogleV2InitParameters `json:"googleV2,omitempty" tf:"google_v2,omitempty"`

	// The prefix that should precede all the authentication and authorisation paths. Defaults to /.auth.
	// The prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`
	HTTPRouteAPIPrefix *string `json:"httpRouteApiPrefix,omitempty" tf:"http_route_api_prefix,omitempty"`

	// A login block as defined below.
	Login []WindowsFunctionAppAuthSettingsV2LoginInitParameters `json:"login,omitempty" tf:"login,omitempty"`

	// A microsoft_v2 block as defined below.
	MicrosoftV2 []WindowsFunctionAppAuthSettingsV2MicrosoftV2InitParameters `json:"microsoftV2,omitempty" tf:"microsoft_v2,omitempty"`

	// Should the authentication flow be used for all requests.
	// Should the authentication flow be used for all requests.
	RequireAuthentication *bool `json:"requireAuthentication,omitempty" tf:"require_authentication,omitempty"`

	// Should HTTPS be required on connections? Defaults to true.
	// Should HTTPS be required on connections? Defaults to true.
	RequireHTTPS *bool `json:"requireHttps,omitempty" tf:"require_https,omitempty"`

	// The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to ~1.
	// The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`
	RuntimeVersion *string `json:"runtimeVersion,omitempty" tf:"runtime_version,omitempty"`

	// A twitter_v2 block as defined below.
	TwitterV2 []WindowsFunctionAppAuthSettingsV2TwitterV2InitParameters `json:"twitterV2,omitempty" tf:"twitter_v2,omitempty"`

	// The action to take for requests made without authentication. Possible values include RedirectToLoginPage, AllowAnonymous, Return401, and Return403. Defaults to RedirectToLoginPage.
	// The action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.
	UnauthenticatedAction *string `json:"unauthenticatedAction,omitempty" tf:"unauthenticated_action,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2LoginInitParameters struct {

	// External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends.
	// External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.
	AllowedExternalRedirectUrls []*string `json:"allowedExternalRedirectUrls,omitempty" tf:"allowed_external_redirect_urls,omitempty"`

	// The method by which cookies expire. Possible values include: FixedTime, and IdentityProviderDerived. Defaults to FixedTime.
	// The method by which cookies expire. Possible values include: `FixedTime`, and `IdentityProviderDerived`. Defaults to `FixedTime`.
	CookieExpirationConvention *string `json:"cookieExpirationConvention,omitempty" tf:"cookie_expiration_convention,omitempty"`

	// The time after the request is made when the session cookie should expire. Defaults to 08:00:00.
	// The time after the request is made when the session cookie should expire. Defaults to `08:00:00`.
	CookieExpirationTime *string `json:"cookieExpirationTime,omitempty" tf:"cookie_expiration_time,omitempty"`

	// The endpoint to which logout requests should be made.
	// The endpoint to which logout requests should be made.
	LogoutEndpoint *string `json:"logoutEndpoint,omitempty" tf:"logout_endpoint,omitempty"`

	// The time after the request is made when the nonce should expire. Defaults to 00:05:00.
	// The time after the request is made when the nonce should expire. Defaults to `00:05:00`.
	NonceExpirationTime *string `json:"nonceExpirationTime,omitempty" tf:"nonce_expiration_time,omitempty"`

	// Should the fragments from the request be preserved after the login request is made. Defaults to false.
	// Should the fragments from the request be preserved after the login request is made. Defaults to `false`.
	PreserveURLFragmentsForLogins *bool `json:"preserveUrlFragmentsForLogins,omitempty" tf:"preserve_url_fragments_for_logins,omitempty"`

	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.
	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
	TokenRefreshExtensionTime *float64 `json:"tokenRefreshExtensionTime,omitempty" tf:"token_refresh_extension_time,omitempty"`

	// Should the Token Store configuration Enabled. Defaults to false
	// Should the Token Store configuration Enabled. Defaults to `false`
	TokenStoreEnabled *bool `json:"tokenStoreEnabled,omitempty" tf:"token_store_enabled,omitempty"`

	// The directory path in the App Filesystem in which the tokens will be stored.
	// The directory path in the App Filesystem in which the tokens will be stored.
	TokenStorePath *string `json:"tokenStorePath,omitempty" tf:"token_store_path,omitempty"`

	// The name of the app setting which contains the SAS URL of the blob storage containing the tokens.
	// The name of the app setting which contains the SAS URL of the blob storage containing the tokens.
	TokenStoreSASSettingName *string `json:"tokenStoreSasSettingName,omitempty" tf:"token_store_sas_setting_name,omitempty"`

	// Should the nonce be validated while completing the login flow. Defaults to true.
	// Should the nonce be validated while completing the login flow. Defaults to `true`.
	ValidateNonce *bool `json:"validateNonce,omitempty" tf:"validate_nonce,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2LoginObservation struct {

	// External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends.
	// External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.
	AllowedExternalRedirectUrls []*string `json:"allowedExternalRedirectUrls,omitempty" tf:"allowed_external_redirect_urls,omitempty"`

	// The method by which cookies expire. Possible values include: FixedTime, and IdentityProviderDerived. Defaults to FixedTime.
	// The method by which cookies expire. Possible values include: `FixedTime`, and `IdentityProviderDerived`. Defaults to `FixedTime`.
	CookieExpirationConvention *string `json:"cookieExpirationConvention,omitempty" tf:"cookie_expiration_convention,omitempty"`

	// The time after the request is made when the session cookie should expire. Defaults to 08:00:00.
	// The time after the request is made when the session cookie should expire. Defaults to `08:00:00`.
	CookieExpirationTime *string `json:"cookieExpirationTime,omitempty" tf:"cookie_expiration_time,omitempty"`

	// The endpoint to which logout requests should be made.
	// The endpoint to which logout requests should be made.
	LogoutEndpoint *string `json:"logoutEndpoint,omitempty" tf:"logout_endpoint,omitempty"`

	// The time after the request is made when the nonce should expire. Defaults to 00:05:00.
	// The time after the request is made when the nonce should expire. Defaults to `00:05:00`.
	NonceExpirationTime *string `json:"nonceExpirationTime,omitempty" tf:"nonce_expiration_time,omitempty"`

	// Should the fragments from the request be preserved after the login request is made. Defaults to false.
	// Should the fragments from the request be preserved after the login request is made. Defaults to `false`.
	PreserveURLFragmentsForLogins *bool `json:"preserveUrlFragmentsForLogins,omitempty" tf:"preserve_url_fragments_for_logins,omitempty"`

	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.
	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
	TokenRefreshExtensionTime *float64 `json:"tokenRefreshExtensionTime,omitempty" tf:"token_refresh_extension_time,omitempty"`

	// Should the Token Store configuration Enabled. Defaults to false
	// Should the Token Store configuration Enabled. Defaults to `false`
	TokenStoreEnabled *bool `json:"tokenStoreEnabled,omitempty" tf:"token_store_enabled,omitempty"`

	// The directory path in the App Filesystem in which the tokens will be stored.
	// The directory path in the App Filesystem in which the tokens will be stored.
	TokenStorePath *string `json:"tokenStorePath,omitempty" tf:"token_store_path,omitempty"`

	// The name of the app setting which contains the SAS URL of the blob storage containing the tokens.
	// The name of the app setting which contains the SAS URL of the blob storage containing the tokens.
	TokenStoreSASSettingName *string `json:"tokenStoreSasSettingName,omitempty" tf:"token_store_sas_setting_name,omitempty"`

	// Should the nonce be validated while completing the login flow. Defaults to true.
	// Should the nonce be validated while completing the login flow. Defaults to `true`.
	ValidateNonce *bool `json:"validateNonce,omitempty" tf:"validate_nonce,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2LoginParameters struct {

	// External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends.
	// External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.
	// +kubebuilder:validation:Optional
	AllowedExternalRedirectUrls []*string `json:"allowedExternalRedirectUrls,omitempty" tf:"allowed_external_redirect_urls,omitempty"`

	// The method by which cookies expire. Possible values include: FixedTime, and IdentityProviderDerived. Defaults to FixedTime.
	// The method by which cookies expire. Possible values include: `FixedTime`, and `IdentityProviderDerived`. Defaults to `FixedTime`.
	// +kubebuilder:validation:Optional
	CookieExpirationConvention *string `json:"cookieExpirationConvention,omitempty" tf:"cookie_expiration_convention,omitempty"`

	// The time after the request is made when the session cookie should expire. Defaults to 08:00:00.
	// The time after the request is made when the session cookie should expire. Defaults to `08:00:00`.
	// +kubebuilder:validation:Optional
	CookieExpirationTime *string `json:"cookieExpirationTime,omitempty" tf:"cookie_expiration_time,omitempty"`

	// The endpoint to which logout requests should be made.
	// The endpoint to which logout requests should be made.
	// +kubebuilder:validation:Optional
	LogoutEndpoint *string `json:"logoutEndpoint,omitempty" tf:"logout_endpoint,omitempty"`

	// The time after the request is made when the nonce should expire. Defaults to 00:05:00.
	// The time after the request is made when the nonce should expire. Defaults to `00:05:00`.
	// +kubebuilder:validation:Optional
	NonceExpirationTime *string `json:"nonceExpirationTime,omitempty" tf:"nonce_expiration_time,omitempty"`

	// Should the fragments from the request be preserved after the login request is made. Defaults to false.
	// Should the fragments from the request be preserved after the login request is made. Defaults to `false`.
	// +kubebuilder:validation:Optional
	PreserveURLFragmentsForLogins *bool `json:"preserveUrlFragmentsForLogins,omitempty" tf:"preserve_url_fragments_for_logins,omitempty"`

	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.
	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
	// +kubebuilder:validation:Optional
	TokenRefreshExtensionTime *float64 `json:"tokenRefreshExtensionTime,omitempty" tf:"token_refresh_extension_time,omitempty"`

	// Should the Token Store configuration Enabled. Defaults to false
	// Should the Token Store configuration Enabled. Defaults to `false`
	// +kubebuilder:validation:Optional
	TokenStoreEnabled *bool `json:"tokenStoreEnabled,omitempty" tf:"token_store_enabled,omitempty"`

	// The directory path in the App Filesystem in which the tokens will be stored.
	// The directory path in the App Filesystem in which the tokens will be stored.
	// +kubebuilder:validation:Optional
	TokenStorePath *string `json:"tokenStorePath,omitempty" tf:"token_store_path,omitempty"`

	// The name of the app setting which contains the SAS URL of the blob storage containing the tokens.
	// The name of the app setting which contains the SAS URL of the blob storage containing the tokens.
	// +kubebuilder:validation:Optional
	TokenStoreSASSettingName *string `json:"tokenStoreSasSettingName,omitempty" tf:"token_store_sas_setting_name,omitempty"`

	// Should the nonce be validated while completing the login flow. Defaults to true.
	// Should the nonce be validated while completing the login flow. Defaults to `true`.
	// +kubebuilder:validation:Optional
	ValidateNonce *bool `json:"validateNonce,omitempty" tf:"validate_nonce,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2MicrosoftV2InitParameters struct {

	// Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
	// Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
	AllowedAudiences []*string `json:"allowedAudiences,omitempty" tf:"allowed_audiences,omitempty"`

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The OAuth 2.0 client ID that was created for the app used for authentication.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// The list of Login scopes that should be requested as part of Microsoft Account authentication.
	// The list of Login scopes that will be requested as part of Microsoft Account authentication.
	LoginScopes []*string `json:"loginScopes,omitempty" tf:"login_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2MicrosoftV2Observation struct {

	// Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
	// Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
	AllowedAudiences []*string `json:"allowedAudiences,omitempty" tf:"allowed_audiences,omitempty"`

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The OAuth 2.0 client ID that was created for the app used for authentication.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// The list of Login scopes that should be requested as part of Microsoft Account authentication.
	// The list of Login scopes that will be requested as part of Microsoft Account authentication.
	LoginScopes []*string `json:"loginScopes,omitempty" tf:"login_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2MicrosoftV2Parameters struct {

	// Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
	// Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
	// +kubebuilder:validation:Optional
	AllowedAudiences []*string `json:"allowedAudiences,omitempty" tf:"allowed_audiences,omitempty"`

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// +kubebuilder:validation:Optional
	ClientID *string `json:"clientId" tf:"client_id,omitempty"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
	// +kubebuilder:validation:Optional
	ClientSecretSettingName *string `json:"clientSecretSettingName" tf:"client_secret_setting_name,omitempty"`

	// The list of Login scopes that should be requested as part of Microsoft Account authentication.
	// The list of Login scopes that will be requested as part of Microsoft Account authentication.
	// +kubebuilder:validation:Optional
	LoginScopes []*string `json:"loginScopes,omitempty" tf:"login_scopes,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2Observation struct {

	// An active_directory_v2 block as defined below.
	ActiveDirectoryV2 []WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2Observation `json:"activeDirectoryV2,omitempty" tf:"active_directory_v2,omitempty"`

	// An apple_v2 block as defined below.
	AppleV2 []WindowsFunctionAppAuthSettingsV2AppleV2Observation `json:"appleV2,omitempty" tf:"apple_v2,omitempty"`

	// Should the AuthV2 Settings be enabled. Defaults to false.
	// Should the AuthV2 Settings be enabled. Defaults to `false`
	AuthEnabled *bool `json:"authEnabled,omitempty" tf:"auth_enabled,omitempty"`

	// An azure_static_web_app_v2 block as defined below.
	AzureStaticWebAppV2 []WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2Observation `json:"azureStaticWebAppV2,omitempty" tf:"azure_static_web_app_v2,omitempty"`

	// The path to the App Auth settings.
	// The path to the App Auth settings. **Note:** Relative Paths are evaluated from the Site Root directory.
	ConfigFilePath *string `json:"configFilePath,omitempty" tf:"config_file_path,omitempty"`

	// Zero or more custom_oidc_v2 blocks as defined below.
	CustomOidcV2 []WindowsFunctionAppAuthSettingsV2CustomOidcV2Observation `json:"customOidcV2,omitempty" tf:"custom_oidc_v2,omitempty"`

	// The Default Authentication Provider to use when more than one Authentication Provider is configured and the unauthenticated_action is set to RedirectToLoginPage.
	// The Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`.
	DefaultProvider *string `json:"defaultProvider,omitempty" tf:"default_provider,omitempty"`

	// The paths which should be excluded from the unauthenticated_action when it is set to RedirectToLoginPage.
	// The paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.
	ExcludedPaths []*string `json:"excludedPaths,omitempty" tf:"excluded_paths,omitempty"`

	// A facebook_v2 block as defined below.
	FacebookV2 []WindowsFunctionAppAuthSettingsV2FacebookV2Observation `json:"facebookV2,omitempty" tf:"facebook_v2,omitempty"`

	// The convention used to determine the url of the request made. Possible values include ForwardProxyConventionNoProxy, ForwardProxyConventionStandard, ForwardProxyConventionCustom. Defaults to ForwardProxyConventionNoProxy.
	// The convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`
	ForwardProxyConvention *string `json:"forwardProxyConvention,omitempty" tf:"forward_proxy_convention,omitempty"`

	// The name of the custom header containing the host of the request.
	// The name of the header containing the host of the request.
	ForwardProxyCustomHostHeaderName *string `json:"forwardProxyCustomHostHeaderName,omitempty" tf:"forward_proxy_custom_host_header_name,omitempty"`

	// The name of the custom header containing the scheme of the request.
	// The name of the header containing the scheme of the request.
	ForwardProxyCustomSchemeHeaderName *string `json:"forwardProxyCustomSchemeHeaderName,omitempty" tf:"forward_proxy_custom_scheme_header_name,omitempty"`

	// A github_v2 block as defined below.
	GithubV2 []WindowsFunctionAppAuthSettingsV2GithubV2Observation `json:"githubV2,omitempty" tf:"github_v2,omitempty"`

	// A google_v2 block as defined below.
	GoogleV2 []WindowsFunctionAppAuthSettingsV2GoogleV2Observation `json:"googleV2,omitempty" tf:"google_v2,omitempty"`

	// The prefix that should precede all the authentication and authorisation paths. Defaults to /.auth.
	// The prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`
	HTTPRouteAPIPrefix *string `json:"httpRouteApiPrefix,omitempty" tf:"http_route_api_prefix,omitempty"`

	// A login block as defined below.
	Login []WindowsFunctionAppAuthSettingsV2LoginObservation `json:"login,omitempty" tf:"login,omitempty"`

	// A microsoft_v2 block as defined below.
	MicrosoftV2 []WindowsFunctionAppAuthSettingsV2MicrosoftV2Observation `json:"microsoftV2,omitempty" tf:"microsoft_v2,omitempty"`

	// Should the authentication flow be used for all requests.
	// Should the authentication flow be used for all requests.
	RequireAuthentication *bool `json:"requireAuthentication,omitempty" tf:"require_authentication,omitempty"`

	// Should HTTPS be required on connections? Defaults to true.
	// Should HTTPS be required on connections? Defaults to true.
	RequireHTTPS *bool `json:"requireHttps,omitempty" tf:"require_https,omitempty"`

	// The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to ~1.
	// The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`
	RuntimeVersion *string `json:"runtimeVersion,omitempty" tf:"runtime_version,omitempty"`

	// A twitter_v2 block as defined below.
	TwitterV2 []WindowsFunctionAppAuthSettingsV2TwitterV2Observation `json:"twitterV2,omitempty" tf:"twitter_v2,omitempty"`

	// The action to take for requests made without authentication. Possible values include RedirectToLoginPage, AllowAnonymous, Return401, and Return403. Defaults to RedirectToLoginPage.
	// The action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.
	UnauthenticatedAction *string `json:"unauthenticatedAction,omitempty" tf:"unauthenticated_action,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2Parameters struct {

	// An active_directory_v2 block as defined below.
	// +kubebuilder:validation:Optional
	ActiveDirectoryV2 []WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2Parameters `json:"activeDirectoryV2,omitempty" tf:"active_directory_v2,omitempty"`

	// An apple_v2 block as defined below.
	// +kubebuilder:validation:Optional
	AppleV2 []WindowsFunctionAppAuthSettingsV2AppleV2Parameters `json:"appleV2,omitempty" tf:"apple_v2,omitempty"`

	// Should the AuthV2 Settings be enabled. Defaults to false.
	// Should the AuthV2 Settings be enabled. Defaults to `false`
	// +kubebuilder:validation:Optional
	AuthEnabled *bool `json:"authEnabled,omitempty" tf:"auth_enabled,omitempty"`

	// An azure_static_web_app_v2 block as defined below.
	// +kubebuilder:validation:Optional
	AzureStaticWebAppV2 []WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2Parameters `json:"azureStaticWebAppV2,omitempty" tf:"azure_static_web_app_v2,omitempty"`

	// The path to the App Auth settings.
	// The path to the App Auth settings. **Note:** Relative Paths are evaluated from the Site Root directory.
	// +kubebuilder:validation:Optional
	ConfigFilePath *string `json:"configFilePath,omitempty" tf:"config_file_path,omitempty"`

	// Zero or more custom_oidc_v2 blocks as defined below.
	// +kubebuilder:validation:Optional
	CustomOidcV2 []WindowsFunctionAppAuthSettingsV2CustomOidcV2Parameters `json:"customOidcV2,omitempty" tf:"custom_oidc_v2,omitempty"`

	// The Default Authentication Provider to use when more than one Authentication Provider is configured and the unauthenticated_action is set to RedirectToLoginPage.
	// The Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`.
	// +kubebuilder:validation:Optional
	DefaultProvider *string `json:"defaultProvider,omitempty" tf:"default_provider,omitempty"`

	// The paths which should be excluded from the unauthenticated_action when it is set to RedirectToLoginPage.
	// The paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.
	// +kubebuilder:validation:Optional
	ExcludedPaths []*string `json:"excludedPaths,omitempty" tf:"excluded_paths,omitempty"`

	// A facebook_v2 block as defined below.
	// +kubebuilder:validation:Optional
	FacebookV2 []WindowsFunctionAppAuthSettingsV2FacebookV2Parameters `json:"facebookV2,omitempty" tf:"facebook_v2,omitempty"`

	// The convention used to determine the url of the request made. Possible values include ForwardProxyConventionNoProxy, ForwardProxyConventionStandard, ForwardProxyConventionCustom. Defaults to ForwardProxyConventionNoProxy.
	// The convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`
	// +kubebuilder:validation:Optional
	ForwardProxyConvention *string `json:"forwardProxyConvention,omitempty" tf:"forward_proxy_convention,omitempty"`

	// The name of the custom header containing the host of the request.
	// The name of the header containing the host of the request.
	// +kubebuilder:validation:Optional
	ForwardProxyCustomHostHeaderName *string `json:"forwardProxyCustomHostHeaderName,omitempty" tf:"forward_proxy_custom_host_header_name,omitempty"`

	// The name of the custom header containing the scheme of the request.
	// The name of the header containing the scheme of the request.
	// +kubebuilder:validation:Optional
	ForwardProxyCustomSchemeHeaderName *string `json:"forwardProxyCustomSchemeHeaderName,omitempty" tf:"forward_proxy_custom_scheme_header_name,omitempty"`

	// A github_v2 block as defined below.
	// +kubebuilder:validation:Optional
	GithubV2 []WindowsFunctionAppAuthSettingsV2GithubV2Parameters `json:"githubV2,omitempty" tf:"github_v2,omitempty"`

	// A google_v2 block as defined below.
	// +kubebuilder:validation:Optional
	GoogleV2 []WindowsFunctionAppAuthSettingsV2GoogleV2Parameters `json:"googleV2,omitempty" tf:"google_v2,omitempty"`

	// The prefix that should precede all the authentication and authorisation paths. Defaults to /.auth.
	// The prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`
	// +kubebuilder:validation:Optional
	HTTPRouteAPIPrefix *string `json:"httpRouteApiPrefix,omitempty" tf:"http_route_api_prefix,omitempty"`

	// A login block as defined below.
	// +kubebuilder:validation:Optional
	Login []WindowsFunctionAppAuthSettingsV2LoginParameters `json:"login" tf:"login,omitempty"`

	// A microsoft_v2 block as defined below.
	// +kubebuilder:validation:Optional
	MicrosoftV2 []WindowsFunctionAppAuthSettingsV2MicrosoftV2Parameters `json:"microsoftV2,omitempty" tf:"microsoft_v2,omitempty"`

	// Should the authentication flow be used for all requests.
	// Should the authentication flow be used for all requests.
	// +kubebuilder:validation:Optional
	RequireAuthentication *bool `json:"requireAuthentication,omitempty" tf:"require_authentication,omitempty"`

	// Should HTTPS be required on connections? Defaults to true.
	// Should HTTPS be required on connections? Defaults to true.
	// +kubebuilder:validation:Optional
	RequireHTTPS *bool `json:"requireHttps,omitempty" tf:"require_https,omitempty"`

	// The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to ~1.
	// The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`
	// +kubebuilder:validation:Optional
	RuntimeVersion *string `json:"runtimeVersion,omitempty" tf:"runtime_version,omitempty"`

	// A twitter_v2 block as defined below.
	// +kubebuilder:validation:Optional
	TwitterV2 []WindowsFunctionAppAuthSettingsV2TwitterV2Parameters `json:"twitterV2,omitempty" tf:"twitter_v2,omitempty"`

	// The action to take for requests made without authentication. Possible values include RedirectToLoginPage, AllowAnonymous, Return401, and Return403. Defaults to RedirectToLoginPage.
	// The action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.
	// +kubebuilder:validation:Optional
	UnauthenticatedAction *string `json:"unauthenticatedAction,omitempty" tf:"unauthenticated_action,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2TwitterV2InitParameters struct {

	// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
	// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
	ConsumerKey *string `json:"consumerKey,omitempty" tf:"consumer_key,omitempty"`

	// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
	// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
	ConsumerSecretSettingName *string `json:"consumerSecretSettingName,omitempty" tf:"consumer_secret_setting_name,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2TwitterV2Observation struct {

	// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
	// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
	ConsumerKey *string `json:"consumerKey,omitempty" tf:"consumer_key,omitempty"`

	// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
	// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
	ConsumerSecretSettingName *string `json:"consumerSecretSettingName,omitempty" tf:"consumer_secret_setting_name,omitempty"`
}

type WindowsFunctionAppAuthSettingsV2TwitterV2Parameters struct {

	// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
	// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
	// +kubebuilder:validation:Optional
	ConsumerKey *string `json:"consumerKey" tf:"consumer_key,omitempty"`

	// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
	// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
	// +kubebuilder:validation:Optional
	ConsumerSecretSettingName *string `json:"consumerSecretSettingName" tf:"consumer_secret_setting_name,omitempty"`
}

type WindowsFunctionAppBackupInitParameters struct {

	// Should this backup job be enabled? Defaults to true.
	// Should this backup job be enabled?
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The name which should be used for this Backup.
	// The name which should be used for this Backup.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// A schedule block as defined below.
	Schedule []WindowsFunctionAppBackupScheduleInitParameters `json:"schedule,omitempty" tf:"schedule,omitempty"`
}

type WindowsFunctionAppBackupObservation struct {

	// Should this backup job be enabled? Defaults to true.
	// Should this backup job be enabled?
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The name which should be used for this Backup.
	// The name which should be used for this Backup.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// A schedule block as defined below.
	Schedule []WindowsFunctionAppBackupScheduleObservation `json:"schedule,omitempty" tf:"schedule,omitempty"`
}

type WindowsFunctionAppBackupParameters struct {

	// Should this backup job be enabled? Defaults to true.
	// Should this backup job be enabled?
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The name which should be used for this Backup.
	// The name which should be used for this Backup.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// A schedule block as defined below.
	// +kubebuilder:validation:Optional
	Schedule []WindowsFunctionAppBackupScheduleParameters `json:"schedule" tf:"schedule,omitempty"`

	// The SAS URL to the container.
	// The SAS URL to the container.
	// +kubebuilder:validation:Required
	StorageAccountURLSecretRef v1.SecretKeySelector `json:"storageAccountUrlSecretRef" tf:"-"`
}

type WindowsFunctionAppBackupScheduleInitParameters struct {

	// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and frequency_unit should be set to Day).
	// How often the backup should be executed (e.g. for weekly backup, this should be set to `7` and `frequency_unit` should be set to `Day`).
	FrequencyInterval *float64 `json:"frequencyInterval,omitempty" tf:"frequency_interval,omitempty"`

	// The unit of time for how often the backup should take place. Possible values include: Day and Hour.
	// The unit of time for how often the backup should take place. Possible values include: `Day` and `Hour`.
	FrequencyUnit *string `json:"frequencyUnit,omitempty" tf:"frequency_unit,omitempty"`

	// Should the service keep at least one backup, regardless of age of backup. Defaults to false.
	// Should the service keep at least one backup, regardless of age of backup. Defaults to `false`.
	KeepAtLeastOneBackup *bool `json:"keepAtLeastOneBackup,omitempty" tf:"keep_at_least_one_backup,omitempty"`

	// After how many days backups should be deleted. Defaults to 30.
	// After how many days backups should be deleted.
	RetentionPeriodDays *float64 `json:"retentionPeriodDays,omitempty" tf:"retention_period_days,omitempty"`

	// When the schedule should start working in RFC-3339 format.
	// When the schedule should start working in RFC-3339 format.
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`
}

type WindowsFunctionAppBackupScheduleObservation struct {

	// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and frequency_unit should be set to Day).
	// How often the backup should be executed (e.g. for weekly backup, this should be set to `7` and `frequency_unit` should be set to `Day`).
	FrequencyInterval *float64 `json:"frequencyInterval,omitempty" tf:"frequency_interval,omitempty"`

	// The unit of time for how often the backup should take place. Possible values include: Day and Hour.
	// The unit of time for how often the backup should take place. Possible values include: `Day` and `Hour`.
	FrequencyUnit *string `json:"frequencyUnit,omitempty" tf:"frequency_unit,omitempty"`

	// Should the service keep at least one backup, regardless of age of backup. Defaults to false.
	// Should the service keep at least one backup, regardless of age of backup. Defaults to `false`.
	KeepAtLeastOneBackup *bool `json:"keepAtLeastOneBackup,omitempty" tf:"keep_at_least_one_backup,omitempty"`

	// The time the backup was last attempted.
	LastExecutionTime *string `json:"lastExecutionTime,omitempty" tf:"last_execution_time,omitempty"`

	// After how many days backups should be deleted. Defaults to 30.
	// After how many days backups should be deleted.
	RetentionPeriodDays *float64 `json:"retentionPeriodDays,omitempty" tf:"retention_period_days,omitempty"`

	// When the schedule should start working in RFC-3339 format.
	// When the schedule should start working in RFC-3339 format.
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`
}

type WindowsFunctionAppBackupScheduleParameters struct {

	// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and frequency_unit should be set to Day).
	// How often the backup should be executed (e.g. for weekly backup, this should be set to `7` and `frequency_unit` should be set to `Day`).
	// +kubebuilder:validation:Optional
	FrequencyInterval *float64 `json:"frequencyInterval" tf:"frequency_interval,omitempty"`

	// The unit of time for how often the backup should take place. Possible values include: Day and Hour.
	// The unit of time for how often the backup should take place. Possible values include: `Day` and `Hour`.
	// +kubebuilder:validation:Optional
	FrequencyUnit *string `json:"frequencyUnit" tf:"frequency_unit,omitempty"`

	// Should the service keep at least one backup, regardless of age of backup. Defaults to false.
	// Should the service keep at least one backup, regardless of age of backup. Defaults to `false`.
	// +kubebuilder:validation:Optional
	KeepAtLeastOneBackup *bool `json:"keepAtLeastOneBackup,omitempty" tf:"keep_at_least_one_backup,omitempty"`

	// After how many days backups should be deleted. Defaults to 30.
	// After how many days backups should be deleted.
	// +kubebuilder:validation:Optional
	RetentionPeriodDays *float64 `json:"retentionPeriodDays,omitempty" tf:"retention_period_days,omitempty"`

	// When the schedule should start working in RFC-3339 format.
	// When the schedule should start working in RFC-3339 format.
	// +kubebuilder:validation:Optional
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`
}

type WindowsFunctionAppConnectionStringInitParameters struct {

	// The name which should be used for this Connection.
	// The name which should be used for this Connection.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Type of database. Possible values include: APIHub, Custom, DocDb, EventHub, MySQL, NotificationHub, PostgreSQL, RedisCache, ServiceBus, SQLAzure, and SQLServer.
	// Type of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type WindowsFunctionAppConnectionStringObservation struct {

	// The name which should be used for this Connection.
	// The name which should be used for this Connection.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Type of database. Possible values include: APIHub, Custom, DocDb, EventHub, MySQL, NotificationHub, PostgreSQL, RedisCache, ServiceBus, SQLAzure, and SQLServer.
	// Type of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type WindowsFunctionAppConnectionStringParameters struct {

	// The name which should be used for this Connection.
	// The name which should be used for this Connection.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Type of database. Possible values include: APIHub, Custom, DocDb, EventHub, MySQL, NotificationHub, PostgreSQL, RedisCache, ServiceBus, SQLAzure, and SQLServer.
	// Type of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// The connection string value.
	// The connection string value.
	// +kubebuilder:validation:Required
	ValueSecretRef v1.SecretKeySelector `json:"valueSecretRef" tf:"-"`
}

type WindowsFunctionAppIdentityInitParameters struct {

	// A list of User Assigned Managed Identity IDs to be assigned to this Windows Function App.
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// Specifies the type of Managed Service Identity that should be configured on this Windows Function App. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type WindowsFunctionAppIdentityObservation struct {

	// A list of User Assigned Managed Identity IDs to be assigned to this Windows Function App.
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// The Principal ID associated with this Managed Service Identity.
	PrincipalID *string `json:"principalId,omitempty" tf:"principal_id,omitempty"`

	// The Tenant ID associated with this Managed Service Identity.
	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`

	// Specifies the type of Managed Service Identity that should be configured on this Windows Function App. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type WindowsFunctionAppIdentityParameters struct {

	// A list of User Assigned Managed Identity IDs to be assigned to this Windows Function App.
	// +kubebuilder:validation:Optional
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// Specifies the type of Managed Service Identity that should be configured on this Windows Function App. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type WindowsFunctionAppInitParameters struct {

	// A map of key-value pairs for App Settings and custom values.
	// A map of key-value pairs for [App Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.
	AppSettings map[string]*string `json:"appSettings,omitempty" tf:"app_settings,omitempty"`

	// A auth_settings block as defined below.
	AuthSettings []WindowsFunctionAppAuthSettingsInitParameters `json:"authSettings,omitempty" tf:"auth_settings,omitempty"`

	// A auth_settings_v2 block as defined below.
	AuthSettingsV2 []WindowsFunctionAppAuthSettingsV2InitParameters `json:"authSettingsV2,omitempty" tf:"auth_settings_v2,omitempty"`

	// A backup block as defined below.
	Backup []WindowsFunctionAppBackupInitParameters `json:"backup,omitempty" tf:"backup,omitempty"`

	// Should built in logging be enabled. Configures AzureWebJobsDashboard app setting based on the configured storage setting. Defaults to true.
	// Should built in logging be enabled. Configures `AzureWebJobsDashboard` app setting based on the configured storage setting
	BuiltinLoggingEnabled *bool `json:"builtinLoggingEnabled,omitempty" tf:"builtin_logging_enabled,omitempty"`

	// Should the function app use Client Certificates.
	// Should the function app use Client Certificates
	ClientCertificateEnabled *bool `json:"clientCertificateEnabled,omitempty" tf:"client_certificate_enabled,omitempty"`

	// Paths to exclude when using client certificates, separated by ;
	// Paths to exclude when using client certificates, separated by ;
	ClientCertificateExclusionPaths *string `json:"clientCertificateExclusionPaths,omitempty" tf:"client_certificate_exclusion_paths,omitempty"`

	// The mode of the Function App's client certificates requirement for incoming requests. Possible values are Required, Optional, and OptionalInteractiveUser.
	// The mode of the Function App's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`
	ClientCertificateMode *string `json:"clientCertificateMode,omitempty" tf:"client_certificate_mode,omitempty"`

	// One or more connection_string blocks as defined below.
	ConnectionString []WindowsFunctionAppConnectionStringInitParameters `json:"connectionString,omitempty" tf:"connection_string,omitempty"`

	// Should Content Share Settings be disabled. Defaults to false.
	// Force disable the content share settings.
	ContentShareForceDisabled *bool `json:"contentShareForceDisabled,omitempty" tf:"content_share_force_disabled,omitempty"`

	// The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps under the consumption plan. Defaults to 0.
	// The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans.
	DailyMemoryTimeQuota *float64 `json:"dailyMemoryTimeQuota,omitempty" tf:"daily_memory_time_quota,omitempty"`

	// Is the Function App enabled? Defaults to true.
	// Is the Windows Function App enabled.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The runtime version associated with the Function App. Defaults to ~4.
	// The runtime version associated with the Function App.
	FunctionsExtensionVersion *string `json:"functionsExtensionVersion,omitempty" tf:"functions_extension_version,omitempty"`

	// Can the Function App only be accessed via HTTPS? Defaults to false.
	// Can the Function App only be accessed via HTTPS?
	HTTPSOnly *bool `json:"httpsOnly,omitempty" tf:"https_only,omitempty"`

	// A identity block as defined below.
	Identity []WindowsFunctionAppIdentityInitParameters `json:"identity,omitempty" tf:"identity,omitempty"`

	// The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the identity block. For more information see - Access vaults with a user-assigned identity
	// The User Assigned Identity to use for Key Vault access.
	KeyVaultReferenceIdentityID *string `json:"keyVaultReferenceIdentityId,omitempty" tf:"key_vault_reference_identity_id,omitempty"`

	// The Azure Region where the Windows Function App should exist. Changing this forces a new Windows Function App to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// A site_config block as defined below.
	SiteConfig []WindowsFunctionAppSiteConfigInitParameters `json:"siteConfig,omitempty" tf:"site_config,omitempty"`

	// A sticky_settings block as defined below.
	StickySettings []WindowsFunctionAppStickySettingsInitParameters `json:"stickySettings,omitempty" tf:"sticky_settings,omitempty"`

	// One or more storage_account blocks as defined below.
	StorageAccount []WindowsFunctionAppStorageAccountInitParameters `json:"storageAccount,omitempty" tf:"storage_account,omitempty"`

	// The Key Vault Secret ID, optionally including version, that contains the Connection String to connect to the storage account for this Function App.
	// The Key Vault Secret ID, including version, that contains the Connection String to connect to the storage account for this Function App.
	StorageKeyVaultSecretID *string `json:"storageKeyVaultSecretId,omitempty" tf:"storage_key_vault_secret_id,omitempty"`

	// Should the Function App use Managed Identity to access the storage account. Conflicts with storage_account_access_key.
	// Should the Function App use its Managed Identity to access storage?
	StorageUsesManagedIdentity *bool `json:"storageUsesManagedIdentity,omitempty" tf:"storage_uses_managed_identity,omitempty"`

	// A mapping of tags which should be assigned to the Windows Function App.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The local path and filename of the Zip packaged application to deploy to this Windows Function App.
	// The local path and filename of the Zip packaged application to deploy to this Windows Function App. **Note:** Using this value requires `WEBSITE_RUN_FROM_PACKAGE=1` to be set on the App in `app_settings`.
	ZipDeployFile *string `json:"zipDeployFile,omitempty" tf:"zip_deploy_file,omitempty"`
}

type WindowsFunctionAppObservation struct {

	// A map of key-value pairs for App Settings and custom values.
	// A map of key-value pairs for [App Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.
	AppSettings map[string]*string `json:"appSettings,omitempty" tf:"app_settings,omitempty"`

	// A auth_settings block as defined below.
	AuthSettings []WindowsFunctionAppAuthSettingsObservation `json:"authSettings,omitempty" tf:"auth_settings,omitempty"`

	// A auth_settings_v2 block as defined below.
	AuthSettingsV2 []WindowsFunctionAppAuthSettingsV2Observation `json:"authSettingsV2,omitempty" tf:"auth_settings_v2,omitempty"`

	// A backup block as defined below.
	Backup []WindowsFunctionAppBackupObservation `json:"backup,omitempty" tf:"backup,omitempty"`

	// Should built in logging be enabled. Configures AzureWebJobsDashboard app setting based on the configured storage setting. Defaults to true.
	// Should built in logging be enabled. Configures `AzureWebJobsDashboard` app setting based on the configured storage setting
	BuiltinLoggingEnabled *bool `json:"builtinLoggingEnabled,omitempty" tf:"builtin_logging_enabled,omitempty"`

	// Should the function app use Client Certificates.
	// Should the function app use Client Certificates
	ClientCertificateEnabled *bool `json:"clientCertificateEnabled,omitempty" tf:"client_certificate_enabled,omitempty"`

	// Paths to exclude when using client certificates, separated by ;
	// Paths to exclude when using client certificates, separated by ;
	ClientCertificateExclusionPaths *string `json:"clientCertificateExclusionPaths,omitempty" tf:"client_certificate_exclusion_paths,omitempty"`

	// The mode of the Function App's client certificates requirement for incoming requests. Possible values are Required, Optional, and OptionalInteractiveUser.
	// The mode of the Function App's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`
	ClientCertificateMode *string `json:"clientCertificateMode,omitempty" tf:"client_certificate_mode,omitempty"`

	// One or more connection_string blocks as defined below.
	ConnectionString []WindowsFunctionAppConnectionStringObservation `json:"connectionString,omitempty" tf:"connection_string,omitempty"`

	// Should Content Share Settings be disabled. Defaults to false.
	// Force disable the content share settings.
	ContentShareForceDisabled *bool `json:"contentShareForceDisabled,omitempty" tf:"content_share_force_disabled,omitempty"`

	// The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps under the consumption plan. Defaults to 0.
	// The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans.
	DailyMemoryTimeQuota *float64 `json:"dailyMemoryTimeQuota,omitempty" tf:"daily_memory_time_quota,omitempty"`

	// The default hostname of the Windows Function App.
	DefaultHostName *string `json:"defaultHostname,omitempty" tf:"default_hostname,omitempty"`

	// Is the Function App enabled? Defaults to true.
	// Is the Windows Function App enabled.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The runtime version associated with the Function App. Defaults to ~4.
	// The runtime version associated with the Function App.
	FunctionsExtensionVersion *string `json:"functionsExtensionVersion,omitempty" tf:"functions_extension_version,omitempty"`

	// Can the Function App only be accessed via HTTPS? Defaults to false.
	// Can the Function App only be accessed via HTTPS?
	HTTPSOnly *bool `json:"httpsOnly,omitempty" tf:"https_only,omitempty"`

	// The ID of the App Service Environment used by Function App.
	HostingEnvironmentID *string `json:"hostingEnvironmentId,omitempty" tf:"hosting_environment_id,omitempty"`

	// The ID of the Windows Function App.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A identity block as defined below.
	Identity []WindowsFunctionAppIdentityObservation `json:"identity,omitempty" tf:"identity,omitempty"`

	// The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the identity block. For more information see - Access vaults with a user-assigned identity
	// The User Assigned Identity to use for Key Vault access.
	KeyVaultReferenceIdentityID *string `json:"keyVaultReferenceIdentityId,omitempty" tf:"key_vault_reference_identity_id,omitempty"`

	// The Kind value for this Windows Function App.
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`

	// The Azure Region where the Windows Function App should exist. Changing this forces a new Windows Function App to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// A list of outbound IP addresses. For example ["52.23.25.3", "52.143.43.12"]
	OutboundIPAddressList []*string `json:"outboundIpAddressList,omitempty" tf:"outbound_ip_address_list,omitempty"`

	// A comma separated list of outbound IP addresses as a string. For example 52.23.25.3,52.143.43.12.
	OutboundIPAddresses *string `json:"outboundIpAddresses,omitempty" tf:"outbound_ip_addresses,omitempty"`

	// A list of possible outbound IP addresses, not all of which are necessarily in use. This is a superset of outbound_ip_address_list. For example ["52.23.25.3", "52.143.43.12"].
	PossibleOutboundIPAddressList []*string `json:"possibleOutboundIpAddressList,omitempty" tf:"possible_outbound_ip_address_list,omitempty"`

	// A comma separated list of possible outbound IP addresses as a string. For example 52.23.25.3,52.143.43.12,52.143.43.17. This is a superset of outbound_ip_addresses.
	PossibleOutboundIPAddresses *string `json:"possibleOutboundIpAddresses,omitempty" tf:"possible_outbound_ip_addresses,omitempty"`

	// The name of the Resource Group where the Windows Function App should exist. Changing this forces a new Windows Function App to be created.
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// The ID of the App Service Plan within which to create this Function App.
	// The ID of the App Service Plan within which to create this Function App
	ServicePlanID *string `json:"servicePlanId,omitempty" tf:"service_plan_id,omitempty"`

	// A site_config block as defined below.
	SiteConfig []WindowsFunctionAppSiteConfigObservation `json:"siteConfig,omitempty" tf:"site_config,omitempty"`

	// A sticky_settings block as defined below.
	StickySettings []WindowsFunctionAppStickySettingsObservation `json:"stickySettings,omitempty" tf:"sticky_settings,omitempty"`

	// One or more storage_account blocks as defined below.
	StorageAccount []WindowsFunctionAppStorageAccountObservation `json:"storageAccount,omitempty" tf:"storage_account,omitempty"`

	// The backend storage account name which will be used by this Function App.
	// The backend storage account name which will be used by this Function App.
	StorageAccountName *string `json:"storageAccountName,omitempty" tf:"storage_account_name,omitempty"`

	// The Key Vault Secret ID, optionally including version, that contains the Connection String to connect to the storage account for this Function App.
	// The Key Vault Secret ID, including version, that contains the Connection String to connect to the storage account for this Function App.
	StorageKeyVaultSecretID *string `json:"storageKeyVaultSecretId,omitempty" tf:"storage_key_vault_secret_id,omitempty"`

	// Should the Function App use Managed Identity to access the storage account. Conflicts with storage_account_access_key.
	// Should the Function App use its Managed Identity to access storage?
	StorageUsesManagedIdentity *bool `json:"storageUsesManagedIdentity,omitempty" tf:"storage_uses_managed_identity,omitempty"`

	// A mapping of tags which should be assigned to the Windows Function App.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The subnet id which will be used by this Function App for regional virtual network integration.
	VirtualNetworkSubnetID *string `json:"virtualNetworkSubnetId,omitempty" tf:"virtual_network_subnet_id,omitempty"`

	// The local path and filename of the Zip packaged application to deploy to this Windows Function App.
	// The local path and filename of the Zip packaged application to deploy to this Windows Function App. **Note:** Using this value requires `WEBSITE_RUN_FROM_PACKAGE=1` to be set on the App in `app_settings`.
	ZipDeployFile *string `json:"zipDeployFile,omitempty" tf:"zip_deploy_file,omitempty"`
}

type WindowsFunctionAppParameters struct {

	// A map of key-value pairs for App Settings and custom values.
	// A map of key-value pairs for [App Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.
	// +kubebuilder:validation:Optional
	AppSettings map[string]*string `json:"appSettings,omitempty" tf:"app_settings,omitempty"`

	// A auth_settings block as defined below.
	// +kubebuilder:validation:Optional
	AuthSettings []WindowsFunctionAppAuthSettingsParameters `json:"authSettings,omitempty" tf:"auth_settings,omitempty"`

	// A auth_settings_v2 block as defined below.
	// +kubebuilder:validation:Optional
	AuthSettingsV2 []WindowsFunctionAppAuthSettingsV2Parameters `json:"authSettingsV2,omitempty" tf:"auth_settings_v2,omitempty"`

	// A backup block as defined below.
	// +kubebuilder:validation:Optional
	Backup []WindowsFunctionAppBackupParameters `json:"backup,omitempty" tf:"backup,omitempty"`

	// Should built in logging be enabled. Configures AzureWebJobsDashboard app setting based on the configured storage setting. Defaults to true.
	// Should built in logging be enabled. Configures `AzureWebJobsDashboard` app setting based on the configured storage setting
	// +kubebuilder:validation:Optional
	BuiltinLoggingEnabled *bool `json:"builtinLoggingEnabled,omitempty" tf:"builtin_logging_enabled,omitempty"`

	// Should the function app use Client Certificates.
	// Should the function app use Client Certificates
	// +kubebuilder:validation:Optional
	ClientCertificateEnabled *bool `json:"clientCertificateEnabled,omitempty" tf:"client_certificate_enabled,omitempty"`

	// Paths to exclude when using client certificates, separated by ;
	// Paths to exclude when using client certificates, separated by ;
	// +kubebuilder:validation:Optional
	ClientCertificateExclusionPaths *string `json:"clientCertificateExclusionPaths,omitempty" tf:"client_certificate_exclusion_paths,omitempty"`

	// The mode of the Function App's client certificates requirement for incoming requests. Possible values are Required, Optional, and OptionalInteractiveUser.
	// The mode of the Function App's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`
	// +kubebuilder:validation:Optional
	ClientCertificateMode *string `json:"clientCertificateMode,omitempty" tf:"client_certificate_mode,omitempty"`

	// One or more connection_string blocks as defined below.
	// +kubebuilder:validation:Optional
	ConnectionString []WindowsFunctionAppConnectionStringParameters `json:"connectionString,omitempty" tf:"connection_string,omitempty"`

	// Should Content Share Settings be disabled. Defaults to false.
	// Force disable the content share settings.
	// +kubebuilder:validation:Optional
	ContentShareForceDisabled *bool `json:"contentShareForceDisabled,omitempty" tf:"content_share_force_disabled,omitempty"`

	// The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps under the consumption plan. Defaults to 0.
	// The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans.
	// +kubebuilder:validation:Optional
	DailyMemoryTimeQuota *float64 `json:"dailyMemoryTimeQuota,omitempty" tf:"daily_memory_time_quota,omitempty"`

	// Is the Function App enabled? Defaults to true.
	// Is the Windows Function App enabled.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The runtime version associated with the Function App. Defaults to ~4.
	// The runtime version associated with the Function App.
	// +kubebuilder:validation:Optional
	FunctionsExtensionVersion *string `json:"functionsExtensionVersion,omitempty" tf:"functions_extension_version,omitempty"`

	// Can the Function App only be accessed via HTTPS? Defaults to false.
	// Can the Function App only be accessed via HTTPS?
	// +kubebuilder:validation:Optional
	HTTPSOnly *bool `json:"httpsOnly,omitempty" tf:"https_only,omitempty"`

	// A identity block as defined below.
	// +kubebuilder:validation:Optional
	Identity []WindowsFunctionAppIdentityParameters `json:"identity,omitempty" tf:"identity,omitempty"`

	// The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the identity block. For more information see - Access vaults with a user-assigned identity
	// The User Assigned Identity to use for Key Vault access.
	// +kubebuilder:validation:Optional
	KeyVaultReferenceIdentityID *string `json:"keyVaultReferenceIdentityId,omitempty" tf:"key_vault_reference_identity_id,omitempty"`

	// The Azure Region where the Windows Function App should exist. Changing this forces a new Windows Function App to be created.
	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The name of the Resource Group where the Windows Function App should exist. Changing this forces a new Windows Function App to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// The ID of the App Service Plan within which to create this Function App.
	// The ID of the App Service Plan within which to create this Function App
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/web/v1beta1.ServicePlan
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ServicePlanID *string `json:"servicePlanId,omitempty" tf:"service_plan_id,omitempty"`

	// Reference to a ServicePlan in web to populate servicePlanId.
	// +kubebuilder:validation:Optional
	ServicePlanIDRef *v1.Reference `json:"servicePlanIdRef,omitempty" tf:"-"`

	// Selector for a ServicePlan in web to populate servicePlanId.
	// +kubebuilder:validation:Optional
	ServicePlanIDSelector *v1.Selector `json:"servicePlanIdSelector,omitempty" tf:"-"`

	// A site_config block as defined below.
	// +kubebuilder:validation:Optional
	SiteConfig []WindowsFunctionAppSiteConfigParameters `json:"siteConfig,omitempty" tf:"site_config,omitempty"`

	// A sticky_settings block as defined below.
	// +kubebuilder:validation:Optional
	StickySettings []WindowsFunctionAppStickySettingsParameters `json:"stickySettings,omitempty" tf:"sticky_settings,omitempty"`

	// One or more storage_account blocks as defined below.
	// +kubebuilder:validation:Optional
	StorageAccount []WindowsFunctionAppStorageAccountParameters `json:"storageAccount,omitempty" tf:"storage_account,omitempty"`

	// The access key which will be used to access the backend storage account for the Function App. Conflicts with storage_uses_managed_identity.
	// The access key which will be used to access the storage account for the Function App.
	// +kubebuilder:validation:Optional
	StorageAccountAccessKeySecretRef *v1.SecretKeySelector `json:"storageAccountAccessKeySecretRef,omitempty" tf:"-"`

	// The backend storage account name which will be used by this Function App.
	// The backend storage account name which will be used by this Function App.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Account
	// +kubebuilder:validation:Optional
	StorageAccountName *string `json:"storageAccountName,omitempty" tf:"storage_account_name,omitempty"`

	// Reference to a Account in storage to populate storageAccountName.
	// +kubebuilder:validation:Optional
	StorageAccountNameRef *v1.Reference `json:"storageAccountNameRef,omitempty" tf:"-"`

	// Selector for a Account in storage to populate storageAccountName.
	// +kubebuilder:validation:Optional
	StorageAccountNameSelector *v1.Selector `json:"storageAccountNameSelector,omitempty" tf:"-"`

	// The Key Vault Secret ID, optionally including version, that contains the Connection String to connect to the storage account for this Function App.
	// The Key Vault Secret ID, including version, that contains the Connection String to connect to the storage account for this Function App.
	// +kubebuilder:validation:Optional
	StorageKeyVaultSecretID *string `json:"storageKeyVaultSecretId,omitempty" tf:"storage_key_vault_secret_id,omitempty"`

	// Should the Function App use Managed Identity to access the storage account. Conflicts with storage_account_access_key.
	// Should the Function App use its Managed Identity to access storage?
	// +kubebuilder:validation:Optional
	StorageUsesManagedIdentity *bool `json:"storageUsesManagedIdentity,omitempty" tf:"storage_uses_managed_identity,omitempty"`

	// A mapping of tags which should be assigned to the Windows Function App.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The subnet id which will be used by this Function App for regional virtual network integration.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.Subnet
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetID *string `json:"virtualNetworkSubnetId,omitempty" tf:"virtual_network_subnet_id,omitempty"`

	// Reference to a Subnet in network to populate virtualNetworkSubnetId.
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetIDRef *v1.Reference `json:"virtualNetworkSubnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in network to populate virtualNetworkSubnetId.
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetIDSelector *v1.Selector `json:"virtualNetworkSubnetIdSelector,omitempty" tf:"-"`

	// The local path and filename of the Zip packaged application to deploy to this Windows Function App.
	// The local path and filename of the Zip packaged application to deploy to this Windows Function App. **Note:** Using this value requires `WEBSITE_RUN_FROM_PACKAGE=1` to be set on the App in `app_settings`.
	// +kubebuilder:validation:Optional
	ZipDeployFile *string `json:"zipDeployFile,omitempty" tf:"zip_deploy_file,omitempty"`
}

type WindowsFunctionAppSiteConfigAppServiceLogsInitParameters struct {

	// The amount of disk space to use for logs. Valid values are between 25 and 100. Defaults to 35.
	// The amount of disk space to use for logs. Valid values are between `25` and `100`.
	DiskQuotaMb *float64 `json:"diskQuotaMb,omitempty" tf:"disk_quota_mb,omitempty"`

	// After how many days backups should be deleted. Defaults to 30.
	// The retention period for logs in days. Valid values are between `0` and `99999`. Defaults to `0` (never delete).
	RetentionPeriodDays *float64 `json:"retentionPeriodDays,omitempty" tf:"retention_period_days,omitempty"`
}

type WindowsFunctionAppSiteConfigAppServiceLogsObservation struct {

	// The amount of disk space to use for logs. Valid values are between 25 and 100. Defaults to 35.
	// The amount of disk space to use for logs. Valid values are between `25` and `100`.
	DiskQuotaMb *float64 `json:"diskQuotaMb,omitempty" tf:"disk_quota_mb,omitempty"`

	// After how many days backups should be deleted. Defaults to 30.
	// The retention period for logs in days. Valid values are between `0` and `99999`. Defaults to `0` (never delete).
	RetentionPeriodDays *float64 `json:"retentionPeriodDays,omitempty" tf:"retention_period_days,omitempty"`
}

type WindowsFunctionAppSiteConfigAppServiceLogsParameters struct {

	// The amount of disk space to use for logs. Valid values are between 25 and 100. Defaults to 35.
	// The amount of disk space to use for logs. Valid values are between `25` and `100`.
	// +kubebuilder:validation:Optional
	DiskQuotaMb *float64 `json:"diskQuotaMb,omitempty" tf:"disk_quota_mb,omitempty"`

	// After how many days backups should be deleted. Defaults to 30.
	// The retention period for logs in days. Valid values are between `0` and `99999`. Defaults to `0` (never delete).
	// +kubebuilder:validation:Optional
	RetentionPeriodDays *float64 `json:"retentionPeriodDays,omitempty" tf:"retention_period_days,omitempty"`
}

type WindowsFunctionAppSiteConfigApplicationStackInitParameters struct {

	// The version of .NET to use. Possible values include v3.0, v4.0 v6.0 and v7.0.
	// The version of .Net. Possible values are `v3.0`, `v4.0`, `v6.0` and `v7.0`
	DotnetVersion *string `json:"dotnetVersion,omitempty" tf:"dotnet_version,omitempty"`

	// The Version of Java to use. Supported versions include 1.8, 11 & 17 (In-Preview).
	// The version of Java to use. Possible values are `1.8`, `11` and `17`
	JavaVersion *string `json:"javaVersion,omitempty" tf:"java_version,omitempty"`

	// The version of Node to run. Possible values include ~12, ~14, ~16 and ~18.
	// The version of Node to use. Possible values include `12`, `14`, `16` and `18`
	NodeVersion *string `json:"nodeVersion,omitempty" tf:"node_version,omitempty"`

	// The version of PowerShell Core to run. Possible values are 7, and 7.2.
	// The PowerShell Core version to use. Possible values are `7`, and `7.2`
	PowershellCoreVersion *string `json:"powershellCoreVersion,omitempty" tf:"powershell_core_version,omitempty"`

	// Should the Windows Function App use a custom runtime?
	// Does the Function App use a custom Application Stack?
	UseCustomRuntime *bool `json:"useCustomRuntime,omitempty" tf:"use_custom_runtime,omitempty"`

	// Should the DotNet process use an isolated runtime. Defaults to false.
	// Should the DotNet process use an isolated runtime. Defaults to `false`.
	UseDotnetIsolatedRuntime *bool `json:"useDotnetIsolatedRuntime,omitempty" tf:"use_dotnet_isolated_runtime,omitempty"`
}

type WindowsFunctionAppSiteConfigApplicationStackObservation struct {

	// The version of .NET to use. Possible values include v3.0, v4.0 v6.0 and v7.0.
	// The version of .Net. Possible values are `v3.0`, `v4.0`, `v6.0` and `v7.0`
	DotnetVersion *string `json:"dotnetVersion,omitempty" tf:"dotnet_version,omitempty"`

	// The Version of Java to use. Supported versions include 1.8, 11 & 17 (In-Preview).
	// The version of Java to use. Possible values are `1.8`, `11` and `17`
	JavaVersion *string `json:"javaVersion,omitempty" tf:"java_version,omitempty"`

	// The version of Node to run. Possible values include ~12, ~14, ~16 and ~18.
	// The version of Node to use. Possible values include `12`, `14`, `16` and `18`
	NodeVersion *string `json:"nodeVersion,omitempty" tf:"node_version,omitempty"`

	// The version of PowerShell Core to run. Possible values are 7, and 7.2.
	// The PowerShell Core version to use. Possible values are `7`, and `7.2`
	PowershellCoreVersion *string `json:"powershellCoreVersion,omitempty" tf:"powershell_core_version,omitempty"`

	// Should the Windows Function App use a custom runtime?
	// Does the Function App use a custom Application Stack?
	UseCustomRuntime *bool `json:"useCustomRuntime,omitempty" tf:"use_custom_runtime,omitempty"`

	// Should the DotNet process use an isolated runtime. Defaults to false.
	// Should the DotNet process use an isolated runtime. Defaults to `false`.
	UseDotnetIsolatedRuntime *bool `json:"useDotnetIsolatedRuntime,omitempty" tf:"use_dotnet_isolated_runtime,omitempty"`
}

type WindowsFunctionAppSiteConfigApplicationStackParameters struct {

	// The version of .NET to use. Possible values include v3.0, v4.0 v6.0 and v7.0.
	// The version of .Net. Possible values are `v3.0`, `v4.0`, `v6.0` and `v7.0`
	// +kubebuilder:validation:Optional
	DotnetVersion *string `json:"dotnetVersion,omitempty" tf:"dotnet_version,omitempty"`

	// The Version of Java to use. Supported versions include 1.8, 11 & 17 (In-Preview).
	// The version of Java to use. Possible values are `1.8`, `11` and `17`
	// +kubebuilder:validation:Optional
	JavaVersion *string `json:"javaVersion,omitempty" tf:"java_version,omitempty"`

	// The version of Node to run. Possible values include ~12, ~14, ~16 and ~18.
	// The version of Node to use. Possible values include `12`, `14`, `16` and `18`
	// +kubebuilder:validation:Optional
	NodeVersion *string `json:"nodeVersion,omitempty" tf:"node_version,omitempty"`

	// The version of PowerShell Core to run. Possible values are 7, and 7.2.
	// The PowerShell Core version to use. Possible values are `7`, and `7.2`
	// +kubebuilder:validation:Optional
	PowershellCoreVersion *string `json:"powershellCoreVersion,omitempty" tf:"powershell_core_version,omitempty"`

	// Should the Windows Function App use a custom runtime?
	// Does the Function App use a custom Application Stack?
	// +kubebuilder:validation:Optional
	UseCustomRuntime *bool `json:"useCustomRuntime,omitempty" tf:"use_custom_runtime,omitempty"`

	// Should the DotNet process use an isolated runtime. Defaults to false.
	// Should the DotNet process use an isolated runtime. Defaults to `false`.
	// +kubebuilder:validation:Optional
	UseDotnetIsolatedRuntime *bool `json:"useDotnetIsolatedRuntime,omitempty" tf:"use_dotnet_isolated_runtime,omitempty"`
}

type WindowsFunctionAppSiteConfigCorsInitParameters struct {

	// Specifies a list of origins that should be allowed to make cross-origin calls.
	// Specifies a list of origins that should be allowed to make cross-origin calls.
	AllowedOrigins []*string `json:"allowedOrigins,omitempty" tf:"allowed_origins,omitempty"`

	// Are credentials allowed in CORS requests? Defaults to false.
	// Are credentials allowed in CORS requests? Defaults to `false`.
	SupportCredentials *bool `json:"supportCredentials,omitempty" tf:"support_credentials,omitempty"`
}

type WindowsFunctionAppSiteConfigCorsObservation struct {

	// Specifies a list of origins that should be allowed to make cross-origin calls.
	// Specifies a list of origins that should be allowed to make cross-origin calls.
	AllowedOrigins []*string `json:"allowedOrigins,omitempty" tf:"allowed_origins,omitempty"`

	// Are credentials allowed in CORS requests? Defaults to false.
	// Are credentials allowed in CORS requests? Defaults to `false`.
	SupportCredentials *bool `json:"supportCredentials,omitempty" tf:"support_credentials,omitempty"`
}

type WindowsFunctionAppSiteConfigCorsParameters struct {

	// Specifies a list of origins that should be allowed to make cross-origin calls.
	// Specifies a list of origins that should be allowed to make cross-origin calls.
	// +kubebuilder:validation:Optional
	AllowedOrigins []*string `json:"allowedOrigins,omitempty" tf:"allowed_origins,omitempty"`

	// Are credentials allowed in CORS requests? Defaults to false.
	// Are credentials allowed in CORS requests? Defaults to `false`.
	// +kubebuilder:validation:Optional
	SupportCredentials *bool `json:"supportCredentials,omitempty" tf:"support_credentials,omitempty"`
}

type WindowsFunctionAppSiteConfigIPRestrictionHeadersInitParameters struct {

	// Specifies a list of Azure Front Door IDs.
	XAzureFdid []*string `json:"xAzureFdid,omitempty" tf:"x_azure_fdid"`

	// Specifies if a Front Door Health Probe should be expected. The only possible value is 1.
	XFdHealthProbe []*string `json:"xFdHealthProbe,omitempty" tf:"x_fd_health_probe"`

	// Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.
	XForwardedFor []*string `json:"xForwardedFor,omitempty" tf:"x_forwarded_for"`

	// Specifies a list of Hosts for which matching should be applied.
	XForwardedHost []*string `json:"xForwardedHost,omitempty" tf:"x_forwarded_host"`
}

type WindowsFunctionAppSiteConfigIPRestrictionHeadersObservation struct {

	// Specifies a list of Azure Front Door IDs.
	XAzureFdid []*string `json:"xAzureFdid,omitempty" tf:"x_azure_fdid,omitempty"`

	// Specifies if a Front Door Health Probe should be expected. The only possible value is 1.
	XFdHealthProbe []*string `json:"xFdHealthProbe,omitempty" tf:"x_fd_health_probe,omitempty"`

	// Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.
	XForwardedFor []*string `json:"xForwardedFor,omitempty" tf:"x_forwarded_for,omitempty"`

	// Specifies a list of Hosts for which matching should be applied.
	XForwardedHost []*string `json:"xForwardedHost,omitempty" tf:"x_forwarded_host,omitempty"`
}

type WindowsFunctionAppSiteConfigIPRestrictionHeadersParameters struct {

	// Specifies a list of Azure Front Door IDs.
	// +kubebuilder:validation:Optional
	XAzureFdid []*string `json:"xAzureFdid,omitempty" tf:"x_azure_fdid"`

	// Specifies if a Front Door Health Probe should be expected. The only possible value is 1.
	// +kubebuilder:validation:Optional
	XFdHealthProbe []*string `json:"xFdHealthProbe,omitempty" tf:"x_fd_health_probe"`

	// Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.
	// +kubebuilder:validation:Optional
	XForwardedFor []*string `json:"xForwardedFor,omitempty" tf:"x_forwarded_for"`

	// Specifies a list of Hosts for which matching should be applied.
	// +kubebuilder:validation:Optional
	XForwardedHost []*string `json:"xForwardedHost,omitempty" tf:"x_forwarded_host"`
}

type WindowsFunctionAppSiteConfigIPRestrictionInitParameters struct {

	// The action to take. Possible values are Allow or Deny.
	// The action to take. Possible values are `Allow` or `Deny`.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// A headers block as defined above.
	Headers []WindowsFunctionAppSiteConfigIPRestrictionHeadersInitParameters `json:"headers,omitempty" tf:"headers,omitempty"`

	// The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32
	// The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// The name which should be used for this Storage Account.
	// The name which should be used for this `ip_restriction`.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The priority value of this ip_restriction. Defaults to 65000.
	// The priority value of this `ip_restriction`.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// The Service Tag used for this IP Restriction.
	// The Service Tag used for this IP Restriction.
	ServiceTag *string `json:"serviceTag,omitempty" tf:"service_tag,omitempty"`
}

type WindowsFunctionAppSiteConfigIPRestrictionObservation struct {

	// The action to take. Possible values are Allow or Deny.
	// The action to take. Possible values are `Allow` or `Deny`.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// A headers block as defined above.
	Headers []WindowsFunctionAppSiteConfigIPRestrictionHeadersObservation `json:"headers,omitempty" tf:"headers,omitempty"`

	// The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32
	// The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// The name which should be used for this Storage Account.
	// The name which should be used for this `ip_restriction`.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The priority value of this ip_restriction. Defaults to 65000.
	// The priority value of this `ip_restriction`.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// The Service Tag used for this IP Restriction.
	// The Service Tag used for this IP Restriction.
	ServiceTag *string `json:"serviceTag,omitempty" tf:"service_tag,omitempty"`

	// The subnet id which will be used by this Function App for regional virtual network integration.
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetID *string `json:"virtualNetworkSubnetId,omitempty" tf:"virtual_network_subnet_id,omitempty"`
}

type WindowsFunctionAppSiteConfigIPRestrictionParameters struct {

	// The action to take. Possible values are Allow or Deny.
	// The action to take. Possible values are `Allow` or `Deny`.
	// +kubebuilder:validation:Optional
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// A headers block as defined above.
	// +kubebuilder:validation:Optional
	Headers []WindowsFunctionAppSiteConfigIPRestrictionHeadersParameters `json:"headers,omitempty" tf:"headers,omitempty"`

	// The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32
	// The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
	// +kubebuilder:validation:Optional
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// The name which should be used for this Storage Account.
	// The name which should be used for this `ip_restriction`.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The priority value of this ip_restriction. Defaults to 65000.
	// The priority value of this `ip_restriction`.
	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// The Service Tag used for this IP Restriction.
	// The Service Tag used for this IP Restriction.
	// +kubebuilder:validation:Optional
	ServiceTag *string `json:"serviceTag,omitempty" tf:"service_tag,omitempty"`

	// The subnet id which will be used by this Function App for regional virtual network integration.
	// The Virtual Network Subnet ID used for this IP Restriction.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.Subnet
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetID *string `json:"virtualNetworkSubnetId,omitempty" tf:"virtual_network_subnet_id,omitempty"`

	// Reference to a Subnet in network to populate virtualNetworkSubnetId.
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetIDRef *v1.Reference `json:"virtualNetworkSubnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in network to populate virtualNetworkSubnetId.
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetIDSelector *v1.Selector `json:"virtualNetworkSubnetIdSelector,omitempty" tf:"-"`
}

type WindowsFunctionAppSiteConfigInitParameters struct {

	// The URL of the API definition that describes this Windows Function App.
	// The URL of the API definition that describes this Windows Function App.
	APIDefinitionURL *string `json:"apiDefinitionUrl,omitempty" tf:"api_definition_url,omitempty"`

	// The ID of the API Management API for this Windows Function App.
	// The ID of the API Management API for this Windows Function App.
	APIManagementAPIID *string `json:"apiManagementApiId,omitempty" tf:"api_management_api_id,omitempty"`

	// If this Windows Function App is Always On enabled. Defaults to false.
	// If this Windows Web App is Always On enabled. Defaults to `false`.
	AlwaysOn *bool `json:"alwaysOn,omitempty" tf:"always_on,omitempty"`

	// The App command line to launch.
	// The program and any arguments used to launch this app via the command line. (Example `node myapp.js`).
	AppCommandLine *string `json:"appCommandLine,omitempty" tf:"app_command_line,omitempty"`

	// The number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan.
	// The number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan.
	AppScaleLimit *float64 `json:"appScaleLimit,omitempty" tf:"app_scale_limit,omitempty"`

	// An app_service_logs block as defined above.
	AppServiceLogs []WindowsFunctionAppSiteConfigAppServiceLogsInitParameters `json:"appServiceLogs,omitempty" tf:"app_service_logs,omitempty"`

	// An application_stack block as defined above.
	ApplicationStack []WindowsFunctionAppSiteConfigApplicationStackInitParameters `json:"applicationStack,omitempty" tf:"application_stack,omitempty"`

	// A cors block as defined above.
	Cors []WindowsFunctionAppSiteConfigCorsInitParameters `json:"cors,omitempty" tf:"cors,omitempty"`

	// Specifies a list of Default Documents for the Windows Function App.
	// Specifies a list of Default Documents for the Windows Web App.
	DefaultDocuments []*string `json:"defaultDocuments,omitempty" tf:"default_documents,omitempty"`

	// The number of minimum instances for this Windows Function App. Only affects apps on Elastic Premium plans.
	// The number of minimum instances for this Windows Function App. Only affects apps on Elastic Premium plans.
	ElasticInstanceMinimum *float64 `json:"elasticInstanceMinimum,omitempty" tf:"elastic_instance_minimum,omitempty"`

	// State of FTP / FTPS service for this Windows Function App. Possible values include: AllAllowed, FtpsOnly and Disabled. Defaults to Disabled.
	// State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `Disabled`.
	FtpsState *string `json:"ftpsState,omitempty" tf:"ftps_state,omitempty"`

	// The amount of time in minutes that a node can be unhealthy before being removed from the load balancer. Possible values are between 2 and 10. Only valid in conjunction with health_check_path.
	// The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Defaults to `10`. Only valid in conjunction with `health_check_path`
	HealthCheckEvictionTimeInMin *float64 `json:"healthCheckEvictionTimeInMin,omitempty" tf:"health_check_eviction_time_in_min,omitempty"`

	// The path to be checked for this Windows Function App health.
	// The path to be checked for this function app health.
	HealthCheckPath *string `json:"healthCheckPath,omitempty" tf:"health_check_path,omitempty"`

	// Specifies if the HTTP2 protocol should be enabled. Defaults to false.
	// Specifies if the http2 protocol should be enabled. Defaults to `false`.
	Http2Enabled *bool `json:"http2Enabled,omitempty" tf:"http2_enabled,omitempty"`

	// One or more ip_restriction blocks as defined above.
	IPRestriction []WindowsFunctionAppSiteConfigIPRestrictionInitParameters `json:"ipRestriction,omitempty" tf:"ip_restriction,omitempty"`

	// The Site load balancing mode. Possible values include: WeightedRoundRobin, LeastRequests, LeastResponseTime, WeightedTotalTraffic, RequestHash, PerSiteRoundRobin. Defaults to LeastRequests if omitted.
	// The Site load balancing mode. Possible values include: `WeightedRoundRobin`, `LeastRequests`, `LeastResponseTime`, `WeightedTotalTraffic`, `RequestHash`, `PerSiteRoundRobin`. Defaults to `LeastRequests` if omitted.
	LoadBalancingMode *string `json:"loadBalancingMode,omitempty" tf:"load_balancing_mode,omitempty"`

	// Managed pipeline mode. Possible values include: Integrated, Classic. Defaults to Integrated.
	// The Managed Pipeline mode. Possible values include: `Integrated`, `Classic`. Defaults to `Integrated`.
	ManagedPipelineMode *string `json:"managedPipelineMode,omitempty" tf:"managed_pipeline_mode,omitempty"`

	// Configures the minimum version of TLS required for SSL requests. Possible values include: 1.0, 1.1, and 1.2. Defaults to 1.2.
	// The configures the minimum version of TLS required for SSL requests. Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
	MinimumTLSVersion *string `json:"minimumTlsVersion,omitempty" tf:"minimum_tls_version,omitempty"`

	// The number of pre-warmed instances for this Windows Function App. Only affects apps on an Elastic Premium plan.
	// The number of pre-warmed instances for this function app. Only affects apps on an Elastic Premium plan.
	PreWarmedInstanceCount *float64 `json:"preWarmedInstanceCount,omitempty" tf:"pre_warmed_instance_count,omitempty"`

	// Should Remote Debugging be enabled. Defaults to false.
	// Should Remote Debugging be enabled. Defaults to `false`.
	RemoteDebuggingEnabled *bool `json:"remoteDebuggingEnabled,omitempty" tf:"remote_debugging_enabled,omitempty"`

	// The Remote Debugging Version. Possible values include VS2017, VS2019, and VS2022.
	// The Remote Debugging Version. Possible values include `VS2017`, `VS2019`, and `VS2022`
	RemoteDebuggingVersion *string `json:"remoteDebuggingVersion,omitempty" tf:"remote_debugging_version,omitempty"`

	// Should Scale Monitoring of the Functions Runtime be enabled?
	// Should Functions Runtime Scale Monitoring be enabled.
	RuntimeScaleMonitoringEnabled *bool `json:"runtimeScaleMonitoringEnabled,omitempty" tf:"runtime_scale_monitoring_enabled,omitempty"`

	// One or more scm_ip_restriction blocks as defined above.
	ScmIPRestriction []WindowsFunctionAppSiteConfigScmIPRestrictionInitParameters `json:"scmIpRestriction,omitempty" tf:"scm_ip_restriction,omitempty"`

	// Configures the minimum version of TLS required for SSL requests to the SCM site. Possible values include: 1.0, 1.1, and 1.2. Defaults to 1.2.
	// Configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
	ScmMinimumTLSVersion *string `json:"scmMinimumTlsVersion,omitempty" tf:"scm_minimum_tls_version,omitempty"`

	// Should the Windows Function App ip_restriction configuration be used for the SCM also.
	// Should the Windows Function App `ip_restriction` configuration be used for the SCM also.
	ScmUseMainIPRestriction *bool `json:"scmUseMainIpRestriction,omitempty" tf:"scm_use_main_ip_restriction,omitempty"`

	// Should the Windows Function App use a 32-bit worker process. Defaults to true.
	// Should the Windows Web App use a 32-bit worker.
	Use32BitWorker *bool `json:"use32BitWorker,omitempty" tf:"use_32_bit_worker,omitempty"`

	// Should all outbound traffic to have NAT Gateways, Network Security Groups and User Defined Routes applied? Defaults to false.
	// Should all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied? Defaults to `false`.
	VnetRouteAllEnabled *bool `json:"vnetRouteAllEnabled,omitempty" tf:"vnet_route_all_enabled,omitempty"`

	// Should Web Sockets be enabled. Defaults to false.
	// Should Web Sockets be enabled. Defaults to `false`.
	WebsocketsEnabled *bool `json:"websocketsEnabled,omitempty" tf:"websockets_enabled,omitempty"`

	// The number of Workers for this Windows Function App.
	// The number of Workers for this Windows Function App.
	WorkerCount *float64 `json:"workerCount,omitempty" tf:"worker_count,omitempty"`
}

type WindowsFunctionAppSiteConfigObservation struct {

	// The URL of the API definition that describes this Windows Function App.
	// The URL of the API definition that describes this Windows Function App.
	APIDefinitionURL *string `json:"apiDefinitionUrl,omitempty" tf:"api_definition_url,omitempty"`

	// The ID of the API Management API for this Windows Function App.
	// The ID of the API Management API for this Windows Function App.
	APIManagementAPIID *string `json:"apiManagementApiId,omitempty" tf:"api_management_api_id,omitempty"`

	// If this Windows Function App is Always On enabled. Defaults to false.
	// If this Windows Web App is Always On enabled. Defaults to `false`.
	AlwaysOn *bool `json:"alwaysOn,omitempty" tf:"always_on,omitempty"`

	// The App command line to launch.
	// The program and any arguments used to launch this app via the command line. (Example `node myapp.js`).
	AppCommandLine *string `json:"appCommandLine,omitempty" tf:"app_command_line,omitempty"`

	// The number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan.
	// The number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan.
	AppScaleLimit *float64 `json:"appScaleLimit,omitempty" tf:"app_scale_limit,omitempty"`

	// An app_service_logs block as defined above.
	AppServiceLogs []WindowsFunctionAppSiteConfigAppServiceLogsObservation `json:"appServiceLogs,omitempty" tf:"app_service_logs,omitempty"`

	// An application_stack block as defined above.
	ApplicationStack []WindowsFunctionAppSiteConfigApplicationStackObservation `json:"applicationStack,omitempty" tf:"application_stack,omitempty"`

	// A cors block as defined above.
	Cors []WindowsFunctionAppSiteConfigCorsObservation `json:"cors,omitempty" tf:"cors,omitempty"`

	// Specifies a list of Default Documents for the Windows Function App.
	// Specifies a list of Default Documents for the Windows Web App.
	DefaultDocuments []*string `json:"defaultDocuments,omitempty" tf:"default_documents,omitempty"`

	// Is the Function App enabled? Defaults to true.
	// Is detailed error logging enabled
	DetailedErrorLoggingEnabled *bool `json:"detailedErrorLoggingEnabled,omitempty" tf:"detailed_error_logging_enabled,omitempty"`

	// The number of minimum instances for this Windows Function App. Only affects apps on Elastic Premium plans.
	// The number of minimum instances for this Windows Function App. Only affects apps on Elastic Premium plans.
	ElasticInstanceMinimum *float64 `json:"elasticInstanceMinimum,omitempty" tf:"elastic_instance_minimum,omitempty"`

	// State of FTP / FTPS service for this Windows Function App. Possible values include: AllAllowed, FtpsOnly and Disabled. Defaults to Disabled.
	// State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `Disabled`.
	FtpsState *string `json:"ftpsState,omitempty" tf:"ftps_state,omitempty"`

	// The amount of time in minutes that a node can be unhealthy before being removed from the load balancer. Possible values are between 2 and 10. Only valid in conjunction with health_check_path.
	// The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Defaults to `10`. Only valid in conjunction with `health_check_path`
	HealthCheckEvictionTimeInMin *float64 `json:"healthCheckEvictionTimeInMin,omitempty" tf:"health_check_eviction_time_in_min,omitempty"`

	// The path to be checked for this Windows Function App health.
	// The path to be checked for this function app health.
	HealthCheckPath *string `json:"healthCheckPath,omitempty" tf:"health_check_path,omitempty"`

	// Specifies if the HTTP2 protocol should be enabled. Defaults to false.
	// Specifies if the http2 protocol should be enabled. Defaults to `false`.
	Http2Enabled *bool `json:"http2Enabled,omitempty" tf:"http2_enabled,omitempty"`

	// One or more ip_restriction blocks as defined above.
	IPRestriction []WindowsFunctionAppSiteConfigIPRestrictionObservation `json:"ipRestriction,omitempty" tf:"ip_restriction,omitempty"`

	// The Site load balancing mode. Possible values include: WeightedRoundRobin, LeastRequests, LeastResponseTime, WeightedTotalTraffic, RequestHash, PerSiteRoundRobin. Defaults to LeastRequests if omitted.
	// The Site load balancing mode. Possible values include: `WeightedRoundRobin`, `LeastRequests`, `LeastResponseTime`, `WeightedTotalTraffic`, `RequestHash`, `PerSiteRoundRobin`. Defaults to `LeastRequests` if omitted.
	LoadBalancingMode *string `json:"loadBalancingMode,omitempty" tf:"load_balancing_mode,omitempty"`

	// Managed pipeline mode. Possible values include: Integrated, Classic. Defaults to Integrated.
	// The Managed Pipeline mode. Possible values include: `Integrated`, `Classic`. Defaults to `Integrated`.
	ManagedPipelineMode *string `json:"managedPipelineMode,omitempty" tf:"managed_pipeline_mode,omitempty"`

	// Configures the minimum version of TLS required for SSL requests. Possible values include: 1.0, 1.1, and 1.2. Defaults to 1.2.
	// The configures the minimum version of TLS required for SSL requests. Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
	MinimumTLSVersion *string `json:"minimumTlsVersion,omitempty" tf:"minimum_tls_version,omitempty"`

	// The number of pre-warmed instances for this Windows Function App. Only affects apps on an Elastic Premium plan.
	// The number of pre-warmed instances for this function app. Only affects apps on an Elastic Premium plan.
	PreWarmedInstanceCount *float64 `json:"preWarmedInstanceCount,omitempty" tf:"pre_warmed_instance_count,omitempty"`

	// Should Remote Debugging be enabled. Defaults to false.
	// Should Remote Debugging be enabled. Defaults to `false`.
	RemoteDebuggingEnabled *bool `json:"remoteDebuggingEnabled,omitempty" tf:"remote_debugging_enabled,omitempty"`

	// The Remote Debugging Version. Possible values include VS2017, VS2019, and VS2022.
	// The Remote Debugging Version. Possible values include `VS2017`, `VS2019`, and `VS2022`
	RemoteDebuggingVersion *string `json:"remoteDebuggingVersion,omitempty" tf:"remote_debugging_version,omitempty"`

	// Should Scale Monitoring of the Functions Runtime be enabled?
	// Should Functions Runtime Scale Monitoring be enabled.
	RuntimeScaleMonitoringEnabled *bool `json:"runtimeScaleMonitoringEnabled,omitempty" tf:"runtime_scale_monitoring_enabled,omitempty"`

	// One or more scm_ip_restriction blocks as defined above.
	ScmIPRestriction []WindowsFunctionAppSiteConfigScmIPRestrictionObservation `json:"scmIpRestriction,omitempty" tf:"scm_ip_restriction,omitempty"`

	// Configures the minimum version of TLS required for SSL requests to the SCM site. Possible values include: 1.0, 1.1, and 1.2. Defaults to 1.2.
	// Configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
	ScmMinimumTLSVersion *string `json:"scmMinimumTlsVersion,omitempty" tf:"scm_minimum_tls_version,omitempty"`

	// The SCM Type in use by the Windows Function App.
	ScmType *string `json:"scmType,omitempty" tf:"scm_type,omitempty"`

	// Should the Windows Function App ip_restriction configuration be used for the SCM also.
	// Should the Windows Function App `ip_restriction` configuration be used for the SCM also.
	ScmUseMainIPRestriction *bool `json:"scmUseMainIpRestriction,omitempty" tf:"scm_use_main_ip_restriction,omitempty"`

	// Should the Windows Function App use a 32-bit worker process. Defaults to true.
	// Should the Windows Web App use a 32-bit worker.
	Use32BitWorker *bool `json:"use32BitWorker,omitempty" tf:"use_32_bit_worker,omitempty"`

	// Should all outbound traffic to have NAT Gateways, Network Security Groups and User Defined Routes applied? Defaults to false.
	// Should all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied? Defaults to `false`.
	VnetRouteAllEnabled *bool `json:"vnetRouteAllEnabled,omitempty" tf:"vnet_route_all_enabled,omitempty"`

	// Should Web Sockets be enabled. Defaults to false.
	// Should Web Sockets be enabled. Defaults to `false`.
	WebsocketsEnabled *bool `json:"websocketsEnabled,omitempty" tf:"websockets_enabled,omitempty"`

	// The Windows FX Version string.
	WindowsFxVersion *string `json:"windowsFxVersion,omitempty" tf:"windows_fx_version,omitempty"`

	// The number of Workers for this Windows Function App.
	// The number of Workers for this Windows Function App.
	WorkerCount *float64 `json:"workerCount,omitempty" tf:"worker_count,omitempty"`
}

type WindowsFunctionAppSiteConfigParameters struct {

	// The URL of the API definition that describes this Windows Function App.
	// The URL of the API definition that describes this Windows Function App.
	// +kubebuilder:validation:Optional
	APIDefinitionURL *string `json:"apiDefinitionUrl,omitempty" tf:"api_definition_url,omitempty"`

	// The ID of the API Management API for this Windows Function App.
	// The ID of the API Management API for this Windows Function App.
	// +kubebuilder:validation:Optional
	APIManagementAPIID *string `json:"apiManagementApiId,omitempty" tf:"api_management_api_id,omitempty"`

	// If this Windows Function App is Always On enabled. Defaults to false.
	// If this Windows Web App is Always On enabled. Defaults to `false`.
	// +kubebuilder:validation:Optional
	AlwaysOn *bool `json:"alwaysOn,omitempty" tf:"always_on,omitempty"`

	// The App command line to launch.
	// The program and any arguments used to launch this app via the command line. (Example `node myapp.js`).
	// +kubebuilder:validation:Optional
	AppCommandLine *string `json:"appCommandLine,omitempty" tf:"app_command_line,omitempty"`

	// The number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan.
	// The number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan.
	// +kubebuilder:validation:Optional
	AppScaleLimit *float64 `json:"appScaleLimit,omitempty" tf:"app_scale_limit,omitempty"`

	// An app_service_logs block as defined above.
	// +kubebuilder:validation:Optional
	AppServiceLogs []WindowsFunctionAppSiteConfigAppServiceLogsParameters `json:"appServiceLogs,omitempty" tf:"app_service_logs,omitempty"`

	// The Connection String for linking the Windows Function App to Application Insights.
	// The Connection String for linking the Windows Function App to Application Insights.
	// +kubebuilder:validation:Optional
	ApplicationInsightsConnectionStringSecretRef *v1.SecretKeySelector `json:"applicationInsightsConnectionStringSecretRef,omitempty" tf:"-"`

	// The Instrumentation Key for connecting the Windows Function App to Application Insights.
	// The Instrumentation Key for connecting the Windows Function App to Application Insights.
	// +kubebuilder:validation:Optional
	ApplicationInsightsKeySecretRef *v1.SecretKeySelector `json:"applicationInsightsKeySecretRef,omitempty" tf:"-"`

	// An application_stack block as defined above.
	// +kubebuilder:validation:Optional
	ApplicationStack []WindowsFunctionAppSiteConfigApplicationStackParameters `json:"applicationStack,omitempty" tf:"application_stack,omitempty"`

	// A cors block as defined above.
	// +kubebuilder:validation:Optional
	Cors []WindowsFunctionAppSiteConfigCorsParameters `json:"cors,omitempty" tf:"cors,omitempty"`

	// Specifies a list of Default Documents for the Windows Function App.
	// Specifies a list of Default Documents for the Windows Web App.
	// +kubebuilder:validation:Optional
	DefaultDocuments []*string `json:"defaultDocuments,omitempty" tf:"default_documents,omitempty"`

	// The number of minimum instances for this Windows Function App. Only affects apps on Elastic Premium plans.
	// The number of minimum instances for this Windows Function App. Only affects apps on Elastic Premium plans.
	// +kubebuilder:validation:Optional
	ElasticInstanceMinimum *float64 `json:"elasticInstanceMinimum,omitempty" tf:"elastic_instance_minimum,omitempty"`

	// State of FTP / FTPS service for this Windows Function App. Possible values include: AllAllowed, FtpsOnly and Disabled. Defaults to Disabled.
	// State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `Disabled`.
	// +kubebuilder:validation:Optional
	FtpsState *string `json:"ftpsState,omitempty" tf:"ftps_state,omitempty"`

	// The amount of time in minutes that a node can be unhealthy before being removed from the load balancer. Possible values are between 2 and 10. Only valid in conjunction with health_check_path.
	// The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Defaults to `10`. Only valid in conjunction with `health_check_path`
	// +kubebuilder:validation:Optional
	HealthCheckEvictionTimeInMin *float64 `json:"healthCheckEvictionTimeInMin,omitempty" tf:"health_check_eviction_time_in_min,omitempty"`

	// The path to be checked for this Windows Function App health.
	// The path to be checked for this function app health.
	// +kubebuilder:validation:Optional
	HealthCheckPath *string `json:"healthCheckPath,omitempty" tf:"health_check_path,omitempty"`

	// Specifies if the HTTP2 protocol should be enabled. Defaults to false.
	// Specifies if the http2 protocol should be enabled. Defaults to `false`.
	// +kubebuilder:validation:Optional
	Http2Enabled *bool `json:"http2Enabled,omitempty" tf:"http2_enabled,omitempty"`

	// One or more ip_restriction blocks as defined above.
	// +kubebuilder:validation:Optional
	IPRestriction []WindowsFunctionAppSiteConfigIPRestrictionParameters `json:"ipRestriction,omitempty" tf:"ip_restriction,omitempty"`

	// The Site load balancing mode. Possible values include: WeightedRoundRobin, LeastRequests, LeastResponseTime, WeightedTotalTraffic, RequestHash, PerSiteRoundRobin. Defaults to LeastRequests if omitted.
	// The Site load balancing mode. Possible values include: `WeightedRoundRobin`, `LeastRequests`, `LeastResponseTime`, `WeightedTotalTraffic`, `RequestHash`, `PerSiteRoundRobin`. Defaults to `LeastRequests` if omitted.
	// +kubebuilder:validation:Optional
	LoadBalancingMode *string `json:"loadBalancingMode,omitempty" tf:"load_balancing_mode,omitempty"`

	// Managed pipeline mode. Possible values include: Integrated, Classic. Defaults to Integrated.
	// The Managed Pipeline mode. Possible values include: `Integrated`, `Classic`. Defaults to `Integrated`.
	// +kubebuilder:validation:Optional
	ManagedPipelineMode *string `json:"managedPipelineMode,omitempty" tf:"managed_pipeline_mode,omitempty"`

	// Configures the minimum version of TLS required for SSL requests. Possible values include: 1.0, 1.1, and 1.2. Defaults to 1.2.
	// The configures the minimum version of TLS required for SSL requests. Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
	// +kubebuilder:validation:Optional
	MinimumTLSVersion *string `json:"minimumTlsVersion,omitempty" tf:"minimum_tls_version,omitempty"`

	// The number of pre-warmed instances for this Windows Function App. Only affects apps on an Elastic Premium plan.
	// The number of pre-warmed instances for this function app. Only affects apps on an Elastic Premium plan.
	// +kubebuilder:validation:Optional
	PreWarmedInstanceCount *float64 `json:"preWarmedInstanceCount,omitempty" tf:"pre_warmed_instance_count,omitempty"`

	// Should Remote Debugging be enabled. Defaults to false.
	// Should Remote Debugging be enabled. Defaults to `false`.
	// +kubebuilder:validation:Optional
	RemoteDebuggingEnabled *bool `json:"remoteDebuggingEnabled,omitempty" tf:"remote_debugging_enabled,omitempty"`

	// The Remote Debugging Version. Possible values include VS2017, VS2019, and VS2022.
	// The Remote Debugging Version. Possible values include `VS2017`, `VS2019`, and `VS2022`
	// +kubebuilder:validation:Optional
	RemoteDebuggingVersion *string `json:"remoteDebuggingVersion,omitempty" tf:"remote_debugging_version,omitempty"`

	// Should Scale Monitoring of the Functions Runtime be enabled?
	// Should Functions Runtime Scale Monitoring be enabled.
	// +kubebuilder:validation:Optional
	RuntimeScaleMonitoringEnabled *bool `json:"runtimeScaleMonitoringEnabled,omitempty" tf:"runtime_scale_monitoring_enabled,omitempty"`

	// One or more scm_ip_restriction blocks as defined above.
	// +kubebuilder:validation:Optional
	ScmIPRestriction []WindowsFunctionAppSiteConfigScmIPRestrictionParameters `json:"scmIpRestriction,omitempty" tf:"scm_ip_restriction,omitempty"`

	// Configures the minimum version of TLS required for SSL requests to the SCM site. Possible values include: 1.0, 1.1, and 1.2. Defaults to 1.2.
	// Configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
	// +kubebuilder:validation:Optional
	ScmMinimumTLSVersion *string `json:"scmMinimumTlsVersion,omitempty" tf:"scm_minimum_tls_version,omitempty"`

	// Should the Windows Function App ip_restriction configuration be used for the SCM also.
	// Should the Windows Function App `ip_restriction` configuration be used for the SCM also.
	// +kubebuilder:validation:Optional
	ScmUseMainIPRestriction *bool `json:"scmUseMainIpRestriction,omitempty" tf:"scm_use_main_ip_restriction,omitempty"`

	// Should the Windows Function App use a 32-bit worker process. Defaults to true.
	// Should the Windows Web App use a 32-bit worker.
	// +kubebuilder:validation:Optional
	Use32BitWorker *bool `json:"use32BitWorker,omitempty" tf:"use_32_bit_worker,omitempty"`

	// Should all outbound traffic to have NAT Gateways, Network Security Groups and User Defined Routes applied? Defaults to false.
	// Should all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied? Defaults to `false`.
	// +kubebuilder:validation:Optional
	VnetRouteAllEnabled *bool `json:"vnetRouteAllEnabled,omitempty" tf:"vnet_route_all_enabled,omitempty"`

	// Should Web Sockets be enabled. Defaults to false.
	// Should Web Sockets be enabled. Defaults to `false`.
	// +kubebuilder:validation:Optional
	WebsocketsEnabled *bool `json:"websocketsEnabled,omitempty" tf:"websockets_enabled,omitempty"`

	// The number of Workers for this Windows Function App.
	// The number of Workers for this Windows Function App.
	// +kubebuilder:validation:Optional
	WorkerCount *float64 `json:"workerCount,omitempty" tf:"worker_count,omitempty"`
}

type WindowsFunctionAppSiteConfigScmIPRestrictionHeadersInitParameters struct {

	// Specifies a list of Azure Front Door IDs.
	XAzureFdid []*string `json:"xAzureFdid,omitempty" tf:"x_azure_fdid"`

	// Specifies if a Front Door Health Probe should be expected. The only possible value is 1.
	XFdHealthProbe []*string `json:"xFdHealthProbe,omitempty" tf:"x_fd_health_probe"`

	// Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.
	XForwardedFor []*string `json:"xForwardedFor,omitempty" tf:"x_forwarded_for"`

	// Specifies a list of Hosts for which matching should be applied.
	XForwardedHost []*string `json:"xForwardedHost,omitempty" tf:"x_forwarded_host"`
}

type WindowsFunctionAppSiteConfigScmIPRestrictionHeadersObservation struct {

	// Specifies a list of Azure Front Door IDs.
	XAzureFdid []*string `json:"xAzureFdid,omitempty" tf:"x_azure_fdid,omitempty"`

	// Specifies if a Front Door Health Probe should be expected. The only possible value is 1.
	XFdHealthProbe []*string `json:"xFdHealthProbe,omitempty" tf:"x_fd_health_probe,omitempty"`

	// Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.
	XForwardedFor []*string `json:"xForwardedFor,omitempty" tf:"x_forwarded_for,omitempty"`

	// Specifies a list of Hosts for which matching should be applied.
	XForwardedHost []*string `json:"xForwardedHost,omitempty" tf:"x_forwarded_host,omitempty"`
}

type WindowsFunctionAppSiteConfigScmIPRestrictionHeadersParameters struct {

	// Specifies a list of Azure Front Door IDs.
	// +kubebuilder:validation:Optional
	XAzureFdid []*string `json:"xAzureFdid,omitempty" tf:"x_azure_fdid"`

	// Specifies if a Front Door Health Probe should be expected. The only possible value is 1.
	// +kubebuilder:validation:Optional
	XFdHealthProbe []*string `json:"xFdHealthProbe,omitempty" tf:"x_fd_health_probe"`

	// Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.
	// +kubebuilder:validation:Optional
	XForwardedFor []*string `json:"xForwardedFor,omitempty" tf:"x_forwarded_for"`

	// Specifies a list of Hosts for which matching should be applied.
	// +kubebuilder:validation:Optional
	XForwardedHost []*string `json:"xForwardedHost,omitempty" tf:"x_forwarded_host"`
}

type WindowsFunctionAppSiteConfigScmIPRestrictionInitParameters struct {

	// The action to take. Possible values are Allow or Deny.
	// The action to take. Possible values are `Allow` or `Deny`.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// A headers block as defined above.
	Headers []WindowsFunctionAppSiteConfigScmIPRestrictionHeadersInitParameters `json:"headers,omitempty" tf:"headers,omitempty"`

	// The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32
	// The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// The name which should be used for this Storage Account.
	// The name which should be used for this `ip_restriction`.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The priority value of this ip_restriction. Defaults to 65000.
	// The priority value of this `ip_restriction`.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// The Service Tag used for this IP Restriction.
	// The Service Tag used for this IP Restriction.
	ServiceTag *string `json:"serviceTag,omitempty" tf:"service_tag,omitempty"`
}

type WindowsFunctionAppSiteConfigScmIPRestrictionObservation struct {

	// The action to take. Possible values are Allow or Deny.
	// The action to take. Possible values are `Allow` or `Deny`.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// A headers block as defined above.
	Headers []WindowsFunctionAppSiteConfigScmIPRestrictionHeadersObservation `json:"headers,omitempty" tf:"headers,omitempty"`

	// The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32
	// The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// The name which should be used for this Storage Account.
	// The name which should be used for this `ip_restriction`.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The priority value of this ip_restriction. Defaults to 65000.
	// The priority value of this `ip_restriction`.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// The Service Tag used for this IP Restriction.
	// The Service Tag used for this IP Restriction.
	ServiceTag *string `json:"serviceTag,omitempty" tf:"service_tag,omitempty"`

	// The subnet id which will be used by this Function App for regional virtual network integration.
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetID *string `json:"virtualNetworkSubnetId,omitempty" tf:"virtual_network_subnet_id,omitempty"`
}

type WindowsFunctionAppSiteConfigScmIPRestrictionParameters struct {

	// The action to take. Possible values are Allow or Deny.
	// The action to take. Possible values are `Allow` or `Deny`.
	// +kubebuilder:validation:Optional
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// A headers block as defined above.
	// +kubebuilder:validation:Optional
	Headers []WindowsFunctionAppSiteConfigScmIPRestrictionHeadersParameters `json:"headers,omitempty" tf:"headers,omitempty"`

	// The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32
	// The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
	// +kubebuilder:validation:Optional
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// The name which should be used for this Storage Account.
	// The name which should be used for this `ip_restriction`.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The priority value of this ip_restriction. Defaults to 65000.
	// The priority value of this `ip_restriction`.
	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// The Service Tag used for this IP Restriction.
	// The Service Tag used for this IP Restriction.
	// +kubebuilder:validation:Optional
	ServiceTag *string `json:"serviceTag,omitempty" tf:"service_tag,omitempty"`

	// The subnet id which will be used by this Function App for regional virtual network integration.
	// The Virtual Network Subnet ID used for this IP Restriction.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.Subnet
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetID *string `json:"virtualNetworkSubnetId,omitempty" tf:"virtual_network_subnet_id,omitempty"`

	// Reference to a Subnet in network to populate virtualNetworkSubnetId.
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetIDRef *v1.Reference `json:"virtualNetworkSubnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in network to populate virtualNetworkSubnetId.
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetIDSelector *v1.Selector `json:"virtualNetworkSubnetIdSelector,omitempty" tf:"-"`
}

type WindowsFunctionAppSiteCredentialInitParameters struct {
}

type WindowsFunctionAppSiteCredentialObservation struct {

	// The Site Credentials Username used for publishing.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The Site Credentials Password used for publishing.
	Password *string `json:"password,omitempty" tf:"password,omitempty"`
}

type WindowsFunctionAppSiteCredentialParameters struct {
}

type WindowsFunctionAppStickySettingsInitParameters struct {

	// A list of app_setting names that the Windows Function App will not swap between Slots when a swap operation is triggered.
	AppSettingNames []*string `json:"appSettingNames,omitempty" tf:"app_setting_names,omitempty"`

	// A list of connection_string names that the Windows Function App will not swap between Slots when a swap operation is triggered.
	ConnectionStringNames []*string `json:"connectionStringNames,omitempty" tf:"connection_string_names,omitempty"`
}

type WindowsFunctionAppStickySettingsObservation struct {

	// A list of app_setting names that the Windows Function App will not swap between Slots when a swap operation is triggered.
	AppSettingNames []*string `json:"appSettingNames,omitempty" tf:"app_setting_names,omitempty"`

	// A list of connection_string names that the Windows Function App will not swap between Slots when a swap operation is triggered.
	ConnectionStringNames []*string `json:"connectionStringNames,omitempty" tf:"connection_string_names,omitempty"`
}

type WindowsFunctionAppStickySettingsParameters struct {

	// A list of app_setting names that the Windows Function App will not swap between Slots when a swap operation is triggered.
	// +kubebuilder:validation:Optional
	AppSettingNames []*string `json:"appSettingNames,omitempty" tf:"app_setting_names,omitempty"`

	// A list of connection_string names that the Windows Function App will not swap between Slots when a swap operation is triggered.
	// +kubebuilder:validation:Optional
	ConnectionStringNames []*string `json:"connectionStringNames,omitempty" tf:"connection_string_names,omitempty"`
}

type WindowsFunctionAppStorageAccountInitParameters struct {

	// The Name of the Storage Account.
	AccountName *string `json:"accountName,omitempty" tf:"account_name,omitempty"`

	// The path at which to mount the storage share.
	MountPath *string `json:"mountPath,omitempty" tf:"mount_path,omitempty"`

	// The name which should be used for this Storage Account.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The Name of the File Share or Container Name for Blob storage.
	ShareName *string `json:"shareName,omitempty" tf:"share_name,omitempty"`

	// The Azure Storage Type. Possible values include AzureFiles.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type WindowsFunctionAppStorageAccountObservation struct {

	// The Name of the Storage Account.
	AccountName *string `json:"accountName,omitempty" tf:"account_name,omitempty"`

	// The path at which to mount the storage share.
	MountPath *string `json:"mountPath,omitempty" tf:"mount_path,omitempty"`

	// The name which should be used for this Storage Account.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The Name of the File Share or Container Name for Blob storage.
	ShareName *string `json:"shareName,omitempty" tf:"share_name,omitempty"`

	// The Azure Storage Type. Possible values include AzureFiles.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type WindowsFunctionAppStorageAccountParameters struct {

	// The Access key for the storage account.
	// +kubebuilder:validation:Required
	AccessKeySecretRef v1.SecretKeySelector `json:"accessKeySecretRef" tf:"-"`

	// The Name of the Storage Account.
	// +kubebuilder:validation:Optional
	AccountName *string `json:"accountName" tf:"account_name,omitempty"`

	// The path at which to mount the storage share.
	// +kubebuilder:validation:Optional
	MountPath *string `json:"mountPath,omitempty" tf:"mount_path,omitempty"`

	// The name which should be used for this Storage Account.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The Name of the File Share or Container Name for Blob storage.
	// +kubebuilder:validation:Optional
	ShareName *string `json:"shareName" tf:"share_name,omitempty"`

	// The Azure Storage Type. Possible values include AzureFiles.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

// WindowsFunctionAppSpec defines the desired state of WindowsFunctionApp
type WindowsFunctionAppSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     WindowsFunctionAppParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider WindowsFunctionAppInitParameters `json:"initProvider,omitempty"`
}

// WindowsFunctionAppStatus defines the observed state of WindowsFunctionApp.
type WindowsFunctionAppStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WindowsFunctionAppObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// WindowsFunctionApp is the Schema for the WindowsFunctionApps API. Manages a Windows Function App.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type WindowsFunctionApp struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.siteConfig) || (has(self.initProvider) && has(self.initProvider.siteConfig))",message="spec.forProvider.siteConfig is a required parameter"
	Spec   WindowsFunctionAppSpec   `json:"spec"`
	Status WindowsFunctionAppStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WindowsFunctionAppList contains a list of WindowsFunctionApps
type WindowsFunctionAppList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WindowsFunctionApp `json:"items"`
}

// Repository type metadata.
var (
	WindowsFunctionApp_Kind             = "WindowsFunctionApp"
	WindowsFunctionApp_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: WindowsFunctionApp_Kind}.String()
	WindowsFunctionApp_KindAPIVersion   = WindowsFunctionApp_Kind + "." + CRDGroupVersion.String()
	WindowsFunctionApp_GroupVersionKind = CRDGroupVersion.WithKind(WindowsFunctionApp_Kind)
)

func init() {
	SchemeBuilder.Register(&WindowsFunctionApp{}, &WindowsFunctionAppList{})
}
