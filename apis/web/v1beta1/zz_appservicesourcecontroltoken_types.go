/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AppServiceSourceControlTokenObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type AppServiceSourceControlTokenParameters struct {

	// The OAuth access token.
	// +kubebuilder:validation:Required
	TokenSecretRef v1.SecretKeySelector `json:"tokenSecretRef" tf:"-"`

	// The OAuth access token secret.
	// +kubebuilder:validation:Optional
	TokenSecretSecretRef *v1.SecretKeySelector `json:"tokenSecretSecretRef,omitempty" tf:"-"`

	// The source control type. Possible values are BitBucket, Dropbox, GitHub and OneDrive.
	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

// AppServiceSourceControlTokenSpec defines the desired state of AppServiceSourceControlToken
type AppServiceSourceControlTokenSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AppServiceSourceControlTokenParameters `json:"forProvider"`
}

// AppServiceSourceControlTokenStatus defines the observed state of AppServiceSourceControlToken.
type AppServiceSourceControlTokenStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AppServiceSourceControlTokenObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AppServiceSourceControlToken is the Schema for the AppServiceSourceControlTokens API. Manages an App Service source control token.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type AppServiceSourceControlToken struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AppServiceSourceControlTokenSpec   `json:"spec"`
	Status            AppServiceSourceControlTokenStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AppServiceSourceControlTokenList contains a list of AppServiceSourceControlTokens
type AppServiceSourceControlTokenList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AppServiceSourceControlToken `json:"items"`
}

// Repository type metadata.
var (
	AppServiceSourceControlToken_Kind             = "AppServiceSourceControlToken"
	AppServiceSourceControlToken_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AppServiceSourceControlToken_Kind}.String()
	AppServiceSourceControlToken_KindAPIVersion   = AppServiceSourceControlToken_Kind + "." + CRDGroupVersion.String()
	AppServiceSourceControlToken_GroupVersionKind = CRDGroupVersion.WithKind(AppServiceSourceControlToken_Kind)
)

func init() {
	SchemeBuilder.Register(&AppServiceSourceControlToken{}, &AppServiceSourceControlTokenList{})
}
