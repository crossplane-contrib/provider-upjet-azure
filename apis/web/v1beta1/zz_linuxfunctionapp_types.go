/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AppServiceLogsObservation struct {
}

type AppServiceLogsParameters struct {

	// The amount of disk space to use for logs. Valid values are between 25 and 100. Defaults to 35.
	// The amount of disk space to use for logs. Valid values are between `25` and `100`.
	// +kubebuilder:validation:Optional
	DiskQuotaMb *float64 `json:"diskQuotaMb,omitempty" tf:"disk_quota_mb,omitempty"`

	// After how many days backups should be deleted. Defaults to 30.
	// The retention period for logs in days. Valid values are between `0` and `99999`. Defaults to `0` (never delete).
	// +kubebuilder:validation:Optional
	RetentionPeriodDays *float64 `json:"retentionPeriodDays,omitempty" tf:"retention_period_days,omitempty"`
}

type ApplicationStackObservation struct {
}

type ApplicationStackParameters struct {

	// One or more docker blocks as defined below.
	// A docker block
	// +kubebuilder:validation:Optional
	Docker []DockerParameters `json:"docker,omitempty" tf:"docker,omitempty"`

	// The version of .NET to use. Possible values include 3.1, 6.0 and 7.0.
	// The version of .Net. Possible values are `3.1`, `6.0` and `7.0`
	// +kubebuilder:validation:Optional
	DotnetVersion *string `json:"dotnetVersion,omitempty" tf:"dotnet_version,omitempty"`

	// The Version of Java to use. Supported versions include 8, 11 & 17 (In-Preview).
	// The version of Java to use. Possible values are `8`, `11`, and `17`
	// +kubebuilder:validation:Optional
	JavaVersion *string `json:"javaVersion,omitempty" tf:"java_version,omitempty"`

	// The version of Node to run. Possible values include 12, 14, 16 and 18.
	// The version of Node to use. Possible values include `12`, and `14`
	// +kubebuilder:validation:Optional
	NodeVersion *string `json:"nodeVersion,omitempty" tf:"node_version,omitempty"`

	// The version of PowerShell Core to run. Possible values are 7, and 7.2.
	// The version of PowerShell Core to use. Possibles values are `7`, and `7.2`
	// +kubebuilder:validation:Optional
	PowershellCoreVersion *string `json:"powershellCoreVersion,omitempty" tf:"powershell_core_version,omitempty"`

	// The version of Python to run. Possible values are 3.10, 3.9, 3.8 and 3.7.
	// The version of Python to use. Possible values include `3.9`, `3.8`, and `3.7`.
	// +kubebuilder:validation:Optional
	PythonVersion *string `json:"pythonVersion,omitempty" tf:"python_version,omitempty"`

	// Should the Linux Function App use a custom runtime?
	// +kubebuilder:validation:Optional
	UseCustomRuntime *bool `json:"useCustomRuntime,omitempty" tf:"use_custom_runtime,omitempty"`

	// Should the DotNet process use an isolated runtime. Defaults to false.
	// Should the DotNet process use an isolated runtime. Defaults to `false`.
	// +kubebuilder:validation:Optional
	UseDotnetIsolatedRuntime *bool `json:"useDotnetIsolatedRuntime,omitempty" tf:"use_dotnet_isolated_runtime,omitempty"`
}

type BackupObservation struct {

	// A schedule block as defined below.
	// +kubebuilder:validation:Required
	Schedule []ScheduleObservation `json:"schedule,omitempty" tf:"schedule,omitempty"`
}

type BackupParameters struct {

	// Should this backup job be enabled? Defaults to true.
	// Should this backup job be enabled?
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The name which should be used for this Backup.
	// The name which should be used for this Backup.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// A schedule block as defined below.
	// +kubebuilder:validation:Required
	Schedule []ScheduleParameters `json:"schedule" tf:"schedule,omitempty"`

	// The SAS URL to the container.
	// The SAS URL to the container.
	// +kubebuilder:validation:Required
	StorageAccountURLSecretRef v1.SecretKeySelector `json:"storageAccountUrlSecretRef" tf:"-"`
}

type DockerObservation struct {
}

type DockerParameters struct {

	// The name of the Docker image to use.
	// The name of the Docker image to use.
	// +kubebuilder:validation:Required
	ImageName *string `json:"imageName" tf:"image_name,omitempty"`

	// The image tag of the image to use.
	// The image tag of the image to use.
	// +kubebuilder:validation:Required
	ImageTag *string `json:"imageTag" tf:"image_tag,omitempty"`

	// The password for the account to use to connect to the registry.
	// The password for the account to use to connect to the registry.
	// +kubebuilder:validation:Optional
	RegistryPasswordSecretRef *v1.SecretKeySelector `json:"registryPasswordSecretRef,omitempty" tf:"-"`

	// The URL of the docker registry.
	// The URL of the docker registry.
	// +kubebuilder:validation:Required
	RegistryURL *string `json:"registryUrl" tf:"registry_url,omitempty"`

	// The username to use for connections to the registry.
	// The username to use for connections to the registry.
	// +kubebuilder:validation:Optional
	RegistryUsernameSecretRef *v1.SecretKeySelector `json:"registryUsernameSecretRef,omitempty" tf:"-"`
}

type GithubObservation struct {
}

type GithubParameters struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The ID of the GitHub app used for login.
	// +kubebuilder:validation:Required
	ClientID *string `json:"clientId" tf:"client_id,omitempty"`

	// The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.
	// The Client Secret of the GitHub app used for GitHub Login. Cannot be specified with `client_secret_setting_name`.
	// +kubebuilder:validation:Optional
	ClientSecretSecretRef *v1.SecretKeySelector `json:"clientSecretSecretRef,omitempty" tf:"-"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret.
	// The app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.
	// +kubebuilder:validation:Optional
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
	// Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
	// +kubebuilder:validation:Optional
	OauthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type LinuxFunctionAppAuthSettingsActiveDirectoryObservation struct {
}

type LinuxFunctionAppAuthSettingsActiveDirectoryParameters struct {

	// Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
	// Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
	// +kubebuilder:validation:Optional
	AllowedAudiences []*string `json:"allowedAudiences,omitempty" tf:"allowed_audiences,omitempty"`

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The ID of the Client to use to authenticate with Azure Active Directory.
	// +kubebuilder:validation:Required
	ClientID *string `json:"clientId" tf:"client_id,omitempty"`

	// The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.
	// The Client Secret for the Client ID. Cannot be used with `client_secret_setting_name`.
	// +kubebuilder:validation:Optional
	ClientSecretSecretRef *v1.SecretKeySelector `json:"clientSecretSecretRef,omitempty" tf:"-"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret.
	// The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.
	// +kubebuilder:validation:Optional
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`
}

type LinuxFunctionAppAuthSettingsFacebookObservation struct {
}

type LinuxFunctionAppAuthSettingsFacebookParameters struct {

	// The App ID of the Facebook app used for login.
	// The App ID of the Facebook app used for login.
	// +kubebuilder:validation:Required
	AppID *string `json:"appId" tf:"app_id,omitempty"`

	// The App Secret of the Facebook app used for Facebook login. Cannot be specified with app_secret_setting_name.
	// The App Secret of the Facebook app used for Facebook Login. Cannot be specified with `app_secret_setting_name`.
	// +kubebuilder:validation:Optional
	AppSecretSecretRef *v1.SecretKeySelector `json:"appSecretSecretRef,omitempty" tf:"-"`

	// The app setting name that contains the app_secret value used for Facebook login. Cannot be specified with app_secret.
	// The app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.
	// +kubebuilder:validation:Optional
	AppSecretSettingName *string `json:"appSecretSettingName,omitempty" tf:"app_secret_setting_name,omitempty"`

	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
	// Specifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.
	// +kubebuilder:validation:Optional
	OauthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type LinuxFunctionAppAuthSettingsGoogleObservation struct {
}

type LinuxFunctionAppAuthSettingsGoogleParameters struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The OpenID Connect Client ID for the Google web application.
	// +kubebuilder:validation:Required
	ClientID *string `json:"clientId" tf:"client_id,omitempty"`

	// The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.
	// The client secret associated with the Google web application.  Cannot be specified with `client_secret_setting_name`.
	// +kubebuilder:validation:Optional
	ClientSecretSecretRef *v1.SecretKeySelector `json:"clientSecretSecretRef,omitempty" tf:"-"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret.
	// The app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.
	// +kubebuilder:validation:Optional
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, "openid", "profile", and "email" are used as default scopes.
	// +kubebuilder:validation:Optional
	OauthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type LinuxFunctionAppAuthSettingsMicrosoftObservation struct {
}

type LinuxFunctionAppAuthSettingsMicrosoftParameters struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// +kubebuilder:validation:Required
	ClientID *string `json:"clientId" tf:"client_id,omitempty"`

	// The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.
	// The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret_setting_name`.
	// +kubebuilder:validation:Optional
	ClientSecretSecretRef *v1.SecretKeySelector `json:"clientSecretSecretRef,omitempty" tf:"-"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret.
	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.
	// +kubebuilder:validation:Optional
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
	// The list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.
	// +kubebuilder:validation:Optional
	OauthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type LinuxFunctionAppAuthSettingsObservation struct {
}

type LinuxFunctionAppAuthSettingsParameters struct {

	// An active_directory block as defined above.
	// +kubebuilder:validation:Optional
	ActiveDirectory []LinuxFunctionAppAuthSettingsActiveDirectoryParameters `json:"activeDirectory,omitempty" tf:"active_directory,omitempty"`

	// Specifies a map of login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
	// Specifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
	// +kubebuilder:validation:Optional
	AdditionalLoginParameters map[string]*string `json:"additionalLoginParameters,omitempty" tf:"additional_login_parameters,omitempty"`

	// Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Linux Web App.
	// Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.
	// +kubebuilder:validation:Optional
	AllowedExternalRedirectUrls []*string `json:"allowedExternalRedirectUrls,omitempty" tf:"allowed_external_redirect_urls,omitempty"`

	// The default authentication provider to use when multiple providers are configured. Possible values include: AzureActiveDirectory, Facebook, Google, MicrosoftAccount, Twitter, Github
	// The default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.
	// +kubebuilder:validation:Optional
	DefaultProvider *string `json:"defaultProvider,omitempty" tf:"default_provider,omitempty"`

	// Should the Authentication / Authorization feature be enabled for the Linux Web App?
	// Should the Authentication / Authorization feature be enabled?
	// +kubebuilder:validation:Required
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// A facebook block as defined below.
	// +kubebuilder:validation:Optional
	Facebook []LinuxFunctionAppAuthSettingsFacebookParameters `json:"facebook,omitempty" tf:"facebook,omitempty"`

	// A github block as defined below.
	// +kubebuilder:validation:Optional
	Github []GithubParameters `json:"github,omitempty" tf:"github,omitempty"`

	// A google block as defined below.
	// +kubebuilder:validation:Optional
	Google []LinuxFunctionAppAuthSettingsGoogleParameters `json:"google,omitempty" tf:"google,omitempty"`

	// The OpenID Connect Issuer URI that represents the entity which issues access tokens for this Linux Web App.
	// The OpenID Connect Issuer URI that represents the entity which issues access tokens.
	// +kubebuilder:validation:Optional
	Issuer *string `json:"issuer,omitempty" tf:"issuer,omitempty"`

	// A microsoft block as defined below.
	// +kubebuilder:validation:Optional
	Microsoft []LinuxFunctionAppAuthSettingsMicrosoftParameters `json:"microsoft,omitempty" tf:"microsoft,omitempty"`

	// The RuntimeVersion of the Authentication / Authorization feature in use for the Linux Web App.
	// The RuntimeVersion of the Authentication / Authorization feature in use.
	// +kubebuilder:validation:Optional
	RuntimeVersion *string `json:"runtimeVersion,omitempty" tf:"runtime_version,omitempty"`

	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.
	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
	// +kubebuilder:validation:Optional
	TokenRefreshExtensionHours *float64 `json:"tokenRefreshExtensionHours,omitempty" tf:"token_refresh_extension_hours,omitempty"`

	// Should the Linux Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to false.
	// Should the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.
	// +kubebuilder:validation:Optional
	TokenStoreEnabled *bool `json:"tokenStoreEnabled,omitempty" tf:"token_store_enabled,omitempty"`

	// A twitter block as defined below.
	// +kubebuilder:validation:Optional
	Twitter []LinuxFunctionAppAuthSettingsTwitterParameters `json:"twitter,omitempty" tf:"twitter,omitempty"`

	// The action to take when an unauthenticated client attempts to access the app. Possible values include: RedirectToLoginPage, AllowAnonymous.
	// The action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.
	// +kubebuilder:validation:Optional
	UnauthenticatedClientAction *string `json:"unauthenticatedClientAction,omitempty" tf:"unauthenticated_client_action,omitempty"`
}

type LinuxFunctionAppAuthSettingsTwitterObservation struct {
}

type LinuxFunctionAppAuthSettingsTwitterParameters struct {

	// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
	// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
	// +kubebuilder:validation:Required
	ConsumerKey *string `json:"consumerKey" tf:"consumer_key,omitempty"`

	// The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with consumer_secret_setting_name.
	// The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret_setting_name`.
	// +kubebuilder:validation:Optional
	ConsumerSecretSecretRef *v1.SecretKeySelector `json:"consumerSecretSecretRef,omitempty" tf:"-"`

	// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with consumer_secret.
	// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.
	// +kubebuilder:validation:Optional
	ConsumerSecretSettingName *string `json:"consumerSecretSettingName,omitempty" tf:"consumer_secret_setting_name,omitempty"`
}

type LinuxFunctionAppConnectionStringObservation struct {
}

type LinuxFunctionAppConnectionStringParameters struct {

	// The name which should be used for this Connection.
	// The name which should be used for this Connection.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Type of database. Possible values include: MySQL, SQLServer, SQLAzure, Custom, NotificationHub, ServiceBus, EventHub, APIHub, DocDb, RedisCache, and PostgreSQL.
	// Type of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.
	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`

	// The connection string value.
	// The connection string value.
	// +kubebuilder:validation:Required
	ValueSecretRef v1.SecretKeySelector `json:"valueSecretRef" tf:"-"`
}

type LinuxFunctionAppIdentityObservation struct {

	// The Principal ID associated with this Managed Service Identity.
	PrincipalID *string `json:"principalId,omitempty" tf:"principal_id,omitempty"`

	// The Tenant ID associated with this Managed Service Identity.
	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`
}

type LinuxFunctionAppIdentityParameters struct {

	// A list of User Assigned Managed Identity IDs to be assigned to this Linux Function App.
	// +kubebuilder:validation:Optional
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// Specifies the type of Managed Service Identity that should be configured on this Linux Function App. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type LinuxFunctionAppObservation struct {

	// A backup block as defined below.
	// +kubebuilder:validation:Optional
	Backup []BackupObservation `json:"backup,omitempty" tf:"backup,omitempty"`

	// The default hostname of the Linux Function App.
	DefaultHostName *string `json:"defaultHostname,omitempty" tf:"default_hostname,omitempty"`

	// The ID of the Linux Function App.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A identity block as defined below.
	// +kubebuilder:validation:Optional
	Identity []LinuxFunctionAppIdentityObservation `json:"identity,omitempty" tf:"identity,omitempty"`

	// The Kind value for this Linux Function App.
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`

	// A list of outbound IP addresses. For example ["52.23.25.3", "52.143.43.12"]
	OutboundIPAddressList []*string `json:"outboundIpAddressList,omitempty" tf:"outbound_ip_address_list,omitempty"`

	// A comma separated list of outbound IP addresses as a string. For example 52.23.25.3,52.143.43.12.
	OutboundIPAddresses *string `json:"outboundIpAddresses,omitempty" tf:"outbound_ip_addresses,omitempty"`

	// A list of possible outbound IP addresses, not all of which are necessarily in use. This is a superset of outbound_ip_address_list. For example ["52.23.25.3", "52.143.43.12"].
	PossibleOutboundIPAddressList []*string `json:"possibleOutboundIpAddressList,omitempty" tf:"possible_outbound_ip_address_list,omitempty"`

	// A comma separated list of possible outbound IP addresses as a string. For example 52.23.25.3,52.143.43.12,52.143.43.17. This is a superset of outbound_ip_addresses. For example ["52.23.25.3", "52.143.43.12","52.143.43.17"].
	PossibleOutboundIPAddresses *string `json:"possibleOutboundIpAddresses,omitempty" tf:"possible_outbound_ip_addresses,omitempty"`

	// A site_config block as defined below.
	// +kubebuilder:validation:Required
	SiteConfig []LinuxFunctionAppSiteConfigObservation `json:"siteConfig,omitempty" tf:"site_config,omitempty"`

	// A site_credential block as defined below.
	SiteCredential []LinuxFunctionAppSiteCredentialObservation `json:"siteCredential,omitempty" tf:"site_credential,omitempty"`
}

type LinuxFunctionAppParameters struct {

	// A map of key-value pairs for App Settings and custom values.
	// A map of key-value pairs for [App Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.
	// +kubebuilder:validation:Optional
	AppSettings map[string]*string `json:"appSettings,omitempty" tf:"app_settings,omitempty"`

	// A auth_settings block as defined below.
	// +kubebuilder:validation:Optional
	AuthSettings []LinuxFunctionAppAuthSettingsParameters `json:"authSettings,omitempty" tf:"auth_settings,omitempty"`

	// A backup block as defined below.
	// +kubebuilder:validation:Optional
	Backup []BackupParameters `json:"backup,omitempty" tf:"backup,omitempty"`

	// Should built in logging be enabled. Configures AzureWebJobsDashboard app setting based on the configured storage setting. Defaults to true.
	// Should built in logging be enabled. Configures `AzureWebJobsDashboard` app setting based on the configured storage setting
	// +kubebuilder:validation:Optional
	BuiltinLoggingEnabled *bool `json:"builtinLoggingEnabled,omitempty" tf:"builtin_logging_enabled,omitempty"`

	// Should the function app use Client Certificates.
	// Should the function app use Client Certificates
	// +kubebuilder:validation:Optional
	ClientCertificateEnabled *bool `json:"clientCertificateEnabled,omitempty" tf:"client_certificate_enabled,omitempty"`

	// Paths to exclude when using client certificates, separated by ;
	// Paths to exclude when using client certificates, separated by ;
	// +kubebuilder:validation:Optional
	ClientCertificateExclusionPaths *string `json:"clientCertificateExclusionPaths,omitempty" tf:"client_certificate_exclusion_paths,omitempty"`

	// The mode of the Function App's client certificates requirement for incoming requests. Possible values are Required, Optional, and OptionalInteractiveUser.
	// The mode of the Function App's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`
	// +kubebuilder:validation:Optional
	ClientCertificateMode *string `json:"clientCertificateMode,omitempty" tf:"client_certificate_mode,omitempty"`

	// One or more connection_string blocks as defined below.
	// +kubebuilder:validation:Optional
	ConnectionString []LinuxFunctionAppConnectionStringParameters `json:"connectionString,omitempty" tf:"connection_string,omitempty"`

	// Should the settings for linking the Function App to storage be suppressed.
	// Force disable the content share settings.
	// +kubebuilder:validation:Optional
	ContentShareForceDisabled *bool `json:"contentShareForceDisabled,omitempty" tf:"content_share_force_disabled,omitempty"`

	// The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps under the consumption plan. Defaults to 0.
	// The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans.
	// +kubebuilder:validation:Optional
	DailyMemoryTimeQuota *float64 `json:"dailyMemoryTimeQuota,omitempty" tf:"daily_memory_time_quota,omitempty"`

	// Is the Function App enabled? Defaults to true.
	// Is the Linux Function App enabled.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The runtime version associated with the Function App. Defaults to ~4.
	// The runtime version associated with the Function App.
	// +kubebuilder:validation:Optional
	FunctionsExtensionVersion *string `json:"functionsExtensionVersion,omitempty" tf:"functions_extension_version,omitempty"`

	// Can the Function App only be accessed via HTTPS? Defaults to false.
	// Can the Function App only be accessed via HTTPS?
	// +kubebuilder:validation:Optional
	HTTPSOnly *bool `json:"httpsOnly,omitempty" tf:"https_only,omitempty"`

	// A identity block as defined below.
	// +kubebuilder:validation:Optional
	Identity []LinuxFunctionAppIdentityParameters `json:"identity,omitempty" tf:"identity,omitempty"`

	// The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the identity block. For more information see - Access vaults with a user-assigned identity
	// The User Assigned Identity to use for Key Vault access.
	// +kubebuilder:validation:Optional
	KeyVaultReferenceIdentityID *string `json:"keyVaultReferenceIdentityId,omitempty" tf:"key_vault_reference_identity_id,omitempty"`

	// The Azure Region where the Linux Function App should exist. Changing this forces a new Linux Function App to be created.
	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// The name which should be used for this Linux Function App. Changing this forces a new Linux Function App to be created. Limit the function name to 32 characters to avoid naming collisions. For more information about Function App naming rule and Host ID Collisions
	// Specifies the name of the Function App.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// The name of the Resource Group where the Linux Function App should exist. Changing this forces a new Linux Function App to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// The ID of the App Service Plan within which to create this Function App.
	// The ID of the App Service Plan within which to create this Function App
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/web/v1beta1.ServicePlan
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ServicePlanID *string `json:"servicePlanId,omitempty" tf:"service_plan_id,omitempty"`

	// Reference to a ServicePlan in web to populate servicePlanId.
	// +kubebuilder:validation:Optional
	ServicePlanIDRef *v1.Reference `json:"servicePlanIdRef,omitempty" tf:"-"`

	// Selector for a ServicePlan in web to populate servicePlanId.
	// +kubebuilder:validation:Optional
	ServicePlanIDSelector *v1.Selector `json:"servicePlanIdSelector,omitempty" tf:"-"`

	// A site_config block as defined below.
	// +kubebuilder:validation:Required
	SiteConfig []LinuxFunctionAppSiteConfigParameters `json:"siteConfig" tf:"site_config,omitempty"`

	// A sticky_settings block as defined below.
	// +kubebuilder:validation:Optional
	StickySettings []StickySettingsParameters `json:"stickySettings,omitempty" tf:"sticky_settings,omitempty"`

	// One or more storage_account blocks as defined below.
	// +kubebuilder:validation:Optional
	StorageAccount []StorageAccountParameters `json:"storageAccount,omitempty" tf:"storage_account,omitempty"`

	// The access key which will be used to access the backend storage account for the Function App. Conflicts with storage_uses_managed_identity.
	// The access key which will be used to access the storage account for the Function App.
	// +kubebuilder:validation:Optional
	StorageAccountAccessKeySecretRef *v1.SecretKeySelector `json:"storageAccountAccessKeySecretRef,omitempty" tf:"-"`

	// The backend storage account name which will be used by this Function App.
	// The backend storage account name which will be used by this Function App.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Account
	// +kubebuilder:validation:Optional
	StorageAccountName *string `json:"storageAccountName,omitempty" tf:"storage_account_name,omitempty"`

	// Reference to a Account in storage to populate storageAccountName.
	// +kubebuilder:validation:Optional
	StorageAccountNameRef *v1.Reference `json:"storageAccountNameRef,omitempty" tf:"-"`

	// Selector for a Account in storage to populate storageAccountName.
	// +kubebuilder:validation:Optional
	StorageAccountNameSelector *v1.Selector `json:"storageAccountNameSelector,omitempty" tf:"-"`

	// The Key Vault Secret ID, optionally including version, that contains the Connection String to connect to the storage account for this Function App.
	// The Key Vault Secret ID, including version, that contains the Connection String to connect to the storage account for this Function App.
	// +kubebuilder:validation:Optional
	StorageKeyVaultSecretID *string `json:"storageKeyVaultSecretId,omitempty" tf:"storage_key_vault_secret_id,omitempty"`

	// Should the Function App use Managed Identity to access the storage account. Conflicts with storage_account_access_key.
	// Should the Function App use its Managed Identity to access storage?
	// +kubebuilder:validation:Optional
	StorageUsesManagedIdentity *bool `json:"storageUsesManagedIdentity,omitempty" tf:"storage_uses_managed_identity,omitempty"`

	// A mapping of tags which should be assigned to the Linux Function App.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The subnet id which will be used by this Function App for regional virtual network integration.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.Subnet
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetID *string `json:"virtualNetworkSubnetId,omitempty" tf:"virtual_network_subnet_id,omitempty"`

	// Reference to a Subnet in network to populate virtualNetworkSubnetId.
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetIDRef *v1.Reference `json:"virtualNetworkSubnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in network to populate virtualNetworkSubnetId.
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetIDSelector *v1.Selector `json:"virtualNetworkSubnetIdSelector,omitempty" tf:"-"`
}

type LinuxFunctionAppSiteConfigCorsObservation struct {
}

type LinuxFunctionAppSiteConfigCorsParameters struct {

	// Specifies a list of origins that should be allowed to make cross-origin calls.
	// Specifies a list of origins that should be allowed to make cross-origin calls.
	// +kubebuilder:validation:Required
	AllowedOrigins []*string `json:"allowedOrigins" tf:"allowed_origins,omitempty"`

	// Are credentials allowed in CORS requests? Defaults to false.
	// Are credentials allowed in CORS requests? Defaults to `false`.
	// +kubebuilder:validation:Optional
	SupportCredentials *bool `json:"supportCredentials,omitempty" tf:"support_credentials,omitempty"`
}

type LinuxFunctionAppSiteConfigIPRestrictionObservation struct {
}

type LinuxFunctionAppSiteConfigIPRestrictionParameters struct {

	// The action to take. Possible values are Allow or Deny.
	// +kubebuilder:validation:Optional
	Action *string `json:"action,omitempty" tf:"action"`

	// A headers block as defined above.
	// +kubebuilder:validation:Optional
	Headers []SiteConfigIPRestrictionHeadersParameters `json:"headers,omitempty" tf:"headers"`

	// The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32
	// +kubebuilder:validation:Optional
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address"`

	// The name which should be used for this Storage Account.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name"`

	// The priority value of this ip_restriction. Defaults to 65000.
	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority,omitempty" tf:"priority"`

	// The Service Tag used for this IP Restriction.
	// +kubebuilder:validation:Optional
	ServiceTag *string `json:"serviceTag,omitempty" tf:"service_tag"`

	// The subnet id which will be used by this Function App for regional virtual network integration.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.Subnet
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetID *string `json:"virtualNetworkSubnetId,omitempty" tf:"virtual_network_subnet_id"`

	// Reference to a Subnet in network to populate virtualNetworkSubnetId.
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetIDRef *v1.Reference `json:"virtualNetworkSubnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in network to populate virtualNetworkSubnetId.
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetIDSelector *v1.Selector `json:"virtualNetworkSubnetIdSelector,omitempty" tf:"-"`
}

type LinuxFunctionAppSiteConfigObservation struct {

	// Is the Function App enabled? Defaults to true.
	// Is detailed error logging enabled
	DetailedErrorLoggingEnabled *bool `json:"detailedErrorLoggingEnabled,omitempty" tf:"detailed_error_logging_enabled,omitempty"`

	// The Linux FX Version
	LinuxFxVersion *string `json:"linuxFxVersion,omitempty" tf:"linux_fx_version,omitempty"`

	// The SCM Type in use by the Linux Function App.
	ScmType *string `json:"scmType,omitempty" tf:"scm_type,omitempty"`
}

type LinuxFunctionAppSiteConfigParameters struct {

	// The URL of the API definition that describes this Linux Function App.
	// The URL of the API definition that describes this Linux Function App.
	// +kubebuilder:validation:Optional
	APIDefinitionURL *string `json:"apiDefinitionUrl,omitempty" tf:"api_definition_url,omitempty"`

	// The ID of the API Management API for this Linux Function App.
	// The ID of the API Management API for this Linux Function App.
	// +kubebuilder:validation:Optional
	APIManagementAPIID *string `json:"apiManagementApiId,omitempty" tf:"api_management_api_id,omitempty"`

	// If this Linux Web App is Always On enabled. Defaults to false.
	// If this Linux Web App is Always On enabled. Defaults to `false`.
	// +kubebuilder:validation:Optional
	AlwaysOn *bool `json:"alwaysOn,omitempty" tf:"always_on,omitempty"`

	// The App command line to launch.
	// The program and any arguments used to launch this app via the command line. (Example `node myapp.js`).
	// +kubebuilder:validation:Optional
	AppCommandLine *string `json:"appCommandLine,omitempty" tf:"app_command_line,omitempty"`

	// The number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan.
	// The number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan.
	// +kubebuilder:validation:Optional
	AppScaleLimit *float64 `json:"appScaleLimit,omitempty" tf:"app_scale_limit,omitempty"`

	// An app_service_logs block as defined above.
	// +kubebuilder:validation:Optional
	AppServiceLogs []AppServiceLogsParameters `json:"appServiceLogs,omitempty" tf:"app_service_logs,omitempty"`

	// The Connection String for linking the Linux Function App to Application Insights.
	// The Connection String for linking the Linux Function App to Application Insights.
	// +kubebuilder:validation:Optional
	ApplicationInsightsConnectionStringSecretRef *v1.SecretKeySelector `json:"applicationInsightsConnectionStringSecretRef,omitempty" tf:"-"`

	// The Instrumentation Key for connecting the Linux Function App to Application Insights.
	// The Instrumentation Key for connecting the Linux Function App to Application Insights.
	// +kubebuilder:validation:Optional
	ApplicationInsightsKeySecretRef *v1.SecretKeySelector `json:"applicationInsightsKeySecretRef,omitempty" tf:"-"`

	// An application_stack block as defined above.
	// +kubebuilder:validation:Optional
	ApplicationStack []ApplicationStackParameters `json:"applicationStack,omitempty" tf:"application_stack,omitempty"`

	// The Client ID of the Managed Service Identity to use for connections to the Azure Container Registry.
	// The Client ID of the Managed Service Identity to use for connections to the Azure Container Registry.
	// +kubebuilder:validation:Optional
	ContainerRegistryManagedIdentityClientID *string `json:"containerRegistryManagedIdentityClientId,omitempty" tf:"container_registry_managed_identity_client_id,omitempty"`

	// Should connections for Azure Container Registry use Managed Identity.
	// Should connections for Azure Container Registry use Managed Identity.
	// +kubebuilder:validation:Optional
	ContainerRegistryUseManagedIdentity *bool `json:"containerRegistryUseManagedIdentity,omitempty" tf:"container_registry_use_managed_identity,omitempty"`

	// A cors block as defined above.
	// +kubebuilder:validation:Optional
	Cors []LinuxFunctionAppSiteConfigCorsParameters `json:"cors,omitempty" tf:"cors,omitempty"`

	// Specifies a list of Default Documents for the Linux Web App.
	// Specifies a list of Default Documents for the Linux Web App.
	// +kubebuilder:validation:Optional
	DefaultDocuments []*string `json:"defaultDocuments,omitempty" tf:"default_documents,omitempty"`

	// The number of minimum instances for this Linux Function App. Only affects apps on Elastic Premium plans.
	// The number of minimum instances for this Linux Function App. Only affects apps on Elastic Premium plans.
	// +kubebuilder:validation:Optional
	ElasticInstanceMinimum *float64 `json:"elasticInstanceMinimum,omitempty" tf:"elastic_instance_minimum,omitempty"`

	// State of FTP / FTPS service for this function app. Possible values include: AllAllowed, FtpsOnly and Disabled. Defaults to Disabled.
	// State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `Disabled`.
	// +kubebuilder:validation:Optional
	FtpsState *string `json:"ftpsState,omitempty" tf:"ftps_state,omitempty"`

	// The amount of time in minutes that a node can be unhealthy before being removed from the load balancer. Possible values are between 2 and 10. Only valid in conjunction with health_check_path.
	// The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Defaults to `10`. Only valid in conjunction with `health_check_path`
	// +kubebuilder:validation:Optional
	HealthCheckEvictionTimeInMin *float64 `json:"healthCheckEvictionTimeInMin,omitempty" tf:"health_check_eviction_time_in_min,omitempty"`

	// The path to be checked for this function app health.
	// The path to be checked for this function app health.
	// +kubebuilder:validation:Optional
	HealthCheckPath *string `json:"healthCheckPath,omitempty" tf:"health_check_path,omitempty"`

	// Specifies if the HTTP2 protocol should be enabled. Defaults to false.
	// Specifies if the http2 protocol should be enabled. Defaults to `false`.
	// +kubebuilder:validation:Optional
	Http2Enabled *bool `json:"http2Enabled,omitempty" tf:"http2_enabled,omitempty"`

	// One or more ip_restriction blocks as defined above.
	// +kubebuilder:validation:Optional
	IPRestriction []LinuxFunctionAppSiteConfigIPRestrictionParameters `json:"ipRestriction,omitempty" tf:"ip_restriction,omitempty"`

	// The Site load balancing mode. Possible values include: WeightedRoundRobin, LeastRequests, LeastResponseTime, WeightedTotalTraffic, RequestHash, PerSiteRoundRobin. Defaults to LeastRequests if omitted.
	// The Site load balancing mode. Possible values include: `WeightedRoundRobin`, `LeastRequests`, `LeastResponseTime`, `WeightedTotalTraffic`, `RequestHash`, `PerSiteRoundRobin`. Defaults to `LeastRequests` if omitted.
	// +kubebuilder:validation:Optional
	LoadBalancingMode *string `json:"loadBalancingMode,omitempty" tf:"load_balancing_mode,omitempty"`

	// Managed pipeline mode. Possible values include: Integrated, Classic. Defaults to Integrated.
	// The Managed Pipeline mode. Possible values include: `Integrated`, `Classic`. Defaults to `Integrated`.
	// +kubebuilder:validation:Optional
	ManagedPipelineMode *string `json:"managedPipelineMode,omitempty" tf:"managed_pipeline_mode,omitempty"`

	// The configures the minimum version of TLS required for SSL requests. Possible values include: 1.0, 1.1, and 1.2. Defaults to 1.2.
	// The configures the minimum version of TLS required for SSL requests. Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
	// +kubebuilder:validation:Optional
	MinimumTLSVersion *string `json:"minimumTlsVersion,omitempty" tf:"minimum_tls_version,omitempty"`

	// The number of pre-warmed instances for this function app. Only affects apps on an Elastic Premium plan.
	// The number of pre-warmed instances for this function app. Only affects apps on an Elastic Premium plan.
	// +kubebuilder:validation:Optional
	PreWarmedInstanceCount *float64 `json:"preWarmedInstanceCount,omitempty" tf:"pre_warmed_instance_count,omitempty"`

	// Should Remote Debugging be enabled. Defaults to false.
	// Should Remote Debugging be enabled. Defaults to `false`.
	// +kubebuilder:validation:Optional
	RemoteDebuggingEnabled *bool `json:"remoteDebuggingEnabled,omitempty" tf:"remote_debugging_enabled,omitempty"`

	// The Remote Debugging Version. Possible values include VS2017, VS2019, and VS2022.
	// The Remote Debugging Version. Possible values include `VS2017`, `VS2019`, and `VS2022“
	// +kubebuilder:validation:Optional
	RemoteDebuggingVersion *string `json:"remoteDebuggingVersion,omitempty" tf:"remote_debugging_version,omitempty"`

	// Should Scale Monitoring of the Functions Runtime be enabled?
	// Should Functions Runtime Scale Monitoring be enabled.
	// +kubebuilder:validation:Optional
	RuntimeScaleMonitoringEnabled *bool `json:"runtimeScaleMonitoringEnabled,omitempty" tf:"runtime_scale_monitoring_enabled,omitempty"`

	// One or more scm_ip_restriction blocks as defined above.
	// +kubebuilder:validation:Optional
	ScmIPRestriction []LinuxFunctionAppSiteConfigScmIPRestrictionParameters `json:"scmIpRestriction,omitempty" tf:"scm_ip_restriction,omitempty"`

	// Configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: 1.0, 1.1, and 1.2. Defaults to 1.2.
	// Configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
	// +kubebuilder:validation:Optional
	ScmMinimumTLSVersion *string `json:"scmMinimumTlsVersion,omitempty" tf:"scm_minimum_tls_version,omitempty"`

	// Should the Linux Function App ip_restriction configuration be used for the SCM also.
	// Should the Linux Function App `ip_restriction` configuration be used for the SCM also.
	// +kubebuilder:validation:Optional
	ScmUseMainIPRestriction *bool `json:"scmUseMainIpRestriction,omitempty" tf:"scm_use_main_ip_restriction,omitempty"`

	// Should the Linux Web App use a 32-bit worker process. Defaults to true.
	// Should the Linux Web App use a 32-bit worker.
	// +kubebuilder:validation:Optional
	Use32BitWorker *bool `json:"use32BitWorker,omitempty" tf:"use_32_bit_worker,omitempty"`

	// Should all outbound traffic to have NAT Gateways, Network Security Groups and User Defined Routes applied? Defaults to false.
	// Should all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied? Defaults to `false`.
	// +kubebuilder:validation:Optional
	VnetRouteAllEnabled *bool `json:"vnetRouteAllEnabled,omitempty" tf:"vnet_route_all_enabled,omitempty"`

	// Should Web Sockets be enabled. Defaults to false.
	// Should Web Sockets be enabled. Defaults to `false`.
	// +kubebuilder:validation:Optional
	WebsocketsEnabled *bool `json:"websocketsEnabled,omitempty" tf:"websockets_enabled,omitempty"`

	// The number of Workers for this Linux Function App.
	// The number of Workers for this Linux Function App.
	// +kubebuilder:validation:Optional
	WorkerCount *float64 `json:"workerCount,omitempty" tf:"worker_count,omitempty"`
}

type LinuxFunctionAppSiteConfigScmIPRestrictionHeadersObservation struct {
}

type LinuxFunctionAppSiteConfigScmIPRestrictionHeadersParameters struct {

	// Specifies a list of Azure Front Door IDs.
	// +kubebuilder:validation:Optional
	XAzureFdid []*string `json:"xAzureFdid,omitempty" tf:"x_azure_fdid"`

	// Specifies if a Front Door Health Probe should be expected. The only possible value is 1.
	// +kubebuilder:validation:Optional
	XFdHealthProbe []*string `json:"xFdHealthProbe,omitempty" tf:"x_fd_health_probe"`

	// Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.
	// +kubebuilder:validation:Optional
	XForwardedFor []*string `json:"xForwardedFor,omitempty" tf:"x_forwarded_for"`

	// Specifies a list of Hosts for which matching should be applied.
	// +kubebuilder:validation:Optional
	XForwardedHost []*string `json:"xForwardedHost,omitempty" tf:"x_forwarded_host"`
}

type LinuxFunctionAppSiteConfigScmIPRestrictionObservation struct {
}

type LinuxFunctionAppSiteConfigScmIPRestrictionParameters struct {

	// The action to take. Possible values are Allow or Deny.
	// +kubebuilder:validation:Optional
	Action *string `json:"action,omitempty" tf:"action"`

	// A headers block as defined above.
	// +kubebuilder:validation:Optional
	Headers []LinuxFunctionAppSiteConfigScmIPRestrictionHeadersParameters `json:"headers,omitempty" tf:"headers"`

	// The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32
	// +kubebuilder:validation:Optional
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address"`

	// The name which should be used for this Storage Account.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name"`

	// The priority value of this ip_restriction. Defaults to 65000.
	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority,omitempty" tf:"priority"`

	// The Service Tag used for this IP Restriction.
	// +kubebuilder:validation:Optional
	ServiceTag *string `json:"serviceTag,omitempty" tf:"service_tag"`

	// The subnet id which will be used by this Function App for regional virtual network integration.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.Subnet
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetID *string `json:"virtualNetworkSubnetId,omitempty" tf:"virtual_network_subnet_id"`

	// Reference to a Subnet in network to populate virtualNetworkSubnetId.
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetIDRef *v1.Reference `json:"virtualNetworkSubnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in network to populate virtualNetworkSubnetId.
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetIDSelector *v1.Selector `json:"virtualNetworkSubnetIdSelector,omitempty" tf:"-"`
}

type LinuxFunctionAppSiteCredentialObservation struct {

	// The Site Credentials Username used for publishing.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The Site Credentials Password used for publishing.
	Password *string `json:"password,omitempty" tf:"password,omitempty"`
}

type LinuxFunctionAppSiteCredentialParameters struct {
}

type ScheduleObservation struct {

	// The time the backup was last attempted.
	LastExecutionTime *string `json:"lastExecutionTime,omitempty" tf:"last_execution_time,omitempty"`
}

type ScheduleParameters struct {

	// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and frequency_unit should be set to Day).
	// How often the backup should be executed (e.g. for weekly backup, this should be set to `7` and `frequency_unit` should be set to `Day`).
	// +kubebuilder:validation:Required
	FrequencyInterval *float64 `json:"frequencyInterval" tf:"frequency_interval,omitempty"`

	// The unit of time for how often the backup should take place. Possible values include: Day and Hour.
	// The unit of time for how often the backup should take place. Possible values include: `Day` and `Hour`.
	// +kubebuilder:validation:Required
	FrequencyUnit *string `json:"frequencyUnit" tf:"frequency_unit,omitempty"`

	// Should the service keep at least one backup, regardless of age of backup. Defaults to false.
	// Should the service keep at least one backup, regardless of age of backup. Defaults to `false`.
	// +kubebuilder:validation:Optional
	KeepAtLeastOneBackup *bool `json:"keepAtLeastOneBackup,omitempty" tf:"keep_at_least_one_backup,omitempty"`

	// After how many days backups should be deleted. Defaults to 30.
	// After how many days backups should be deleted.
	// +kubebuilder:validation:Optional
	RetentionPeriodDays *float64 `json:"retentionPeriodDays,omitempty" tf:"retention_period_days,omitempty"`

	// When the schedule should start working in RFC-3339 format.
	// When the schedule should start working in RFC-3339 format.
	// +kubebuilder:validation:Optional
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`
}

type SiteConfigIPRestrictionHeadersObservation struct {
}

type SiteConfigIPRestrictionHeadersParameters struct {

	// Specifies a list of Azure Front Door IDs.
	// +kubebuilder:validation:Optional
	XAzureFdid []*string `json:"xAzureFdid,omitempty" tf:"x_azure_fdid"`

	// Specifies if a Front Door Health Probe should be expected. The only possible value is 1.
	// +kubebuilder:validation:Optional
	XFdHealthProbe []*string `json:"xFdHealthProbe,omitempty" tf:"x_fd_health_probe"`

	// Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.
	// +kubebuilder:validation:Optional
	XForwardedFor []*string `json:"xForwardedFor,omitempty" tf:"x_forwarded_for"`

	// Specifies a list of Hosts for which matching should be applied.
	// +kubebuilder:validation:Optional
	XForwardedHost []*string `json:"xForwardedHost,omitempty" tf:"x_forwarded_host"`
}

type StickySettingsObservation struct {
}

type StickySettingsParameters struct {

	// A list of app_setting names that the Linux Function App will not swap between Slots when a swap operation is triggered.
	// +kubebuilder:validation:Optional
	AppSettingNames []*string `json:"appSettingNames,omitempty" tf:"app_setting_names,omitempty"`

	// A list of connection_string names that the Linux Function App will not swap between Slots when a swap operation is triggered.
	// +kubebuilder:validation:Optional
	ConnectionStringNames []*string `json:"connectionStringNames,omitempty" tf:"connection_string_names,omitempty"`
}

type StorageAccountObservation struct {
}

type StorageAccountParameters struct {

	// The Access key for the storage account.
	// +kubebuilder:validation:Required
	AccessKeySecretRef v1.SecretKeySelector `json:"accessKeySecretRef" tf:"-"`

	// The Name of the Storage Account.
	// +kubebuilder:validation:Required
	AccountName *string `json:"accountName" tf:"account_name,omitempty"`

	// The path at which to mount the storage share.
	// +kubebuilder:validation:Optional
	MountPath *string `json:"mountPath,omitempty" tf:"mount_path,omitempty"`

	// The name which should be used for this Storage Account.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// The Name of the File Share or Container Name for Blob storage.
	// +kubebuilder:validation:Required
	ShareName *string `json:"shareName" tf:"share_name,omitempty"`

	// The Azure Storage Type. Possible values include AzureFiles and AzureBlob.
	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

// LinuxFunctionAppSpec defines the desired state of LinuxFunctionApp
type LinuxFunctionAppSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     LinuxFunctionAppParameters `json:"forProvider"`
}

// LinuxFunctionAppStatus defines the observed state of LinuxFunctionApp.
type LinuxFunctionAppStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        LinuxFunctionAppObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// LinuxFunctionApp is the Schema for the LinuxFunctionApps API. Manages a Linux Function App.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type LinuxFunctionApp struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LinuxFunctionAppSpec   `json:"spec"`
	Status            LinuxFunctionAppStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LinuxFunctionAppList contains a list of LinuxFunctionApps
type LinuxFunctionAppList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LinuxFunctionApp `json:"items"`
}

// Repository type metadata.
var (
	LinuxFunctionApp_Kind             = "LinuxFunctionApp"
	LinuxFunctionApp_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: LinuxFunctionApp_Kind}.String()
	LinuxFunctionApp_KindAPIVersion   = LinuxFunctionApp_Kind + "." + CRDGroupVersion.String()
	LinuxFunctionApp_GroupVersionKind = CRDGroupVersion.WithKind(LinuxFunctionApp_Kind)
)

func init() {
	SchemeBuilder.Register(&LinuxFunctionApp{}, &LinuxFunctionAppList{})
}
