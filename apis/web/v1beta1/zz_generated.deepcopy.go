//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionCustomActionInitParameters) DeepCopyInto(out *ActionCustomActionInitParameters) {
	*out = *in
	if in.Executable != nil {
		in, out := &in.Executable, &out.Executable
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionCustomActionInitParameters.
func (in *ActionCustomActionInitParameters) DeepCopy() *ActionCustomActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionCustomActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionCustomActionObservation) DeepCopyInto(out *ActionCustomActionObservation) {
	*out = *in
	if in.Executable != nil {
		in, out := &in.Executable, &out.Executable
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionCustomActionObservation.
func (in *ActionCustomActionObservation) DeepCopy() *ActionCustomActionObservation {
	if in == nil {
		return nil
	}
	out := new(ActionCustomActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionCustomActionParameters) DeepCopyInto(out *ActionCustomActionParameters) {
	*out = *in
	if in.Executable != nil {
		in, out := &in.Executable, &out.Executable
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionCustomActionParameters.
func (in *ActionCustomActionParameters) DeepCopy() *ActionCustomActionParameters {
	if in == nil {
		return nil
	}
	out := new(ActionCustomActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionInitParameters) DeepCopyInto(out *ActionInitParameters) {
	*out = *in
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.MinimumProcessExecutionTime != nil {
		in, out := &in.MinimumProcessExecutionTime, &out.MinimumProcessExecutionTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionInitParameters.
func (in *ActionInitParameters) DeepCopy() *ActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionObservation) DeepCopyInto(out *ActionObservation) {
	*out = *in
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.MinimumProcessExecutionTime != nil {
		in, out := &in.MinimumProcessExecutionTime, &out.MinimumProcessExecutionTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionObservation.
func (in *ActionObservation) DeepCopy() *ActionObservation {
	if in == nil {
		return nil
	}
	out := new(ActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionParameters) DeepCopyInto(out *ActionParameters) {
	*out = *in
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.MinimumProcessExecutionTime != nil {
		in, out := &in.MinimumProcessExecutionTime, &out.MinimumProcessExecutionTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionParameters.
func (in *ActionParameters) DeepCopy() *ActionParameters {
	if in == nil {
		return nil
	}
	out := new(ActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectoryInitParameters) DeepCopyInto(out *ActiveDirectoryInitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectoryInitParameters.
func (in *ActiveDirectoryInitParameters) DeepCopy() *ActiveDirectoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectoryObservation) DeepCopyInto(out *ActiveDirectoryObservation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectoryObservation.
func (in *ActiveDirectoryObservation) DeepCopy() *ActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectoryParameters) DeepCopyInto(out *ActiveDirectoryParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectoryParameters.
func (in *ActiveDirectoryParameters) DeepCopy() *ActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectoryV2InitParameters) DeepCopyInto(out *ActiveDirectoryV2InitParameters) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectoryV2InitParameters.
func (in *ActiveDirectoryV2InitParameters) DeepCopy() *ActiveDirectoryV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectoryV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectoryV2Observation) DeepCopyInto(out *ActiveDirectoryV2Observation) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectoryV2Observation.
func (in *ActiveDirectoryV2Observation) DeepCopy() *ActiveDirectoryV2Observation {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectoryV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectoryV2Parameters) DeepCopyInto(out *ActiveDirectoryV2Parameters) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectoryV2Parameters.
func (in *ActiveDirectoryV2Parameters) DeepCopy() *ActiveDirectoryV2Parameters {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectoryV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppActiveSlot) DeepCopyInto(out *AppActiveSlot) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppActiveSlot.
func (in *AppActiveSlot) DeepCopy() *AppActiveSlot {
	if in == nil {
		return nil
	}
	out := new(AppActiveSlot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppActiveSlot) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppActiveSlotInitParameters) DeepCopyInto(out *AppActiveSlotInitParameters) {
	*out = *in
	if in.OverwriteNetworkConfig != nil {
		in, out := &in.OverwriteNetworkConfig, &out.OverwriteNetworkConfig
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppActiveSlotInitParameters.
func (in *AppActiveSlotInitParameters) DeepCopy() *AppActiveSlotInitParameters {
	if in == nil {
		return nil
	}
	out := new(AppActiveSlotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppActiveSlotList) DeepCopyInto(out *AppActiveSlotList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AppActiveSlot, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppActiveSlotList.
func (in *AppActiveSlotList) DeepCopy() *AppActiveSlotList {
	if in == nil {
		return nil
	}
	out := new(AppActiveSlotList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppActiveSlotList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppActiveSlotObservation) DeepCopyInto(out *AppActiveSlotObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LastSuccessfulSwap != nil {
		in, out := &in.LastSuccessfulSwap, &out.LastSuccessfulSwap
		*out = new(string)
		**out = **in
	}
	if in.OverwriteNetworkConfig != nil {
		in, out := &in.OverwriteNetworkConfig, &out.OverwriteNetworkConfig
		*out = new(bool)
		**out = **in
	}
	if in.SlotID != nil {
		in, out := &in.SlotID, &out.SlotID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppActiveSlotObservation.
func (in *AppActiveSlotObservation) DeepCopy() *AppActiveSlotObservation {
	if in == nil {
		return nil
	}
	out := new(AppActiveSlotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppActiveSlotParameters) DeepCopyInto(out *AppActiveSlotParameters) {
	*out = *in
	if in.OverwriteNetworkConfig != nil {
		in, out := &in.OverwriteNetworkConfig, &out.OverwriteNetworkConfig
		*out = new(bool)
		**out = **in
	}
	if in.SlotID != nil {
		in, out := &in.SlotID, &out.SlotID
		*out = new(string)
		**out = **in
	}
	if in.SlotIDRef != nil {
		in, out := &in.SlotIDRef, &out.SlotIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SlotIDSelector != nil {
		in, out := &in.SlotIDSelector, &out.SlotIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppActiveSlotParameters.
func (in *AppActiveSlotParameters) DeepCopy() *AppActiveSlotParameters {
	if in == nil {
		return nil
	}
	out := new(AppActiveSlotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppActiveSlotSpec) DeepCopyInto(out *AppActiveSlotSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppActiveSlotSpec.
func (in *AppActiveSlotSpec) DeepCopy() *AppActiveSlotSpec {
	if in == nil {
		return nil
	}
	out := new(AppActiveSlotSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppActiveSlotStatus) DeepCopyInto(out *AppActiveSlotStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppActiveSlotStatus.
func (in *AppActiveSlotStatus) DeepCopy() *AppActiveSlotStatus {
	if in == nil {
		return nil
	}
	out := new(AppActiveSlotStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppHybridConnection) DeepCopyInto(out *AppHybridConnection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppHybridConnection.
func (in *AppHybridConnection) DeepCopy() *AppHybridConnection {
	if in == nil {
		return nil
	}
	out := new(AppHybridConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppHybridConnection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppHybridConnectionInitParameters) DeepCopyInto(out *AppHybridConnectionInitParameters) {
	*out = *in
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SendKeyName != nil {
		in, out := &in.SendKeyName, &out.SendKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppHybridConnectionInitParameters.
func (in *AppHybridConnectionInitParameters) DeepCopy() *AppHybridConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(AppHybridConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppHybridConnectionList) DeepCopyInto(out *AppHybridConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AppHybridConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppHybridConnectionList.
func (in *AppHybridConnectionList) DeepCopy() *AppHybridConnectionList {
	if in == nil {
		return nil
	}
	out := new(AppHybridConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppHybridConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppHybridConnectionObservation) DeepCopyInto(out *AppHybridConnectionObservation) {
	*out = *in
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NamespaceName != nil {
		in, out := &in.NamespaceName, &out.NamespaceName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.RelayID != nil {
		in, out := &in.RelayID, &out.RelayID
		*out = new(string)
		**out = **in
	}
	if in.RelayName != nil {
		in, out := &in.RelayName, &out.RelayName
		*out = new(string)
		**out = **in
	}
	if in.SendKeyName != nil {
		in, out := &in.SendKeyName, &out.SendKeyName
		*out = new(string)
		**out = **in
	}
	if in.ServiceBusNamespace != nil {
		in, out := &in.ServiceBusNamespace, &out.ServiceBusNamespace
		*out = new(string)
		**out = **in
	}
	if in.ServiceBusSuffix != nil {
		in, out := &in.ServiceBusSuffix, &out.ServiceBusSuffix
		*out = new(string)
		**out = **in
	}
	if in.WebAppID != nil {
		in, out := &in.WebAppID, &out.WebAppID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppHybridConnectionObservation.
func (in *AppHybridConnectionObservation) DeepCopy() *AppHybridConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(AppHybridConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppHybridConnectionParameters) DeepCopyInto(out *AppHybridConnectionParameters) {
	*out = *in
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.RelayID != nil {
		in, out := &in.RelayID, &out.RelayID
		*out = new(string)
		**out = **in
	}
	if in.RelayIDRef != nil {
		in, out := &in.RelayIDRef, &out.RelayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RelayIDSelector != nil {
		in, out := &in.RelayIDSelector, &out.RelayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SendKeyName != nil {
		in, out := &in.SendKeyName, &out.SendKeyName
		*out = new(string)
		**out = **in
	}
	if in.WebAppID != nil {
		in, out := &in.WebAppID, &out.WebAppID
		*out = new(string)
		**out = **in
	}
	if in.WebAppIDRef != nil {
		in, out := &in.WebAppIDRef, &out.WebAppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.WebAppIDSelector != nil {
		in, out := &in.WebAppIDSelector, &out.WebAppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppHybridConnectionParameters.
func (in *AppHybridConnectionParameters) DeepCopy() *AppHybridConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(AppHybridConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppHybridConnectionSpec) DeepCopyInto(out *AppHybridConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppHybridConnectionSpec.
func (in *AppHybridConnectionSpec) DeepCopy() *AppHybridConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(AppHybridConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppHybridConnectionStatus) DeepCopyInto(out *AppHybridConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppHybridConnectionStatus.
func (in *AppHybridConnectionStatus) DeepCopy() *AppHybridConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(AppHybridConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppServiceLogsInitParameters) DeepCopyInto(out *AppServiceLogsInitParameters) {
	*out = *in
	if in.DiskQuotaMb != nil {
		in, out := &in.DiskQuotaMb, &out.DiskQuotaMb
		*out = new(float64)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppServiceLogsInitParameters.
func (in *AppServiceLogsInitParameters) DeepCopy() *AppServiceLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AppServiceLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppServiceLogsObservation) DeepCopyInto(out *AppServiceLogsObservation) {
	*out = *in
	if in.DiskQuotaMb != nil {
		in, out := &in.DiskQuotaMb, &out.DiskQuotaMb
		*out = new(float64)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppServiceLogsObservation.
func (in *AppServiceLogsObservation) DeepCopy() *AppServiceLogsObservation {
	if in == nil {
		return nil
	}
	out := new(AppServiceLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppServiceLogsParameters) DeepCopyInto(out *AppServiceLogsParameters) {
	*out = *in
	if in.DiskQuotaMb != nil {
		in, out := &in.DiskQuotaMb, &out.DiskQuotaMb
		*out = new(float64)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppServiceLogsParameters.
func (in *AppServiceLogsParameters) DeepCopy() *AppServiceLogsParameters {
	if in == nil {
		return nil
	}
	out := new(AppServiceLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppServicePlan) DeepCopyInto(out *AppServicePlan) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppServicePlan.
func (in *AppServicePlan) DeepCopy() *AppServicePlan {
	if in == nil {
		return nil
	}
	out := new(AppServicePlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppServicePlan) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppServicePlanInitParameters) DeepCopyInto(out *AppServicePlanInitParameters) {
	*out = *in
	if in.AppServiceEnvironmentID != nil {
		in, out := &in.AppServiceEnvironmentID, &out.AppServiceEnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.IsXenon != nil {
		in, out := &in.IsXenon, &out.IsXenon
		*out = new(bool)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaximumElasticWorkerCount != nil {
		in, out := &in.MaximumElasticWorkerCount, &out.MaximumElasticWorkerCount
		*out = new(float64)
		**out = **in
	}
	if in.PerSiteScaling != nil {
		in, out := &in.PerSiteScaling, &out.PerSiteScaling
		*out = new(bool)
		**out = **in
	}
	if in.Reserved != nil {
		in, out := &in.Reserved, &out.Reserved
		*out = new(bool)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = make([]SkuInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppServicePlanInitParameters.
func (in *AppServicePlanInitParameters) DeepCopy() *AppServicePlanInitParameters {
	if in == nil {
		return nil
	}
	out := new(AppServicePlanInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppServicePlanList) DeepCopyInto(out *AppServicePlanList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AppServicePlan, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppServicePlanList.
func (in *AppServicePlanList) DeepCopy() *AppServicePlanList {
	if in == nil {
		return nil
	}
	out := new(AppServicePlanList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppServicePlanList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppServicePlanObservation) DeepCopyInto(out *AppServicePlanObservation) {
	*out = *in
	if in.AppServiceEnvironmentID != nil {
		in, out := &in.AppServiceEnvironmentID, &out.AppServiceEnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsXenon != nil {
		in, out := &in.IsXenon, &out.IsXenon
		*out = new(bool)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaximumElasticWorkerCount != nil {
		in, out := &in.MaximumElasticWorkerCount, &out.MaximumElasticWorkerCount
		*out = new(float64)
		**out = **in
	}
	if in.MaximumNumberOfWorkers != nil {
		in, out := &in.MaximumNumberOfWorkers, &out.MaximumNumberOfWorkers
		*out = new(float64)
		**out = **in
	}
	if in.PerSiteScaling != nil {
		in, out := &in.PerSiteScaling, &out.PerSiteScaling
		*out = new(bool)
		**out = **in
	}
	if in.Reserved != nil {
		in, out := &in.Reserved, &out.Reserved
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = make([]SkuObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppServicePlanObservation.
func (in *AppServicePlanObservation) DeepCopy() *AppServicePlanObservation {
	if in == nil {
		return nil
	}
	out := new(AppServicePlanObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppServicePlanParameters) DeepCopyInto(out *AppServicePlanParameters) {
	*out = *in
	if in.AppServiceEnvironmentID != nil {
		in, out := &in.AppServiceEnvironmentID, &out.AppServiceEnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.IsXenon != nil {
		in, out := &in.IsXenon, &out.IsXenon
		*out = new(bool)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaximumElasticWorkerCount != nil {
		in, out := &in.MaximumElasticWorkerCount, &out.MaximumElasticWorkerCount
		*out = new(float64)
		**out = **in
	}
	if in.PerSiteScaling != nil {
		in, out := &in.PerSiteScaling, &out.PerSiteScaling
		*out = new(bool)
		**out = **in
	}
	if in.Reserved != nil {
		in, out := &in.Reserved, &out.Reserved
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = make([]SkuParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppServicePlanParameters.
func (in *AppServicePlanParameters) DeepCopy() *AppServicePlanParameters {
	if in == nil {
		return nil
	}
	out := new(AppServicePlanParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppServicePlanSpec) DeepCopyInto(out *AppServicePlanSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppServicePlanSpec.
func (in *AppServicePlanSpec) DeepCopy() *AppServicePlanSpec {
	if in == nil {
		return nil
	}
	out := new(AppServicePlanSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppServicePlanStatus) DeepCopyInto(out *AppServicePlanStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppServicePlanStatus.
func (in *AppServicePlanStatus) DeepCopy() *AppServicePlanStatus {
	if in == nil {
		return nil
	}
	out := new(AppServicePlanStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppleV2InitParameters) DeepCopyInto(out *AppleV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppleV2InitParameters.
func (in *AppleV2InitParameters) DeepCopy() *AppleV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(AppleV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppleV2Observation) DeepCopyInto(out *AppleV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppleV2Observation.
func (in *AppleV2Observation) DeepCopy() *AppleV2Observation {
	if in == nil {
		return nil
	}
	out := new(AppleV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppleV2Parameters) DeepCopyInto(out *AppleV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppleV2Parameters.
func (in *AppleV2Parameters) DeepCopy() *AppleV2Parameters {
	if in == nil {
		return nil
	}
	out := new(AppleV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLogsAzureBlobStorageInitParameters) DeepCopyInto(out *ApplicationLogsAzureBlobStorageInitParameters) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.SASURL != nil {
		in, out := &in.SASURL, &out.SASURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLogsAzureBlobStorageInitParameters.
func (in *ApplicationLogsAzureBlobStorageInitParameters) DeepCopy() *ApplicationLogsAzureBlobStorageInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationLogsAzureBlobStorageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLogsAzureBlobStorageObservation) DeepCopyInto(out *ApplicationLogsAzureBlobStorageObservation) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.SASURL != nil {
		in, out := &in.SASURL, &out.SASURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLogsAzureBlobStorageObservation.
func (in *ApplicationLogsAzureBlobStorageObservation) DeepCopy() *ApplicationLogsAzureBlobStorageObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationLogsAzureBlobStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLogsAzureBlobStorageParameters) DeepCopyInto(out *ApplicationLogsAzureBlobStorageParameters) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.SASURL != nil {
		in, out := &in.SASURL, &out.SASURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLogsAzureBlobStorageParameters.
func (in *ApplicationLogsAzureBlobStorageParameters) DeepCopy() *ApplicationLogsAzureBlobStorageParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationLogsAzureBlobStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLogsInitParameters) DeepCopyInto(out *ApplicationLogsInitParameters) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]AzureBlobStorageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemLevel != nil {
		in, out := &in.FileSystemLevel, &out.FileSystemLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLogsInitParameters.
func (in *ApplicationLogsInitParameters) DeepCopy() *ApplicationLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLogsObservation) DeepCopyInto(out *ApplicationLogsObservation) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]AzureBlobStorageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemLevel != nil {
		in, out := &in.FileSystemLevel, &out.FileSystemLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLogsObservation.
func (in *ApplicationLogsObservation) DeepCopy() *ApplicationLogsObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLogsParameters) DeepCopyInto(out *ApplicationLogsParameters) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]AzureBlobStorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemLevel != nil {
		in, out := &in.FileSystemLevel, &out.FileSystemLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLogsParameters.
func (in *ApplicationLogsParameters) DeepCopy() *ApplicationLogsParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationStackDockerInitParameters) DeepCopyInto(out *ApplicationStackDockerInitParameters) {
	*out = *in
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.ImageTag != nil {
		in, out := &in.ImageTag, &out.ImageTag
		*out = new(string)
		**out = **in
	}
	if in.RegistryURL != nil {
		in, out := &in.RegistryURL, &out.RegistryURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationStackDockerInitParameters.
func (in *ApplicationStackDockerInitParameters) DeepCopy() *ApplicationStackDockerInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationStackDockerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationStackDockerObservation) DeepCopyInto(out *ApplicationStackDockerObservation) {
	*out = *in
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.ImageTag != nil {
		in, out := &in.ImageTag, &out.ImageTag
		*out = new(string)
		**out = **in
	}
	if in.RegistryURL != nil {
		in, out := &in.RegistryURL, &out.RegistryURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationStackDockerObservation.
func (in *ApplicationStackDockerObservation) DeepCopy() *ApplicationStackDockerObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationStackDockerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationStackDockerParameters) DeepCopyInto(out *ApplicationStackDockerParameters) {
	*out = *in
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.ImageTag != nil {
		in, out := &in.ImageTag, &out.ImageTag
		*out = new(string)
		**out = **in
	}
	if in.RegistryPasswordSecretRef != nil {
		in, out := &in.RegistryPasswordSecretRef, &out.RegistryPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.RegistryURL != nil {
		in, out := &in.RegistryURL, &out.RegistryURL
		*out = new(string)
		**out = **in
	}
	if in.RegistryUsernameSecretRef != nil {
		in, out := &in.RegistryUsernameSecretRef, &out.RegistryUsernameSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationStackDockerParameters.
func (in *ApplicationStackDockerParameters) DeepCopy() *ApplicationStackDockerParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationStackDockerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationStackInitParameters) DeepCopyInto(out *ApplicationStackInitParameters) {
	*out = *in
	if in.Docker != nil {
		in, out := &in.Docker, &out.Docker
		*out = make([]DockerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PowershellCoreVersion != nil {
		in, out := &in.PowershellCoreVersion, &out.PowershellCoreVersion
		*out = new(string)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.UseCustomRuntime != nil {
		in, out := &in.UseCustomRuntime, &out.UseCustomRuntime
		*out = new(bool)
		**out = **in
	}
	if in.UseDotnetIsolatedRuntime != nil {
		in, out := &in.UseDotnetIsolatedRuntime, &out.UseDotnetIsolatedRuntime
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationStackInitParameters.
func (in *ApplicationStackInitParameters) DeepCopy() *ApplicationStackInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationStackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationStackObservation) DeepCopyInto(out *ApplicationStackObservation) {
	*out = *in
	if in.Docker != nil {
		in, out := &in.Docker, &out.Docker
		*out = make([]DockerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PowershellCoreVersion != nil {
		in, out := &in.PowershellCoreVersion, &out.PowershellCoreVersion
		*out = new(string)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.UseCustomRuntime != nil {
		in, out := &in.UseCustomRuntime, &out.UseCustomRuntime
		*out = new(bool)
		**out = **in
	}
	if in.UseDotnetIsolatedRuntime != nil {
		in, out := &in.UseDotnetIsolatedRuntime, &out.UseDotnetIsolatedRuntime
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationStackObservation.
func (in *ApplicationStackObservation) DeepCopy() *ApplicationStackObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationStackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationStackParameters) DeepCopyInto(out *ApplicationStackParameters) {
	*out = *in
	if in.Docker != nil {
		in, out := &in.Docker, &out.Docker
		*out = make([]DockerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PowershellCoreVersion != nil {
		in, out := &in.PowershellCoreVersion, &out.PowershellCoreVersion
		*out = new(string)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.UseCustomRuntime != nil {
		in, out := &in.UseCustomRuntime, &out.UseCustomRuntime
		*out = new(bool)
		**out = **in
	}
	if in.UseDotnetIsolatedRuntime != nil {
		in, out := &in.UseDotnetIsolatedRuntime, &out.UseDotnetIsolatedRuntime
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationStackParameters.
func (in *ApplicationStackParameters) DeepCopy() *ApplicationStackParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationStackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsActiveDirectoryInitParameters) DeepCopyInto(out *AuthSettingsActiveDirectoryInitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsActiveDirectoryInitParameters.
func (in *AuthSettingsActiveDirectoryInitParameters) DeepCopy() *AuthSettingsActiveDirectoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsActiveDirectoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsActiveDirectoryObservation) DeepCopyInto(out *AuthSettingsActiveDirectoryObservation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsActiveDirectoryObservation.
func (in *AuthSettingsActiveDirectoryObservation) DeepCopy() *AuthSettingsActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsActiveDirectoryParameters) DeepCopyInto(out *AuthSettingsActiveDirectoryParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsActiveDirectoryParameters.
func (in *AuthSettingsActiveDirectoryParameters) DeepCopy() *AuthSettingsActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsFacebookInitParameters) DeepCopyInto(out *AuthSettingsFacebookInitParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsFacebookInitParameters.
func (in *AuthSettingsFacebookInitParameters) DeepCopy() *AuthSettingsFacebookInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsFacebookInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsFacebookObservation) DeepCopyInto(out *AuthSettingsFacebookObservation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsFacebookObservation.
func (in *AuthSettingsFacebookObservation) DeepCopy() *AuthSettingsFacebookObservation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsFacebookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsFacebookParameters) DeepCopyInto(out *AuthSettingsFacebookParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	out.AppSecretSecretRef = in.AppSecretSecretRef
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsFacebookParameters.
func (in *AuthSettingsFacebookParameters) DeepCopy() *AuthSettingsFacebookParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsFacebookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsGithubInitParameters) DeepCopyInto(out *AuthSettingsGithubInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsGithubInitParameters.
func (in *AuthSettingsGithubInitParameters) DeepCopy() *AuthSettingsGithubInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsGithubInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsGithubObservation) DeepCopyInto(out *AuthSettingsGithubObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsGithubObservation.
func (in *AuthSettingsGithubObservation) DeepCopy() *AuthSettingsGithubObservation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsGithubObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsGithubParameters) DeepCopyInto(out *AuthSettingsGithubParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsGithubParameters.
func (in *AuthSettingsGithubParameters) DeepCopy() *AuthSettingsGithubParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsGithubParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsGoogleInitParameters) DeepCopyInto(out *AuthSettingsGoogleInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsGoogleInitParameters.
func (in *AuthSettingsGoogleInitParameters) DeepCopy() *AuthSettingsGoogleInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsGoogleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsGoogleObservation) DeepCopyInto(out *AuthSettingsGoogleObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsGoogleObservation.
func (in *AuthSettingsGoogleObservation) DeepCopy() *AuthSettingsGoogleObservation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsGoogleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsGoogleParameters) DeepCopyInto(out *AuthSettingsGoogleParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsGoogleParameters.
func (in *AuthSettingsGoogleParameters) DeepCopy() *AuthSettingsGoogleParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsGoogleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsInitParameters) DeepCopyInto(out *AuthSettingsInitParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]ActiveDirectoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParams != nil {
		in, out := &in.AdditionalLoginParams, &out.AdditionalLoginParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]FacebookInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]GoogleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]MicrosoftInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]TwitterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsInitParameters.
func (in *AuthSettingsInitParameters) DeepCopy() *AuthSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsMicrosoftInitParameters) DeepCopyInto(out *AuthSettingsMicrosoftInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsMicrosoftInitParameters.
func (in *AuthSettingsMicrosoftInitParameters) DeepCopy() *AuthSettingsMicrosoftInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsMicrosoftInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsMicrosoftObservation) DeepCopyInto(out *AuthSettingsMicrosoftObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsMicrosoftObservation.
func (in *AuthSettingsMicrosoftObservation) DeepCopy() *AuthSettingsMicrosoftObservation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsMicrosoftObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsMicrosoftParameters) DeepCopyInto(out *AuthSettingsMicrosoftParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsMicrosoftParameters.
func (in *AuthSettingsMicrosoftParameters) DeepCopy() *AuthSettingsMicrosoftParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsMicrosoftParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsObservation) DeepCopyInto(out *AuthSettingsObservation) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]ActiveDirectoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParams != nil {
		in, out := &in.AdditionalLoginParams, &out.AdditionalLoginParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]FacebookObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]GoogleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]MicrosoftObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]TwitterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsObservation.
func (in *AuthSettingsObservation) DeepCopy() *AuthSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsParameters) DeepCopyInto(out *AuthSettingsParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]ActiveDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParams != nil {
		in, out := &in.AdditionalLoginParams, &out.AdditionalLoginParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]FacebookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]GoogleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]MicrosoftParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]TwitterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsParameters.
func (in *AuthSettingsParameters) DeepCopy() *AuthSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsTwitterInitParameters) DeepCopyInto(out *AuthSettingsTwitterInitParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsTwitterInitParameters.
func (in *AuthSettingsTwitterInitParameters) DeepCopy() *AuthSettingsTwitterInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsTwitterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsTwitterObservation) DeepCopyInto(out *AuthSettingsTwitterObservation) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsTwitterObservation.
func (in *AuthSettingsTwitterObservation) DeepCopy() *AuthSettingsTwitterObservation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsTwitterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsTwitterParameters) DeepCopyInto(out *AuthSettingsTwitterParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	out.ConsumerSecretSecretRef = in.ConsumerSecretSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsTwitterParameters.
func (in *AuthSettingsTwitterParameters) DeepCopy() *AuthSettingsTwitterParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsTwitterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2ActiveDirectoryV2InitParameters) DeepCopyInto(out *AuthSettingsV2ActiveDirectoryV2InitParameters) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2ActiveDirectoryV2InitParameters.
func (in *AuthSettingsV2ActiveDirectoryV2InitParameters) DeepCopy() *AuthSettingsV2ActiveDirectoryV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2ActiveDirectoryV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2ActiveDirectoryV2Observation) DeepCopyInto(out *AuthSettingsV2ActiveDirectoryV2Observation) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2ActiveDirectoryV2Observation.
func (in *AuthSettingsV2ActiveDirectoryV2Observation) DeepCopy() *AuthSettingsV2ActiveDirectoryV2Observation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2ActiveDirectoryV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2ActiveDirectoryV2Parameters) DeepCopyInto(out *AuthSettingsV2ActiveDirectoryV2Parameters) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2ActiveDirectoryV2Parameters.
func (in *AuthSettingsV2ActiveDirectoryV2Parameters) DeepCopy() *AuthSettingsV2ActiveDirectoryV2Parameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2ActiveDirectoryV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2AppleV2InitParameters) DeepCopyInto(out *AuthSettingsV2AppleV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2AppleV2InitParameters.
func (in *AuthSettingsV2AppleV2InitParameters) DeepCopy() *AuthSettingsV2AppleV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2AppleV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2AppleV2Observation) DeepCopyInto(out *AuthSettingsV2AppleV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2AppleV2Observation.
func (in *AuthSettingsV2AppleV2Observation) DeepCopy() *AuthSettingsV2AppleV2Observation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2AppleV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2AppleV2Parameters) DeepCopyInto(out *AuthSettingsV2AppleV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2AppleV2Parameters.
func (in *AuthSettingsV2AppleV2Parameters) DeepCopy() *AuthSettingsV2AppleV2Parameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2AppleV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2AzureStaticWebAppV2InitParameters) DeepCopyInto(out *AuthSettingsV2AzureStaticWebAppV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2AzureStaticWebAppV2InitParameters.
func (in *AuthSettingsV2AzureStaticWebAppV2InitParameters) DeepCopy() *AuthSettingsV2AzureStaticWebAppV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2AzureStaticWebAppV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2AzureStaticWebAppV2Observation) DeepCopyInto(out *AuthSettingsV2AzureStaticWebAppV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2AzureStaticWebAppV2Observation.
func (in *AuthSettingsV2AzureStaticWebAppV2Observation) DeepCopy() *AuthSettingsV2AzureStaticWebAppV2Observation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2AzureStaticWebAppV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2AzureStaticWebAppV2Parameters) DeepCopyInto(out *AuthSettingsV2AzureStaticWebAppV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2AzureStaticWebAppV2Parameters.
func (in *AuthSettingsV2AzureStaticWebAppV2Parameters) DeepCopy() *AuthSettingsV2AzureStaticWebAppV2Parameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2AzureStaticWebAppV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2CustomOidcV2InitParameters) DeepCopyInto(out *AuthSettingsV2CustomOidcV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2CustomOidcV2InitParameters.
func (in *AuthSettingsV2CustomOidcV2InitParameters) DeepCopy() *AuthSettingsV2CustomOidcV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2CustomOidcV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2CustomOidcV2Observation) DeepCopyInto(out *AuthSettingsV2CustomOidcV2Observation) {
	*out = *in
	if in.AuthorisationEndpoint != nil {
		in, out := &in.AuthorisationEndpoint, &out.AuthorisationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.CertificationURI != nil {
		in, out := &in.CertificationURI, &out.CertificationURI
		*out = new(string)
		**out = **in
	}
	if in.ClientCredentialMethod != nil {
		in, out := &in.ClientCredentialMethod, &out.ClientCredentialMethod
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.IssuerEndpoint != nil {
		in, out := &in.IssuerEndpoint, &out.IssuerEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TokenEndpoint != nil {
		in, out := &in.TokenEndpoint, &out.TokenEndpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2CustomOidcV2Observation.
func (in *AuthSettingsV2CustomOidcV2Observation) DeepCopy() *AuthSettingsV2CustomOidcV2Observation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2CustomOidcV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2CustomOidcV2Parameters) DeepCopyInto(out *AuthSettingsV2CustomOidcV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2CustomOidcV2Parameters.
func (in *AuthSettingsV2CustomOidcV2Parameters) DeepCopy() *AuthSettingsV2CustomOidcV2Parameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2CustomOidcV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2FacebookV2InitParameters) DeepCopyInto(out *AuthSettingsV2FacebookV2InitParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2FacebookV2InitParameters.
func (in *AuthSettingsV2FacebookV2InitParameters) DeepCopy() *AuthSettingsV2FacebookV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2FacebookV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2FacebookV2Observation) DeepCopyInto(out *AuthSettingsV2FacebookV2Observation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2FacebookV2Observation.
func (in *AuthSettingsV2FacebookV2Observation) DeepCopy() *AuthSettingsV2FacebookV2Observation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2FacebookV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2FacebookV2Parameters) DeepCopyInto(out *AuthSettingsV2FacebookV2Parameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2FacebookV2Parameters.
func (in *AuthSettingsV2FacebookV2Parameters) DeepCopy() *AuthSettingsV2FacebookV2Parameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2FacebookV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2GithubV2InitParameters) DeepCopyInto(out *AuthSettingsV2GithubV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2GithubV2InitParameters.
func (in *AuthSettingsV2GithubV2InitParameters) DeepCopy() *AuthSettingsV2GithubV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2GithubV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2GithubV2Observation) DeepCopyInto(out *AuthSettingsV2GithubV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2GithubV2Observation.
func (in *AuthSettingsV2GithubV2Observation) DeepCopy() *AuthSettingsV2GithubV2Observation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2GithubV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2GithubV2Parameters) DeepCopyInto(out *AuthSettingsV2GithubV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2GithubV2Parameters.
func (in *AuthSettingsV2GithubV2Parameters) DeepCopy() *AuthSettingsV2GithubV2Parameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2GithubV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2GoogleV2InitParameters) DeepCopyInto(out *AuthSettingsV2GoogleV2InitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2GoogleV2InitParameters.
func (in *AuthSettingsV2GoogleV2InitParameters) DeepCopy() *AuthSettingsV2GoogleV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2GoogleV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2GoogleV2Observation) DeepCopyInto(out *AuthSettingsV2GoogleV2Observation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2GoogleV2Observation.
func (in *AuthSettingsV2GoogleV2Observation) DeepCopy() *AuthSettingsV2GoogleV2Observation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2GoogleV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2GoogleV2Parameters) DeepCopyInto(out *AuthSettingsV2GoogleV2Parameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2GoogleV2Parameters.
func (in *AuthSettingsV2GoogleV2Parameters) DeepCopy() *AuthSettingsV2GoogleV2Parameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2GoogleV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2InitParameters) DeepCopyInto(out *AuthSettingsV2InitParameters) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]ActiveDirectoryV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]AppleV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]AzureStaticWebAppV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]CustomOidcV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]FacebookV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]GithubV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]GoogleV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]LoginInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]MicrosoftV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]TwitterV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2InitParameters.
func (in *AuthSettingsV2InitParameters) DeepCopy() *AuthSettingsV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2LoginInitParameters) DeepCopyInto(out *AuthSettingsV2LoginInitParameters) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2LoginInitParameters.
func (in *AuthSettingsV2LoginInitParameters) DeepCopy() *AuthSettingsV2LoginInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2LoginInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2LoginObservation) DeepCopyInto(out *AuthSettingsV2LoginObservation) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2LoginObservation.
func (in *AuthSettingsV2LoginObservation) DeepCopy() *AuthSettingsV2LoginObservation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2LoginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2LoginParameters) DeepCopyInto(out *AuthSettingsV2LoginParameters) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2LoginParameters.
func (in *AuthSettingsV2LoginParameters) DeepCopy() *AuthSettingsV2LoginParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2LoginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2MicrosoftV2InitParameters) DeepCopyInto(out *AuthSettingsV2MicrosoftV2InitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2MicrosoftV2InitParameters.
func (in *AuthSettingsV2MicrosoftV2InitParameters) DeepCopy() *AuthSettingsV2MicrosoftV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2MicrosoftV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2MicrosoftV2Observation) DeepCopyInto(out *AuthSettingsV2MicrosoftV2Observation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2MicrosoftV2Observation.
func (in *AuthSettingsV2MicrosoftV2Observation) DeepCopy() *AuthSettingsV2MicrosoftV2Observation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2MicrosoftV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2MicrosoftV2Parameters) DeepCopyInto(out *AuthSettingsV2MicrosoftV2Parameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2MicrosoftV2Parameters.
func (in *AuthSettingsV2MicrosoftV2Parameters) DeepCopy() *AuthSettingsV2MicrosoftV2Parameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2MicrosoftV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2Observation) DeepCopyInto(out *AuthSettingsV2Observation) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]ActiveDirectoryV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]AppleV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]AzureStaticWebAppV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]CustomOidcV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]FacebookV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]GithubV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]GoogleV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]LoginObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]MicrosoftV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]TwitterV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2Observation.
func (in *AuthSettingsV2Observation) DeepCopy() *AuthSettingsV2Observation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2Parameters) DeepCopyInto(out *AuthSettingsV2Parameters) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]ActiveDirectoryV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]AppleV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]AzureStaticWebAppV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]CustomOidcV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]FacebookV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]GithubV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]GoogleV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]LoginParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]MicrosoftV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]TwitterV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2Parameters.
func (in *AuthSettingsV2Parameters) DeepCopy() *AuthSettingsV2Parameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2TwitterV2InitParameters) DeepCopyInto(out *AuthSettingsV2TwitterV2InitParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2TwitterV2InitParameters.
func (in *AuthSettingsV2TwitterV2InitParameters) DeepCopy() *AuthSettingsV2TwitterV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2TwitterV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2TwitterV2Observation) DeepCopyInto(out *AuthSettingsV2TwitterV2Observation) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2TwitterV2Observation.
func (in *AuthSettingsV2TwitterV2Observation) DeepCopy() *AuthSettingsV2TwitterV2Observation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2TwitterV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsV2TwitterV2Parameters) DeepCopyInto(out *AuthSettingsV2TwitterV2Parameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsV2TwitterV2Parameters.
func (in *AuthSettingsV2TwitterV2Parameters) DeepCopy() *AuthSettingsV2TwitterV2Parameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsV2TwitterV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingActionInitParameters) DeepCopyInto(out *AutoHealSettingActionInitParameters) {
	*out = *in
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.MinimumProcessExecutionTime != nil {
		in, out := &in.MinimumProcessExecutionTime, &out.MinimumProcessExecutionTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingActionInitParameters.
func (in *AutoHealSettingActionInitParameters) DeepCopy() *AutoHealSettingActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingActionObservation) DeepCopyInto(out *AutoHealSettingActionObservation) {
	*out = *in
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.MinimumProcessExecutionTime != nil {
		in, out := &in.MinimumProcessExecutionTime, &out.MinimumProcessExecutionTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingActionObservation.
func (in *AutoHealSettingActionObservation) DeepCopy() *AutoHealSettingActionObservation {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingActionParameters) DeepCopyInto(out *AutoHealSettingActionParameters) {
	*out = *in
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.MinimumProcessExecutionTime != nil {
		in, out := &in.MinimumProcessExecutionTime, &out.MinimumProcessExecutionTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingActionParameters.
func (in *AutoHealSettingActionParameters) DeepCopy() *AutoHealSettingActionParameters {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingInitParameters) DeepCopyInto(out *AutoHealSettingInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingInitParameters.
func (in *AutoHealSettingInitParameters) DeepCopy() *AutoHealSettingInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingObservation) DeepCopyInto(out *AutoHealSettingObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingObservation.
func (in *AutoHealSettingObservation) DeepCopy() *AutoHealSettingObservation {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingParameters) DeepCopyInto(out *AutoHealSettingParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingParameters.
func (in *AutoHealSettingParameters) DeepCopy() *AutoHealSettingParameters {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingTriggerInitParameters) DeepCopyInto(out *AutoHealSettingTriggerInitParameters) {
	*out = *in
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = make([]TriggerRequestsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SlowRequest != nil {
		in, out := &in.SlowRequest, &out.SlowRequest
		*out = make([]TriggerSlowRequestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = make([]TriggerStatusCodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingTriggerInitParameters.
func (in *AutoHealSettingTriggerInitParameters) DeepCopy() *AutoHealSettingTriggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingTriggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingTriggerObservation) DeepCopyInto(out *AutoHealSettingTriggerObservation) {
	*out = *in
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = make([]TriggerRequestsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SlowRequest != nil {
		in, out := &in.SlowRequest, &out.SlowRequest
		*out = make([]TriggerSlowRequestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = make([]TriggerStatusCodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingTriggerObservation.
func (in *AutoHealSettingTriggerObservation) DeepCopy() *AutoHealSettingTriggerObservation {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingTriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingTriggerParameters) DeepCopyInto(out *AutoHealSettingTriggerParameters) {
	*out = *in
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = make([]TriggerRequestsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SlowRequest != nil {
		in, out := &in.SlowRequest, &out.SlowRequest
		*out = make([]TriggerSlowRequestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = make([]TriggerStatusCodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingTriggerParameters.
func (in *AutoHealSettingTriggerParameters) DeepCopy() *AutoHealSettingTriggerParameters {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingTriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingTriggerRequestsInitParameters) DeepCopyInto(out *AutoHealSettingTriggerRequestsInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingTriggerRequestsInitParameters.
func (in *AutoHealSettingTriggerRequestsInitParameters) DeepCopy() *AutoHealSettingTriggerRequestsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingTriggerRequestsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingTriggerRequestsObservation) DeepCopyInto(out *AutoHealSettingTriggerRequestsObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingTriggerRequestsObservation.
func (in *AutoHealSettingTriggerRequestsObservation) DeepCopy() *AutoHealSettingTriggerRequestsObservation {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingTriggerRequestsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingTriggerRequestsParameters) DeepCopyInto(out *AutoHealSettingTriggerRequestsParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingTriggerRequestsParameters.
func (in *AutoHealSettingTriggerRequestsParameters) DeepCopy() *AutoHealSettingTriggerRequestsParameters {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingTriggerRequestsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingTriggerSlowRequestInitParameters) DeepCopyInto(out *AutoHealSettingTriggerSlowRequestInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TimeTaken != nil {
		in, out := &in.TimeTaken, &out.TimeTaken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingTriggerSlowRequestInitParameters.
func (in *AutoHealSettingTriggerSlowRequestInitParameters) DeepCopy() *AutoHealSettingTriggerSlowRequestInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingTriggerSlowRequestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingTriggerSlowRequestObservation) DeepCopyInto(out *AutoHealSettingTriggerSlowRequestObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TimeTaken != nil {
		in, out := &in.TimeTaken, &out.TimeTaken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingTriggerSlowRequestObservation.
func (in *AutoHealSettingTriggerSlowRequestObservation) DeepCopy() *AutoHealSettingTriggerSlowRequestObservation {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingTriggerSlowRequestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingTriggerSlowRequestParameters) DeepCopyInto(out *AutoHealSettingTriggerSlowRequestParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TimeTaken != nil {
		in, out := &in.TimeTaken, &out.TimeTaken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingTriggerSlowRequestParameters.
func (in *AutoHealSettingTriggerSlowRequestParameters) DeepCopy() *AutoHealSettingTriggerSlowRequestParameters {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingTriggerSlowRequestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingTriggerStatusCodeInitParameters) DeepCopyInto(out *AutoHealSettingTriggerStatusCodeInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.StatusCodeRange != nil {
		in, out := &in.StatusCodeRange, &out.StatusCodeRange
		*out = new(string)
		**out = **in
	}
	if in.SubStatus != nil {
		in, out := &in.SubStatus, &out.SubStatus
		*out = new(float64)
		**out = **in
	}
	if in.Win32Status != nil {
		in, out := &in.Win32Status, &out.Win32Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingTriggerStatusCodeInitParameters.
func (in *AutoHealSettingTriggerStatusCodeInitParameters) DeepCopy() *AutoHealSettingTriggerStatusCodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingTriggerStatusCodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingTriggerStatusCodeObservation) DeepCopyInto(out *AutoHealSettingTriggerStatusCodeObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.StatusCodeRange != nil {
		in, out := &in.StatusCodeRange, &out.StatusCodeRange
		*out = new(string)
		**out = **in
	}
	if in.SubStatus != nil {
		in, out := &in.SubStatus, &out.SubStatus
		*out = new(float64)
		**out = **in
	}
	if in.Win32Status != nil {
		in, out := &in.Win32Status, &out.Win32Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingTriggerStatusCodeObservation.
func (in *AutoHealSettingTriggerStatusCodeObservation) DeepCopy() *AutoHealSettingTriggerStatusCodeObservation {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingTriggerStatusCodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingTriggerStatusCodeParameters) DeepCopyInto(out *AutoHealSettingTriggerStatusCodeParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.StatusCodeRange != nil {
		in, out := &in.StatusCodeRange, &out.StatusCodeRange
		*out = new(string)
		**out = **in
	}
	if in.SubStatus != nil {
		in, out := &in.SubStatus, &out.SubStatus
		*out = new(float64)
		**out = **in
	}
	if in.Win32Status != nil {
		in, out := &in.Win32Status, &out.Win32Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingTriggerStatusCodeParameters.
func (in *AutoHealSettingTriggerStatusCodeParameters) DeepCopy() *AutoHealSettingTriggerStatusCodeParameters {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingTriggerStatusCodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobStorageInitParameters) DeepCopyInto(out *AzureBlobStorageInitParameters) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.SASURL != nil {
		in, out := &in.SASURL, &out.SASURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobStorageInitParameters.
func (in *AzureBlobStorageInitParameters) DeepCopy() *AzureBlobStorageInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureBlobStorageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobStorageObservation) DeepCopyInto(out *AzureBlobStorageObservation) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.SASURL != nil {
		in, out := &in.SASURL, &out.SASURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobStorageObservation.
func (in *AzureBlobStorageObservation) DeepCopy() *AzureBlobStorageObservation {
	if in == nil {
		return nil
	}
	out := new(AzureBlobStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobStorageParameters) DeepCopyInto(out *AzureBlobStorageParameters) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.SASURL != nil {
		in, out := &in.SASURL, &out.SASURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobStorageParameters.
func (in *AzureBlobStorageParameters) DeepCopy() *AzureBlobStorageParameters {
	if in == nil {
		return nil
	}
	out := new(AzureBlobStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureStaticWebAppV2InitParameters) DeepCopyInto(out *AzureStaticWebAppV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureStaticWebAppV2InitParameters.
func (in *AzureStaticWebAppV2InitParameters) DeepCopy() *AzureStaticWebAppV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureStaticWebAppV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureStaticWebAppV2Observation) DeepCopyInto(out *AzureStaticWebAppV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureStaticWebAppV2Observation.
func (in *AzureStaticWebAppV2Observation) DeepCopy() *AzureStaticWebAppV2Observation {
	if in == nil {
		return nil
	}
	out := new(AzureStaticWebAppV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureStaticWebAppV2Parameters) DeepCopyInto(out *AzureStaticWebAppV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureStaticWebAppV2Parameters.
func (in *AzureStaticWebAppV2Parameters) DeepCopy() *AzureStaticWebAppV2Parameters {
	if in == nil {
		return nil
	}
	out := new(AzureStaticWebAppV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupInitParameters) DeepCopyInto(out *BackupInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupInitParameters.
func (in *BackupInitParameters) DeepCopy() *BackupInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupObservation) DeepCopyInto(out *BackupObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupObservation.
func (in *BackupObservation) DeepCopy() *BackupObservation {
	if in == nil {
		return nil
	}
	out := new(BackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupParameters) DeepCopyInto(out *BackupParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.StorageAccountURLSecretRef = in.StorageAccountURLSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupParameters.
func (in *BackupParameters) DeepCopy() *BackupParameters {
	if in == nil {
		return nil
	}
	out := new(BackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupScheduleInitParameters) DeepCopyInto(out *BackupScheduleInitParameters) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupScheduleInitParameters.
func (in *BackupScheduleInitParameters) DeepCopy() *BackupScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackupScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupScheduleObservation) DeepCopyInto(out *BackupScheduleObservation) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.LastExecutionTime != nil {
		in, out := &in.LastExecutionTime, &out.LastExecutionTime
		*out = new(string)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupScheduleObservation.
func (in *BackupScheduleObservation) DeepCopy() *BackupScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(BackupScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupScheduleParameters) DeepCopyInto(out *BackupScheduleParameters) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupScheduleParameters.
func (in *BackupScheduleParameters) DeepCopy() *BackupScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(BackupScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStringInitParameters) DeepCopyInto(out *ConnectionStringInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStringInitParameters.
func (in *ConnectionStringInitParameters) DeepCopy() *ConnectionStringInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionStringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStringObservation) DeepCopyInto(out *ConnectionStringObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStringObservation.
func (in *ConnectionStringObservation) DeepCopy() *ConnectionStringObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionStringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStringParameters) DeepCopyInto(out *ConnectionStringParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	out.ValueSecretRef = in.ValueSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStringParameters.
func (in *ConnectionStringParameters) DeepCopy() *ConnectionStringParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionStringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsInitParameters) DeepCopyInto(out *CorsInitParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsInitParameters.
func (in *CorsInitParameters) DeepCopy() *CorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsObservation) DeepCopyInto(out *CorsObservation) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsObservation.
func (in *CorsObservation) DeepCopy() *CorsObservation {
	if in == nil {
		return nil
	}
	out := new(CorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsParameters) DeepCopyInto(out *CorsParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsParameters.
func (in *CorsParameters) DeepCopy() *CorsParameters {
	if in == nil {
		return nil
	}
	out := new(CorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomActionInitParameters) DeepCopyInto(out *CustomActionInitParameters) {
	*out = *in
	if in.Executable != nil {
		in, out := &in.Executable, &out.Executable
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomActionInitParameters.
func (in *CustomActionInitParameters) DeepCopy() *CustomActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomActionObservation) DeepCopyInto(out *CustomActionObservation) {
	*out = *in
	if in.Executable != nil {
		in, out := &in.Executable, &out.Executable
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomActionObservation.
func (in *CustomActionObservation) DeepCopy() *CustomActionObservation {
	if in == nil {
		return nil
	}
	out := new(CustomActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomActionParameters) DeepCopyInto(out *CustomActionParameters) {
	*out = *in
	if in.Executable != nil {
		in, out := &in.Executable, &out.Executable
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomActionParameters.
func (in *CustomActionParameters) DeepCopy() *CustomActionParameters {
	if in == nil {
		return nil
	}
	out := new(CustomActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomOidcV2InitParameters) DeepCopyInto(out *CustomOidcV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomOidcV2InitParameters.
func (in *CustomOidcV2InitParameters) DeepCopy() *CustomOidcV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomOidcV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomOidcV2Observation) DeepCopyInto(out *CustomOidcV2Observation) {
	*out = *in
	if in.AuthorisationEndpoint != nil {
		in, out := &in.AuthorisationEndpoint, &out.AuthorisationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.CertificationURI != nil {
		in, out := &in.CertificationURI, &out.CertificationURI
		*out = new(string)
		**out = **in
	}
	if in.ClientCredentialMethod != nil {
		in, out := &in.ClientCredentialMethod, &out.ClientCredentialMethod
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.IssuerEndpoint != nil {
		in, out := &in.IssuerEndpoint, &out.IssuerEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TokenEndpoint != nil {
		in, out := &in.TokenEndpoint, &out.TokenEndpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomOidcV2Observation.
func (in *CustomOidcV2Observation) DeepCopy() *CustomOidcV2Observation {
	if in == nil {
		return nil
	}
	out := new(CustomOidcV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomOidcV2Parameters) DeepCopyInto(out *CustomOidcV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomOidcV2Parameters.
func (in *CustomOidcV2Parameters) DeepCopy() *CustomOidcV2Parameters {
	if in == nil {
		return nil
	}
	out := new(CustomOidcV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerInitParameters) DeepCopyInto(out *DockerInitParameters) {
	*out = *in
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.ImageTag != nil {
		in, out := &in.ImageTag, &out.ImageTag
		*out = new(string)
		**out = **in
	}
	if in.RegistryURL != nil {
		in, out := &in.RegistryURL, &out.RegistryURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerInitParameters.
func (in *DockerInitParameters) DeepCopy() *DockerInitParameters {
	if in == nil {
		return nil
	}
	out := new(DockerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerObservation) DeepCopyInto(out *DockerObservation) {
	*out = *in
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.ImageTag != nil {
		in, out := &in.ImageTag, &out.ImageTag
		*out = new(string)
		**out = **in
	}
	if in.RegistryURL != nil {
		in, out := &in.RegistryURL, &out.RegistryURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerObservation.
func (in *DockerObservation) DeepCopy() *DockerObservation {
	if in == nil {
		return nil
	}
	out := new(DockerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerParameters) DeepCopyInto(out *DockerParameters) {
	*out = *in
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.ImageTag != nil {
		in, out := &in.ImageTag, &out.ImageTag
		*out = new(string)
		**out = **in
	}
	if in.RegistryPasswordSecretRef != nil {
		in, out := &in.RegistryPasswordSecretRef, &out.RegistryPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.RegistryURL != nil {
		in, out := &in.RegistryURL, &out.RegistryURL
		*out = new(string)
		**out = **in
	}
	if in.RegistryUsernameSecretRef != nil {
		in, out := &in.RegistryUsernameSecretRef, &out.RegistryUsernameSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerParameters.
func (in *DockerParameters) DeepCopy() *DockerParameters {
	if in == nil {
		return nil
	}
	out := new(DockerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FacebookInitParameters) DeepCopyInto(out *FacebookInitParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FacebookInitParameters.
func (in *FacebookInitParameters) DeepCopy() *FacebookInitParameters {
	if in == nil {
		return nil
	}
	out := new(FacebookInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FacebookObservation) DeepCopyInto(out *FacebookObservation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FacebookObservation.
func (in *FacebookObservation) DeepCopy() *FacebookObservation {
	if in == nil {
		return nil
	}
	out := new(FacebookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FacebookParameters) DeepCopyInto(out *FacebookParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	out.AppSecretSecretRef = in.AppSecretSecretRef
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FacebookParameters.
func (in *FacebookParameters) DeepCopy() *FacebookParameters {
	if in == nil {
		return nil
	}
	out := new(FacebookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FacebookV2InitParameters) DeepCopyInto(out *FacebookV2InitParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FacebookV2InitParameters.
func (in *FacebookV2InitParameters) DeepCopy() *FacebookV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(FacebookV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FacebookV2Observation) DeepCopyInto(out *FacebookV2Observation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FacebookV2Observation.
func (in *FacebookV2Observation) DeepCopy() *FacebookV2Observation {
	if in == nil {
		return nil
	}
	out := new(FacebookV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FacebookV2Parameters) DeepCopyInto(out *FacebookV2Parameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FacebookV2Parameters.
func (in *FacebookV2Parameters) DeepCopy() *FacebookV2Parameters {
	if in == nil {
		return nil
	}
	out := new(FacebookV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileInitParameters) DeepCopyInto(out *FileInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileInitParameters.
func (in *FileInitParameters) DeepCopy() *FileInitParameters {
	if in == nil {
		return nil
	}
	out := new(FileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileObservation) DeepCopyInto(out *FileObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileObservation.
func (in *FileObservation) DeepCopy() *FileObservation {
	if in == nil {
		return nil
	}
	out := new(FileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileParameters) DeepCopyInto(out *FileParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileParameters.
func (in *FileParameters) DeepCopy() *FileParameters {
	if in == nil {
		return nil
	}
	out := new(FileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemInitParameters) DeepCopyInto(out *FileSystemInitParameters) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.RetentionInMb != nil {
		in, out := &in.RetentionInMb, &out.RetentionInMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemInitParameters.
func (in *FileSystemInitParameters) DeepCopy() *FileSystemInitParameters {
	if in == nil {
		return nil
	}
	out := new(FileSystemInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemObservation) DeepCopyInto(out *FileSystemObservation) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.RetentionInMb != nil {
		in, out := &in.RetentionInMb, &out.RetentionInMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemObservation.
func (in *FileSystemObservation) DeepCopy() *FileSystemObservation {
	if in == nil {
		return nil
	}
	out := new(FileSystemObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemParameters) DeepCopyInto(out *FileSystemParameters) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.RetentionInMb != nil {
		in, out := &in.RetentionInMb, &out.RetentionInMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemParameters.
func (in *FileSystemParameters) DeepCopy() *FileSystemParameters {
	if in == nil {
		return nil
	}
	out := new(FileSystemParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionApp) DeepCopyInto(out *FunctionApp) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionApp.
func (in *FunctionApp) DeepCopy() *FunctionApp {
	if in == nil {
		return nil
	}
	out := new(FunctionApp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FunctionApp) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppActiveSlot) DeepCopyInto(out *FunctionAppActiveSlot) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppActiveSlot.
func (in *FunctionAppActiveSlot) DeepCopy() *FunctionAppActiveSlot {
	if in == nil {
		return nil
	}
	out := new(FunctionAppActiveSlot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FunctionAppActiveSlot) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppActiveSlotInitParameters) DeepCopyInto(out *FunctionAppActiveSlotInitParameters) {
	*out = *in
	if in.OverwriteNetworkConfig != nil {
		in, out := &in.OverwriteNetworkConfig, &out.OverwriteNetworkConfig
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppActiveSlotInitParameters.
func (in *FunctionAppActiveSlotInitParameters) DeepCopy() *FunctionAppActiveSlotInitParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppActiveSlotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppActiveSlotList) DeepCopyInto(out *FunctionAppActiveSlotList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FunctionAppActiveSlot, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppActiveSlotList.
func (in *FunctionAppActiveSlotList) DeepCopy() *FunctionAppActiveSlotList {
	if in == nil {
		return nil
	}
	out := new(FunctionAppActiveSlotList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FunctionAppActiveSlotList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppActiveSlotObservation) DeepCopyInto(out *FunctionAppActiveSlotObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LastSuccessfulSwap != nil {
		in, out := &in.LastSuccessfulSwap, &out.LastSuccessfulSwap
		*out = new(string)
		**out = **in
	}
	if in.OverwriteNetworkConfig != nil {
		in, out := &in.OverwriteNetworkConfig, &out.OverwriteNetworkConfig
		*out = new(bool)
		**out = **in
	}
	if in.SlotID != nil {
		in, out := &in.SlotID, &out.SlotID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppActiveSlotObservation.
func (in *FunctionAppActiveSlotObservation) DeepCopy() *FunctionAppActiveSlotObservation {
	if in == nil {
		return nil
	}
	out := new(FunctionAppActiveSlotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppActiveSlotParameters) DeepCopyInto(out *FunctionAppActiveSlotParameters) {
	*out = *in
	if in.OverwriteNetworkConfig != nil {
		in, out := &in.OverwriteNetworkConfig, &out.OverwriteNetworkConfig
		*out = new(bool)
		**out = **in
	}
	if in.SlotID != nil {
		in, out := &in.SlotID, &out.SlotID
		*out = new(string)
		**out = **in
	}
	if in.SlotIDRef != nil {
		in, out := &in.SlotIDRef, &out.SlotIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SlotIDSelector != nil {
		in, out := &in.SlotIDSelector, &out.SlotIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppActiveSlotParameters.
func (in *FunctionAppActiveSlotParameters) DeepCopy() *FunctionAppActiveSlotParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppActiveSlotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppActiveSlotSpec) DeepCopyInto(out *FunctionAppActiveSlotSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppActiveSlotSpec.
func (in *FunctionAppActiveSlotSpec) DeepCopy() *FunctionAppActiveSlotSpec {
	if in == nil {
		return nil
	}
	out := new(FunctionAppActiveSlotSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppActiveSlotStatus) DeepCopyInto(out *FunctionAppActiveSlotStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppActiveSlotStatus.
func (in *FunctionAppActiveSlotStatus) DeepCopy() *FunctionAppActiveSlotStatus {
	if in == nil {
		return nil
	}
	out := new(FunctionAppActiveSlotStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppFunction) DeepCopyInto(out *FunctionAppFunction) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppFunction.
func (in *FunctionAppFunction) DeepCopy() *FunctionAppFunction {
	if in == nil {
		return nil
	}
	out := new(FunctionAppFunction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FunctionAppFunction) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppFunctionInitParameters) DeepCopyInto(out *FunctionAppFunctionInitParameters) {
	*out = *in
	if in.ConfigJSON != nil {
		in, out := &in.ConfigJSON, &out.ConfigJSON
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]FileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Language != nil {
		in, out := &in.Language, &out.Language
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TestData != nil {
		in, out := &in.TestData, &out.TestData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppFunctionInitParameters.
func (in *FunctionAppFunctionInitParameters) DeepCopy() *FunctionAppFunctionInitParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppFunctionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppFunctionList) DeepCopyInto(out *FunctionAppFunctionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FunctionAppFunction, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppFunctionList.
func (in *FunctionAppFunctionList) DeepCopy() *FunctionAppFunctionList {
	if in == nil {
		return nil
	}
	out := new(FunctionAppFunctionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FunctionAppFunctionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppFunctionObservation) DeepCopyInto(out *FunctionAppFunctionObservation) {
	*out = *in
	if in.ConfigJSON != nil {
		in, out := &in.ConfigJSON, &out.ConfigJSON
		*out = new(string)
		**out = **in
	}
	if in.ConfigURL != nil {
		in, out := &in.ConfigURL, &out.ConfigURL
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]FileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FunctionAppID != nil {
		in, out := &in.FunctionAppID, &out.FunctionAppID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InvocationURL != nil {
		in, out := &in.InvocationURL, &out.InvocationURL
		*out = new(string)
		**out = **in
	}
	if in.Language != nil {
		in, out := &in.Language, &out.Language
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ScriptRootPathURL != nil {
		in, out := &in.ScriptRootPathURL, &out.ScriptRootPathURL
		*out = new(string)
		**out = **in
	}
	if in.ScriptURL != nil {
		in, out := &in.ScriptURL, &out.ScriptURL
		*out = new(string)
		**out = **in
	}
	if in.SecretsFileURL != nil {
		in, out := &in.SecretsFileURL, &out.SecretsFileURL
		*out = new(string)
		**out = **in
	}
	if in.TestData != nil {
		in, out := &in.TestData, &out.TestData
		*out = new(string)
		**out = **in
	}
	if in.TestDataURL != nil {
		in, out := &in.TestDataURL, &out.TestDataURL
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppFunctionObservation.
func (in *FunctionAppFunctionObservation) DeepCopy() *FunctionAppFunctionObservation {
	if in == nil {
		return nil
	}
	out := new(FunctionAppFunctionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppFunctionParameters) DeepCopyInto(out *FunctionAppFunctionParameters) {
	*out = *in
	if in.ConfigJSON != nil {
		in, out := &in.ConfigJSON, &out.ConfigJSON
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]FileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FunctionAppID != nil {
		in, out := &in.FunctionAppID, &out.FunctionAppID
		*out = new(string)
		**out = **in
	}
	if in.FunctionAppIDRef != nil {
		in, out := &in.FunctionAppIDRef, &out.FunctionAppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionAppIDSelector != nil {
		in, out := &in.FunctionAppIDSelector, &out.FunctionAppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Language != nil {
		in, out := &in.Language, &out.Language
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TestData != nil {
		in, out := &in.TestData, &out.TestData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppFunctionParameters.
func (in *FunctionAppFunctionParameters) DeepCopy() *FunctionAppFunctionParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppFunctionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppFunctionSpec) DeepCopyInto(out *FunctionAppFunctionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppFunctionSpec.
func (in *FunctionAppFunctionSpec) DeepCopy() *FunctionAppFunctionSpec {
	if in == nil {
		return nil
	}
	out := new(FunctionAppFunctionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppFunctionStatus) DeepCopyInto(out *FunctionAppFunctionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppFunctionStatus.
func (in *FunctionAppFunctionStatus) DeepCopy() *FunctionAppFunctionStatus {
	if in == nil {
		return nil
	}
	out := new(FunctionAppFunctionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppHybridConnection) DeepCopyInto(out *FunctionAppHybridConnection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppHybridConnection.
func (in *FunctionAppHybridConnection) DeepCopy() *FunctionAppHybridConnection {
	if in == nil {
		return nil
	}
	out := new(FunctionAppHybridConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FunctionAppHybridConnection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppHybridConnectionInitParameters) DeepCopyInto(out *FunctionAppHybridConnectionInitParameters) {
	*out = *in
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SendKeyName != nil {
		in, out := &in.SendKeyName, &out.SendKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppHybridConnectionInitParameters.
func (in *FunctionAppHybridConnectionInitParameters) DeepCopy() *FunctionAppHybridConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppHybridConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppHybridConnectionList) DeepCopyInto(out *FunctionAppHybridConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FunctionAppHybridConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppHybridConnectionList.
func (in *FunctionAppHybridConnectionList) DeepCopy() *FunctionAppHybridConnectionList {
	if in == nil {
		return nil
	}
	out := new(FunctionAppHybridConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FunctionAppHybridConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppHybridConnectionObservation) DeepCopyInto(out *FunctionAppHybridConnectionObservation) {
	*out = *in
	if in.FunctionAppID != nil {
		in, out := &in.FunctionAppID, &out.FunctionAppID
		*out = new(string)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NamespaceName != nil {
		in, out := &in.NamespaceName, &out.NamespaceName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.RelayID != nil {
		in, out := &in.RelayID, &out.RelayID
		*out = new(string)
		**out = **in
	}
	if in.RelayName != nil {
		in, out := &in.RelayName, &out.RelayName
		*out = new(string)
		**out = **in
	}
	if in.SendKeyName != nil {
		in, out := &in.SendKeyName, &out.SendKeyName
		*out = new(string)
		**out = **in
	}
	if in.ServiceBusNamespace != nil {
		in, out := &in.ServiceBusNamespace, &out.ServiceBusNamespace
		*out = new(string)
		**out = **in
	}
	if in.ServiceBusSuffix != nil {
		in, out := &in.ServiceBusSuffix, &out.ServiceBusSuffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppHybridConnectionObservation.
func (in *FunctionAppHybridConnectionObservation) DeepCopy() *FunctionAppHybridConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(FunctionAppHybridConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppHybridConnectionParameters) DeepCopyInto(out *FunctionAppHybridConnectionParameters) {
	*out = *in
	if in.FunctionAppID != nil {
		in, out := &in.FunctionAppID, &out.FunctionAppID
		*out = new(string)
		**out = **in
	}
	if in.FunctionAppIDRef != nil {
		in, out := &in.FunctionAppIDRef, &out.FunctionAppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionAppIDSelector != nil {
		in, out := &in.FunctionAppIDSelector, &out.FunctionAppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.RelayID != nil {
		in, out := &in.RelayID, &out.RelayID
		*out = new(string)
		**out = **in
	}
	if in.RelayIDRef != nil {
		in, out := &in.RelayIDRef, &out.RelayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RelayIDSelector != nil {
		in, out := &in.RelayIDSelector, &out.RelayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SendKeyName != nil {
		in, out := &in.SendKeyName, &out.SendKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppHybridConnectionParameters.
func (in *FunctionAppHybridConnectionParameters) DeepCopy() *FunctionAppHybridConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppHybridConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppHybridConnectionSpec) DeepCopyInto(out *FunctionAppHybridConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppHybridConnectionSpec.
func (in *FunctionAppHybridConnectionSpec) DeepCopy() *FunctionAppHybridConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(FunctionAppHybridConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppHybridConnectionStatus) DeepCopyInto(out *FunctionAppHybridConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppHybridConnectionStatus.
func (in *FunctionAppHybridConnectionStatus) DeepCopy() *FunctionAppHybridConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(FunctionAppHybridConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppInitParameters) DeepCopyInto(out *FunctionAppInitParameters) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]AuthSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientCertMode != nil {
		in, out := &in.ClientCertMode, &out.ClientCertMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]ConnectionStringInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DailyMemoryTimeQuota != nil {
		in, out := &in.DailyMemoryTimeQuota, &out.DailyMemoryTimeQuota
		*out = new(float64)
		**out = **in
	}
	if in.EnableBuiltinLogging != nil {
		in, out := &in.EnableBuiltinLogging, &out.EnableBuiltinLogging
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]SiteConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceControl != nil {
		in, out := &in.SourceControl, &out.SourceControl
		*out = make([]SourceControlInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppInitParameters.
func (in *FunctionAppInitParameters) DeepCopy() *FunctionAppInitParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppList) DeepCopyInto(out *FunctionAppList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FunctionApp, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppList.
func (in *FunctionAppList) DeepCopy() *FunctionAppList {
	if in == nil {
		return nil
	}
	out := new(FunctionAppList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FunctionAppList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppObservation) DeepCopyInto(out *FunctionAppObservation) {
	*out = *in
	if in.AppServicePlanID != nil {
		in, out := &in.AppServicePlanID, &out.AppServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]AuthSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientCertMode != nil {
		in, out := &in.ClientCertMode, &out.ClientCertMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]ConnectionStringObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomDomainVerificationID != nil {
		in, out := &in.CustomDomainVerificationID, &out.CustomDomainVerificationID
		*out = new(string)
		**out = **in
	}
	if in.DailyMemoryTimeQuota != nil {
		in, out := &in.DailyMemoryTimeQuota, &out.DailyMemoryTimeQuota
		*out = new(float64)
		**out = **in
	}
	if in.DefaultHostName != nil {
		in, out := &in.DefaultHostName, &out.DefaultHostName
		*out = new(string)
		**out = **in
	}
	if in.EnableBuiltinLogging != nil {
		in, out := &in.EnableBuiltinLogging, &out.EnableBuiltinLogging
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.OutboundIPAddresses != nil {
		in, out := &in.OutboundIPAddresses, &out.OutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.PossibleOutboundIPAddresses != nil {
		in, out := &in.PossibleOutboundIPAddresses, &out.PossibleOutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]SiteConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SiteCredential != nil {
		in, out := &in.SiteCredential, &out.SiteCredential
		*out = make([]SiteCredentialObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceControl != nil {
		in, out := &in.SourceControl, &out.SourceControl
		*out = make([]SourceControlObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppObservation.
func (in *FunctionAppObservation) DeepCopy() *FunctionAppObservation {
	if in == nil {
		return nil
	}
	out := new(FunctionAppObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppParameters) DeepCopyInto(out *FunctionAppParameters) {
	*out = *in
	if in.AppServicePlanID != nil {
		in, out := &in.AppServicePlanID, &out.AppServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.AppServicePlanIDRef != nil {
		in, out := &in.AppServicePlanIDRef, &out.AppServicePlanIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AppServicePlanIDSelector != nil {
		in, out := &in.AppServicePlanIDSelector, &out.AppServicePlanIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]AuthSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientCertMode != nil {
		in, out := &in.ClientCertMode, &out.ClientCertMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]ConnectionStringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DailyMemoryTimeQuota != nil {
		in, out := &in.DailyMemoryTimeQuota, &out.DailyMemoryTimeQuota
		*out = new(float64)
		**out = **in
	}
	if in.EnableBuiltinLogging != nil {
		in, out := &in.EnableBuiltinLogging, &out.EnableBuiltinLogging
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]SiteConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceControl != nil {
		in, out := &in.SourceControl, &out.SourceControl
		*out = make([]SourceControlParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.StorageAccountAccessKeySecretRef = in.StorageAccountAccessKeySecretRef
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountNameRef != nil {
		in, out := &in.StorageAccountNameRef, &out.StorageAccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountNameSelector != nil {
		in, out := &in.StorageAccountNameSelector, &out.StorageAccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppParameters.
func (in *FunctionAppParameters) DeepCopy() *FunctionAppParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlot) DeepCopyInto(out *FunctionAppSlot) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlot.
func (in *FunctionAppSlot) DeepCopy() *FunctionAppSlot {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FunctionAppSlot) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotAuthSettingsInitParameters) DeepCopyInto(out *FunctionAppSlotAuthSettingsInitParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]AuthSettingsActiveDirectoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParams != nil {
		in, out := &in.AdditionalLoginParams, &out.AdditionalLoginParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]AuthSettingsFacebookInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]AuthSettingsGoogleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]AuthSettingsMicrosoftInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]AuthSettingsTwitterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotAuthSettingsInitParameters.
func (in *FunctionAppSlotAuthSettingsInitParameters) DeepCopy() *FunctionAppSlotAuthSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotAuthSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotAuthSettingsObservation) DeepCopyInto(out *FunctionAppSlotAuthSettingsObservation) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]AuthSettingsActiveDirectoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParams != nil {
		in, out := &in.AdditionalLoginParams, &out.AdditionalLoginParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]AuthSettingsFacebookObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]AuthSettingsGoogleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]AuthSettingsMicrosoftObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]AuthSettingsTwitterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotAuthSettingsObservation.
func (in *FunctionAppSlotAuthSettingsObservation) DeepCopy() *FunctionAppSlotAuthSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotAuthSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotAuthSettingsParameters) DeepCopyInto(out *FunctionAppSlotAuthSettingsParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]AuthSettingsActiveDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParams != nil {
		in, out := &in.AdditionalLoginParams, &out.AdditionalLoginParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]AuthSettingsFacebookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]AuthSettingsGoogleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]AuthSettingsMicrosoftParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]AuthSettingsTwitterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotAuthSettingsParameters.
func (in *FunctionAppSlotAuthSettingsParameters) DeepCopy() *FunctionAppSlotAuthSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotAuthSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotConnectionStringInitParameters) DeepCopyInto(out *FunctionAppSlotConnectionStringInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotConnectionStringInitParameters.
func (in *FunctionAppSlotConnectionStringInitParameters) DeepCopy() *FunctionAppSlotConnectionStringInitParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotConnectionStringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotConnectionStringObservation) DeepCopyInto(out *FunctionAppSlotConnectionStringObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotConnectionStringObservation.
func (in *FunctionAppSlotConnectionStringObservation) DeepCopy() *FunctionAppSlotConnectionStringObservation {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotConnectionStringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotConnectionStringParameters) DeepCopyInto(out *FunctionAppSlotConnectionStringParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	out.ValueSecretRef = in.ValueSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotConnectionStringParameters.
func (in *FunctionAppSlotConnectionStringParameters) DeepCopy() *FunctionAppSlotConnectionStringParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotConnectionStringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotIdentityInitParameters) DeepCopyInto(out *FunctionAppSlotIdentityInitParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotIdentityInitParameters.
func (in *FunctionAppSlotIdentityInitParameters) DeepCopy() *FunctionAppSlotIdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotIdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotIdentityObservation) DeepCopyInto(out *FunctionAppSlotIdentityObservation) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotIdentityObservation.
func (in *FunctionAppSlotIdentityObservation) DeepCopy() *FunctionAppSlotIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotIdentityParameters) DeepCopyInto(out *FunctionAppSlotIdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotIdentityParameters.
func (in *FunctionAppSlotIdentityParameters) DeepCopy() *FunctionAppSlotIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotInitParameters) DeepCopyInto(out *FunctionAppSlotInitParameters) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]FunctionAppSlotAuthSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]FunctionAppSlotConnectionStringInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DailyMemoryTimeQuota != nil {
		in, out := &in.DailyMemoryTimeQuota, &out.DailyMemoryTimeQuota
		*out = new(float64)
		**out = **in
	}
	if in.EnableBuiltinLogging != nil {
		in, out := &in.EnableBuiltinLogging, &out.EnableBuiltinLogging
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]FunctionAppSlotIdentityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]FunctionAppSlotSiteConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotInitParameters.
func (in *FunctionAppSlotInitParameters) DeepCopy() *FunctionAppSlotInitParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotList) DeepCopyInto(out *FunctionAppSlotList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FunctionAppSlot, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotList.
func (in *FunctionAppSlotList) DeepCopy() *FunctionAppSlotList {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FunctionAppSlotList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotObservation) DeepCopyInto(out *FunctionAppSlotObservation) {
	*out = *in
	if in.AppServicePlanID != nil {
		in, out := &in.AppServicePlanID, &out.AppServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]FunctionAppSlotAuthSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]FunctionAppSlotConnectionStringObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DailyMemoryTimeQuota != nil {
		in, out := &in.DailyMemoryTimeQuota, &out.DailyMemoryTimeQuota
		*out = new(float64)
		**out = **in
	}
	if in.DefaultHostName != nil {
		in, out := &in.DefaultHostName, &out.DefaultHostName
		*out = new(string)
		**out = **in
	}
	if in.EnableBuiltinLogging != nil {
		in, out := &in.EnableBuiltinLogging, &out.EnableBuiltinLogging
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FunctionAppName != nil {
		in, out := &in.FunctionAppName, &out.FunctionAppName
		*out = new(string)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]FunctionAppSlotIdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.OutboundIPAddresses != nil {
		in, out := &in.OutboundIPAddresses, &out.OutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.PossibleOutboundIPAddresses != nil {
		in, out := &in.PossibleOutboundIPAddresses, &out.PossibleOutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]FunctionAppSlotSiteConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SiteCredential != nil {
		in, out := &in.SiteCredential, &out.SiteCredential
		*out = make([]FunctionAppSlotSiteCredentialObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotObservation.
func (in *FunctionAppSlotObservation) DeepCopy() *FunctionAppSlotObservation {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotParameters) DeepCopyInto(out *FunctionAppSlotParameters) {
	*out = *in
	if in.AppServicePlanID != nil {
		in, out := &in.AppServicePlanID, &out.AppServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.AppServicePlanIDRef != nil {
		in, out := &in.AppServicePlanIDRef, &out.AppServicePlanIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AppServicePlanIDSelector != nil {
		in, out := &in.AppServicePlanIDSelector, &out.AppServicePlanIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]FunctionAppSlotAuthSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]FunctionAppSlotConnectionStringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DailyMemoryTimeQuota != nil {
		in, out := &in.DailyMemoryTimeQuota, &out.DailyMemoryTimeQuota
		*out = new(float64)
		**out = **in
	}
	if in.EnableBuiltinLogging != nil {
		in, out := &in.EnableBuiltinLogging, &out.EnableBuiltinLogging
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FunctionAppName != nil {
		in, out := &in.FunctionAppName, &out.FunctionAppName
		*out = new(string)
		**out = **in
	}
	if in.FunctionAppNameRef != nil {
		in, out := &in.FunctionAppNameRef, &out.FunctionAppNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionAppNameSelector != nil {
		in, out := &in.FunctionAppNameSelector, &out.FunctionAppNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]FunctionAppSlotIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]FunctionAppSlotSiteConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.StorageAccountAccessKeySecretRef = in.StorageAccountAccessKeySecretRef
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountNameRef != nil {
		in, out := &in.StorageAccountNameRef, &out.StorageAccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountNameSelector != nil {
		in, out := &in.StorageAccountNameSelector, &out.StorageAccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotParameters.
func (in *FunctionAppSlotParameters) DeepCopy() *FunctionAppSlotParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotSiteConfigInitParameters) DeepCopyInto(out *FunctionAppSlotSiteConfigInitParameters) {
	*out = *in
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(float64)
		**out = **in
	}
	if in.AutoSwapSlotName != nil {
		in, out := &in.AutoSwapSlotName, &out.AutoSwapSlotName
		*out = new(string)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]SiteConfigCorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DotnetFrameworkVersion != nil {
		in, out := &in.DotnetFrameworkVersion, &out.DotnetFrameworkVersion
		*out = new(string)
		**out = **in
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(float64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]SiteConfigIPRestrictionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.LinuxFxVersion != nil {
		in, out := &in.LinuxFxVersion, &out.LinuxFxVersion
		*out = new(string)
		**out = **in
	}
	if in.MinTLSVersion != nil {
		in, out := &in.MinTLSVersion, &out.MinTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]SiteConfigScmIPRestrictionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmType != nil {
		in, out := &in.ScmType, &out.ScmType
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorkerProcess != nil {
		in, out := &in.Use32BitWorkerProcess, &out.Use32BitWorkerProcess
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotSiteConfigInitParameters.
func (in *FunctionAppSlotSiteConfigInitParameters) DeepCopy() *FunctionAppSlotSiteConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotSiteConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotSiteConfigObservation) DeepCopyInto(out *FunctionAppSlotSiteConfigObservation) {
	*out = *in
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(float64)
		**out = **in
	}
	if in.AutoSwapSlotName != nil {
		in, out := &in.AutoSwapSlotName, &out.AutoSwapSlotName
		*out = new(string)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]SiteConfigCorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DotnetFrameworkVersion != nil {
		in, out := &in.DotnetFrameworkVersion, &out.DotnetFrameworkVersion
		*out = new(string)
		**out = **in
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(float64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]SiteConfigIPRestrictionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.LinuxFxVersion != nil {
		in, out := &in.LinuxFxVersion, &out.LinuxFxVersion
		*out = new(string)
		**out = **in
	}
	if in.MinTLSVersion != nil {
		in, out := &in.MinTLSVersion, &out.MinTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]SiteConfigScmIPRestrictionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmType != nil {
		in, out := &in.ScmType, &out.ScmType
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorkerProcess != nil {
		in, out := &in.Use32BitWorkerProcess, &out.Use32BitWorkerProcess
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotSiteConfigObservation.
func (in *FunctionAppSlotSiteConfigObservation) DeepCopy() *FunctionAppSlotSiteConfigObservation {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotSiteConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotSiteConfigParameters) DeepCopyInto(out *FunctionAppSlotSiteConfigParameters) {
	*out = *in
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(float64)
		**out = **in
	}
	if in.AutoSwapSlotName != nil {
		in, out := &in.AutoSwapSlotName, &out.AutoSwapSlotName
		*out = new(string)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]SiteConfigCorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DotnetFrameworkVersion != nil {
		in, out := &in.DotnetFrameworkVersion, &out.DotnetFrameworkVersion
		*out = new(string)
		**out = **in
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(float64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]SiteConfigIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.LinuxFxVersion != nil {
		in, out := &in.LinuxFxVersion, &out.LinuxFxVersion
		*out = new(string)
		**out = **in
	}
	if in.MinTLSVersion != nil {
		in, out := &in.MinTLSVersion, &out.MinTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]SiteConfigScmIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmType != nil {
		in, out := &in.ScmType, &out.ScmType
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorkerProcess != nil {
		in, out := &in.Use32BitWorkerProcess, &out.Use32BitWorkerProcess
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotSiteConfigParameters.
func (in *FunctionAppSlotSiteConfigParameters) DeepCopy() *FunctionAppSlotSiteConfigParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotSiteConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotSiteCredentialInitParameters) DeepCopyInto(out *FunctionAppSlotSiteCredentialInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotSiteCredentialInitParameters.
func (in *FunctionAppSlotSiteCredentialInitParameters) DeepCopy() *FunctionAppSlotSiteCredentialInitParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotSiteCredentialInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotSiteCredentialObservation) DeepCopyInto(out *FunctionAppSlotSiteCredentialObservation) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotSiteCredentialObservation.
func (in *FunctionAppSlotSiteCredentialObservation) DeepCopy() *FunctionAppSlotSiteCredentialObservation {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotSiteCredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotSiteCredentialParameters) DeepCopyInto(out *FunctionAppSlotSiteCredentialParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotSiteCredentialParameters.
func (in *FunctionAppSlotSiteCredentialParameters) DeepCopy() *FunctionAppSlotSiteCredentialParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotSiteCredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotSpec) DeepCopyInto(out *FunctionAppSlotSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotSpec.
func (in *FunctionAppSlotSpec) DeepCopy() *FunctionAppSlotSpec {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotStatus) DeepCopyInto(out *FunctionAppSlotStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotStatus.
func (in *FunctionAppSlotStatus) DeepCopy() *FunctionAppSlotStatus {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSpec) DeepCopyInto(out *FunctionAppSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSpec.
func (in *FunctionAppSpec) DeepCopy() *FunctionAppSpec {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppStatus) DeepCopyInto(out *FunctionAppStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppStatus.
func (in *FunctionAppStatus) DeepCopy() *FunctionAppStatus {
	if in == nil {
		return nil
	}
	out := new(FunctionAppStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubInitParameters) DeepCopyInto(out *GithubInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubInitParameters.
func (in *GithubInitParameters) DeepCopy() *GithubInitParameters {
	if in == nil {
		return nil
	}
	out := new(GithubInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubObservation) DeepCopyInto(out *GithubObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubObservation.
func (in *GithubObservation) DeepCopy() *GithubObservation {
	if in == nil {
		return nil
	}
	out := new(GithubObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubParameters) DeepCopyInto(out *GithubParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubParameters.
func (in *GithubParameters) DeepCopy() *GithubParameters {
	if in == nil {
		return nil
	}
	out := new(GithubParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubV2InitParameters) DeepCopyInto(out *GithubV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubV2InitParameters.
func (in *GithubV2InitParameters) DeepCopy() *GithubV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(GithubV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubV2Observation) DeepCopyInto(out *GithubV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubV2Observation.
func (in *GithubV2Observation) DeepCopy() *GithubV2Observation {
	if in == nil {
		return nil
	}
	out := new(GithubV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubV2Parameters) DeepCopyInto(out *GithubV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubV2Parameters.
func (in *GithubV2Parameters) DeepCopy() *GithubV2Parameters {
	if in == nil {
		return nil
	}
	out := new(GithubV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleInitParameters) DeepCopyInto(out *GoogleInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleInitParameters.
func (in *GoogleInitParameters) DeepCopy() *GoogleInitParameters {
	if in == nil {
		return nil
	}
	out := new(GoogleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleObservation) DeepCopyInto(out *GoogleObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleObservation.
func (in *GoogleObservation) DeepCopy() *GoogleObservation {
	if in == nil {
		return nil
	}
	out := new(GoogleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleParameters) DeepCopyInto(out *GoogleParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleParameters.
func (in *GoogleParameters) DeepCopy() *GoogleParameters {
	if in == nil {
		return nil
	}
	out := new(GoogleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleV2InitParameters) DeepCopyInto(out *GoogleV2InitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleV2InitParameters.
func (in *GoogleV2InitParameters) DeepCopy() *GoogleV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(GoogleV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleV2Observation) DeepCopyInto(out *GoogleV2Observation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleV2Observation.
func (in *GoogleV2Observation) DeepCopy() *GoogleV2Observation {
	if in == nil {
		return nil
	}
	out := new(GoogleV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleV2Parameters) DeepCopyInto(out *GoogleV2Parameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleV2Parameters.
func (in *GoogleV2Parameters) DeepCopy() *GoogleV2Parameters {
	if in == nil {
		return nil
	}
	out := new(GoogleV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPLogsAzureBlobStorageInitParameters) DeepCopyInto(out *HTTPLogsAzureBlobStorageInitParameters) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPLogsAzureBlobStorageInitParameters.
func (in *HTTPLogsAzureBlobStorageInitParameters) DeepCopy() *HTTPLogsAzureBlobStorageInitParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPLogsAzureBlobStorageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPLogsAzureBlobStorageObservation) DeepCopyInto(out *HTTPLogsAzureBlobStorageObservation) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPLogsAzureBlobStorageObservation.
func (in *HTTPLogsAzureBlobStorageObservation) DeepCopy() *HTTPLogsAzureBlobStorageObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPLogsAzureBlobStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPLogsAzureBlobStorageParameters) DeepCopyInto(out *HTTPLogsAzureBlobStorageParameters) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	out.SASURLSecretRef = in.SASURLSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPLogsAzureBlobStorageParameters.
func (in *HTTPLogsAzureBlobStorageParameters) DeepCopy() *HTTPLogsAzureBlobStorageParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPLogsAzureBlobStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPLogsFileSystemInitParameters) DeepCopyInto(out *HTTPLogsFileSystemInitParameters) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.RetentionInMb != nil {
		in, out := &in.RetentionInMb, &out.RetentionInMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPLogsFileSystemInitParameters.
func (in *HTTPLogsFileSystemInitParameters) DeepCopy() *HTTPLogsFileSystemInitParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPLogsFileSystemInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPLogsFileSystemObservation) DeepCopyInto(out *HTTPLogsFileSystemObservation) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.RetentionInMb != nil {
		in, out := &in.RetentionInMb, &out.RetentionInMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPLogsFileSystemObservation.
func (in *HTTPLogsFileSystemObservation) DeepCopy() *HTTPLogsFileSystemObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPLogsFileSystemObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPLogsFileSystemParameters) DeepCopyInto(out *HTTPLogsFileSystemParameters) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.RetentionInMb != nil {
		in, out := &in.RetentionInMb, &out.RetentionInMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPLogsFileSystemParameters.
func (in *HTTPLogsFileSystemParameters) DeepCopy() *HTTPLogsFileSystemParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPLogsFileSystemParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPLogsInitParameters) DeepCopyInto(out *HTTPLogsInitParameters) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]HTTPLogsAzureBlobStorageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystem != nil {
		in, out := &in.FileSystem, &out.FileSystem
		*out = make([]FileSystemInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPLogsInitParameters.
func (in *HTTPLogsInitParameters) DeepCopy() *HTTPLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPLogsObservation) DeepCopyInto(out *HTTPLogsObservation) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]HTTPLogsAzureBlobStorageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystem != nil {
		in, out := &in.FileSystem, &out.FileSystem
		*out = make([]FileSystemObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPLogsObservation.
func (in *HTTPLogsObservation) DeepCopy() *HTTPLogsObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPLogsParameters) DeepCopyInto(out *HTTPLogsParameters) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]HTTPLogsAzureBlobStorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystem != nil {
		in, out := &in.FileSystem, &out.FileSystem
		*out = make([]FileSystemParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPLogsParameters.
func (in *HTTPLogsParameters) DeepCopy() *HTTPLogsParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadersInitParameters) DeepCopyInto(out *HeadersInitParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadersInitParameters.
func (in *HeadersInitParameters) DeepCopy() *HeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(HeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadersObservation) DeepCopyInto(out *HeadersObservation) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadersObservation.
func (in *HeadersObservation) DeepCopy() *HeadersObservation {
	if in == nil {
		return nil
	}
	out := new(HeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadersParameters) DeepCopyInto(out *HeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadersParameters.
func (in *HeadersParameters) DeepCopy() *HeadersParameters {
	if in == nil {
		return nil
	}
	out := new(HeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPRestrictionHeadersInitParameters) DeepCopyInto(out *IPRestrictionHeadersInitParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPRestrictionHeadersInitParameters.
func (in *IPRestrictionHeadersInitParameters) DeepCopy() *IPRestrictionHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPRestrictionHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPRestrictionHeadersObservation) DeepCopyInto(out *IPRestrictionHeadersObservation) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPRestrictionHeadersObservation.
func (in *IPRestrictionHeadersObservation) DeepCopy() *IPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(IPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPRestrictionHeadersParameters) DeepCopyInto(out *IPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPRestrictionHeadersParameters.
func (in *IPRestrictionHeadersParameters) DeepCopy() *IPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(IPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPRestrictionInitParameters) DeepCopyInto(out *IPRestrictionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]HeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPRestrictionInitParameters.
func (in *IPRestrictionInitParameters) DeepCopy() *IPRestrictionInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPRestrictionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPRestrictionObservation) DeepCopyInto(out *IPRestrictionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]HeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPRestrictionObservation.
func (in *IPRestrictionObservation) DeepCopy() *IPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(IPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPRestrictionParameters) DeepCopyInto(out *IPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]HeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPRestrictionParameters.
func (in *IPRestrictionParameters) DeepCopy() *IPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(IPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityInitParameters) DeepCopyInto(out *IdentityInitParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityInitParameters.
func (in *IdentityInitParameters) DeepCopy() *IdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityObservation) DeepCopyInto(out *IdentityObservation) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityObservation.
func (in *IdentityObservation) DeepCopy() *IdentityObservation {
	if in == nil {
		return nil
	}
	out := new(IdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityParameters) DeepCopyInto(out *IdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityParameters.
func (in *IdentityParameters) DeepCopy() *IdentityParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionApp) DeepCopyInto(out *LinuxFunctionApp) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionApp.
func (in *LinuxFunctionApp) DeepCopy() *LinuxFunctionApp {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionApp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinuxFunctionApp) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsActiveDirectoryInitParameters) DeepCopyInto(out *LinuxFunctionAppAuthSettingsActiveDirectoryInitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsActiveDirectoryInitParameters.
func (in *LinuxFunctionAppAuthSettingsActiveDirectoryInitParameters) DeepCopy() *LinuxFunctionAppAuthSettingsActiveDirectoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsActiveDirectoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsActiveDirectoryObservation) DeepCopyInto(out *LinuxFunctionAppAuthSettingsActiveDirectoryObservation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsActiveDirectoryObservation.
func (in *LinuxFunctionAppAuthSettingsActiveDirectoryObservation) DeepCopy() *LinuxFunctionAppAuthSettingsActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsActiveDirectoryParameters) DeepCopyInto(out *LinuxFunctionAppAuthSettingsActiveDirectoryParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsActiveDirectoryParameters.
func (in *LinuxFunctionAppAuthSettingsActiveDirectoryParameters) DeepCopy() *LinuxFunctionAppAuthSettingsActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsFacebookInitParameters) DeepCopyInto(out *LinuxFunctionAppAuthSettingsFacebookInitParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsFacebookInitParameters.
func (in *LinuxFunctionAppAuthSettingsFacebookInitParameters) DeepCopy() *LinuxFunctionAppAuthSettingsFacebookInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsFacebookInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsFacebookObservation) DeepCopyInto(out *LinuxFunctionAppAuthSettingsFacebookObservation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsFacebookObservation.
func (in *LinuxFunctionAppAuthSettingsFacebookObservation) DeepCopy() *LinuxFunctionAppAuthSettingsFacebookObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsFacebookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsFacebookParameters) DeepCopyInto(out *LinuxFunctionAppAuthSettingsFacebookParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSecretRef != nil {
		in, out := &in.AppSecretSecretRef, &out.AppSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsFacebookParameters.
func (in *LinuxFunctionAppAuthSettingsFacebookParameters) DeepCopy() *LinuxFunctionAppAuthSettingsFacebookParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsFacebookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsGoogleInitParameters) DeepCopyInto(out *LinuxFunctionAppAuthSettingsGoogleInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsGoogleInitParameters.
func (in *LinuxFunctionAppAuthSettingsGoogleInitParameters) DeepCopy() *LinuxFunctionAppAuthSettingsGoogleInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsGoogleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsGoogleObservation) DeepCopyInto(out *LinuxFunctionAppAuthSettingsGoogleObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsGoogleObservation.
func (in *LinuxFunctionAppAuthSettingsGoogleObservation) DeepCopy() *LinuxFunctionAppAuthSettingsGoogleObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsGoogleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsGoogleParameters) DeepCopyInto(out *LinuxFunctionAppAuthSettingsGoogleParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsGoogleParameters.
func (in *LinuxFunctionAppAuthSettingsGoogleParameters) DeepCopy() *LinuxFunctionAppAuthSettingsGoogleParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsGoogleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsInitParameters) DeepCopyInto(out *LinuxFunctionAppAuthSettingsInitParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]LinuxFunctionAppAuthSettingsActiveDirectoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]LinuxFunctionAppAuthSettingsFacebookInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]GithubInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]LinuxFunctionAppAuthSettingsGoogleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]LinuxFunctionAppAuthSettingsMicrosoftInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]LinuxFunctionAppAuthSettingsTwitterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsInitParameters.
func (in *LinuxFunctionAppAuthSettingsInitParameters) DeepCopy() *LinuxFunctionAppAuthSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsMicrosoftInitParameters) DeepCopyInto(out *LinuxFunctionAppAuthSettingsMicrosoftInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsMicrosoftInitParameters.
func (in *LinuxFunctionAppAuthSettingsMicrosoftInitParameters) DeepCopy() *LinuxFunctionAppAuthSettingsMicrosoftInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsMicrosoftInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsMicrosoftObservation) DeepCopyInto(out *LinuxFunctionAppAuthSettingsMicrosoftObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsMicrosoftObservation.
func (in *LinuxFunctionAppAuthSettingsMicrosoftObservation) DeepCopy() *LinuxFunctionAppAuthSettingsMicrosoftObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsMicrosoftObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsMicrosoftParameters) DeepCopyInto(out *LinuxFunctionAppAuthSettingsMicrosoftParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsMicrosoftParameters.
func (in *LinuxFunctionAppAuthSettingsMicrosoftParameters) DeepCopy() *LinuxFunctionAppAuthSettingsMicrosoftParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsMicrosoftParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsObservation) DeepCopyInto(out *LinuxFunctionAppAuthSettingsObservation) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]LinuxFunctionAppAuthSettingsActiveDirectoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]LinuxFunctionAppAuthSettingsFacebookObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]GithubObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]LinuxFunctionAppAuthSettingsGoogleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]LinuxFunctionAppAuthSettingsMicrosoftObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]LinuxFunctionAppAuthSettingsTwitterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsObservation.
func (in *LinuxFunctionAppAuthSettingsObservation) DeepCopy() *LinuxFunctionAppAuthSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsParameters) DeepCopyInto(out *LinuxFunctionAppAuthSettingsParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]LinuxFunctionAppAuthSettingsActiveDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]LinuxFunctionAppAuthSettingsFacebookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]GithubParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]LinuxFunctionAppAuthSettingsGoogleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]LinuxFunctionAppAuthSettingsMicrosoftParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]LinuxFunctionAppAuthSettingsTwitterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsParameters.
func (in *LinuxFunctionAppAuthSettingsParameters) DeepCopy() *LinuxFunctionAppAuthSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsTwitterInitParameters) DeepCopyInto(out *LinuxFunctionAppAuthSettingsTwitterInitParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsTwitterInitParameters.
func (in *LinuxFunctionAppAuthSettingsTwitterInitParameters) DeepCopy() *LinuxFunctionAppAuthSettingsTwitterInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsTwitterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsTwitterObservation) DeepCopyInto(out *LinuxFunctionAppAuthSettingsTwitterObservation) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsTwitterObservation.
func (in *LinuxFunctionAppAuthSettingsTwitterObservation) DeepCopy() *LinuxFunctionAppAuthSettingsTwitterObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsTwitterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsTwitterParameters) DeepCopyInto(out *LinuxFunctionAppAuthSettingsTwitterParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSecretRef != nil {
		in, out := &in.ConsumerSecretSecretRef, &out.ConsumerSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsTwitterParameters.
func (in *LinuxFunctionAppAuthSettingsTwitterParameters) DeepCopy() *LinuxFunctionAppAuthSettingsTwitterParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsTwitterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppConnectionStringInitParameters) DeepCopyInto(out *LinuxFunctionAppConnectionStringInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppConnectionStringInitParameters.
func (in *LinuxFunctionAppConnectionStringInitParameters) DeepCopy() *LinuxFunctionAppConnectionStringInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppConnectionStringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppConnectionStringObservation) DeepCopyInto(out *LinuxFunctionAppConnectionStringObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppConnectionStringObservation.
func (in *LinuxFunctionAppConnectionStringObservation) DeepCopy() *LinuxFunctionAppConnectionStringObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppConnectionStringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppConnectionStringParameters) DeepCopyInto(out *LinuxFunctionAppConnectionStringParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	out.ValueSecretRef = in.ValueSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppConnectionStringParameters.
func (in *LinuxFunctionAppConnectionStringParameters) DeepCopy() *LinuxFunctionAppConnectionStringParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppConnectionStringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppIdentityInitParameters) DeepCopyInto(out *LinuxFunctionAppIdentityInitParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppIdentityInitParameters.
func (in *LinuxFunctionAppIdentityInitParameters) DeepCopy() *LinuxFunctionAppIdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppIdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppIdentityObservation) DeepCopyInto(out *LinuxFunctionAppIdentityObservation) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppIdentityObservation.
func (in *LinuxFunctionAppIdentityObservation) DeepCopy() *LinuxFunctionAppIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppIdentityParameters) DeepCopyInto(out *LinuxFunctionAppIdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppIdentityParameters.
func (in *LinuxFunctionAppIdentityParameters) DeepCopy() *LinuxFunctionAppIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppInitParameters) DeepCopyInto(out *LinuxFunctionAppInitParameters) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]LinuxFunctionAppAuthSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]AuthSettingsV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]BackupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BuiltinLoggingEnabled != nil {
		in, out := &in.BuiltinLoggingEnabled, &out.BuiltinLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]LinuxFunctionAppConnectionStringInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContentShareForceDisabled != nil {
		in, out := &in.ContentShareForceDisabled, &out.ContentShareForceDisabled
		*out = new(bool)
		**out = **in
	}
	if in.DailyMemoryTimeQuota != nil {
		in, out := &in.DailyMemoryTimeQuota, &out.DailyMemoryTimeQuota
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FunctionsExtensionVersion != nil {
		in, out := &in.FunctionsExtensionVersion, &out.FunctionsExtensionVersion
		*out = new(string)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]LinuxFunctionAppIdentityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]LinuxFunctionAppSiteConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StickySettings != nil {
		in, out := &in.StickySettings, &out.StickySettings
		*out = make([]StickySettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]StorageAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageKeyVaultSecretID != nil {
		in, out := &in.StorageKeyVaultSecretID, &out.StorageKeyVaultSecretID
		*out = new(string)
		**out = **in
	}
	if in.StorageUsesManagedIdentity != nil {
		in, out := &in.StorageUsesManagedIdentity, &out.StorageUsesManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZipDeployFile != nil {
		in, out := &in.ZipDeployFile, &out.ZipDeployFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppInitParameters.
func (in *LinuxFunctionAppInitParameters) DeepCopy() *LinuxFunctionAppInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppList) DeepCopyInto(out *LinuxFunctionAppList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LinuxFunctionApp, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppList.
func (in *LinuxFunctionAppList) DeepCopy() *LinuxFunctionAppList {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinuxFunctionAppList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppObservation) DeepCopyInto(out *LinuxFunctionAppObservation) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]LinuxFunctionAppAuthSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]AuthSettingsV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]BackupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BuiltinLoggingEnabled != nil {
		in, out := &in.BuiltinLoggingEnabled, &out.BuiltinLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]LinuxFunctionAppConnectionStringObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContentShareForceDisabled != nil {
		in, out := &in.ContentShareForceDisabled, &out.ContentShareForceDisabled
		*out = new(bool)
		**out = **in
	}
	if in.DailyMemoryTimeQuota != nil {
		in, out := &in.DailyMemoryTimeQuota, &out.DailyMemoryTimeQuota
		*out = new(float64)
		**out = **in
	}
	if in.DefaultHostName != nil {
		in, out := &in.DefaultHostName, &out.DefaultHostName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FunctionsExtensionVersion != nil {
		in, out := &in.FunctionsExtensionVersion, &out.FunctionsExtensionVersion
		*out = new(string)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.HostingEnvironmentID != nil {
		in, out := &in.HostingEnvironmentID, &out.HostingEnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]LinuxFunctionAppIdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutboundIPAddressList != nil {
		in, out := &in.OutboundIPAddressList, &out.OutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OutboundIPAddresses != nil {
		in, out := &in.OutboundIPAddresses, &out.OutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.PossibleOutboundIPAddressList != nil {
		in, out := &in.PossibleOutboundIPAddressList, &out.PossibleOutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PossibleOutboundIPAddresses != nil {
		in, out := &in.PossibleOutboundIPAddresses, &out.PossibleOutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]LinuxFunctionAppSiteConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StickySettings != nil {
		in, out := &in.StickySettings, &out.StickySettings
		*out = make([]StickySettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]StorageAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.StorageKeyVaultSecretID != nil {
		in, out := &in.StorageKeyVaultSecretID, &out.StorageKeyVaultSecretID
		*out = new(string)
		**out = **in
	}
	if in.StorageUsesManagedIdentity != nil {
		in, out := &in.StorageUsesManagedIdentity, &out.StorageUsesManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.ZipDeployFile != nil {
		in, out := &in.ZipDeployFile, &out.ZipDeployFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppObservation.
func (in *LinuxFunctionAppObservation) DeepCopy() *LinuxFunctionAppObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppParameters) DeepCopyInto(out *LinuxFunctionAppParameters) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]LinuxFunctionAppAuthSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]AuthSettingsV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]BackupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BuiltinLoggingEnabled != nil {
		in, out := &in.BuiltinLoggingEnabled, &out.BuiltinLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]LinuxFunctionAppConnectionStringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContentShareForceDisabled != nil {
		in, out := &in.ContentShareForceDisabled, &out.ContentShareForceDisabled
		*out = new(bool)
		**out = **in
	}
	if in.DailyMemoryTimeQuota != nil {
		in, out := &in.DailyMemoryTimeQuota, &out.DailyMemoryTimeQuota
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FunctionsExtensionVersion != nil {
		in, out := &in.FunctionsExtensionVersion, &out.FunctionsExtensionVersion
		*out = new(string)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]LinuxFunctionAppIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanIDRef != nil {
		in, out := &in.ServicePlanIDRef, &out.ServicePlanIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServicePlanIDSelector != nil {
		in, out := &in.ServicePlanIDSelector, &out.ServicePlanIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]LinuxFunctionAppSiteConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StickySettings != nil {
		in, out := &in.StickySettings, &out.StickySettings
		*out = make([]StickySettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]StorageAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountAccessKeySecretRef != nil {
		in, out := &in.StorageAccountAccessKeySecretRef, &out.StorageAccountAccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountNameRef != nil {
		in, out := &in.StorageAccountNameRef, &out.StorageAccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountNameSelector != nil {
		in, out := &in.StorageAccountNameSelector, &out.StorageAccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageKeyVaultSecretID != nil {
		in, out := &in.StorageKeyVaultSecretID, &out.StorageKeyVaultSecretID
		*out = new(string)
		**out = **in
	}
	if in.StorageUsesManagedIdentity != nil {
		in, out := &in.StorageUsesManagedIdentity, &out.StorageUsesManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ZipDeployFile != nil {
		in, out := &in.ZipDeployFile, &out.ZipDeployFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppParameters.
func (in *LinuxFunctionAppParameters) DeepCopy() *LinuxFunctionAppParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigCorsInitParameters) DeepCopyInto(out *LinuxFunctionAppSiteConfigCorsInitParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigCorsInitParameters.
func (in *LinuxFunctionAppSiteConfigCorsInitParameters) DeepCopy() *LinuxFunctionAppSiteConfigCorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigCorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigCorsObservation) DeepCopyInto(out *LinuxFunctionAppSiteConfigCorsObservation) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigCorsObservation.
func (in *LinuxFunctionAppSiteConfigCorsObservation) DeepCopy() *LinuxFunctionAppSiteConfigCorsObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigCorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigCorsParameters) DeepCopyInto(out *LinuxFunctionAppSiteConfigCorsParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigCorsParameters.
func (in *LinuxFunctionAppSiteConfigCorsParameters) DeepCopy() *LinuxFunctionAppSiteConfigCorsParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigCorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigIPRestrictionInitParameters) DeepCopyInto(out *LinuxFunctionAppSiteConfigIPRestrictionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]SiteConfigIPRestrictionHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigIPRestrictionInitParameters.
func (in *LinuxFunctionAppSiteConfigIPRestrictionInitParameters) DeepCopy() *LinuxFunctionAppSiteConfigIPRestrictionInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigIPRestrictionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigIPRestrictionObservation) DeepCopyInto(out *LinuxFunctionAppSiteConfigIPRestrictionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]SiteConfigIPRestrictionHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigIPRestrictionObservation.
func (in *LinuxFunctionAppSiteConfigIPRestrictionObservation) DeepCopy() *LinuxFunctionAppSiteConfigIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigIPRestrictionParameters) DeepCopyInto(out *LinuxFunctionAppSiteConfigIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]SiteConfigIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigIPRestrictionParameters.
func (in *LinuxFunctionAppSiteConfigIPRestrictionParameters) DeepCopy() *LinuxFunctionAppSiteConfigIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigInitParameters) DeepCopyInto(out *LinuxFunctionAppSiteConfigInitParameters) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(float64)
		**out = **in
	}
	if in.AppServiceLogs != nil {
		in, out := &in.AppServiceLogs, &out.AppServiceLogs
		*out = make([]AppServiceLogsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]ApplicationStackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainerRegistryManagedIdentityClientID != nil {
		in, out := &in.ContainerRegistryManagedIdentityClientID, &out.ContainerRegistryManagedIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryUseManagedIdentity != nil {
		in, out := &in.ContainerRegistryUseManagedIdentity, &out.ContainerRegistryUseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]LinuxFunctionAppSiteConfigCorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(float64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]LinuxFunctionAppSiteConfigIPRestrictionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]LinuxFunctionAppSiteConfigScmIPRestrictionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigInitParameters.
func (in *LinuxFunctionAppSiteConfigInitParameters) DeepCopy() *LinuxFunctionAppSiteConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigObservation) DeepCopyInto(out *LinuxFunctionAppSiteConfigObservation) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(float64)
		**out = **in
	}
	if in.AppServiceLogs != nil {
		in, out := &in.AppServiceLogs, &out.AppServiceLogs
		*out = make([]AppServiceLogsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]ApplicationStackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainerRegistryManagedIdentityClientID != nil {
		in, out := &in.ContainerRegistryManagedIdentityClientID, &out.ContainerRegistryManagedIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryUseManagedIdentity != nil {
		in, out := &in.ContainerRegistryUseManagedIdentity, &out.ContainerRegistryUseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]LinuxFunctionAppSiteConfigCorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DetailedErrorLoggingEnabled != nil {
		in, out := &in.DetailedErrorLoggingEnabled, &out.DetailedErrorLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(float64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]LinuxFunctionAppSiteConfigIPRestrictionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LinuxFxVersion != nil {
		in, out := &in.LinuxFxVersion, &out.LinuxFxVersion
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]LinuxFunctionAppSiteConfigScmIPRestrictionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmType != nil {
		in, out := &in.ScmType, &out.ScmType
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigObservation.
func (in *LinuxFunctionAppSiteConfigObservation) DeepCopy() *LinuxFunctionAppSiteConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigParameters) DeepCopyInto(out *LinuxFunctionAppSiteConfigParameters) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(float64)
		**out = **in
	}
	if in.AppServiceLogs != nil {
		in, out := &in.AppServiceLogs, &out.AppServiceLogs
		*out = make([]AppServiceLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationInsightsConnectionStringSecretRef != nil {
		in, out := &in.ApplicationInsightsConnectionStringSecretRef, &out.ApplicationInsightsConnectionStringSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ApplicationInsightsKeySecretRef != nil {
		in, out := &in.ApplicationInsightsKeySecretRef, &out.ApplicationInsightsKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]ApplicationStackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainerRegistryManagedIdentityClientID != nil {
		in, out := &in.ContainerRegistryManagedIdentityClientID, &out.ContainerRegistryManagedIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryUseManagedIdentity != nil {
		in, out := &in.ContainerRegistryUseManagedIdentity, &out.ContainerRegistryUseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]LinuxFunctionAppSiteConfigCorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(float64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]LinuxFunctionAppSiteConfigIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]LinuxFunctionAppSiteConfigScmIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigParameters.
func (in *LinuxFunctionAppSiteConfigParameters) DeepCopy() *LinuxFunctionAppSiteConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigScmIPRestrictionHeadersInitParameters) DeepCopyInto(out *LinuxFunctionAppSiteConfigScmIPRestrictionHeadersInitParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigScmIPRestrictionHeadersInitParameters.
func (in *LinuxFunctionAppSiteConfigScmIPRestrictionHeadersInitParameters) DeepCopy() *LinuxFunctionAppSiteConfigScmIPRestrictionHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigScmIPRestrictionHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigScmIPRestrictionHeadersObservation) DeepCopyInto(out *LinuxFunctionAppSiteConfigScmIPRestrictionHeadersObservation) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigScmIPRestrictionHeadersObservation.
func (in *LinuxFunctionAppSiteConfigScmIPRestrictionHeadersObservation) DeepCopy() *LinuxFunctionAppSiteConfigScmIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigScmIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigScmIPRestrictionHeadersParameters) DeepCopyInto(out *LinuxFunctionAppSiteConfigScmIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigScmIPRestrictionHeadersParameters.
func (in *LinuxFunctionAppSiteConfigScmIPRestrictionHeadersParameters) DeepCopy() *LinuxFunctionAppSiteConfigScmIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigScmIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigScmIPRestrictionInitParameters) DeepCopyInto(out *LinuxFunctionAppSiteConfigScmIPRestrictionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxFunctionAppSiteConfigScmIPRestrictionHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigScmIPRestrictionInitParameters.
func (in *LinuxFunctionAppSiteConfigScmIPRestrictionInitParameters) DeepCopy() *LinuxFunctionAppSiteConfigScmIPRestrictionInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigScmIPRestrictionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigScmIPRestrictionObservation) DeepCopyInto(out *LinuxFunctionAppSiteConfigScmIPRestrictionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxFunctionAppSiteConfigScmIPRestrictionHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigScmIPRestrictionObservation.
func (in *LinuxFunctionAppSiteConfigScmIPRestrictionObservation) DeepCopy() *LinuxFunctionAppSiteConfigScmIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigScmIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigScmIPRestrictionParameters) DeepCopyInto(out *LinuxFunctionAppSiteConfigScmIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxFunctionAppSiteConfigScmIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigScmIPRestrictionParameters.
func (in *LinuxFunctionAppSiteConfigScmIPRestrictionParameters) DeepCopy() *LinuxFunctionAppSiteConfigScmIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigScmIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteCredentialInitParameters) DeepCopyInto(out *LinuxFunctionAppSiteCredentialInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteCredentialInitParameters.
func (in *LinuxFunctionAppSiteCredentialInitParameters) DeepCopy() *LinuxFunctionAppSiteCredentialInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteCredentialInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteCredentialObservation) DeepCopyInto(out *LinuxFunctionAppSiteCredentialObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteCredentialObservation.
func (in *LinuxFunctionAppSiteCredentialObservation) DeepCopy() *LinuxFunctionAppSiteCredentialObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteCredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteCredentialParameters) DeepCopyInto(out *LinuxFunctionAppSiteCredentialParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteCredentialParameters.
func (in *LinuxFunctionAppSiteCredentialParameters) DeepCopy() *LinuxFunctionAppSiteCredentialParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteCredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlot) DeepCopyInto(out *LinuxFunctionAppSlot) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlot.
func (in *LinuxFunctionAppSlot) DeepCopy() *LinuxFunctionAppSlot {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinuxFunctionAppSlot) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsActiveDirectoryInitParameters) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsActiveDirectoryInitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsActiveDirectoryInitParameters.
func (in *LinuxFunctionAppSlotAuthSettingsActiveDirectoryInitParameters) DeepCopy() *LinuxFunctionAppSlotAuthSettingsActiveDirectoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsActiveDirectoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsActiveDirectoryObservation) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsActiveDirectoryObservation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsActiveDirectoryObservation.
func (in *LinuxFunctionAppSlotAuthSettingsActiveDirectoryObservation) DeepCopy() *LinuxFunctionAppSlotAuthSettingsActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsActiveDirectoryParameters) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsActiveDirectoryParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsActiveDirectoryParameters.
func (in *LinuxFunctionAppSlotAuthSettingsActiveDirectoryParameters) DeepCopy() *LinuxFunctionAppSlotAuthSettingsActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsFacebookInitParameters) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsFacebookInitParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsFacebookInitParameters.
func (in *LinuxFunctionAppSlotAuthSettingsFacebookInitParameters) DeepCopy() *LinuxFunctionAppSlotAuthSettingsFacebookInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsFacebookInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsFacebookObservation) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsFacebookObservation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsFacebookObservation.
func (in *LinuxFunctionAppSlotAuthSettingsFacebookObservation) DeepCopy() *LinuxFunctionAppSlotAuthSettingsFacebookObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsFacebookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsFacebookParameters) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsFacebookParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSecretRef != nil {
		in, out := &in.AppSecretSecretRef, &out.AppSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsFacebookParameters.
func (in *LinuxFunctionAppSlotAuthSettingsFacebookParameters) DeepCopy() *LinuxFunctionAppSlotAuthSettingsFacebookParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsFacebookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsGoogleInitParameters) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsGoogleInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsGoogleInitParameters.
func (in *LinuxFunctionAppSlotAuthSettingsGoogleInitParameters) DeepCopy() *LinuxFunctionAppSlotAuthSettingsGoogleInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsGoogleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsGoogleObservation) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsGoogleObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsGoogleObservation.
func (in *LinuxFunctionAppSlotAuthSettingsGoogleObservation) DeepCopy() *LinuxFunctionAppSlotAuthSettingsGoogleObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsGoogleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsGoogleParameters) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsGoogleParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsGoogleParameters.
func (in *LinuxFunctionAppSlotAuthSettingsGoogleParameters) DeepCopy() *LinuxFunctionAppSlotAuthSettingsGoogleParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsGoogleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsInitParameters) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsInitParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]LinuxFunctionAppSlotAuthSettingsActiveDirectoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]LinuxFunctionAppSlotAuthSettingsFacebookInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]AuthSettingsGithubInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]LinuxFunctionAppSlotAuthSettingsGoogleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]LinuxFunctionAppSlotAuthSettingsMicrosoftInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]LinuxFunctionAppSlotAuthSettingsTwitterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsInitParameters.
func (in *LinuxFunctionAppSlotAuthSettingsInitParameters) DeepCopy() *LinuxFunctionAppSlotAuthSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsMicrosoftInitParameters) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsMicrosoftInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsMicrosoftInitParameters.
func (in *LinuxFunctionAppSlotAuthSettingsMicrosoftInitParameters) DeepCopy() *LinuxFunctionAppSlotAuthSettingsMicrosoftInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsMicrosoftInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsMicrosoftObservation) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsMicrosoftObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsMicrosoftObservation.
func (in *LinuxFunctionAppSlotAuthSettingsMicrosoftObservation) DeepCopy() *LinuxFunctionAppSlotAuthSettingsMicrosoftObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsMicrosoftObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsMicrosoftParameters) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsMicrosoftParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsMicrosoftParameters.
func (in *LinuxFunctionAppSlotAuthSettingsMicrosoftParameters) DeepCopy() *LinuxFunctionAppSlotAuthSettingsMicrosoftParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsMicrosoftParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsObservation) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsObservation) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]LinuxFunctionAppSlotAuthSettingsActiveDirectoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]LinuxFunctionAppSlotAuthSettingsFacebookObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]AuthSettingsGithubObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]LinuxFunctionAppSlotAuthSettingsGoogleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]LinuxFunctionAppSlotAuthSettingsMicrosoftObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]LinuxFunctionAppSlotAuthSettingsTwitterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsObservation.
func (in *LinuxFunctionAppSlotAuthSettingsObservation) DeepCopy() *LinuxFunctionAppSlotAuthSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsParameters) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]LinuxFunctionAppSlotAuthSettingsActiveDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]LinuxFunctionAppSlotAuthSettingsFacebookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]AuthSettingsGithubParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]LinuxFunctionAppSlotAuthSettingsGoogleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]LinuxFunctionAppSlotAuthSettingsMicrosoftParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]LinuxFunctionAppSlotAuthSettingsTwitterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsParameters.
func (in *LinuxFunctionAppSlotAuthSettingsParameters) DeepCopy() *LinuxFunctionAppSlotAuthSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsTwitterInitParameters) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsTwitterInitParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsTwitterInitParameters.
func (in *LinuxFunctionAppSlotAuthSettingsTwitterInitParameters) DeepCopy() *LinuxFunctionAppSlotAuthSettingsTwitterInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsTwitterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsTwitterObservation) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsTwitterObservation) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsTwitterObservation.
func (in *LinuxFunctionAppSlotAuthSettingsTwitterObservation) DeepCopy() *LinuxFunctionAppSlotAuthSettingsTwitterObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsTwitterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsTwitterParameters) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsTwitterParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSecretRef != nil {
		in, out := &in.ConsumerSecretSecretRef, &out.ConsumerSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsTwitterParameters.
func (in *LinuxFunctionAppSlotAuthSettingsTwitterParameters) DeepCopy() *LinuxFunctionAppSlotAuthSettingsTwitterParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsTwitterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsV2InitParameters) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsV2InitParameters) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]AuthSettingsV2ActiveDirectoryV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]AuthSettingsV2AppleV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]AuthSettingsV2AzureStaticWebAppV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]AuthSettingsV2CustomOidcV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]AuthSettingsV2FacebookV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]AuthSettingsV2GithubV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]AuthSettingsV2GoogleV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]AuthSettingsV2LoginInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]AuthSettingsV2MicrosoftV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]AuthSettingsV2TwitterV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsV2InitParameters.
func (in *LinuxFunctionAppSlotAuthSettingsV2InitParameters) DeepCopy() *LinuxFunctionAppSlotAuthSettingsV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsV2Observation) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsV2Observation) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]AuthSettingsV2ActiveDirectoryV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]AuthSettingsV2AppleV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]AuthSettingsV2AzureStaticWebAppV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]AuthSettingsV2CustomOidcV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]AuthSettingsV2FacebookV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]AuthSettingsV2GithubV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]AuthSettingsV2GoogleV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]AuthSettingsV2LoginObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]AuthSettingsV2MicrosoftV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]AuthSettingsV2TwitterV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsV2Observation.
func (in *LinuxFunctionAppSlotAuthSettingsV2Observation) DeepCopy() *LinuxFunctionAppSlotAuthSettingsV2Observation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsV2Parameters) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsV2Parameters) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]AuthSettingsV2ActiveDirectoryV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]AuthSettingsV2AppleV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]AuthSettingsV2AzureStaticWebAppV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]AuthSettingsV2CustomOidcV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]AuthSettingsV2FacebookV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]AuthSettingsV2GithubV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]AuthSettingsV2GoogleV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]AuthSettingsV2LoginParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]AuthSettingsV2MicrosoftV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]AuthSettingsV2TwitterV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsV2Parameters.
func (in *LinuxFunctionAppSlotAuthSettingsV2Parameters) DeepCopy() *LinuxFunctionAppSlotAuthSettingsV2Parameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotBackupInitParameters) DeepCopyInto(out *LinuxFunctionAppSlotBackupInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]BackupScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotBackupInitParameters.
func (in *LinuxFunctionAppSlotBackupInitParameters) DeepCopy() *LinuxFunctionAppSlotBackupInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotBackupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotBackupObservation) DeepCopyInto(out *LinuxFunctionAppSlotBackupObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]BackupScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotBackupObservation.
func (in *LinuxFunctionAppSlotBackupObservation) DeepCopy() *LinuxFunctionAppSlotBackupObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotBackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotBackupParameters) DeepCopyInto(out *LinuxFunctionAppSlotBackupParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]BackupScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.StorageAccountURLSecretRef = in.StorageAccountURLSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotBackupParameters.
func (in *LinuxFunctionAppSlotBackupParameters) DeepCopy() *LinuxFunctionAppSlotBackupParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotBackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotConnectionStringInitParameters) DeepCopyInto(out *LinuxFunctionAppSlotConnectionStringInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotConnectionStringInitParameters.
func (in *LinuxFunctionAppSlotConnectionStringInitParameters) DeepCopy() *LinuxFunctionAppSlotConnectionStringInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotConnectionStringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotConnectionStringObservation) DeepCopyInto(out *LinuxFunctionAppSlotConnectionStringObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotConnectionStringObservation.
func (in *LinuxFunctionAppSlotConnectionStringObservation) DeepCopy() *LinuxFunctionAppSlotConnectionStringObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotConnectionStringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotConnectionStringParameters) DeepCopyInto(out *LinuxFunctionAppSlotConnectionStringParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	out.ValueSecretRef = in.ValueSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotConnectionStringParameters.
func (in *LinuxFunctionAppSlotConnectionStringParameters) DeepCopy() *LinuxFunctionAppSlotConnectionStringParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotConnectionStringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotIdentityInitParameters) DeepCopyInto(out *LinuxFunctionAppSlotIdentityInitParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotIdentityInitParameters.
func (in *LinuxFunctionAppSlotIdentityInitParameters) DeepCopy() *LinuxFunctionAppSlotIdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotIdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotIdentityObservation) DeepCopyInto(out *LinuxFunctionAppSlotIdentityObservation) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotIdentityObservation.
func (in *LinuxFunctionAppSlotIdentityObservation) DeepCopy() *LinuxFunctionAppSlotIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotIdentityParameters) DeepCopyInto(out *LinuxFunctionAppSlotIdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotIdentityParameters.
func (in *LinuxFunctionAppSlotIdentityParameters) DeepCopy() *LinuxFunctionAppSlotIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotInitParameters) DeepCopyInto(out *LinuxFunctionAppSlotInitParameters) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]LinuxFunctionAppSlotAuthSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]LinuxFunctionAppSlotAuthSettingsV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]LinuxFunctionAppSlotBackupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BuiltinLoggingEnabled != nil {
		in, out := &in.BuiltinLoggingEnabled, &out.BuiltinLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]LinuxFunctionAppSlotConnectionStringInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContentShareForceDisabled != nil {
		in, out := &in.ContentShareForceDisabled, &out.ContentShareForceDisabled
		*out = new(bool)
		**out = **in
	}
	if in.DailyMemoryTimeQuota != nil {
		in, out := &in.DailyMemoryTimeQuota, &out.DailyMemoryTimeQuota
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FunctionsExtensionVersion != nil {
		in, out := &in.FunctionsExtensionVersion, &out.FunctionsExtensionVersion
		*out = new(string)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]LinuxFunctionAppSlotIdentityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]LinuxFunctionAppSlotSiteConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]LinuxFunctionAppSlotStorageAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageKeyVaultSecretID != nil {
		in, out := &in.StorageKeyVaultSecretID, &out.StorageKeyVaultSecretID
		*out = new(string)
		**out = **in
	}
	if in.StorageUsesManagedIdentity != nil {
		in, out := &in.StorageUsesManagedIdentity, &out.StorageUsesManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotInitParameters.
func (in *LinuxFunctionAppSlotInitParameters) DeepCopy() *LinuxFunctionAppSlotInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotList) DeepCopyInto(out *LinuxFunctionAppSlotList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LinuxFunctionAppSlot, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotList.
func (in *LinuxFunctionAppSlotList) DeepCopy() *LinuxFunctionAppSlotList {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinuxFunctionAppSlotList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotObservation) DeepCopyInto(out *LinuxFunctionAppSlotObservation) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]LinuxFunctionAppSlotAuthSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]LinuxFunctionAppSlotAuthSettingsV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]LinuxFunctionAppSlotBackupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BuiltinLoggingEnabled != nil {
		in, out := &in.BuiltinLoggingEnabled, &out.BuiltinLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]LinuxFunctionAppSlotConnectionStringObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContentShareForceDisabled != nil {
		in, out := &in.ContentShareForceDisabled, &out.ContentShareForceDisabled
		*out = new(bool)
		**out = **in
	}
	if in.DailyMemoryTimeQuota != nil {
		in, out := &in.DailyMemoryTimeQuota, &out.DailyMemoryTimeQuota
		*out = new(float64)
		**out = **in
	}
	if in.DefaultHostName != nil {
		in, out := &in.DefaultHostName, &out.DefaultHostName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FunctionAppID != nil {
		in, out := &in.FunctionAppID, &out.FunctionAppID
		*out = new(string)
		**out = **in
	}
	if in.FunctionsExtensionVersion != nil {
		in, out := &in.FunctionsExtensionVersion, &out.FunctionsExtensionVersion
		*out = new(string)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.HostingEnvironmentID != nil {
		in, out := &in.HostingEnvironmentID, &out.HostingEnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]LinuxFunctionAppSlotIdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.OutboundIPAddressList != nil {
		in, out := &in.OutboundIPAddressList, &out.OutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OutboundIPAddresses != nil {
		in, out := &in.OutboundIPAddresses, &out.OutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.PossibleOutboundIPAddressList != nil {
		in, out := &in.PossibleOutboundIPAddressList, &out.PossibleOutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PossibleOutboundIPAddresses != nil {
		in, out := &in.PossibleOutboundIPAddresses, &out.PossibleOutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]LinuxFunctionAppSlotSiteConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]LinuxFunctionAppSlotStorageAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.StorageKeyVaultSecretID != nil {
		in, out := &in.StorageKeyVaultSecretID, &out.StorageKeyVaultSecretID
		*out = new(string)
		**out = **in
	}
	if in.StorageUsesManagedIdentity != nil {
		in, out := &in.StorageUsesManagedIdentity, &out.StorageUsesManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotObservation.
func (in *LinuxFunctionAppSlotObservation) DeepCopy() *LinuxFunctionAppSlotObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotParameters) DeepCopyInto(out *LinuxFunctionAppSlotParameters) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]LinuxFunctionAppSlotAuthSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]LinuxFunctionAppSlotAuthSettingsV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]LinuxFunctionAppSlotBackupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BuiltinLoggingEnabled != nil {
		in, out := &in.BuiltinLoggingEnabled, &out.BuiltinLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]LinuxFunctionAppSlotConnectionStringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContentShareForceDisabled != nil {
		in, out := &in.ContentShareForceDisabled, &out.ContentShareForceDisabled
		*out = new(bool)
		**out = **in
	}
	if in.DailyMemoryTimeQuota != nil {
		in, out := &in.DailyMemoryTimeQuota, &out.DailyMemoryTimeQuota
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FunctionAppID != nil {
		in, out := &in.FunctionAppID, &out.FunctionAppID
		*out = new(string)
		**out = **in
	}
	if in.FunctionAppIDRef != nil {
		in, out := &in.FunctionAppIDRef, &out.FunctionAppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionAppIDSelector != nil {
		in, out := &in.FunctionAppIDSelector, &out.FunctionAppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionsExtensionVersion != nil {
		in, out := &in.FunctionsExtensionVersion, &out.FunctionsExtensionVersion
		*out = new(string)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]LinuxFunctionAppSlotIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]LinuxFunctionAppSlotSiteConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]LinuxFunctionAppSlotStorageAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountAccessKeySecretRef != nil {
		in, out := &in.StorageAccountAccessKeySecretRef, &out.StorageAccountAccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountNameRef != nil {
		in, out := &in.StorageAccountNameRef, &out.StorageAccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountNameSelector != nil {
		in, out := &in.StorageAccountNameSelector, &out.StorageAccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageKeyVaultSecretID != nil {
		in, out := &in.StorageKeyVaultSecretID, &out.StorageKeyVaultSecretID
		*out = new(string)
		**out = **in
	}
	if in.StorageUsesManagedIdentity != nil {
		in, out := &in.StorageUsesManagedIdentity, &out.StorageUsesManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotParameters.
func (in *LinuxFunctionAppSlotParameters) DeepCopy() *LinuxFunctionAppSlotParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigCorsInitParameters) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigCorsInitParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigCorsInitParameters.
func (in *LinuxFunctionAppSlotSiteConfigCorsInitParameters) DeepCopy() *LinuxFunctionAppSlotSiteConfigCorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigCorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigCorsObservation) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigCorsObservation) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigCorsObservation.
func (in *LinuxFunctionAppSlotSiteConfigCorsObservation) DeepCopy() *LinuxFunctionAppSlotSiteConfigCorsObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigCorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigCorsParameters) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigCorsParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigCorsParameters.
func (in *LinuxFunctionAppSlotSiteConfigCorsParameters) DeepCopy() *LinuxFunctionAppSlotSiteConfigCorsParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigCorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersInitParameters) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersInitParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersInitParameters.
func (in *LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersInitParameters) DeepCopy() *LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersObservation) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersObservation) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersObservation.
func (in *LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersObservation) DeepCopy() *LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersParameters) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersParameters.
func (in *LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersParameters) DeepCopy() *LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigIPRestrictionInitParameters) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigIPRestrictionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigIPRestrictionInitParameters.
func (in *LinuxFunctionAppSlotSiteConfigIPRestrictionInitParameters) DeepCopy() *LinuxFunctionAppSlotSiteConfigIPRestrictionInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigIPRestrictionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigIPRestrictionObservation) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigIPRestrictionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigIPRestrictionObservation.
func (in *LinuxFunctionAppSlotSiteConfigIPRestrictionObservation) DeepCopy() *LinuxFunctionAppSlotSiteConfigIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigIPRestrictionParameters) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigIPRestrictionParameters.
func (in *LinuxFunctionAppSlotSiteConfigIPRestrictionParameters) DeepCopy() *LinuxFunctionAppSlotSiteConfigIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigInitParameters) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigInitParameters) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(float64)
		**out = **in
	}
	if in.AppServiceLogs != nil {
		in, out := &in.AppServiceLogs, &out.AppServiceLogs
		*out = make([]SiteConfigAppServiceLogsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]SiteConfigApplicationStackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoSwapSlotName != nil {
		in, out := &in.AutoSwapSlotName, &out.AutoSwapSlotName
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryManagedIdentityClientID != nil {
		in, out := &in.ContainerRegistryManagedIdentityClientID, &out.ContainerRegistryManagedIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryUseManagedIdentity != nil {
		in, out := &in.ContainerRegistryUseManagedIdentity, &out.ContainerRegistryUseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]LinuxFunctionAppSlotSiteConfigCorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(float64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]LinuxFunctionAppSlotSiteConfigIPRestrictionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]LinuxFunctionAppSlotSiteConfigScmIPRestrictionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigInitParameters.
func (in *LinuxFunctionAppSlotSiteConfigInitParameters) DeepCopy() *LinuxFunctionAppSlotSiteConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigObservation) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigObservation) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(float64)
		**out = **in
	}
	if in.AppServiceLogs != nil {
		in, out := &in.AppServiceLogs, &out.AppServiceLogs
		*out = make([]SiteConfigAppServiceLogsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]SiteConfigApplicationStackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoSwapSlotName != nil {
		in, out := &in.AutoSwapSlotName, &out.AutoSwapSlotName
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryManagedIdentityClientID != nil {
		in, out := &in.ContainerRegistryManagedIdentityClientID, &out.ContainerRegistryManagedIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryUseManagedIdentity != nil {
		in, out := &in.ContainerRegistryUseManagedIdentity, &out.ContainerRegistryUseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]LinuxFunctionAppSlotSiteConfigCorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DetailedErrorLoggingEnabled != nil {
		in, out := &in.DetailedErrorLoggingEnabled, &out.DetailedErrorLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(float64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]LinuxFunctionAppSlotSiteConfigIPRestrictionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LinuxFxVersion != nil {
		in, out := &in.LinuxFxVersion, &out.LinuxFxVersion
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]LinuxFunctionAppSlotSiteConfigScmIPRestrictionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmType != nil {
		in, out := &in.ScmType, &out.ScmType
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigObservation.
func (in *LinuxFunctionAppSlotSiteConfigObservation) DeepCopy() *LinuxFunctionAppSlotSiteConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigParameters) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigParameters) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(float64)
		**out = **in
	}
	if in.AppServiceLogs != nil {
		in, out := &in.AppServiceLogs, &out.AppServiceLogs
		*out = make([]SiteConfigAppServiceLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationInsightsConnectionStringSecretRef != nil {
		in, out := &in.ApplicationInsightsConnectionStringSecretRef, &out.ApplicationInsightsConnectionStringSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ApplicationInsightsKeySecretRef != nil {
		in, out := &in.ApplicationInsightsKeySecretRef, &out.ApplicationInsightsKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]SiteConfigApplicationStackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoSwapSlotName != nil {
		in, out := &in.AutoSwapSlotName, &out.AutoSwapSlotName
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryManagedIdentityClientID != nil {
		in, out := &in.ContainerRegistryManagedIdentityClientID, &out.ContainerRegistryManagedIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryUseManagedIdentity != nil {
		in, out := &in.ContainerRegistryUseManagedIdentity, &out.ContainerRegistryUseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]LinuxFunctionAppSlotSiteConfigCorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(float64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]LinuxFunctionAppSlotSiteConfigIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]LinuxFunctionAppSlotSiteConfigScmIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigParameters.
func (in *LinuxFunctionAppSlotSiteConfigParameters) DeepCopy() *LinuxFunctionAppSlotSiteConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersInitParameters) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersInitParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersInitParameters.
func (in *LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersInitParameters) DeepCopy() *LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersObservation) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersObservation) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersObservation.
func (in *LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersObservation) DeepCopy() *LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersParameters) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersParameters.
func (in *LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersParameters) DeepCopy() *LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigScmIPRestrictionInitParameters) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigScmIPRestrictionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigScmIPRestrictionInitParameters.
func (in *LinuxFunctionAppSlotSiteConfigScmIPRestrictionInitParameters) DeepCopy() *LinuxFunctionAppSlotSiteConfigScmIPRestrictionInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigScmIPRestrictionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigScmIPRestrictionObservation) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigScmIPRestrictionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigScmIPRestrictionObservation.
func (in *LinuxFunctionAppSlotSiteConfigScmIPRestrictionObservation) DeepCopy() *LinuxFunctionAppSlotSiteConfigScmIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigScmIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigScmIPRestrictionParameters) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigScmIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigScmIPRestrictionParameters.
func (in *LinuxFunctionAppSlotSiteConfigScmIPRestrictionParameters) DeepCopy() *LinuxFunctionAppSlotSiteConfigScmIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigScmIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteCredentialInitParameters) DeepCopyInto(out *LinuxFunctionAppSlotSiteCredentialInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteCredentialInitParameters.
func (in *LinuxFunctionAppSlotSiteCredentialInitParameters) DeepCopy() *LinuxFunctionAppSlotSiteCredentialInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteCredentialInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteCredentialObservation) DeepCopyInto(out *LinuxFunctionAppSlotSiteCredentialObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteCredentialObservation.
func (in *LinuxFunctionAppSlotSiteCredentialObservation) DeepCopy() *LinuxFunctionAppSlotSiteCredentialObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteCredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteCredentialParameters) DeepCopyInto(out *LinuxFunctionAppSlotSiteCredentialParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteCredentialParameters.
func (in *LinuxFunctionAppSlotSiteCredentialParameters) DeepCopy() *LinuxFunctionAppSlotSiteCredentialParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteCredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSpec) DeepCopyInto(out *LinuxFunctionAppSlotSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSpec.
func (in *LinuxFunctionAppSlotSpec) DeepCopy() *LinuxFunctionAppSlotSpec {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotStatus) DeepCopyInto(out *LinuxFunctionAppSlotStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotStatus.
func (in *LinuxFunctionAppSlotStatus) DeepCopy() *LinuxFunctionAppSlotStatus {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotStorageAccountInitParameters) DeepCopyInto(out *LinuxFunctionAppSlotStorageAccountInitParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotStorageAccountInitParameters.
func (in *LinuxFunctionAppSlotStorageAccountInitParameters) DeepCopy() *LinuxFunctionAppSlotStorageAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotStorageAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotStorageAccountObservation) DeepCopyInto(out *LinuxFunctionAppSlotStorageAccountObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotStorageAccountObservation.
func (in *LinuxFunctionAppSlotStorageAccountObservation) DeepCopy() *LinuxFunctionAppSlotStorageAccountObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotStorageAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotStorageAccountParameters) DeepCopyInto(out *LinuxFunctionAppSlotStorageAccountParameters) {
	*out = *in
	out.AccessKeySecretRef = in.AccessKeySecretRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotStorageAccountParameters.
func (in *LinuxFunctionAppSlotStorageAccountParameters) DeepCopy() *LinuxFunctionAppSlotStorageAccountParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotStorageAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSpec) DeepCopyInto(out *LinuxFunctionAppSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSpec.
func (in *LinuxFunctionAppSpec) DeepCopy() *LinuxFunctionAppSpec {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppStatus) DeepCopyInto(out *LinuxFunctionAppStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppStatus.
func (in *LinuxFunctionAppStatus) DeepCopy() *LinuxFunctionAppStatus {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebApp) DeepCopyInto(out *LinuxWebApp) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebApp.
func (in *LinuxWebApp) DeepCopy() *LinuxWebApp {
	if in == nil {
		return nil
	}
	out := new(LinuxWebApp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinuxWebApp) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsActiveDirectoryInitParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsActiveDirectoryInitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsActiveDirectoryInitParameters.
func (in *LinuxWebAppAuthSettingsActiveDirectoryInitParameters) DeepCopy() *LinuxWebAppAuthSettingsActiveDirectoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsActiveDirectoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsActiveDirectoryObservation) DeepCopyInto(out *LinuxWebAppAuthSettingsActiveDirectoryObservation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsActiveDirectoryObservation.
func (in *LinuxWebAppAuthSettingsActiveDirectoryObservation) DeepCopy() *LinuxWebAppAuthSettingsActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsActiveDirectoryParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsActiveDirectoryParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsActiveDirectoryParameters.
func (in *LinuxWebAppAuthSettingsActiveDirectoryParameters) DeepCopy() *LinuxWebAppAuthSettingsActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsFacebookInitParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsFacebookInitParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsFacebookInitParameters.
func (in *LinuxWebAppAuthSettingsFacebookInitParameters) DeepCopy() *LinuxWebAppAuthSettingsFacebookInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsFacebookInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsFacebookObservation) DeepCopyInto(out *LinuxWebAppAuthSettingsFacebookObservation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsFacebookObservation.
func (in *LinuxWebAppAuthSettingsFacebookObservation) DeepCopy() *LinuxWebAppAuthSettingsFacebookObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsFacebookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsFacebookParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsFacebookParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSecretRef != nil {
		in, out := &in.AppSecretSecretRef, &out.AppSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsFacebookParameters.
func (in *LinuxWebAppAuthSettingsFacebookParameters) DeepCopy() *LinuxWebAppAuthSettingsFacebookParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsFacebookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsGithubInitParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsGithubInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsGithubInitParameters.
func (in *LinuxWebAppAuthSettingsGithubInitParameters) DeepCopy() *LinuxWebAppAuthSettingsGithubInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsGithubInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsGithubObservation) DeepCopyInto(out *LinuxWebAppAuthSettingsGithubObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsGithubObservation.
func (in *LinuxWebAppAuthSettingsGithubObservation) DeepCopy() *LinuxWebAppAuthSettingsGithubObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsGithubObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsGithubParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsGithubParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsGithubParameters.
func (in *LinuxWebAppAuthSettingsGithubParameters) DeepCopy() *LinuxWebAppAuthSettingsGithubParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsGithubParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsGoogleInitParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsGoogleInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsGoogleInitParameters.
func (in *LinuxWebAppAuthSettingsGoogleInitParameters) DeepCopy() *LinuxWebAppAuthSettingsGoogleInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsGoogleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsGoogleObservation) DeepCopyInto(out *LinuxWebAppAuthSettingsGoogleObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsGoogleObservation.
func (in *LinuxWebAppAuthSettingsGoogleObservation) DeepCopy() *LinuxWebAppAuthSettingsGoogleObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsGoogleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsGoogleParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsGoogleParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsGoogleParameters.
func (in *LinuxWebAppAuthSettingsGoogleParameters) DeepCopy() *LinuxWebAppAuthSettingsGoogleParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsGoogleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsInitParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsInitParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]LinuxWebAppAuthSettingsActiveDirectoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]LinuxWebAppAuthSettingsFacebookInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]LinuxWebAppAuthSettingsGithubInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]LinuxWebAppAuthSettingsGoogleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]LinuxWebAppAuthSettingsMicrosoftInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]LinuxWebAppAuthSettingsTwitterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsInitParameters.
func (in *LinuxWebAppAuthSettingsInitParameters) DeepCopy() *LinuxWebAppAuthSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsMicrosoftInitParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsMicrosoftInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsMicrosoftInitParameters.
func (in *LinuxWebAppAuthSettingsMicrosoftInitParameters) DeepCopy() *LinuxWebAppAuthSettingsMicrosoftInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsMicrosoftInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsMicrosoftObservation) DeepCopyInto(out *LinuxWebAppAuthSettingsMicrosoftObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsMicrosoftObservation.
func (in *LinuxWebAppAuthSettingsMicrosoftObservation) DeepCopy() *LinuxWebAppAuthSettingsMicrosoftObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsMicrosoftObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsMicrosoftParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsMicrosoftParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsMicrosoftParameters.
func (in *LinuxWebAppAuthSettingsMicrosoftParameters) DeepCopy() *LinuxWebAppAuthSettingsMicrosoftParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsMicrosoftParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsObservation) DeepCopyInto(out *LinuxWebAppAuthSettingsObservation) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]LinuxWebAppAuthSettingsActiveDirectoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]LinuxWebAppAuthSettingsFacebookObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]LinuxWebAppAuthSettingsGithubObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]LinuxWebAppAuthSettingsGoogleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]LinuxWebAppAuthSettingsMicrosoftObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]LinuxWebAppAuthSettingsTwitterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsObservation.
func (in *LinuxWebAppAuthSettingsObservation) DeepCopy() *LinuxWebAppAuthSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]LinuxWebAppAuthSettingsActiveDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]LinuxWebAppAuthSettingsFacebookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]LinuxWebAppAuthSettingsGithubParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]LinuxWebAppAuthSettingsGoogleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]LinuxWebAppAuthSettingsMicrosoftParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]LinuxWebAppAuthSettingsTwitterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsParameters.
func (in *LinuxWebAppAuthSettingsParameters) DeepCopy() *LinuxWebAppAuthSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsTwitterInitParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsTwitterInitParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsTwitterInitParameters.
func (in *LinuxWebAppAuthSettingsTwitterInitParameters) DeepCopy() *LinuxWebAppAuthSettingsTwitterInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsTwitterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsTwitterObservation) DeepCopyInto(out *LinuxWebAppAuthSettingsTwitterObservation) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsTwitterObservation.
func (in *LinuxWebAppAuthSettingsTwitterObservation) DeepCopy() *LinuxWebAppAuthSettingsTwitterObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsTwitterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsTwitterParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsTwitterParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSecretRef != nil {
		in, out := &in.ConsumerSecretSecretRef, &out.ConsumerSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsTwitterParameters.
func (in *LinuxWebAppAuthSettingsTwitterParameters) DeepCopy() *LinuxWebAppAuthSettingsTwitterParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsTwitterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2ActiveDirectoryV2InitParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsV2ActiveDirectoryV2InitParameters) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2ActiveDirectoryV2InitParameters.
func (in *LinuxWebAppAuthSettingsV2ActiveDirectoryV2InitParameters) DeepCopy() *LinuxWebAppAuthSettingsV2ActiveDirectoryV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2ActiveDirectoryV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2ActiveDirectoryV2Observation) DeepCopyInto(out *LinuxWebAppAuthSettingsV2ActiveDirectoryV2Observation) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2ActiveDirectoryV2Observation.
func (in *LinuxWebAppAuthSettingsV2ActiveDirectoryV2Observation) DeepCopy() *LinuxWebAppAuthSettingsV2ActiveDirectoryV2Observation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2ActiveDirectoryV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2ActiveDirectoryV2Parameters) DeepCopyInto(out *LinuxWebAppAuthSettingsV2ActiveDirectoryV2Parameters) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2ActiveDirectoryV2Parameters.
func (in *LinuxWebAppAuthSettingsV2ActiveDirectoryV2Parameters) DeepCopy() *LinuxWebAppAuthSettingsV2ActiveDirectoryV2Parameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2ActiveDirectoryV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2AppleV2InitParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsV2AppleV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2AppleV2InitParameters.
func (in *LinuxWebAppAuthSettingsV2AppleV2InitParameters) DeepCopy() *LinuxWebAppAuthSettingsV2AppleV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2AppleV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2AppleV2Observation) DeepCopyInto(out *LinuxWebAppAuthSettingsV2AppleV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2AppleV2Observation.
func (in *LinuxWebAppAuthSettingsV2AppleV2Observation) DeepCopy() *LinuxWebAppAuthSettingsV2AppleV2Observation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2AppleV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2AppleV2Parameters) DeepCopyInto(out *LinuxWebAppAuthSettingsV2AppleV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2AppleV2Parameters.
func (in *LinuxWebAppAuthSettingsV2AppleV2Parameters) DeepCopy() *LinuxWebAppAuthSettingsV2AppleV2Parameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2AppleV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2AzureStaticWebAppV2InitParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsV2AzureStaticWebAppV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2AzureStaticWebAppV2InitParameters.
func (in *LinuxWebAppAuthSettingsV2AzureStaticWebAppV2InitParameters) DeepCopy() *LinuxWebAppAuthSettingsV2AzureStaticWebAppV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2AzureStaticWebAppV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2AzureStaticWebAppV2Observation) DeepCopyInto(out *LinuxWebAppAuthSettingsV2AzureStaticWebAppV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2AzureStaticWebAppV2Observation.
func (in *LinuxWebAppAuthSettingsV2AzureStaticWebAppV2Observation) DeepCopy() *LinuxWebAppAuthSettingsV2AzureStaticWebAppV2Observation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2AzureStaticWebAppV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2AzureStaticWebAppV2Parameters) DeepCopyInto(out *LinuxWebAppAuthSettingsV2AzureStaticWebAppV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2AzureStaticWebAppV2Parameters.
func (in *LinuxWebAppAuthSettingsV2AzureStaticWebAppV2Parameters) DeepCopy() *LinuxWebAppAuthSettingsV2AzureStaticWebAppV2Parameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2AzureStaticWebAppV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2CustomOidcV2InitParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsV2CustomOidcV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2CustomOidcV2InitParameters.
func (in *LinuxWebAppAuthSettingsV2CustomOidcV2InitParameters) DeepCopy() *LinuxWebAppAuthSettingsV2CustomOidcV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2CustomOidcV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2CustomOidcV2Observation) DeepCopyInto(out *LinuxWebAppAuthSettingsV2CustomOidcV2Observation) {
	*out = *in
	if in.AuthorisationEndpoint != nil {
		in, out := &in.AuthorisationEndpoint, &out.AuthorisationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.CertificationURI != nil {
		in, out := &in.CertificationURI, &out.CertificationURI
		*out = new(string)
		**out = **in
	}
	if in.ClientCredentialMethod != nil {
		in, out := &in.ClientCredentialMethod, &out.ClientCredentialMethod
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.IssuerEndpoint != nil {
		in, out := &in.IssuerEndpoint, &out.IssuerEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TokenEndpoint != nil {
		in, out := &in.TokenEndpoint, &out.TokenEndpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2CustomOidcV2Observation.
func (in *LinuxWebAppAuthSettingsV2CustomOidcV2Observation) DeepCopy() *LinuxWebAppAuthSettingsV2CustomOidcV2Observation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2CustomOidcV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2CustomOidcV2Parameters) DeepCopyInto(out *LinuxWebAppAuthSettingsV2CustomOidcV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2CustomOidcV2Parameters.
func (in *LinuxWebAppAuthSettingsV2CustomOidcV2Parameters) DeepCopy() *LinuxWebAppAuthSettingsV2CustomOidcV2Parameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2CustomOidcV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2FacebookV2InitParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsV2FacebookV2InitParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2FacebookV2InitParameters.
func (in *LinuxWebAppAuthSettingsV2FacebookV2InitParameters) DeepCopy() *LinuxWebAppAuthSettingsV2FacebookV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2FacebookV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2FacebookV2Observation) DeepCopyInto(out *LinuxWebAppAuthSettingsV2FacebookV2Observation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2FacebookV2Observation.
func (in *LinuxWebAppAuthSettingsV2FacebookV2Observation) DeepCopy() *LinuxWebAppAuthSettingsV2FacebookV2Observation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2FacebookV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2FacebookV2Parameters) DeepCopyInto(out *LinuxWebAppAuthSettingsV2FacebookV2Parameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2FacebookV2Parameters.
func (in *LinuxWebAppAuthSettingsV2FacebookV2Parameters) DeepCopy() *LinuxWebAppAuthSettingsV2FacebookV2Parameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2FacebookV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2GithubV2InitParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsV2GithubV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2GithubV2InitParameters.
func (in *LinuxWebAppAuthSettingsV2GithubV2InitParameters) DeepCopy() *LinuxWebAppAuthSettingsV2GithubV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2GithubV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2GithubV2Observation) DeepCopyInto(out *LinuxWebAppAuthSettingsV2GithubV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2GithubV2Observation.
func (in *LinuxWebAppAuthSettingsV2GithubV2Observation) DeepCopy() *LinuxWebAppAuthSettingsV2GithubV2Observation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2GithubV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2GithubV2Parameters) DeepCopyInto(out *LinuxWebAppAuthSettingsV2GithubV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2GithubV2Parameters.
func (in *LinuxWebAppAuthSettingsV2GithubV2Parameters) DeepCopy() *LinuxWebAppAuthSettingsV2GithubV2Parameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2GithubV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2GoogleV2InitParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsV2GoogleV2InitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2GoogleV2InitParameters.
func (in *LinuxWebAppAuthSettingsV2GoogleV2InitParameters) DeepCopy() *LinuxWebAppAuthSettingsV2GoogleV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2GoogleV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2GoogleV2Observation) DeepCopyInto(out *LinuxWebAppAuthSettingsV2GoogleV2Observation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2GoogleV2Observation.
func (in *LinuxWebAppAuthSettingsV2GoogleV2Observation) DeepCopy() *LinuxWebAppAuthSettingsV2GoogleV2Observation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2GoogleV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2GoogleV2Parameters) DeepCopyInto(out *LinuxWebAppAuthSettingsV2GoogleV2Parameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2GoogleV2Parameters.
func (in *LinuxWebAppAuthSettingsV2GoogleV2Parameters) DeepCopy() *LinuxWebAppAuthSettingsV2GoogleV2Parameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2GoogleV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2InitParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsV2InitParameters) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]LinuxWebAppAuthSettingsV2ActiveDirectoryV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]LinuxWebAppAuthSettingsV2AppleV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]LinuxWebAppAuthSettingsV2AzureStaticWebAppV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]LinuxWebAppAuthSettingsV2CustomOidcV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]LinuxWebAppAuthSettingsV2FacebookV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]LinuxWebAppAuthSettingsV2GithubV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]LinuxWebAppAuthSettingsV2GoogleV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]LinuxWebAppAuthSettingsV2LoginInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]LinuxWebAppAuthSettingsV2MicrosoftV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]LinuxWebAppAuthSettingsV2TwitterV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2InitParameters.
func (in *LinuxWebAppAuthSettingsV2InitParameters) DeepCopy() *LinuxWebAppAuthSettingsV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2LoginInitParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsV2LoginInitParameters) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2LoginInitParameters.
func (in *LinuxWebAppAuthSettingsV2LoginInitParameters) DeepCopy() *LinuxWebAppAuthSettingsV2LoginInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2LoginInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2LoginObservation) DeepCopyInto(out *LinuxWebAppAuthSettingsV2LoginObservation) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2LoginObservation.
func (in *LinuxWebAppAuthSettingsV2LoginObservation) DeepCopy() *LinuxWebAppAuthSettingsV2LoginObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2LoginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2LoginParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsV2LoginParameters) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2LoginParameters.
func (in *LinuxWebAppAuthSettingsV2LoginParameters) DeepCopy() *LinuxWebAppAuthSettingsV2LoginParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2LoginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2MicrosoftV2InitParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsV2MicrosoftV2InitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2MicrosoftV2InitParameters.
func (in *LinuxWebAppAuthSettingsV2MicrosoftV2InitParameters) DeepCopy() *LinuxWebAppAuthSettingsV2MicrosoftV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2MicrosoftV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2MicrosoftV2Observation) DeepCopyInto(out *LinuxWebAppAuthSettingsV2MicrosoftV2Observation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2MicrosoftV2Observation.
func (in *LinuxWebAppAuthSettingsV2MicrosoftV2Observation) DeepCopy() *LinuxWebAppAuthSettingsV2MicrosoftV2Observation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2MicrosoftV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2MicrosoftV2Parameters) DeepCopyInto(out *LinuxWebAppAuthSettingsV2MicrosoftV2Parameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2MicrosoftV2Parameters.
func (in *LinuxWebAppAuthSettingsV2MicrosoftV2Parameters) DeepCopy() *LinuxWebAppAuthSettingsV2MicrosoftV2Parameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2MicrosoftV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2Observation) DeepCopyInto(out *LinuxWebAppAuthSettingsV2Observation) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]LinuxWebAppAuthSettingsV2ActiveDirectoryV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]LinuxWebAppAuthSettingsV2AppleV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]LinuxWebAppAuthSettingsV2AzureStaticWebAppV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]LinuxWebAppAuthSettingsV2CustomOidcV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]LinuxWebAppAuthSettingsV2FacebookV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]LinuxWebAppAuthSettingsV2GithubV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]LinuxWebAppAuthSettingsV2GoogleV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]LinuxWebAppAuthSettingsV2LoginObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]LinuxWebAppAuthSettingsV2MicrosoftV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]LinuxWebAppAuthSettingsV2TwitterV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2Observation.
func (in *LinuxWebAppAuthSettingsV2Observation) DeepCopy() *LinuxWebAppAuthSettingsV2Observation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2Parameters) DeepCopyInto(out *LinuxWebAppAuthSettingsV2Parameters) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]LinuxWebAppAuthSettingsV2ActiveDirectoryV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]LinuxWebAppAuthSettingsV2AppleV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]LinuxWebAppAuthSettingsV2AzureStaticWebAppV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]LinuxWebAppAuthSettingsV2CustomOidcV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]LinuxWebAppAuthSettingsV2FacebookV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]LinuxWebAppAuthSettingsV2GithubV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]LinuxWebAppAuthSettingsV2GoogleV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]LinuxWebAppAuthSettingsV2LoginParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]LinuxWebAppAuthSettingsV2MicrosoftV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]LinuxWebAppAuthSettingsV2TwitterV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2Parameters.
func (in *LinuxWebAppAuthSettingsV2Parameters) DeepCopy() *LinuxWebAppAuthSettingsV2Parameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2TwitterV2InitParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsV2TwitterV2InitParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2TwitterV2InitParameters.
func (in *LinuxWebAppAuthSettingsV2TwitterV2InitParameters) DeepCopy() *LinuxWebAppAuthSettingsV2TwitterV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2TwitterV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2TwitterV2Observation) DeepCopyInto(out *LinuxWebAppAuthSettingsV2TwitterV2Observation) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2TwitterV2Observation.
func (in *LinuxWebAppAuthSettingsV2TwitterV2Observation) DeepCopy() *LinuxWebAppAuthSettingsV2TwitterV2Observation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2TwitterV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsV2TwitterV2Parameters) DeepCopyInto(out *LinuxWebAppAuthSettingsV2TwitterV2Parameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsV2TwitterV2Parameters.
func (in *LinuxWebAppAuthSettingsV2TwitterV2Parameters) DeepCopy() *LinuxWebAppAuthSettingsV2TwitterV2Parameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsV2TwitterV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppBackupInitParameters) DeepCopyInto(out *LinuxWebAppBackupInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]LinuxWebAppBackupScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppBackupInitParameters.
func (in *LinuxWebAppBackupInitParameters) DeepCopy() *LinuxWebAppBackupInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppBackupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppBackupObservation) DeepCopyInto(out *LinuxWebAppBackupObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]LinuxWebAppBackupScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppBackupObservation.
func (in *LinuxWebAppBackupObservation) DeepCopy() *LinuxWebAppBackupObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppBackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppBackupParameters) DeepCopyInto(out *LinuxWebAppBackupParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]LinuxWebAppBackupScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.StorageAccountURLSecretRef = in.StorageAccountURLSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppBackupParameters.
func (in *LinuxWebAppBackupParameters) DeepCopy() *LinuxWebAppBackupParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppBackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppBackupScheduleInitParameters) DeepCopyInto(out *LinuxWebAppBackupScheduleInitParameters) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppBackupScheduleInitParameters.
func (in *LinuxWebAppBackupScheduleInitParameters) DeepCopy() *LinuxWebAppBackupScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppBackupScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppBackupScheduleObservation) DeepCopyInto(out *LinuxWebAppBackupScheduleObservation) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.LastExecutionTime != nil {
		in, out := &in.LastExecutionTime, &out.LastExecutionTime
		*out = new(string)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppBackupScheduleObservation.
func (in *LinuxWebAppBackupScheduleObservation) DeepCopy() *LinuxWebAppBackupScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppBackupScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppBackupScheduleParameters) DeepCopyInto(out *LinuxWebAppBackupScheduleParameters) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppBackupScheduleParameters.
func (in *LinuxWebAppBackupScheduleParameters) DeepCopy() *LinuxWebAppBackupScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppBackupScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppConnectionStringInitParameters) DeepCopyInto(out *LinuxWebAppConnectionStringInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppConnectionStringInitParameters.
func (in *LinuxWebAppConnectionStringInitParameters) DeepCopy() *LinuxWebAppConnectionStringInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppConnectionStringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppConnectionStringObservation) DeepCopyInto(out *LinuxWebAppConnectionStringObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppConnectionStringObservation.
func (in *LinuxWebAppConnectionStringObservation) DeepCopy() *LinuxWebAppConnectionStringObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppConnectionStringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppConnectionStringParameters) DeepCopyInto(out *LinuxWebAppConnectionStringParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	out.ValueSecretRef = in.ValueSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppConnectionStringParameters.
func (in *LinuxWebAppConnectionStringParameters) DeepCopy() *LinuxWebAppConnectionStringParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppConnectionStringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppIdentityInitParameters) DeepCopyInto(out *LinuxWebAppIdentityInitParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppIdentityInitParameters.
func (in *LinuxWebAppIdentityInitParameters) DeepCopy() *LinuxWebAppIdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppIdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppIdentityObservation) DeepCopyInto(out *LinuxWebAppIdentityObservation) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppIdentityObservation.
func (in *LinuxWebAppIdentityObservation) DeepCopy() *LinuxWebAppIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppIdentityParameters) DeepCopyInto(out *LinuxWebAppIdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppIdentityParameters.
func (in *LinuxWebAppIdentityParameters) DeepCopy() *LinuxWebAppIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppInitParameters) DeepCopyInto(out *LinuxWebAppInitParameters) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]LinuxWebAppAuthSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]LinuxWebAppAuthSettingsV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]LinuxWebAppBackupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientAffinityEnabled != nil {
		in, out := &in.ClientAffinityEnabled, &out.ClientAffinityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]LinuxWebAppConnectionStringInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]LinuxWebAppIdentityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Logs != nil {
		in, out := &in.Logs, &out.Logs
		*out = make([]LogsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]LinuxWebAppSiteConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StickySettings != nil {
		in, out := &in.StickySettings, &out.StickySettings
		*out = make([]LinuxWebAppStickySettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]LinuxWebAppStorageAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZipDeployFile != nil {
		in, out := &in.ZipDeployFile, &out.ZipDeployFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppInitParameters.
func (in *LinuxWebAppInitParameters) DeepCopy() *LinuxWebAppInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppList) DeepCopyInto(out *LinuxWebAppList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LinuxWebApp, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppList.
func (in *LinuxWebAppList) DeepCopy() *LinuxWebAppList {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinuxWebAppList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppObservation) DeepCopyInto(out *LinuxWebAppObservation) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]LinuxWebAppAuthSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]LinuxWebAppAuthSettingsV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]LinuxWebAppBackupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientAffinityEnabled != nil {
		in, out := &in.ClientAffinityEnabled, &out.ClientAffinityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]LinuxWebAppConnectionStringObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultHostName != nil {
		in, out := &in.DefaultHostName, &out.DefaultHostName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.HostingEnvironmentID != nil {
		in, out := &in.HostingEnvironmentID, &out.HostingEnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]LinuxWebAppIdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Logs != nil {
		in, out := &in.Logs, &out.Logs
		*out = make([]LogsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutboundIPAddressList != nil {
		in, out := &in.OutboundIPAddressList, &out.OutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OutboundIPAddresses != nil {
		in, out := &in.OutboundIPAddresses, &out.OutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.PossibleOutboundIPAddressList != nil {
		in, out := &in.PossibleOutboundIPAddressList, &out.PossibleOutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PossibleOutboundIPAddresses != nil {
		in, out := &in.PossibleOutboundIPAddresses, &out.PossibleOutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]LinuxWebAppSiteConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StickySettings != nil {
		in, out := &in.StickySettings, &out.StickySettings
		*out = make([]LinuxWebAppStickySettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]LinuxWebAppStorageAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.ZipDeployFile != nil {
		in, out := &in.ZipDeployFile, &out.ZipDeployFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppObservation.
func (in *LinuxWebAppObservation) DeepCopy() *LinuxWebAppObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppParameters) DeepCopyInto(out *LinuxWebAppParameters) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]LinuxWebAppAuthSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]LinuxWebAppAuthSettingsV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]LinuxWebAppBackupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientAffinityEnabled != nil {
		in, out := &in.ClientAffinityEnabled, &out.ClientAffinityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]LinuxWebAppConnectionStringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]LinuxWebAppIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Logs != nil {
		in, out := &in.Logs, &out.Logs
		*out = make([]LogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanIDRef != nil {
		in, out := &in.ServicePlanIDRef, &out.ServicePlanIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServicePlanIDSelector != nil {
		in, out := &in.ServicePlanIDSelector, &out.ServicePlanIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]LinuxWebAppSiteConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StickySettings != nil {
		in, out := &in.StickySettings, &out.StickySettings
		*out = make([]LinuxWebAppStickySettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]LinuxWebAppStorageAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ZipDeployFile != nil {
		in, out := &in.ZipDeployFile, &out.ZipDeployFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppParameters.
func (in *LinuxWebAppParameters) DeepCopy() *LinuxWebAppParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigApplicationStackInitParameters) DeepCopyInto(out *LinuxWebAppSiteConfigApplicationStackInitParameters) {
	*out = *in
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = new(string)
		**out = **in
	}
	if in.DockerImageTag != nil {
		in, out := &in.DockerImageTag, &out.DockerImageTag
		*out = new(string)
		**out = **in
	}
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.GoVersion != nil {
		in, out := &in.GoVersion, &out.GoVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaServer != nil {
		in, out := &in.JavaServer, &out.JavaServer
		*out = new(string)
		**out = **in
	}
	if in.JavaServerVersion != nil {
		in, out := &in.JavaServerVersion, &out.JavaServerVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PHPVersion != nil {
		in, out := &in.PHPVersion, &out.PHPVersion
		*out = new(string)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.RubyVersion != nil {
		in, out := &in.RubyVersion, &out.RubyVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigApplicationStackInitParameters.
func (in *LinuxWebAppSiteConfigApplicationStackInitParameters) DeepCopy() *LinuxWebAppSiteConfigApplicationStackInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigApplicationStackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigApplicationStackObservation) DeepCopyInto(out *LinuxWebAppSiteConfigApplicationStackObservation) {
	*out = *in
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = new(string)
		**out = **in
	}
	if in.DockerImageTag != nil {
		in, out := &in.DockerImageTag, &out.DockerImageTag
		*out = new(string)
		**out = **in
	}
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.GoVersion != nil {
		in, out := &in.GoVersion, &out.GoVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaServer != nil {
		in, out := &in.JavaServer, &out.JavaServer
		*out = new(string)
		**out = **in
	}
	if in.JavaServerVersion != nil {
		in, out := &in.JavaServerVersion, &out.JavaServerVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PHPVersion != nil {
		in, out := &in.PHPVersion, &out.PHPVersion
		*out = new(string)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.RubyVersion != nil {
		in, out := &in.RubyVersion, &out.RubyVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigApplicationStackObservation.
func (in *LinuxWebAppSiteConfigApplicationStackObservation) DeepCopy() *LinuxWebAppSiteConfigApplicationStackObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigApplicationStackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigApplicationStackParameters) DeepCopyInto(out *LinuxWebAppSiteConfigApplicationStackParameters) {
	*out = *in
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = new(string)
		**out = **in
	}
	if in.DockerImageTag != nil {
		in, out := &in.DockerImageTag, &out.DockerImageTag
		*out = new(string)
		**out = **in
	}
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.GoVersion != nil {
		in, out := &in.GoVersion, &out.GoVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaServer != nil {
		in, out := &in.JavaServer, &out.JavaServer
		*out = new(string)
		**out = **in
	}
	if in.JavaServerVersion != nil {
		in, out := &in.JavaServerVersion, &out.JavaServerVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PHPVersion != nil {
		in, out := &in.PHPVersion, &out.PHPVersion
		*out = new(string)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.RubyVersion != nil {
		in, out := &in.RubyVersion, &out.RubyVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigApplicationStackParameters.
func (in *LinuxWebAppSiteConfigApplicationStackParameters) DeepCopy() *LinuxWebAppSiteConfigApplicationStackParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigApplicationStackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigCorsInitParameters) DeepCopyInto(out *LinuxWebAppSiteConfigCorsInitParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigCorsInitParameters.
func (in *LinuxWebAppSiteConfigCorsInitParameters) DeepCopy() *LinuxWebAppSiteConfigCorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigCorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigCorsObservation) DeepCopyInto(out *LinuxWebAppSiteConfigCorsObservation) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigCorsObservation.
func (in *LinuxWebAppSiteConfigCorsObservation) DeepCopy() *LinuxWebAppSiteConfigCorsObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigCorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigCorsParameters) DeepCopyInto(out *LinuxWebAppSiteConfigCorsParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigCorsParameters.
func (in *LinuxWebAppSiteConfigCorsParameters) DeepCopy() *LinuxWebAppSiteConfigCorsParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigCorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigIPRestrictionHeadersInitParameters) DeepCopyInto(out *LinuxWebAppSiteConfigIPRestrictionHeadersInitParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigIPRestrictionHeadersInitParameters.
func (in *LinuxWebAppSiteConfigIPRestrictionHeadersInitParameters) DeepCopy() *LinuxWebAppSiteConfigIPRestrictionHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigIPRestrictionHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigIPRestrictionHeadersObservation) DeepCopyInto(out *LinuxWebAppSiteConfigIPRestrictionHeadersObservation) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigIPRestrictionHeadersObservation.
func (in *LinuxWebAppSiteConfigIPRestrictionHeadersObservation) DeepCopy() *LinuxWebAppSiteConfigIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigIPRestrictionHeadersParameters) DeepCopyInto(out *LinuxWebAppSiteConfigIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigIPRestrictionHeadersParameters.
func (in *LinuxWebAppSiteConfigIPRestrictionHeadersParameters) DeepCopy() *LinuxWebAppSiteConfigIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigIPRestrictionInitParameters) DeepCopyInto(out *LinuxWebAppSiteConfigIPRestrictionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxWebAppSiteConfigIPRestrictionHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigIPRestrictionInitParameters.
func (in *LinuxWebAppSiteConfigIPRestrictionInitParameters) DeepCopy() *LinuxWebAppSiteConfigIPRestrictionInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigIPRestrictionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigIPRestrictionObservation) DeepCopyInto(out *LinuxWebAppSiteConfigIPRestrictionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxWebAppSiteConfigIPRestrictionHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigIPRestrictionObservation.
func (in *LinuxWebAppSiteConfigIPRestrictionObservation) DeepCopy() *LinuxWebAppSiteConfigIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigIPRestrictionParameters) DeepCopyInto(out *LinuxWebAppSiteConfigIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxWebAppSiteConfigIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigIPRestrictionParameters.
func (in *LinuxWebAppSiteConfigIPRestrictionParameters) DeepCopy() *LinuxWebAppSiteConfigIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigInitParameters) DeepCopyInto(out *LinuxWebAppSiteConfigInitParameters) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]LinuxWebAppSiteConfigApplicationStackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealEnabled != nil {
		in, out := &in.AutoHealEnabled, &out.AutoHealEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealSetting != nil {
		in, out := &in.AutoHealSetting, &out.AutoHealSetting
		*out = make([]AutoHealSettingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainerRegistryManagedIdentityClientID != nil {
		in, out := &in.ContainerRegistryManagedIdentityClientID, &out.ContainerRegistryManagedIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryUseManagedIdentity != nil {
		in, out := &in.ContainerRegistryUseManagedIdentity, &out.ContainerRegistryUseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]LinuxWebAppSiteConfigCorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]LinuxWebAppSiteConfigIPRestrictionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.LocalMySQLEnabled != nil {
		in, out := &in.LocalMySQLEnabled, &out.LocalMySQLEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]LinuxWebAppSiteConfigScmIPRestrictionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigInitParameters.
func (in *LinuxWebAppSiteConfigInitParameters) DeepCopy() *LinuxWebAppSiteConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigObservation) DeepCopyInto(out *LinuxWebAppSiteConfigObservation) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]LinuxWebAppSiteConfigApplicationStackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealEnabled != nil {
		in, out := &in.AutoHealEnabled, &out.AutoHealEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealSetting != nil {
		in, out := &in.AutoHealSetting, &out.AutoHealSetting
		*out = make([]AutoHealSettingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainerRegistryManagedIdentityClientID != nil {
		in, out := &in.ContainerRegistryManagedIdentityClientID, &out.ContainerRegistryManagedIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryUseManagedIdentity != nil {
		in, out := &in.ContainerRegistryUseManagedIdentity, &out.ContainerRegistryUseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]LinuxWebAppSiteConfigCorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DetailedErrorLoggingEnabled != nil {
		in, out := &in.DetailedErrorLoggingEnabled, &out.DetailedErrorLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]LinuxWebAppSiteConfigIPRestrictionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LinuxFxVersion != nil {
		in, out := &in.LinuxFxVersion, &out.LinuxFxVersion
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.LocalMySQLEnabled != nil {
		in, out := &in.LocalMySQLEnabled, &out.LocalMySQLEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]LinuxWebAppSiteConfigScmIPRestrictionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmType != nil {
		in, out := &in.ScmType, &out.ScmType
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigObservation.
func (in *LinuxWebAppSiteConfigObservation) DeepCopy() *LinuxWebAppSiteConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigParameters) DeepCopyInto(out *LinuxWebAppSiteConfigParameters) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]LinuxWebAppSiteConfigApplicationStackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealEnabled != nil {
		in, out := &in.AutoHealEnabled, &out.AutoHealEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealSetting != nil {
		in, out := &in.AutoHealSetting, &out.AutoHealSetting
		*out = make([]AutoHealSettingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainerRegistryManagedIdentityClientID != nil {
		in, out := &in.ContainerRegistryManagedIdentityClientID, &out.ContainerRegistryManagedIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryUseManagedIdentity != nil {
		in, out := &in.ContainerRegistryUseManagedIdentity, &out.ContainerRegistryUseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]LinuxWebAppSiteConfigCorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]LinuxWebAppSiteConfigIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.LocalMySQLEnabled != nil {
		in, out := &in.LocalMySQLEnabled, &out.LocalMySQLEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]LinuxWebAppSiteConfigScmIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigParameters.
func (in *LinuxWebAppSiteConfigParameters) DeepCopy() *LinuxWebAppSiteConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigScmIPRestrictionHeadersInitParameters) DeepCopyInto(out *LinuxWebAppSiteConfigScmIPRestrictionHeadersInitParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigScmIPRestrictionHeadersInitParameters.
func (in *LinuxWebAppSiteConfigScmIPRestrictionHeadersInitParameters) DeepCopy() *LinuxWebAppSiteConfigScmIPRestrictionHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigScmIPRestrictionHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigScmIPRestrictionHeadersObservation) DeepCopyInto(out *LinuxWebAppSiteConfigScmIPRestrictionHeadersObservation) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigScmIPRestrictionHeadersObservation.
func (in *LinuxWebAppSiteConfigScmIPRestrictionHeadersObservation) DeepCopy() *LinuxWebAppSiteConfigScmIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigScmIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigScmIPRestrictionHeadersParameters) DeepCopyInto(out *LinuxWebAppSiteConfigScmIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigScmIPRestrictionHeadersParameters.
func (in *LinuxWebAppSiteConfigScmIPRestrictionHeadersParameters) DeepCopy() *LinuxWebAppSiteConfigScmIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigScmIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigScmIPRestrictionInitParameters) DeepCopyInto(out *LinuxWebAppSiteConfigScmIPRestrictionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxWebAppSiteConfigScmIPRestrictionHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigScmIPRestrictionInitParameters.
func (in *LinuxWebAppSiteConfigScmIPRestrictionInitParameters) DeepCopy() *LinuxWebAppSiteConfigScmIPRestrictionInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigScmIPRestrictionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigScmIPRestrictionObservation) DeepCopyInto(out *LinuxWebAppSiteConfigScmIPRestrictionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxWebAppSiteConfigScmIPRestrictionHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigScmIPRestrictionObservation.
func (in *LinuxWebAppSiteConfigScmIPRestrictionObservation) DeepCopy() *LinuxWebAppSiteConfigScmIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigScmIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigScmIPRestrictionParameters) DeepCopyInto(out *LinuxWebAppSiteConfigScmIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxWebAppSiteConfigScmIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigScmIPRestrictionParameters.
func (in *LinuxWebAppSiteConfigScmIPRestrictionParameters) DeepCopy() *LinuxWebAppSiteConfigScmIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigScmIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteCredentialInitParameters) DeepCopyInto(out *LinuxWebAppSiteCredentialInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteCredentialInitParameters.
func (in *LinuxWebAppSiteCredentialInitParameters) DeepCopy() *LinuxWebAppSiteCredentialInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteCredentialInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteCredentialObservation) DeepCopyInto(out *LinuxWebAppSiteCredentialObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteCredentialObservation.
func (in *LinuxWebAppSiteCredentialObservation) DeepCopy() *LinuxWebAppSiteCredentialObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteCredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteCredentialParameters) DeepCopyInto(out *LinuxWebAppSiteCredentialParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteCredentialParameters.
func (in *LinuxWebAppSiteCredentialParameters) DeepCopy() *LinuxWebAppSiteCredentialParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteCredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlot) DeepCopyInto(out *LinuxWebAppSlot) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlot.
func (in *LinuxWebAppSlot) DeepCopy() *LinuxWebAppSlot {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinuxWebAppSlot) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsActiveDirectoryInitParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsActiveDirectoryInitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsActiveDirectoryInitParameters.
func (in *LinuxWebAppSlotAuthSettingsActiveDirectoryInitParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsActiveDirectoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsActiveDirectoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsActiveDirectoryObservation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsActiveDirectoryObservation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsActiveDirectoryObservation.
func (in *LinuxWebAppSlotAuthSettingsActiveDirectoryObservation) DeepCopy() *LinuxWebAppSlotAuthSettingsActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsActiveDirectoryParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsActiveDirectoryParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsActiveDirectoryParameters.
func (in *LinuxWebAppSlotAuthSettingsActiveDirectoryParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsFacebookInitParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsFacebookInitParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsFacebookInitParameters.
func (in *LinuxWebAppSlotAuthSettingsFacebookInitParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsFacebookInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsFacebookInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsFacebookObservation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsFacebookObservation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsFacebookObservation.
func (in *LinuxWebAppSlotAuthSettingsFacebookObservation) DeepCopy() *LinuxWebAppSlotAuthSettingsFacebookObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsFacebookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsFacebookParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsFacebookParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSecretRef != nil {
		in, out := &in.AppSecretSecretRef, &out.AppSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsFacebookParameters.
func (in *LinuxWebAppSlotAuthSettingsFacebookParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsFacebookParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsFacebookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsGithubInitParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsGithubInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsGithubInitParameters.
func (in *LinuxWebAppSlotAuthSettingsGithubInitParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsGithubInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsGithubInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsGithubObservation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsGithubObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsGithubObservation.
func (in *LinuxWebAppSlotAuthSettingsGithubObservation) DeepCopy() *LinuxWebAppSlotAuthSettingsGithubObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsGithubObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsGithubParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsGithubParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsGithubParameters.
func (in *LinuxWebAppSlotAuthSettingsGithubParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsGithubParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsGithubParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsGoogleInitParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsGoogleInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsGoogleInitParameters.
func (in *LinuxWebAppSlotAuthSettingsGoogleInitParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsGoogleInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsGoogleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsGoogleObservation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsGoogleObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsGoogleObservation.
func (in *LinuxWebAppSlotAuthSettingsGoogleObservation) DeepCopy() *LinuxWebAppSlotAuthSettingsGoogleObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsGoogleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsGoogleParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsGoogleParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsGoogleParameters.
func (in *LinuxWebAppSlotAuthSettingsGoogleParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsGoogleParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsGoogleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsInitParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsInitParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]LinuxWebAppSlotAuthSettingsActiveDirectoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]LinuxWebAppSlotAuthSettingsFacebookInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]LinuxWebAppSlotAuthSettingsGithubInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]LinuxWebAppSlotAuthSettingsGoogleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]LinuxWebAppSlotAuthSettingsMicrosoftInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]LinuxWebAppSlotAuthSettingsTwitterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsInitParameters.
func (in *LinuxWebAppSlotAuthSettingsInitParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsMicrosoftInitParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsMicrosoftInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsMicrosoftInitParameters.
func (in *LinuxWebAppSlotAuthSettingsMicrosoftInitParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsMicrosoftInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsMicrosoftInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsMicrosoftObservation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsMicrosoftObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsMicrosoftObservation.
func (in *LinuxWebAppSlotAuthSettingsMicrosoftObservation) DeepCopy() *LinuxWebAppSlotAuthSettingsMicrosoftObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsMicrosoftObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsMicrosoftParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsMicrosoftParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsMicrosoftParameters.
func (in *LinuxWebAppSlotAuthSettingsMicrosoftParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsMicrosoftParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsMicrosoftParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsObservation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsObservation) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]LinuxWebAppSlotAuthSettingsActiveDirectoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]LinuxWebAppSlotAuthSettingsFacebookObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]LinuxWebAppSlotAuthSettingsGithubObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]LinuxWebAppSlotAuthSettingsGoogleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]LinuxWebAppSlotAuthSettingsMicrosoftObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]LinuxWebAppSlotAuthSettingsTwitterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsObservation.
func (in *LinuxWebAppSlotAuthSettingsObservation) DeepCopy() *LinuxWebAppSlotAuthSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]LinuxWebAppSlotAuthSettingsActiveDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]LinuxWebAppSlotAuthSettingsFacebookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]LinuxWebAppSlotAuthSettingsGithubParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]LinuxWebAppSlotAuthSettingsGoogleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]LinuxWebAppSlotAuthSettingsMicrosoftParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]LinuxWebAppSlotAuthSettingsTwitterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsParameters.
func (in *LinuxWebAppSlotAuthSettingsParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsTwitterInitParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsTwitterInitParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsTwitterInitParameters.
func (in *LinuxWebAppSlotAuthSettingsTwitterInitParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsTwitterInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsTwitterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsTwitterObservation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsTwitterObservation) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsTwitterObservation.
func (in *LinuxWebAppSlotAuthSettingsTwitterObservation) DeepCopy() *LinuxWebAppSlotAuthSettingsTwitterObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsTwitterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsTwitterParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsTwitterParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSecretRef != nil {
		in, out := &in.ConsumerSecretSecretRef, &out.ConsumerSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsTwitterParameters.
func (in *LinuxWebAppSlotAuthSettingsTwitterParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsTwitterParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsTwitterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2InitParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2InitParameters) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2InitParameters.
func (in *LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2InitParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2Observation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2Observation) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2Observation.
func (in *LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2Observation) DeepCopy() *LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2Observation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2Parameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2Parameters) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2Parameters.
func (in *LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2Parameters) DeepCopy() *LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2Parameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2AppleV2InitParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2AppleV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2AppleV2InitParameters.
func (in *LinuxWebAppSlotAuthSettingsV2AppleV2InitParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsV2AppleV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2AppleV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2AppleV2Observation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2AppleV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2AppleV2Observation.
func (in *LinuxWebAppSlotAuthSettingsV2AppleV2Observation) DeepCopy() *LinuxWebAppSlotAuthSettingsV2AppleV2Observation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2AppleV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2AppleV2Parameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2AppleV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2AppleV2Parameters.
func (in *LinuxWebAppSlotAuthSettingsV2AppleV2Parameters) DeepCopy() *LinuxWebAppSlotAuthSettingsV2AppleV2Parameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2AppleV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2InitParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2InitParameters.
func (in *LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2InitParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2Observation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2Observation.
func (in *LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2Observation) DeepCopy() *LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2Observation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2Parameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2Parameters.
func (in *LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2Parameters) DeepCopy() *LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2Parameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2CustomOidcV2InitParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2CustomOidcV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2CustomOidcV2InitParameters.
func (in *LinuxWebAppSlotAuthSettingsV2CustomOidcV2InitParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsV2CustomOidcV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2CustomOidcV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2CustomOidcV2Observation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2CustomOidcV2Observation) {
	*out = *in
	if in.AuthorisationEndpoint != nil {
		in, out := &in.AuthorisationEndpoint, &out.AuthorisationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.CertificationURI != nil {
		in, out := &in.CertificationURI, &out.CertificationURI
		*out = new(string)
		**out = **in
	}
	if in.ClientCredentialMethod != nil {
		in, out := &in.ClientCredentialMethod, &out.ClientCredentialMethod
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.IssuerEndpoint != nil {
		in, out := &in.IssuerEndpoint, &out.IssuerEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TokenEndpoint != nil {
		in, out := &in.TokenEndpoint, &out.TokenEndpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2CustomOidcV2Observation.
func (in *LinuxWebAppSlotAuthSettingsV2CustomOidcV2Observation) DeepCopy() *LinuxWebAppSlotAuthSettingsV2CustomOidcV2Observation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2CustomOidcV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2CustomOidcV2Parameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2CustomOidcV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2CustomOidcV2Parameters.
func (in *LinuxWebAppSlotAuthSettingsV2CustomOidcV2Parameters) DeepCopy() *LinuxWebAppSlotAuthSettingsV2CustomOidcV2Parameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2CustomOidcV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2FacebookV2InitParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2FacebookV2InitParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2FacebookV2InitParameters.
func (in *LinuxWebAppSlotAuthSettingsV2FacebookV2InitParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsV2FacebookV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2FacebookV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2FacebookV2Observation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2FacebookV2Observation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2FacebookV2Observation.
func (in *LinuxWebAppSlotAuthSettingsV2FacebookV2Observation) DeepCopy() *LinuxWebAppSlotAuthSettingsV2FacebookV2Observation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2FacebookV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2FacebookV2Parameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2FacebookV2Parameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2FacebookV2Parameters.
func (in *LinuxWebAppSlotAuthSettingsV2FacebookV2Parameters) DeepCopy() *LinuxWebAppSlotAuthSettingsV2FacebookV2Parameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2FacebookV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2GithubV2InitParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2GithubV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2GithubV2InitParameters.
func (in *LinuxWebAppSlotAuthSettingsV2GithubV2InitParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsV2GithubV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2GithubV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2GithubV2Observation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2GithubV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2GithubV2Observation.
func (in *LinuxWebAppSlotAuthSettingsV2GithubV2Observation) DeepCopy() *LinuxWebAppSlotAuthSettingsV2GithubV2Observation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2GithubV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2GithubV2Parameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2GithubV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2GithubV2Parameters.
func (in *LinuxWebAppSlotAuthSettingsV2GithubV2Parameters) DeepCopy() *LinuxWebAppSlotAuthSettingsV2GithubV2Parameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2GithubV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2GoogleV2InitParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2GoogleV2InitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2GoogleV2InitParameters.
func (in *LinuxWebAppSlotAuthSettingsV2GoogleV2InitParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsV2GoogleV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2GoogleV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2GoogleV2Observation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2GoogleV2Observation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2GoogleV2Observation.
func (in *LinuxWebAppSlotAuthSettingsV2GoogleV2Observation) DeepCopy() *LinuxWebAppSlotAuthSettingsV2GoogleV2Observation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2GoogleV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2GoogleV2Parameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2GoogleV2Parameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2GoogleV2Parameters.
func (in *LinuxWebAppSlotAuthSettingsV2GoogleV2Parameters) DeepCopy() *LinuxWebAppSlotAuthSettingsV2GoogleV2Parameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2GoogleV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2InitParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2InitParameters) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2AppleV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2CustomOidcV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2FacebookV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2GithubV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2GoogleV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]LinuxWebAppSlotAuthSettingsV2LoginInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2MicrosoftV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2TwitterV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2InitParameters.
func (in *LinuxWebAppSlotAuthSettingsV2InitParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2LoginInitParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2LoginInitParameters) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2LoginInitParameters.
func (in *LinuxWebAppSlotAuthSettingsV2LoginInitParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsV2LoginInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2LoginInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2LoginObservation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2LoginObservation) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2LoginObservation.
func (in *LinuxWebAppSlotAuthSettingsV2LoginObservation) DeepCopy() *LinuxWebAppSlotAuthSettingsV2LoginObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2LoginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2LoginParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2LoginParameters) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2LoginParameters.
func (in *LinuxWebAppSlotAuthSettingsV2LoginParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsV2LoginParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2LoginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2MicrosoftV2InitParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2MicrosoftV2InitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2MicrosoftV2InitParameters.
func (in *LinuxWebAppSlotAuthSettingsV2MicrosoftV2InitParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsV2MicrosoftV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2MicrosoftV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2MicrosoftV2Observation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2MicrosoftV2Observation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2MicrosoftV2Observation.
func (in *LinuxWebAppSlotAuthSettingsV2MicrosoftV2Observation) DeepCopy() *LinuxWebAppSlotAuthSettingsV2MicrosoftV2Observation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2MicrosoftV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2MicrosoftV2Parameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2MicrosoftV2Parameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2MicrosoftV2Parameters.
func (in *LinuxWebAppSlotAuthSettingsV2MicrosoftV2Parameters) DeepCopy() *LinuxWebAppSlotAuthSettingsV2MicrosoftV2Parameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2MicrosoftV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2Observation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2Observation) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2AppleV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2CustomOidcV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2FacebookV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2GithubV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2GoogleV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]LinuxWebAppSlotAuthSettingsV2LoginObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2MicrosoftV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2TwitterV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2Observation.
func (in *LinuxWebAppSlotAuthSettingsV2Observation) DeepCopy() *LinuxWebAppSlotAuthSettingsV2Observation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2Parameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2Parameters) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2AppleV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2CustomOidcV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2FacebookV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2GithubV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2GoogleV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]LinuxWebAppSlotAuthSettingsV2LoginParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2MicrosoftV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2TwitterV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2Parameters.
func (in *LinuxWebAppSlotAuthSettingsV2Parameters) DeepCopy() *LinuxWebAppSlotAuthSettingsV2Parameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2TwitterV2InitParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2TwitterV2InitParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2TwitterV2InitParameters.
func (in *LinuxWebAppSlotAuthSettingsV2TwitterV2InitParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsV2TwitterV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2TwitterV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2TwitterV2Observation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2TwitterV2Observation) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2TwitterV2Observation.
func (in *LinuxWebAppSlotAuthSettingsV2TwitterV2Observation) DeepCopy() *LinuxWebAppSlotAuthSettingsV2TwitterV2Observation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2TwitterV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsV2TwitterV2Parameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsV2TwitterV2Parameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsV2TwitterV2Parameters.
func (in *LinuxWebAppSlotAuthSettingsV2TwitterV2Parameters) DeepCopy() *LinuxWebAppSlotAuthSettingsV2TwitterV2Parameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsV2TwitterV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotBackupInitParameters) DeepCopyInto(out *LinuxWebAppSlotBackupInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]LinuxWebAppSlotBackupScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotBackupInitParameters.
func (in *LinuxWebAppSlotBackupInitParameters) DeepCopy() *LinuxWebAppSlotBackupInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotBackupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotBackupObservation) DeepCopyInto(out *LinuxWebAppSlotBackupObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]LinuxWebAppSlotBackupScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotBackupObservation.
func (in *LinuxWebAppSlotBackupObservation) DeepCopy() *LinuxWebAppSlotBackupObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotBackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotBackupParameters) DeepCopyInto(out *LinuxWebAppSlotBackupParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]LinuxWebAppSlotBackupScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.StorageAccountURLSecretRef = in.StorageAccountURLSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotBackupParameters.
func (in *LinuxWebAppSlotBackupParameters) DeepCopy() *LinuxWebAppSlotBackupParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotBackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotBackupScheduleInitParameters) DeepCopyInto(out *LinuxWebAppSlotBackupScheduleInitParameters) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotBackupScheduleInitParameters.
func (in *LinuxWebAppSlotBackupScheduleInitParameters) DeepCopy() *LinuxWebAppSlotBackupScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotBackupScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotBackupScheduleObservation) DeepCopyInto(out *LinuxWebAppSlotBackupScheduleObservation) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.LastExecutionTime != nil {
		in, out := &in.LastExecutionTime, &out.LastExecutionTime
		*out = new(string)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotBackupScheduleObservation.
func (in *LinuxWebAppSlotBackupScheduleObservation) DeepCopy() *LinuxWebAppSlotBackupScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotBackupScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotBackupScheduleParameters) DeepCopyInto(out *LinuxWebAppSlotBackupScheduleParameters) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotBackupScheduleParameters.
func (in *LinuxWebAppSlotBackupScheduleParameters) DeepCopy() *LinuxWebAppSlotBackupScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotBackupScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotConnectionStringInitParameters) DeepCopyInto(out *LinuxWebAppSlotConnectionStringInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotConnectionStringInitParameters.
func (in *LinuxWebAppSlotConnectionStringInitParameters) DeepCopy() *LinuxWebAppSlotConnectionStringInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotConnectionStringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotConnectionStringObservation) DeepCopyInto(out *LinuxWebAppSlotConnectionStringObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotConnectionStringObservation.
func (in *LinuxWebAppSlotConnectionStringObservation) DeepCopy() *LinuxWebAppSlotConnectionStringObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotConnectionStringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotConnectionStringParameters) DeepCopyInto(out *LinuxWebAppSlotConnectionStringParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	out.ValueSecretRef = in.ValueSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotConnectionStringParameters.
func (in *LinuxWebAppSlotConnectionStringParameters) DeepCopy() *LinuxWebAppSlotConnectionStringParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotConnectionStringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotIdentityInitParameters) DeepCopyInto(out *LinuxWebAppSlotIdentityInitParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotIdentityInitParameters.
func (in *LinuxWebAppSlotIdentityInitParameters) DeepCopy() *LinuxWebAppSlotIdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotIdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotIdentityObservation) DeepCopyInto(out *LinuxWebAppSlotIdentityObservation) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotIdentityObservation.
func (in *LinuxWebAppSlotIdentityObservation) DeepCopy() *LinuxWebAppSlotIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotIdentityParameters) DeepCopyInto(out *LinuxWebAppSlotIdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotIdentityParameters.
func (in *LinuxWebAppSlotIdentityParameters) DeepCopy() *LinuxWebAppSlotIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotInitParameters) DeepCopyInto(out *LinuxWebAppSlotInitParameters) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]LinuxWebAppSlotAuthSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]LinuxWebAppSlotBackupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientAffinityEnabled != nil {
		in, out := &in.ClientAffinityEnabled, &out.ClientAffinityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]LinuxWebAppSlotConnectionStringInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]LinuxWebAppSlotIdentityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Logs != nil {
		in, out := &in.Logs, &out.Logs
		*out = make([]LinuxWebAppSlotLogsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]LinuxWebAppSlotSiteConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]LinuxWebAppSlotStorageAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZipDeployFile != nil {
		in, out := &in.ZipDeployFile, &out.ZipDeployFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotInitParameters.
func (in *LinuxWebAppSlotInitParameters) DeepCopy() *LinuxWebAppSlotInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotList) DeepCopyInto(out *LinuxWebAppSlotList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LinuxWebAppSlot, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotList.
func (in *LinuxWebAppSlotList) DeepCopy() *LinuxWebAppSlotList {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinuxWebAppSlotList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotLogsInitParameters) DeepCopyInto(out *LinuxWebAppSlotLogsInitParameters) {
	*out = *in
	if in.ApplicationLogs != nil {
		in, out := &in.ApplicationLogs, &out.ApplicationLogs
		*out = make([]LogsApplicationLogsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DetailedErrorMessages != nil {
		in, out := &in.DetailedErrorMessages, &out.DetailedErrorMessages
		*out = new(bool)
		**out = **in
	}
	if in.FailedRequestTracing != nil {
		in, out := &in.FailedRequestTracing, &out.FailedRequestTracing
		*out = new(bool)
		**out = **in
	}
	if in.HTTPLogs != nil {
		in, out := &in.HTTPLogs, &out.HTTPLogs
		*out = make([]LogsHTTPLogsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotLogsInitParameters.
func (in *LinuxWebAppSlotLogsInitParameters) DeepCopy() *LinuxWebAppSlotLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotLogsObservation) DeepCopyInto(out *LinuxWebAppSlotLogsObservation) {
	*out = *in
	if in.ApplicationLogs != nil {
		in, out := &in.ApplicationLogs, &out.ApplicationLogs
		*out = make([]LogsApplicationLogsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DetailedErrorMessages != nil {
		in, out := &in.DetailedErrorMessages, &out.DetailedErrorMessages
		*out = new(bool)
		**out = **in
	}
	if in.FailedRequestTracing != nil {
		in, out := &in.FailedRequestTracing, &out.FailedRequestTracing
		*out = new(bool)
		**out = **in
	}
	if in.HTTPLogs != nil {
		in, out := &in.HTTPLogs, &out.HTTPLogs
		*out = make([]LogsHTTPLogsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotLogsObservation.
func (in *LinuxWebAppSlotLogsObservation) DeepCopy() *LinuxWebAppSlotLogsObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotLogsParameters) DeepCopyInto(out *LinuxWebAppSlotLogsParameters) {
	*out = *in
	if in.ApplicationLogs != nil {
		in, out := &in.ApplicationLogs, &out.ApplicationLogs
		*out = make([]LogsApplicationLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DetailedErrorMessages != nil {
		in, out := &in.DetailedErrorMessages, &out.DetailedErrorMessages
		*out = new(bool)
		**out = **in
	}
	if in.FailedRequestTracing != nil {
		in, out := &in.FailedRequestTracing, &out.FailedRequestTracing
		*out = new(bool)
		**out = **in
	}
	if in.HTTPLogs != nil {
		in, out := &in.HTTPLogs, &out.HTTPLogs
		*out = make([]LogsHTTPLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotLogsParameters.
func (in *LinuxWebAppSlotLogsParameters) DeepCopy() *LinuxWebAppSlotLogsParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotObservation) DeepCopyInto(out *LinuxWebAppSlotObservation) {
	*out = *in
	if in.AppMetadata != nil {
		in, out := &in.AppMetadata, &out.AppMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AppServiceID != nil {
		in, out := &in.AppServiceID, &out.AppServiceID
		*out = new(string)
		**out = **in
	}
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]LinuxWebAppSlotAuthSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]LinuxWebAppSlotBackupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientAffinityEnabled != nil {
		in, out := &in.ClientAffinityEnabled, &out.ClientAffinityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]LinuxWebAppSlotConnectionStringObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultHostName != nil {
		in, out := &in.DefaultHostName, &out.DefaultHostName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.HostingEnvironmentID != nil {
		in, out := &in.HostingEnvironmentID, &out.HostingEnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]LinuxWebAppSlotIdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Logs != nil {
		in, out := &in.Logs, &out.Logs
		*out = make([]LinuxWebAppSlotLogsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutboundIPAddressList != nil {
		in, out := &in.OutboundIPAddressList, &out.OutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OutboundIPAddresses != nil {
		in, out := &in.OutboundIPAddresses, &out.OutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.PossibleOutboundIPAddressList != nil {
		in, out := &in.PossibleOutboundIPAddressList, &out.PossibleOutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PossibleOutboundIPAddresses != nil {
		in, out := &in.PossibleOutboundIPAddresses, &out.PossibleOutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]LinuxWebAppSlotSiteConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]LinuxWebAppSlotStorageAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.ZipDeployFile != nil {
		in, out := &in.ZipDeployFile, &out.ZipDeployFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotObservation.
func (in *LinuxWebAppSlotObservation) DeepCopy() *LinuxWebAppSlotObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotParameters) DeepCopyInto(out *LinuxWebAppSlotParameters) {
	*out = *in
	if in.AppServiceID != nil {
		in, out := &in.AppServiceID, &out.AppServiceID
		*out = new(string)
		**out = **in
	}
	if in.AppServiceIDRef != nil {
		in, out := &in.AppServiceIDRef, &out.AppServiceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AppServiceIDSelector != nil {
		in, out := &in.AppServiceIDSelector, &out.AppServiceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]LinuxWebAppSlotAuthSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]LinuxWebAppSlotAuthSettingsV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]LinuxWebAppSlotBackupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientAffinityEnabled != nil {
		in, out := &in.ClientAffinityEnabled, &out.ClientAffinityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]LinuxWebAppSlotConnectionStringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]LinuxWebAppSlotIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Logs != nil {
		in, out := &in.Logs, &out.Logs
		*out = make([]LinuxWebAppSlotLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]LinuxWebAppSlotSiteConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]LinuxWebAppSlotStorageAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ZipDeployFile != nil {
		in, out := &in.ZipDeployFile, &out.ZipDeployFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotParameters.
func (in *LinuxWebAppSlotParameters) DeepCopy() *LinuxWebAppSlotParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigApplicationStackInitParameters) DeepCopyInto(out *LinuxWebAppSlotSiteConfigApplicationStackInitParameters) {
	*out = *in
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = new(string)
		**out = **in
	}
	if in.DockerImageTag != nil {
		in, out := &in.DockerImageTag, &out.DockerImageTag
		*out = new(string)
		**out = **in
	}
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.GoVersion != nil {
		in, out := &in.GoVersion, &out.GoVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaServer != nil {
		in, out := &in.JavaServer, &out.JavaServer
		*out = new(string)
		**out = **in
	}
	if in.JavaServerVersion != nil {
		in, out := &in.JavaServerVersion, &out.JavaServerVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PHPVersion != nil {
		in, out := &in.PHPVersion, &out.PHPVersion
		*out = new(string)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.RubyVersion != nil {
		in, out := &in.RubyVersion, &out.RubyVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigApplicationStackInitParameters.
func (in *LinuxWebAppSlotSiteConfigApplicationStackInitParameters) DeepCopy() *LinuxWebAppSlotSiteConfigApplicationStackInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigApplicationStackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigApplicationStackObservation) DeepCopyInto(out *LinuxWebAppSlotSiteConfigApplicationStackObservation) {
	*out = *in
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = new(string)
		**out = **in
	}
	if in.DockerImageTag != nil {
		in, out := &in.DockerImageTag, &out.DockerImageTag
		*out = new(string)
		**out = **in
	}
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.GoVersion != nil {
		in, out := &in.GoVersion, &out.GoVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaServer != nil {
		in, out := &in.JavaServer, &out.JavaServer
		*out = new(string)
		**out = **in
	}
	if in.JavaServerVersion != nil {
		in, out := &in.JavaServerVersion, &out.JavaServerVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PHPVersion != nil {
		in, out := &in.PHPVersion, &out.PHPVersion
		*out = new(string)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.RubyVersion != nil {
		in, out := &in.RubyVersion, &out.RubyVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigApplicationStackObservation.
func (in *LinuxWebAppSlotSiteConfigApplicationStackObservation) DeepCopy() *LinuxWebAppSlotSiteConfigApplicationStackObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigApplicationStackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigApplicationStackParameters) DeepCopyInto(out *LinuxWebAppSlotSiteConfigApplicationStackParameters) {
	*out = *in
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = new(string)
		**out = **in
	}
	if in.DockerImageTag != nil {
		in, out := &in.DockerImageTag, &out.DockerImageTag
		*out = new(string)
		**out = **in
	}
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.GoVersion != nil {
		in, out := &in.GoVersion, &out.GoVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaServer != nil {
		in, out := &in.JavaServer, &out.JavaServer
		*out = new(string)
		**out = **in
	}
	if in.JavaServerVersion != nil {
		in, out := &in.JavaServerVersion, &out.JavaServerVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PHPVersion != nil {
		in, out := &in.PHPVersion, &out.PHPVersion
		*out = new(string)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.RubyVersion != nil {
		in, out := &in.RubyVersion, &out.RubyVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigApplicationStackParameters.
func (in *LinuxWebAppSlotSiteConfigApplicationStackParameters) DeepCopy() *LinuxWebAppSlotSiteConfigApplicationStackParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigApplicationStackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigCorsInitParameters) DeepCopyInto(out *LinuxWebAppSlotSiteConfigCorsInitParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigCorsInitParameters.
func (in *LinuxWebAppSlotSiteConfigCorsInitParameters) DeepCopy() *LinuxWebAppSlotSiteConfigCorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigCorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigCorsObservation) DeepCopyInto(out *LinuxWebAppSlotSiteConfigCorsObservation) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigCorsObservation.
func (in *LinuxWebAppSlotSiteConfigCorsObservation) DeepCopy() *LinuxWebAppSlotSiteConfigCorsObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigCorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigCorsParameters) DeepCopyInto(out *LinuxWebAppSlotSiteConfigCorsParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigCorsParameters.
func (in *LinuxWebAppSlotSiteConfigCorsParameters) DeepCopy() *LinuxWebAppSlotSiteConfigCorsParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigCorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigIPRestrictionHeadersInitParameters) DeepCopyInto(out *LinuxWebAppSlotSiteConfigIPRestrictionHeadersInitParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigIPRestrictionHeadersInitParameters.
func (in *LinuxWebAppSlotSiteConfigIPRestrictionHeadersInitParameters) DeepCopy() *LinuxWebAppSlotSiteConfigIPRestrictionHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigIPRestrictionHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigIPRestrictionHeadersObservation) DeepCopyInto(out *LinuxWebAppSlotSiteConfigIPRestrictionHeadersObservation) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigIPRestrictionHeadersObservation.
func (in *LinuxWebAppSlotSiteConfigIPRestrictionHeadersObservation) DeepCopy() *LinuxWebAppSlotSiteConfigIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigIPRestrictionHeadersParameters) DeepCopyInto(out *LinuxWebAppSlotSiteConfigIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigIPRestrictionHeadersParameters.
func (in *LinuxWebAppSlotSiteConfigIPRestrictionHeadersParameters) DeepCopy() *LinuxWebAppSlotSiteConfigIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigIPRestrictionInitParameters) DeepCopyInto(out *LinuxWebAppSlotSiteConfigIPRestrictionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxWebAppSlotSiteConfigIPRestrictionHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigIPRestrictionInitParameters.
func (in *LinuxWebAppSlotSiteConfigIPRestrictionInitParameters) DeepCopy() *LinuxWebAppSlotSiteConfigIPRestrictionInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigIPRestrictionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigIPRestrictionObservation) DeepCopyInto(out *LinuxWebAppSlotSiteConfigIPRestrictionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxWebAppSlotSiteConfigIPRestrictionHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigIPRestrictionObservation.
func (in *LinuxWebAppSlotSiteConfigIPRestrictionObservation) DeepCopy() *LinuxWebAppSlotSiteConfigIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigIPRestrictionParameters) DeepCopyInto(out *LinuxWebAppSlotSiteConfigIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxWebAppSlotSiteConfigIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigIPRestrictionParameters.
func (in *LinuxWebAppSlotSiteConfigIPRestrictionParameters) DeepCopy() *LinuxWebAppSlotSiteConfigIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigInitParameters) DeepCopyInto(out *LinuxWebAppSlotSiteConfigInitParameters) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]LinuxWebAppSlotSiteConfigApplicationStackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealEnabled != nil {
		in, out := &in.AutoHealEnabled, &out.AutoHealEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealSetting != nil {
		in, out := &in.AutoHealSetting, &out.AutoHealSetting
		*out = make([]SiteConfigAutoHealSettingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoSwapSlotName != nil {
		in, out := &in.AutoSwapSlotName, &out.AutoSwapSlotName
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryManagedIdentityClientID != nil {
		in, out := &in.ContainerRegistryManagedIdentityClientID, &out.ContainerRegistryManagedIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryUseManagedIdentity != nil {
		in, out := &in.ContainerRegistryUseManagedIdentity, &out.ContainerRegistryUseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]LinuxWebAppSlotSiteConfigCorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]LinuxWebAppSlotSiteConfigIPRestrictionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.LocalMySQLEnabled != nil {
		in, out := &in.LocalMySQLEnabled, &out.LocalMySQLEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]LinuxWebAppSlotSiteConfigScmIPRestrictionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigInitParameters.
func (in *LinuxWebAppSlotSiteConfigInitParameters) DeepCopy() *LinuxWebAppSlotSiteConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigObservation) DeepCopyInto(out *LinuxWebAppSlotSiteConfigObservation) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]LinuxWebAppSlotSiteConfigApplicationStackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealEnabled != nil {
		in, out := &in.AutoHealEnabled, &out.AutoHealEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealSetting != nil {
		in, out := &in.AutoHealSetting, &out.AutoHealSetting
		*out = make([]SiteConfigAutoHealSettingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoSwapSlotName != nil {
		in, out := &in.AutoSwapSlotName, &out.AutoSwapSlotName
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryManagedIdentityClientID != nil {
		in, out := &in.ContainerRegistryManagedIdentityClientID, &out.ContainerRegistryManagedIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryUseManagedIdentity != nil {
		in, out := &in.ContainerRegistryUseManagedIdentity, &out.ContainerRegistryUseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]LinuxWebAppSlotSiteConfigCorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DetailedErrorLoggingEnabled != nil {
		in, out := &in.DetailedErrorLoggingEnabled, &out.DetailedErrorLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]LinuxWebAppSlotSiteConfigIPRestrictionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LinuxFxVersion != nil {
		in, out := &in.LinuxFxVersion, &out.LinuxFxVersion
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.LocalMySQLEnabled != nil {
		in, out := &in.LocalMySQLEnabled, &out.LocalMySQLEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]LinuxWebAppSlotSiteConfigScmIPRestrictionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmType != nil {
		in, out := &in.ScmType, &out.ScmType
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigObservation.
func (in *LinuxWebAppSlotSiteConfigObservation) DeepCopy() *LinuxWebAppSlotSiteConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigParameters) DeepCopyInto(out *LinuxWebAppSlotSiteConfigParameters) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]LinuxWebAppSlotSiteConfigApplicationStackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealEnabled != nil {
		in, out := &in.AutoHealEnabled, &out.AutoHealEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealSetting != nil {
		in, out := &in.AutoHealSetting, &out.AutoHealSetting
		*out = make([]SiteConfigAutoHealSettingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoSwapSlotName != nil {
		in, out := &in.AutoSwapSlotName, &out.AutoSwapSlotName
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryManagedIdentityClientID != nil {
		in, out := &in.ContainerRegistryManagedIdentityClientID, &out.ContainerRegistryManagedIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryUseManagedIdentity != nil {
		in, out := &in.ContainerRegistryUseManagedIdentity, &out.ContainerRegistryUseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]LinuxWebAppSlotSiteConfigCorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]LinuxWebAppSlotSiteConfigIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.LocalMySQLEnabled != nil {
		in, out := &in.LocalMySQLEnabled, &out.LocalMySQLEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]LinuxWebAppSlotSiteConfigScmIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigParameters.
func (in *LinuxWebAppSlotSiteConfigParameters) DeepCopy() *LinuxWebAppSlotSiteConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersInitParameters) DeepCopyInto(out *LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersInitParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersInitParameters.
func (in *LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersInitParameters) DeepCopy() *LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersObservation) DeepCopyInto(out *LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersObservation) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersObservation.
func (in *LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersObservation) DeepCopy() *LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersParameters) DeepCopyInto(out *LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersParameters.
func (in *LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersParameters) DeepCopy() *LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigScmIPRestrictionInitParameters) DeepCopyInto(out *LinuxWebAppSlotSiteConfigScmIPRestrictionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigScmIPRestrictionInitParameters.
func (in *LinuxWebAppSlotSiteConfigScmIPRestrictionInitParameters) DeepCopy() *LinuxWebAppSlotSiteConfigScmIPRestrictionInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigScmIPRestrictionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigScmIPRestrictionObservation) DeepCopyInto(out *LinuxWebAppSlotSiteConfigScmIPRestrictionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigScmIPRestrictionObservation.
func (in *LinuxWebAppSlotSiteConfigScmIPRestrictionObservation) DeepCopy() *LinuxWebAppSlotSiteConfigScmIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigScmIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigScmIPRestrictionParameters) DeepCopyInto(out *LinuxWebAppSlotSiteConfigScmIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigScmIPRestrictionParameters.
func (in *LinuxWebAppSlotSiteConfigScmIPRestrictionParameters) DeepCopy() *LinuxWebAppSlotSiteConfigScmIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigScmIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteCredentialInitParameters) DeepCopyInto(out *LinuxWebAppSlotSiteCredentialInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteCredentialInitParameters.
func (in *LinuxWebAppSlotSiteCredentialInitParameters) DeepCopy() *LinuxWebAppSlotSiteCredentialInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteCredentialInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteCredentialObservation) DeepCopyInto(out *LinuxWebAppSlotSiteCredentialObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteCredentialObservation.
func (in *LinuxWebAppSlotSiteCredentialObservation) DeepCopy() *LinuxWebAppSlotSiteCredentialObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteCredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteCredentialParameters) DeepCopyInto(out *LinuxWebAppSlotSiteCredentialParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteCredentialParameters.
func (in *LinuxWebAppSlotSiteCredentialParameters) DeepCopy() *LinuxWebAppSlotSiteCredentialParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteCredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSpec) DeepCopyInto(out *LinuxWebAppSlotSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSpec.
func (in *LinuxWebAppSlotSpec) DeepCopy() *LinuxWebAppSlotSpec {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotStatus) DeepCopyInto(out *LinuxWebAppSlotStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotStatus.
func (in *LinuxWebAppSlotStatus) DeepCopy() *LinuxWebAppSlotStatus {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotStorageAccountInitParameters) DeepCopyInto(out *LinuxWebAppSlotStorageAccountInitParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotStorageAccountInitParameters.
func (in *LinuxWebAppSlotStorageAccountInitParameters) DeepCopy() *LinuxWebAppSlotStorageAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotStorageAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotStorageAccountObservation) DeepCopyInto(out *LinuxWebAppSlotStorageAccountObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotStorageAccountObservation.
func (in *LinuxWebAppSlotStorageAccountObservation) DeepCopy() *LinuxWebAppSlotStorageAccountObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotStorageAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotStorageAccountParameters) DeepCopyInto(out *LinuxWebAppSlotStorageAccountParameters) {
	*out = *in
	out.AccessKeySecretRef = in.AccessKeySecretRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotStorageAccountParameters.
func (in *LinuxWebAppSlotStorageAccountParameters) DeepCopy() *LinuxWebAppSlotStorageAccountParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotStorageAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSpec) DeepCopyInto(out *LinuxWebAppSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSpec.
func (in *LinuxWebAppSpec) DeepCopy() *LinuxWebAppSpec {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppStatus) DeepCopyInto(out *LinuxWebAppStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppStatus.
func (in *LinuxWebAppStatus) DeepCopy() *LinuxWebAppStatus {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppStickySettingsInitParameters) DeepCopyInto(out *LinuxWebAppStickySettingsInitParameters) {
	*out = *in
	if in.AppSettingNames != nil {
		in, out := &in.AppSettingNames, &out.AppSettingNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConnectionStringNames != nil {
		in, out := &in.ConnectionStringNames, &out.ConnectionStringNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppStickySettingsInitParameters.
func (in *LinuxWebAppStickySettingsInitParameters) DeepCopy() *LinuxWebAppStickySettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppStickySettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppStickySettingsObservation) DeepCopyInto(out *LinuxWebAppStickySettingsObservation) {
	*out = *in
	if in.AppSettingNames != nil {
		in, out := &in.AppSettingNames, &out.AppSettingNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConnectionStringNames != nil {
		in, out := &in.ConnectionStringNames, &out.ConnectionStringNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppStickySettingsObservation.
func (in *LinuxWebAppStickySettingsObservation) DeepCopy() *LinuxWebAppStickySettingsObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppStickySettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppStickySettingsParameters) DeepCopyInto(out *LinuxWebAppStickySettingsParameters) {
	*out = *in
	if in.AppSettingNames != nil {
		in, out := &in.AppSettingNames, &out.AppSettingNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConnectionStringNames != nil {
		in, out := &in.ConnectionStringNames, &out.ConnectionStringNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppStickySettingsParameters.
func (in *LinuxWebAppStickySettingsParameters) DeepCopy() *LinuxWebAppStickySettingsParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppStickySettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppStorageAccountInitParameters) DeepCopyInto(out *LinuxWebAppStorageAccountInitParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppStorageAccountInitParameters.
func (in *LinuxWebAppStorageAccountInitParameters) DeepCopy() *LinuxWebAppStorageAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppStorageAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppStorageAccountObservation) DeepCopyInto(out *LinuxWebAppStorageAccountObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppStorageAccountObservation.
func (in *LinuxWebAppStorageAccountObservation) DeepCopy() *LinuxWebAppStorageAccountObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppStorageAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppStorageAccountParameters) DeepCopyInto(out *LinuxWebAppStorageAccountParameters) {
	*out = *in
	out.AccessKeySecretRef = in.AccessKeySecretRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppStorageAccountParameters.
func (in *LinuxWebAppStorageAccountParameters) DeepCopy() *LinuxWebAppStorageAccountParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppStorageAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoginInitParameters) DeepCopyInto(out *LoginInitParameters) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoginInitParameters.
func (in *LoginInitParameters) DeepCopy() *LoginInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoginInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoginObservation) DeepCopyInto(out *LoginObservation) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoginObservation.
func (in *LoginObservation) DeepCopy() *LoginObservation {
	if in == nil {
		return nil
	}
	out := new(LoginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoginParameters) DeepCopyInto(out *LoginParameters) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoginParameters.
func (in *LoginParameters) DeepCopy() *LoginParameters {
	if in == nil {
		return nil
	}
	out := new(LoginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsApplicationLogsAzureBlobStorageInitParameters) DeepCopyInto(out *LogsApplicationLogsAzureBlobStorageInitParameters) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.SASURL != nil {
		in, out := &in.SASURL, &out.SASURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsApplicationLogsAzureBlobStorageInitParameters.
func (in *LogsApplicationLogsAzureBlobStorageInitParameters) DeepCopy() *LogsApplicationLogsAzureBlobStorageInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogsApplicationLogsAzureBlobStorageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsApplicationLogsAzureBlobStorageObservation) DeepCopyInto(out *LogsApplicationLogsAzureBlobStorageObservation) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.SASURL != nil {
		in, out := &in.SASURL, &out.SASURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsApplicationLogsAzureBlobStorageObservation.
func (in *LogsApplicationLogsAzureBlobStorageObservation) DeepCopy() *LogsApplicationLogsAzureBlobStorageObservation {
	if in == nil {
		return nil
	}
	out := new(LogsApplicationLogsAzureBlobStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsApplicationLogsAzureBlobStorageParameters) DeepCopyInto(out *LogsApplicationLogsAzureBlobStorageParameters) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.SASURL != nil {
		in, out := &in.SASURL, &out.SASURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsApplicationLogsAzureBlobStorageParameters.
func (in *LogsApplicationLogsAzureBlobStorageParameters) DeepCopy() *LogsApplicationLogsAzureBlobStorageParameters {
	if in == nil {
		return nil
	}
	out := new(LogsApplicationLogsAzureBlobStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsApplicationLogsInitParameters) DeepCopyInto(out *LogsApplicationLogsInitParameters) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]ApplicationLogsAzureBlobStorageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemLevel != nil {
		in, out := &in.FileSystemLevel, &out.FileSystemLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsApplicationLogsInitParameters.
func (in *LogsApplicationLogsInitParameters) DeepCopy() *LogsApplicationLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogsApplicationLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsApplicationLogsObservation) DeepCopyInto(out *LogsApplicationLogsObservation) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]ApplicationLogsAzureBlobStorageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemLevel != nil {
		in, out := &in.FileSystemLevel, &out.FileSystemLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsApplicationLogsObservation.
func (in *LogsApplicationLogsObservation) DeepCopy() *LogsApplicationLogsObservation {
	if in == nil {
		return nil
	}
	out := new(LogsApplicationLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsApplicationLogsParameters) DeepCopyInto(out *LogsApplicationLogsParameters) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]ApplicationLogsAzureBlobStorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemLevel != nil {
		in, out := &in.FileSystemLevel, &out.FileSystemLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsApplicationLogsParameters.
func (in *LogsApplicationLogsParameters) DeepCopy() *LogsApplicationLogsParameters {
	if in == nil {
		return nil
	}
	out := new(LogsApplicationLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsHTTPLogsAzureBlobStorageInitParameters) DeepCopyInto(out *LogsHTTPLogsAzureBlobStorageInitParameters) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsHTTPLogsAzureBlobStorageInitParameters.
func (in *LogsHTTPLogsAzureBlobStorageInitParameters) DeepCopy() *LogsHTTPLogsAzureBlobStorageInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogsHTTPLogsAzureBlobStorageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsHTTPLogsAzureBlobStorageObservation) DeepCopyInto(out *LogsHTTPLogsAzureBlobStorageObservation) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsHTTPLogsAzureBlobStorageObservation.
func (in *LogsHTTPLogsAzureBlobStorageObservation) DeepCopy() *LogsHTTPLogsAzureBlobStorageObservation {
	if in == nil {
		return nil
	}
	out := new(LogsHTTPLogsAzureBlobStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsHTTPLogsAzureBlobStorageParameters) DeepCopyInto(out *LogsHTTPLogsAzureBlobStorageParameters) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	out.SASURLSecretRef = in.SASURLSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsHTTPLogsAzureBlobStorageParameters.
func (in *LogsHTTPLogsAzureBlobStorageParameters) DeepCopy() *LogsHTTPLogsAzureBlobStorageParameters {
	if in == nil {
		return nil
	}
	out := new(LogsHTTPLogsAzureBlobStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsHTTPLogsFileSystemInitParameters) DeepCopyInto(out *LogsHTTPLogsFileSystemInitParameters) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.RetentionInMb != nil {
		in, out := &in.RetentionInMb, &out.RetentionInMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsHTTPLogsFileSystemInitParameters.
func (in *LogsHTTPLogsFileSystemInitParameters) DeepCopy() *LogsHTTPLogsFileSystemInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogsHTTPLogsFileSystemInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsHTTPLogsFileSystemObservation) DeepCopyInto(out *LogsHTTPLogsFileSystemObservation) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.RetentionInMb != nil {
		in, out := &in.RetentionInMb, &out.RetentionInMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsHTTPLogsFileSystemObservation.
func (in *LogsHTTPLogsFileSystemObservation) DeepCopy() *LogsHTTPLogsFileSystemObservation {
	if in == nil {
		return nil
	}
	out := new(LogsHTTPLogsFileSystemObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsHTTPLogsFileSystemParameters) DeepCopyInto(out *LogsHTTPLogsFileSystemParameters) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.RetentionInMb != nil {
		in, out := &in.RetentionInMb, &out.RetentionInMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsHTTPLogsFileSystemParameters.
func (in *LogsHTTPLogsFileSystemParameters) DeepCopy() *LogsHTTPLogsFileSystemParameters {
	if in == nil {
		return nil
	}
	out := new(LogsHTTPLogsFileSystemParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsHTTPLogsInitParameters) DeepCopyInto(out *LogsHTTPLogsInitParameters) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]LogsHTTPLogsAzureBlobStorageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystem != nil {
		in, out := &in.FileSystem, &out.FileSystem
		*out = make([]HTTPLogsFileSystemInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsHTTPLogsInitParameters.
func (in *LogsHTTPLogsInitParameters) DeepCopy() *LogsHTTPLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogsHTTPLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsHTTPLogsObservation) DeepCopyInto(out *LogsHTTPLogsObservation) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]LogsHTTPLogsAzureBlobStorageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystem != nil {
		in, out := &in.FileSystem, &out.FileSystem
		*out = make([]HTTPLogsFileSystemObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsHTTPLogsObservation.
func (in *LogsHTTPLogsObservation) DeepCopy() *LogsHTTPLogsObservation {
	if in == nil {
		return nil
	}
	out := new(LogsHTTPLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsHTTPLogsParameters) DeepCopyInto(out *LogsHTTPLogsParameters) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]LogsHTTPLogsAzureBlobStorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystem != nil {
		in, out := &in.FileSystem, &out.FileSystem
		*out = make([]HTTPLogsFileSystemParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsHTTPLogsParameters.
func (in *LogsHTTPLogsParameters) DeepCopy() *LogsHTTPLogsParameters {
	if in == nil {
		return nil
	}
	out := new(LogsHTTPLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsInitParameters) DeepCopyInto(out *LogsInitParameters) {
	*out = *in
	if in.ApplicationLogs != nil {
		in, out := &in.ApplicationLogs, &out.ApplicationLogs
		*out = make([]ApplicationLogsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DetailedErrorMessages != nil {
		in, out := &in.DetailedErrorMessages, &out.DetailedErrorMessages
		*out = new(bool)
		**out = **in
	}
	if in.FailedRequestTracing != nil {
		in, out := &in.FailedRequestTracing, &out.FailedRequestTracing
		*out = new(bool)
		**out = **in
	}
	if in.HTTPLogs != nil {
		in, out := &in.HTTPLogs, &out.HTTPLogs
		*out = make([]HTTPLogsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsInitParameters.
func (in *LogsInitParameters) DeepCopy() *LogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsObservation) DeepCopyInto(out *LogsObservation) {
	*out = *in
	if in.ApplicationLogs != nil {
		in, out := &in.ApplicationLogs, &out.ApplicationLogs
		*out = make([]ApplicationLogsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DetailedErrorMessages != nil {
		in, out := &in.DetailedErrorMessages, &out.DetailedErrorMessages
		*out = new(bool)
		**out = **in
	}
	if in.FailedRequestTracing != nil {
		in, out := &in.FailedRequestTracing, &out.FailedRequestTracing
		*out = new(bool)
		**out = **in
	}
	if in.HTTPLogs != nil {
		in, out := &in.HTTPLogs, &out.HTTPLogs
		*out = make([]HTTPLogsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsObservation.
func (in *LogsObservation) DeepCopy() *LogsObservation {
	if in == nil {
		return nil
	}
	out := new(LogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsParameters) DeepCopyInto(out *LogsParameters) {
	*out = *in
	if in.ApplicationLogs != nil {
		in, out := &in.ApplicationLogs, &out.ApplicationLogs
		*out = make([]ApplicationLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DetailedErrorMessages != nil {
		in, out := &in.DetailedErrorMessages, &out.DetailedErrorMessages
		*out = new(bool)
		**out = **in
	}
	if in.FailedRequestTracing != nil {
		in, out := &in.FailedRequestTracing, &out.FailedRequestTracing
		*out = new(bool)
		**out = **in
	}
	if in.HTTPLogs != nil {
		in, out := &in.HTTPLogs, &out.HTTPLogs
		*out = make([]HTTPLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsParameters.
func (in *LogsParameters) DeepCopy() *LogsParameters {
	if in == nil {
		return nil
	}
	out := new(LogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicrosoftInitParameters) DeepCopyInto(out *MicrosoftInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicrosoftInitParameters.
func (in *MicrosoftInitParameters) DeepCopy() *MicrosoftInitParameters {
	if in == nil {
		return nil
	}
	out := new(MicrosoftInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicrosoftObservation) DeepCopyInto(out *MicrosoftObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicrosoftObservation.
func (in *MicrosoftObservation) DeepCopy() *MicrosoftObservation {
	if in == nil {
		return nil
	}
	out := new(MicrosoftObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicrosoftParameters) DeepCopyInto(out *MicrosoftParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicrosoftParameters.
func (in *MicrosoftParameters) DeepCopy() *MicrosoftParameters {
	if in == nil {
		return nil
	}
	out := new(MicrosoftParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicrosoftV2InitParameters) DeepCopyInto(out *MicrosoftV2InitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicrosoftV2InitParameters.
func (in *MicrosoftV2InitParameters) DeepCopy() *MicrosoftV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(MicrosoftV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicrosoftV2Observation) DeepCopyInto(out *MicrosoftV2Observation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicrosoftV2Observation.
func (in *MicrosoftV2Observation) DeepCopy() *MicrosoftV2Observation {
	if in == nil {
		return nil
	}
	out := new(MicrosoftV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicrosoftV2Parameters) DeepCopyInto(out *MicrosoftV2Parameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicrosoftV2Parameters.
func (in *MicrosoftV2Parameters) DeepCopy() *MicrosoftV2Parameters {
	if in == nil {
		return nil
	}
	out := new(MicrosoftV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsInitParameters) DeepCopyInto(out *RequestsInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsInitParameters.
func (in *RequestsInitParameters) DeepCopy() *RequestsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsObservation) DeepCopyInto(out *RequestsObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsObservation.
func (in *RequestsObservation) DeepCopy() *RequestsObservation {
	if in == nil {
		return nil
	}
	out := new(RequestsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsParameters) DeepCopyInto(out *RequestsParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsParameters.
func (in *RequestsParameters) DeepCopy() *RequestsParameters {
	if in == nil {
		return nil
	}
	out := new(RequestsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleInitParameters) DeepCopyInto(out *ScheduleInitParameters) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleInitParameters.
func (in *ScheduleInitParameters) DeepCopy() *ScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleObservation) DeepCopyInto(out *ScheduleObservation) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.LastExecutionTime != nil {
		in, out := &in.LastExecutionTime, &out.LastExecutionTime
		*out = new(string)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleObservation.
func (in *ScheduleObservation) DeepCopy() *ScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleParameters) DeepCopyInto(out *ScheduleParameters) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleParameters.
func (in *ScheduleParameters) DeepCopy() *ScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScmIPRestrictionHeadersInitParameters) DeepCopyInto(out *ScmIPRestrictionHeadersInitParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScmIPRestrictionHeadersInitParameters.
func (in *ScmIPRestrictionHeadersInitParameters) DeepCopy() *ScmIPRestrictionHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScmIPRestrictionHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScmIPRestrictionHeadersObservation) DeepCopyInto(out *ScmIPRestrictionHeadersObservation) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScmIPRestrictionHeadersObservation.
func (in *ScmIPRestrictionHeadersObservation) DeepCopy() *ScmIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(ScmIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScmIPRestrictionHeadersParameters) DeepCopyInto(out *ScmIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScmIPRestrictionHeadersParameters.
func (in *ScmIPRestrictionHeadersParameters) DeepCopy() *ScmIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(ScmIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScmIPRestrictionInitParameters) DeepCopyInto(out *ScmIPRestrictionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]ScmIPRestrictionHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScmIPRestrictionInitParameters.
func (in *ScmIPRestrictionInitParameters) DeepCopy() *ScmIPRestrictionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScmIPRestrictionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScmIPRestrictionObservation) DeepCopyInto(out *ScmIPRestrictionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]ScmIPRestrictionHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScmIPRestrictionObservation.
func (in *ScmIPRestrictionObservation) DeepCopy() *ScmIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(ScmIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScmIPRestrictionParameters) DeepCopyInto(out *ScmIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]ScmIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScmIPRestrictionParameters.
func (in *ScmIPRestrictionParameters) DeepCopy() *ScmIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(ScmIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePlan) DeepCopyInto(out *ServicePlan) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePlan.
func (in *ServicePlan) DeepCopy() *ServicePlan {
	if in == nil {
		return nil
	}
	out := new(ServicePlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServicePlan) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePlanInitParameters) DeepCopyInto(out *ServicePlanInitParameters) {
	*out = *in
	if in.AppServiceEnvironmentID != nil {
		in, out := &in.AppServiceEnvironmentID, &out.AppServiceEnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaximumElasticWorkerCount != nil {
		in, out := &in.MaximumElasticWorkerCount, &out.MaximumElasticWorkerCount
		*out = new(float64)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.PerSiteScalingEnabled != nil {
		in, out := &in.PerSiteScalingEnabled, &out.PerSiteScalingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
	if in.ZoneBalancingEnabled != nil {
		in, out := &in.ZoneBalancingEnabled, &out.ZoneBalancingEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePlanInitParameters.
func (in *ServicePlanInitParameters) DeepCopy() *ServicePlanInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServicePlanInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePlanList) DeepCopyInto(out *ServicePlanList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServicePlan, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePlanList.
func (in *ServicePlanList) DeepCopy() *ServicePlanList {
	if in == nil {
		return nil
	}
	out := new(ServicePlanList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServicePlanList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePlanObservation) DeepCopyInto(out *ServicePlanObservation) {
	*out = *in
	if in.AppServiceEnvironmentID != nil {
		in, out := &in.AppServiceEnvironmentID, &out.AppServiceEnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaximumElasticWorkerCount != nil {
		in, out := &in.MaximumElasticWorkerCount, &out.MaximumElasticWorkerCount
		*out = new(float64)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.PerSiteScalingEnabled != nil {
		in, out := &in.PerSiteScalingEnabled, &out.PerSiteScalingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Reserved != nil {
		in, out := &in.Reserved, &out.Reserved
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
	if in.ZoneBalancingEnabled != nil {
		in, out := &in.ZoneBalancingEnabled, &out.ZoneBalancingEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePlanObservation.
func (in *ServicePlanObservation) DeepCopy() *ServicePlanObservation {
	if in == nil {
		return nil
	}
	out := new(ServicePlanObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePlanParameters) DeepCopyInto(out *ServicePlanParameters) {
	*out = *in
	if in.AppServiceEnvironmentID != nil {
		in, out := &in.AppServiceEnvironmentID, &out.AppServiceEnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaximumElasticWorkerCount != nil {
		in, out := &in.MaximumElasticWorkerCount, &out.MaximumElasticWorkerCount
		*out = new(float64)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.PerSiteScalingEnabled != nil {
		in, out := &in.PerSiteScalingEnabled, &out.PerSiteScalingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
	if in.ZoneBalancingEnabled != nil {
		in, out := &in.ZoneBalancingEnabled, &out.ZoneBalancingEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePlanParameters.
func (in *ServicePlanParameters) DeepCopy() *ServicePlanParameters {
	if in == nil {
		return nil
	}
	out := new(ServicePlanParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePlanSpec) DeepCopyInto(out *ServicePlanSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePlanSpec.
func (in *ServicePlanSpec) DeepCopy() *ServicePlanSpec {
	if in == nil {
		return nil
	}
	out := new(ServicePlanSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePlanStatus) DeepCopyInto(out *ServicePlanStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePlanStatus.
func (in *ServicePlanStatus) DeepCopy() *ServicePlanStatus {
	if in == nil {
		return nil
	}
	out := new(ServicePlanStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAppServiceLogsInitParameters) DeepCopyInto(out *SiteConfigAppServiceLogsInitParameters) {
	*out = *in
	if in.DiskQuotaMb != nil {
		in, out := &in.DiskQuotaMb, &out.DiskQuotaMb
		*out = new(float64)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAppServiceLogsInitParameters.
func (in *SiteConfigAppServiceLogsInitParameters) DeepCopy() *SiteConfigAppServiceLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAppServiceLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAppServiceLogsObservation) DeepCopyInto(out *SiteConfigAppServiceLogsObservation) {
	*out = *in
	if in.DiskQuotaMb != nil {
		in, out := &in.DiskQuotaMb, &out.DiskQuotaMb
		*out = new(float64)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAppServiceLogsObservation.
func (in *SiteConfigAppServiceLogsObservation) DeepCopy() *SiteConfigAppServiceLogsObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAppServiceLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAppServiceLogsParameters) DeepCopyInto(out *SiteConfigAppServiceLogsParameters) {
	*out = *in
	if in.DiskQuotaMb != nil {
		in, out := &in.DiskQuotaMb, &out.DiskQuotaMb
		*out = new(float64)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAppServiceLogsParameters.
func (in *SiteConfigAppServiceLogsParameters) DeepCopy() *SiteConfigAppServiceLogsParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAppServiceLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigApplicationStackInitParameters) DeepCopyInto(out *SiteConfigApplicationStackInitParameters) {
	*out = *in
	if in.Docker != nil {
		in, out := &in.Docker, &out.Docker
		*out = make([]ApplicationStackDockerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PowershellCoreVersion != nil {
		in, out := &in.PowershellCoreVersion, &out.PowershellCoreVersion
		*out = new(string)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.UseCustomRuntime != nil {
		in, out := &in.UseCustomRuntime, &out.UseCustomRuntime
		*out = new(bool)
		**out = **in
	}
	if in.UseDotnetIsolatedRuntime != nil {
		in, out := &in.UseDotnetIsolatedRuntime, &out.UseDotnetIsolatedRuntime
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigApplicationStackInitParameters.
func (in *SiteConfigApplicationStackInitParameters) DeepCopy() *SiteConfigApplicationStackInitParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigApplicationStackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigApplicationStackObservation) DeepCopyInto(out *SiteConfigApplicationStackObservation) {
	*out = *in
	if in.Docker != nil {
		in, out := &in.Docker, &out.Docker
		*out = make([]ApplicationStackDockerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PowershellCoreVersion != nil {
		in, out := &in.PowershellCoreVersion, &out.PowershellCoreVersion
		*out = new(string)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.UseCustomRuntime != nil {
		in, out := &in.UseCustomRuntime, &out.UseCustomRuntime
		*out = new(bool)
		**out = **in
	}
	if in.UseDotnetIsolatedRuntime != nil {
		in, out := &in.UseDotnetIsolatedRuntime, &out.UseDotnetIsolatedRuntime
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigApplicationStackObservation.
func (in *SiteConfigApplicationStackObservation) DeepCopy() *SiteConfigApplicationStackObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigApplicationStackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigApplicationStackParameters) DeepCopyInto(out *SiteConfigApplicationStackParameters) {
	*out = *in
	if in.Docker != nil {
		in, out := &in.Docker, &out.Docker
		*out = make([]ApplicationStackDockerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PowershellCoreVersion != nil {
		in, out := &in.PowershellCoreVersion, &out.PowershellCoreVersion
		*out = new(string)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.UseCustomRuntime != nil {
		in, out := &in.UseCustomRuntime, &out.UseCustomRuntime
		*out = new(bool)
		**out = **in
	}
	if in.UseDotnetIsolatedRuntime != nil {
		in, out := &in.UseDotnetIsolatedRuntime, &out.UseDotnetIsolatedRuntime
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigApplicationStackParameters.
func (in *SiteConfigApplicationStackParameters) DeepCopy() *SiteConfigApplicationStackParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigApplicationStackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAutoHealSettingActionInitParameters) DeepCopyInto(out *SiteConfigAutoHealSettingActionInitParameters) {
	*out = *in
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.CustomAction != nil {
		in, out := &in.CustomAction, &out.CustomAction
		*out = make([]CustomActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinimumProcessExecutionTime != nil {
		in, out := &in.MinimumProcessExecutionTime, &out.MinimumProcessExecutionTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAutoHealSettingActionInitParameters.
func (in *SiteConfigAutoHealSettingActionInitParameters) DeepCopy() *SiteConfigAutoHealSettingActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAutoHealSettingActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAutoHealSettingActionObservation) DeepCopyInto(out *SiteConfigAutoHealSettingActionObservation) {
	*out = *in
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.CustomAction != nil {
		in, out := &in.CustomAction, &out.CustomAction
		*out = make([]CustomActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinimumProcessExecutionTime != nil {
		in, out := &in.MinimumProcessExecutionTime, &out.MinimumProcessExecutionTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAutoHealSettingActionObservation.
func (in *SiteConfigAutoHealSettingActionObservation) DeepCopy() *SiteConfigAutoHealSettingActionObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAutoHealSettingActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAutoHealSettingActionParameters) DeepCopyInto(out *SiteConfigAutoHealSettingActionParameters) {
	*out = *in
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.CustomAction != nil {
		in, out := &in.CustomAction, &out.CustomAction
		*out = make([]CustomActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinimumProcessExecutionTime != nil {
		in, out := &in.MinimumProcessExecutionTime, &out.MinimumProcessExecutionTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAutoHealSettingActionParameters.
func (in *SiteConfigAutoHealSettingActionParameters) DeepCopy() *SiteConfigAutoHealSettingActionParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAutoHealSettingActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAutoHealSettingInitParameters) DeepCopyInto(out *SiteConfigAutoHealSettingInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]AutoHealSettingActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]AutoHealSettingTriggerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAutoHealSettingInitParameters.
func (in *SiteConfigAutoHealSettingInitParameters) DeepCopy() *SiteConfigAutoHealSettingInitParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAutoHealSettingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAutoHealSettingObservation) DeepCopyInto(out *SiteConfigAutoHealSettingObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]AutoHealSettingActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]AutoHealSettingTriggerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAutoHealSettingObservation.
func (in *SiteConfigAutoHealSettingObservation) DeepCopy() *SiteConfigAutoHealSettingObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAutoHealSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAutoHealSettingParameters) DeepCopyInto(out *SiteConfigAutoHealSettingParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]AutoHealSettingActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]AutoHealSettingTriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAutoHealSettingParameters.
func (in *SiteConfigAutoHealSettingParameters) DeepCopy() *SiteConfigAutoHealSettingParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAutoHealSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAutoHealSettingTriggerInitParameters) DeepCopyInto(out *SiteConfigAutoHealSettingTriggerInitParameters) {
	*out = *in
	if in.PrivateMemoryKb != nil {
		in, out := &in.PrivateMemoryKb, &out.PrivateMemoryKb
		*out = new(float64)
		**out = **in
	}
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = make([]AutoHealSettingTriggerRequestsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SlowRequest != nil {
		in, out := &in.SlowRequest, &out.SlowRequest
		*out = make([]AutoHealSettingTriggerSlowRequestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = make([]AutoHealSettingTriggerStatusCodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAutoHealSettingTriggerInitParameters.
func (in *SiteConfigAutoHealSettingTriggerInitParameters) DeepCopy() *SiteConfigAutoHealSettingTriggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAutoHealSettingTriggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAutoHealSettingTriggerObservation) DeepCopyInto(out *SiteConfigAutoHealSettingTriggerObservation) {
	*out = *in
	if in.PrivateMemoryKb != nil {
		in, out := &in.PrivateMemoryKb, &out.PrivateMemoryKb
		*out = new(float64)
		**out = **in
	}
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = make([]AutoHealSettingTriggerRequestsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SlowRequest != nil {
		in, out := &in.SlowRequest, &out.SlowRequest
		*out = make([]AutoHealSettingTriggerSlowRequestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = make([]AutoHealSettingTriggerStatusCodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAutoHealSettingTriggerObservation.
func (in *SiteConfigAutoHealSettingTriggerObservation) DeepCopy() *SiteConfigAutoHealSettingTriggerObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAutoHealSettingTriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAutoHealSettingTriggerParameters) DeepCopyInto(out *SiteConfigAutoHealSettingTriggerParameters) {
	*out = *in
	if in.PrivateMemoryKb != nil {
		in, out := &in.PrivateMemoryKb, &out.PrivateMemoryKb
		*out = new(float64)
		**out = **in
	}
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = make([]AutoHealSettingTriggerRequestsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SlowRequest != nil {
		in, out := &in.SlowRequest, &out.SlowRequest
		*out = make([]AutoHealSettingTriggerSlowRequestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = make([]AutoHealSettingTriggerStatusCodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAutoHealSettingTriggerParameters.
func (in *SiteConfigAutoHealSettingTriggerParameters) DeepCopy() *SiteConfigAutoHealSettingTriggerParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAutoHealSettingTriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAutoHealSettingTriggerRequestsInitParameters) DeepCopyInto(out *SiteConfigAutoHealSettingTriggerRequestsInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAutoHealSettingTriggerRequestsInitParameters.
func (in *SiteConfigAutoHealSettingTriggerRequestsInitParameters) DeepCopy() *SiteConfigAutoHealSettingTriggerRequestsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAutoHealSettingTriggerRequestsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAutoHealSettingTriggerRequestsObservation) DeepCopyInto(out *SiteConfigAutoHealSettingTriggerRequestsObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAutoHealSettingTriggerRequestsObservation.
func (in *SiteConfigAutoHealSettingTriggerRequestsObservation) DeepCopy() *SiteConfigAutoHealSettingTriggerRequestsObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAutoHealSettingTriggerRequestsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAutoHealSettingTriggerRequestsParameters) DeepCopyInto(out *SiteConfigAutoHealSettingTriggerRequestsParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAutoHealSettingTriggerRequestsParameters.
func (in *SiteConfigAutoHealSettingTriggerRequestsParameters) DeepCopy() *SiteConfigAutoHealSettingTriggerRequestsParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAutoHealSettingTriggerRequestsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAutoHealSettingTriggerSlowRequestInitParameters) DeepCopyInto(out *SiteConfigAutoHealSettingTriggerSlowRequestInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TimeTaken != nil {
		in, out := &in.TimeTaken, &out.TimeTaken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAutoHealSettingTriggerSlowRequestInitParameters.
func (in *SiteConfigAutoHealSettingTriggerSlowRequestInitParameters) DeepCopy() *SiteConfigAutoHealSettingTriggerSlowRequestInitParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAutoHealSettingTriggerSlowRequestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAutoHealSettingTriggerSlowRequestObservation) DeepCopyInto(out *SiteConfigAutoHealSettingTriggerSlowRequestObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TimeTaken != nil {
		in, out := &in.TimeTaken, &out.TimeTaken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAutoHealSettingTriggerSlowRequestObservation.
func (in *SiteConfigAutoHealSettingTriggerSlowRequestObservation) DeepCopy() *SiteConfigAutoHealSettingTriggerSlowRequestObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAutoHealSettingTriggerSlowRequestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAutoHealSettingTriggerSlowRequestParameters) DeepCopyInto(out *SiteConfigAutoHealSettingTriggerSlowRequestParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TimeTaken != nil {
		in, out := &in.TimeTaken, &out.TimeTaken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAutoHealSettingTriggerSlowRequestParameters.
func (in *SiteConfigAutoHealSettingTriggerSlowRequestParameters) DeepCopy() *SiteConfigAutoHealSettingTriggerSlowRequestParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAutoHealSettingTriggerSlowRequestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAutoHealSettingTriggerStatusCodeInitParameters) DeepCopyInto(out *SiteConfigAutoHealSettingTriggerStatusCodeInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.StatusCodeRange != nil {
		in, out := &in.StatusCodeRange, &out.StatusCodeRange
		*out = new(string)
		**out = **in
	}
	if in.SubStatus != nil {
		in, out := &in.SubStatus, &out.SubStatus
		*out = new(float64)
		**out = **in
	}
	if in.Win32Status != nil {
		in, out := &in.Win32Status, &out.Win32Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAutoHealSettingTriggerStatusCodeInitParameters.
func (in *SiteConfigAutoHealSettingTriggerStatusCodeInitParameters) DeepCopy() *SiteConfigAutoHealSettingTriggerStatusCodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAutoHealSettingTriggerStatusCodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAutoHealSettingTriggerStatusCodeObservation) DeepCopyInto(out *SiteConfigAutoHealSettingTriggerStatusCodeObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.StatusCodeRange != nil {
		in, out := &in.StatusCodeRange, &out.StatusCodeRange
		*out = new(string)
		**out = **in
	}
	if in.SubStatus != nil {
		in, out := &in.SubStatus, &out.SubStatus
		*out = new(float64)
		**out = **in
	}
	if in.Win32Status != nil {
		in, out := &in.Win32Status, &out.Win32Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAutoHealSettingTriggerStatusCodeObservation.
func (in *SiteConfigAutoHealSettingTriggerStatusCodeObservation) DeepCopy() *SiteConfigAutoHealSettingTriggerStatusCodeObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAutoHealSettingTriggerStatusCodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAutoHealSettingTriggerStatusCodeParameters) DeepCopyInto(out *SiteConfigAutoHealSettingTriggerStatusCodeParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.StatusCodeRange != nil {
		in, out := &in.StatusCodeRange, &out.StatusCodeRange
		*out = new(string)
		**out = **in
	}
	if in.SubStatus != nil {
		in, out := &in.SubStatus, &out.SubStatus
		*out = new(float64)
		**out = **in
	}
	if in.Win32Status != nil {
		in, out := &in.Win32Status, &out.Win32Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAutoHealSettingTriggerStatusCodeParameters.
func (in *SiteConfigAutoHealSettingTriggerStatusCodeParameters) DeepCopy() *SiteConfigAutoHealSettingTriggerStatusCodeParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAutoHealSettingTriggerStatusCodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigCorsInitParameters) DeepCopyInto(out *SiteConfigCorsInitParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigCorsInitParameters.
func (in *SiteConfigCorsInitParameters) DeepCopy() *SiteConfigCorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigCorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigCorsObservation) DeepCopyInto(out *SiteConfigCorsObservation) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigCorsObservation.
func (in *SiteConfigCorsObservation) DeepCopy() *SiteConfigCorsObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigCorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigCorsParameters) DeepCopyInto(out *SiteConfigCorsParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigCorsParameters.
func (in *SiteConfigCorsParameters) DeepCopy() *SiteConfigCorsParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigCorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigIPRestrictionHeadersInitParameters) DeepCopyInto(out *SiteConfigIPRestrictionHeadersInitParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigIPRestrictionHeadersInitParameters.
func (in *SiteConfigIPRestrictionHeadersInitParameters) DeepCopy() *SiteConfigIPRestrictionHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigIPRestrictionHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigIPRestrictionHeadersObservation) DeepCopyInto(out *SiteConfigIPRestrictionHeadersObservation) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigIPRestrictionHeadersObservation.
func (in *SiteConfigIPRestrictionHeadersObservation) DeepCopy() *SiteConfigIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigIPRestrictionHeadersParameters) DeepCopyInto(out *SiteConfigIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigIPRestrictionHeadersParameters.
func (in *SiteConfigIPRestrictionHeadersParameters) DeepCopy() *SiteConfigIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigIPRestrictionInitParameters) DeepCopyInto(out *SiteConfigIPRestrictionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]IPRestrictionHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigIPRestrictionInitParameters.
func (in *SiteConfigIPRestrictionInitParameters) DeepCopy() *SiteConfigIPRestrictionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigIPRestrictionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigIPRestrictionObservation) DeepCopyInto(out *SiteConfigIPRestrictionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]IPRestrictionHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigIPRestrictionObservation.
func (in *SiteConfigIPRestrictionObservation) DeepCopy() *SiteConfigIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigIPRestrictionParameters) DeepCopyInto(out *SiteConfigIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]IPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigIPRestrictionParameters.
func (in *SiteConfigIPRestrictionParameters) DeepCopy() *SiteConfigIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigInitParameters) DeepCopyInto(out *SiteConfigInitParameters) {
	*out = *in
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(float64)
		**out = **in
	}
	if in.AutoSwapSlotName != nil {
		in, out := &in.AutoSwapSlotName, &out.AutoSwapSlotName
		*out = new(string)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]CorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DotnetFrameworkVersion != nil {
		in, out := &in.DotnetFrameworkVersion, &out.DotnetFrameworkVersion
		*out = new(string)
		**out = **in
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(float64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]IPRestrictionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.LinuxFxVersion != nil {
		in, out := &in.LinuxFxVersion, &out.LinuxFxVersion
		*out = new(string)
		**out = **in
	}
	if in.MinTLSVersion != nil {
		in, out := &in.MinTLSVersion, &out.MinTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]ScmIPRestrictionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmType != nil {
		in, out := &in.ScmType, &out.ScmType
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorkerProcess != nil {
		in, out := &in.Use32BitWorkerProcess, &out.Use32BitWorkerProcess
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigInitParameters.
func (in *SiteConfigInitParameters) DeepCopy() *SiteConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigObservation) DeepCopyInto(out *SiteConfigObservation) {
	*out = *in
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(float64)
		**out = **in
	}
	if in.AutoSwapSlotName != nil {
		in, out := &in.AutoSwapSlotName, &out.AutoSwapSlotName
		*out = new(string)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]CorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DotnetFrameworkVersion != nil {
		in, out := &in.DotnetFrameworkVersion, &out.DotnetFrameworkVersion
		*out = new(string)
		**out = **in
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(float64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]IPRestrictionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.LinuxFxVersion != nil {
		in, out := &in.LinuxFxVersion, &out.LinuxFxVersion
		*out = new(string)
		**out = **in
	}
	if in.MinTLSVersion != nil {
		in, out := &in.MinTLSVersion, &out.MinTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]ScmIPRestrictionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmType != nil {
		in, out := &in.ScmType, &out.ScmType
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorkerProcess != nil {
		in, out := &in.Use32BitWorkerProcess, &out.Use32BitWorkerProcess
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigObservation.
func (in *SiteConfigObservation) DeepCopy() *SiteConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigParameters) DeepCopyInto(out *SiteConfigParameters) {
	*out = *in
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(float64)
		**out = **in
	}
	if in.AutoSwapSlotName != nil {
		in, out := &in.AutoSwapSlotName, &out.AutoSwapSlotName
		*out = new(string)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]CorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DotnetFrameworkVersion != nil {
		in, out := &in.DotnetFrameworkVersion, &out.DotnetFrameworkVersion
		*out = new(string)
		**out = **in
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(float64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]IPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.LinuxFxVersion != nil {
		in, out := &in.LinuxFxVersion, &out.LinuxFxVersion
		*out = new(string)
		**out = **in
	}
	if in.MinTLSVersion != nil {
		in, out := &in.MinTLSVersion, &out.MinTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]ScmIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmType != nil {
		in, out := &in.ScmType, &out.ScmType
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorkerProcess != nil {
		in, out := &in.Use32BitWorkerProcess, &out.Use32BitWorkerProcess
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigParameters.
func (in *SiteConfigParameters) DeepCopy() *SiteConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigScmIPRestrictionHeadersInitParameters) DeepCopyInto(out *SiteConfigScmIPRestrictionHeadersInitParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigScmIPRestrictionHeadersInitParameters.
func (in *SiteConfigScmIPRestrictionHeadersInitParameters) DeepCopy() *SiteConfigScmIPRestrictionHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigScmIPRestrictionHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigScmIPRestrictionHeadersObservation) DeepCopyInto(out *SiteConfigScmIPRestrictionHeadersObservation) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigScmIPRestrictionHeadersObservation.
func (in *SiteConfigScmIPRestrictionHeadersObservation) DeepCopy() *SiteConfigScmIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigScmIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigScmIPRestrictionHeadersParameters) DeepCopyInto(out *SiteConfigScmIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigScmIPRestrictionHeadersParameters.
func (in *SiteConfigScmIPRestrictionHeadersParameters) DeepCopy() *SiteConfigScmIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigScmIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigScmIPRestrictionInitParameters) DeepCopyInto(out *SiteConfigScmIPRestrictionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]SiteConfigScmIPRestrictionHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigScmIPRestrictionInitParameters.
func (in *SiteConfigScmIPRestrictionInitParameters) DeepCopy() *SiteConfigScmIPRestrictionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigScmIPRestrictionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigScmIPRestrictionObservation) DeepCopyInto(out *SiteConfigScmIPRestrictionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]SiteConfigScmIPRestrictionHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigScmIPRestrictionObservation.
func (in *SiteConfigScmIPRestrictionObservation) DeepCopy() *SiteConfigScmIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigScmIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigScmIPRestrictionParameters) DeepCopyInto(out *SiteConfigScmIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]SiteConfigScmIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigScmIPRestrictionParameters.
func (in *SiteConfigScmIPRestrictionParameters) DeepCopy() *SiteConfigScmIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigScmIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigVirtualApplicationInitParameters) DeepCopyInto(out *SiteConfigVirtualApplicationInitParameters) {
	*out = *in
	if in.PhysicalPath != nil {
		in, out := &in.PhysicalPath, &out.PhysicalPath
		*out = new(string)
		**out = **in
	}
	if in.Preload != nil {
		in, out := &in.Preload, &out.Preload
		*out = new(bool)
		**out = **in
	}
	if in.VirtualDirectory != nil {
		in, out := &in.VirtualDirectory, &out.VirtualDirectory
		*out = make([]VirtualApplicationVirtualDirectoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualPath != nil {
		in, out := &in.VirtualPath, &out.VirtualPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigVirtualApplicationInitParameters.
func (in *SiteConfigVirtualApplicationInitParameters) DeepCopy() *SiteConfigVirtualApplicationInitParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigVirtualApplicationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigVirtualApplicationObservation) DeepCopyInto(out *SiteConfigVirtualApplicationObservation) {
	*out = *in
	if in.PhysicalPath != nil {
		in, out := &in.PhysicalPath, &out.PhysicalPath
		*out = new(string)
		**out = **in
	}
	if in.Preload != nil {
		in, out := &in.Preload, &out.Preload
		*out = new(bool)
		**out = **in
	}
	if in.VirtualDirectory != nil {
		in, out := &in.VirtualDirectory, &out.VirtualDirectory
		*out = make([]VirtualApplicationVirtualDirectoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualPath != nil {
		in, out := &in.VirtualPath, &out.VirtualPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigVirtualApplicationObservation.
func (in *SiteConfigVirtualApplicationObservation) DeepCopy() *SiteConfigVirtualApplicationObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigVirtualApplicationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigVirtualApplicationParameters) DeepCopyInto(out *SiteConfigVirtualApplicationParameters) {
	*out = *in
	if in.PhysicalPath != nil {
		in, out := &in.PhysicalPath, &out.PhysicalPath
		*out = new(string)
		**out = **in
	}
	if in.Preload != nil {
		in, out := &in.Preload, &out.Preload
		*out = new(bool)
		**out = **in
	}
	if in.VirtualDirectory != nil {
		in, out := &in.VirtualDirectory, &out.VirtualDirectory
		*out = make([]VirtualApplicationVirtualDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualPath != nil {
		in, out := &in.VirtualPath, &out.VirtualPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigVirtualApplicationParameters.
func (in *SiteConfigVirtualApplicationParameters) DeepCopy() *SiteConfigVirtualApplicationParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigVirtualApplicationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteCredentialInitParameters) DeepCopyInto(out *SiteCredentialInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteCredentialInitParameters.
func (in *SiteCredentialInitParameters) DeepCopy() *SiteCredentialInitParameters {
	if in == nil {
		return nil
	}
	out := new(SiteCredentialInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteCredentialObservation) DeepCopyInto(out *SiteCredentialObservation) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteCredentialObservation.
func (in *SiteCredentialObservation) DeepCopy() *SiteCredentialObservation {
	if in == nil {
		return nil
	}
	out := new(SiteCredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteCredentialParameters) DeepCopyInto(out *SiteCredentialParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteCredentialParameters.
func (in *SiteCredentialParameters) DeepCopy() *SiteCredentialParameters {
	if in == nil {
		return nil
	}
	out := new(SiteCredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkuInitParameters) DeepCopyInto(out *SkuInitParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkuInitParameters.
func (in *SkuInitParameters) DeepCopy() *SkuInitParameters {
	if in == nil {
		return nil
	}
	out := new(SkuInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkuObservation) DeepCopyInto(out *SkuObservation) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkuObservation.
func (in *SkuObservation) DeepCopy() *SkuObservation {
	if in == nil {
		return nil
	}
	out := new(SkuObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkuParameters) DeepCopyInto(out *SkuParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkuParameters.
func (in *SkuParameters) DeepCopy() *SkuParameters {
	if in == nil {
		return nil
	}
	out := new(SkuParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlowRequestInitParameters) DeepCopyInto(out *SlowRequestInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TimeTaken != nil {
		in, out := &in.TimeTaken, &out.TimeTaken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlowRequestInitParameters.
func (in *SlowRequestInitParameters) DeepCopy() *SlowRequestInitParameters {
	if in == nil {
		return nil
	}
	out := new(SlowRequestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlowRequestObservation) DeepCopyInto(out *SlowRequestObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TimeTaken != nil {
		in, out := &in.TimeTaken, &out.TimeTaken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlowRequestObservation.
func (in *SlowRequestObservation) DeepCopy() *SlowRequestObservation {
	if in == nil {
		return nil
	}
	out := new(SlowRequestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlowRequestParameters) DeepCopyInto(out *SlowRequestParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TimeTaken != nil {
		in, out := &in.TimeTaken, &out.TimeTaken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlowRequestParameters.
func (in *SlowRequestParameters) DeepCopy() *SlowRequestParameters {
	if in == nil {
		return nil
	}
	out := new(SlowRequestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceControlInitParameters) DeepCopyInto(out *SourceControlInitParameters) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.ManualIntegration != nil {
		in, out := &in.ManualIntegration, &out.ManualIntegration
		*out = new(bool)
		**out = **in
	}
	if in.RepoURL != nil {
		in, out := &in.RepoURL, &out.RepoURL
		*out = new(string)
		**out = **in
	}
	if in.RollbackEnabled != nil {
		in, out := &in.RollbackEnabled, &out.RollbackEnabled
		*out = new(bool)
		**out = **in
	}
	if in.UseMercurial != nil {
		in, out := &in.UseMercurial, &out.UseMercurial
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceControlInitParameters.
func (in *SourceControlInitParameters) DeepCopy() *SourceControlInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceControlInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceControlObservation) DeepCopyInto(out *SourceControlObservation) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.ManualIntegration != nil {
		in, out := &in.ManualIntegration, &out.ManualIntegration
		*out = new(bool)
		**out = **in
	}
	if in.RepoURL != nil {
		in, out := &in.RepoURL, &out.RepoURL
		*out = new(string)
		**out = **in
	}
	if in.RollbackEnabled != nil {
		in, out := &in.RollbackEnabled, &out.RollbackEnabled
		*out = new(bool)
		**out = **in
	}
	if in.UseMercurial != nil {
		in, out := &in.UseMercurial, &out.UseMercurial
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceControlObservation.
func (in *SourceControlObservation) DeepCopy() *SourceControlObservation {
	if in == nil {
		return nil
	}
	out := new(SourceControlObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceControlParameters) DeepCopyInto(out *SourceControlParameters) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.ManualIntegration != nil {
		in, out := &in.ManualIntegration, &out.ManualIntegration
		*out = new(bool)
		**out = **in
	}
	if in.RepoURL != nil {
		in, out := &in.RepoURL, &out.RepoURL
		*out = new(string)
		**out = **in
	}
	if in.RollbackEnabled != nil {
		in, out := &in.RollbackEnabled, &out.RollbackEnabled
		*out = new(bool)
		**out = **in
	}
	if in.UseMercurial != nil {
		in, out := &in.UseMercurial, &out.UseMercurial
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceControlParameters.
func (in *SourceControlParameters) DeepCopy() *SourceControlParameters {
	if in == nil {
		return nil
	}
	out := new(SourceControlParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceControlToken) DeepCopyInto(out *SourceControlToken) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceControlToken.
func (in *SourceControlToken) DeepCopy() *SourceControlToken {
	if in == nil {
		return nil
	}
	out := new(SourceControlToken)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SourceControlToken) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceControlTokenInitParameters) DeepCopyInto(out *SourceControlTokenInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceControlTokenInitParameters.
func (in *SourceControlTokenInitParameters) DeepCopy() *SourceControlTokenInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceControlTokenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceControlTokenList) DeepCopyInto(out *SourceControlTokenList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SourceControlToken, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceControlTokenList.
func (in *SourceControlTokenList) DeepCopy() *SourceControlTokenList {
	if in == nil {
		return nil
	}
	out := new(SourceControlTokenList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SourceControlTokenList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceControlTokenObservation) DeepCopyInto(out *SourceControlTokenObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceControlTokenObservation.
func (in *SourceControlTokenObservation) DeepCopy() *SourceControlTokenObservation {
	if in == nil {
		return nil
	}
	out := new(SourceControlTokenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceControlTokenParameters) DeepCopyInto(out *SourceControlTokenParameters) {
	*out = *in
	out.TokenSecretRef = in.TokenSecretRef
	if in.TokenSecretSecretRef != nil {
		in, out := &in.TokenSecretSecretRef, &out.TokenSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceControlTokenParameters.
func (in *SourceControlTokenParameters) DeepCopy() *SourceControlTokenParameters {
	if in == nil {
		return nil
	}
	out := new(SourceControlTokenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceControlTokenSpec) DeepCopyInto(out *SourceControlTokenSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceControlTokenSpec.
func (in *SourceControlTokenSpec) DeepCopy() *SourceControlTokenSpec {
	if in == nil {
		return nil
	}
	out := new(SourceControlTokenSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceControlTokenStatus) DeepCopyInto(out *SourceControlTokenStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceControlTokenStatus.
func (in *SourceControlTokenStatus) DeepCopy() *SourceControlTokenStatus {
	if in == nil {
		return nil
	}
	out := new(SourceControlTokenStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticSite) DeepCopyInto(out *StaticSite) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticSite.
func (in *StaticSite) DeepCopy() *StaticSite {
	if in == nil {
		return nil
	}
	out := new(StaticSite)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StaticSite) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticSiteIdentityInitParameters) DeepCopyInto(out *StaticSiteIdentityInitParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticSiteIdentityInitParameters.
func (in *StaticSiteIdentityInitParameters) DeepCopy() *StaticSiteIdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(StaticSiteIdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticSiteIdentityObservation) DeepCopyInto(out *StaticSiteIdentityObservation) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticSiteIdentityObservation.
func (in *StaticSiteIdentityObservation) DeepCopy() *StaticSiteIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(StaticSiteIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticSiteIdentityParameters) DeepCopyInto(out *StaticSiteIdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticSiteIdentityParameters.
func (in *StaticSiteIdentityParameters) DeepCopy() *StaticSiteIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(StaticSiteIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticSiteInitParameters) DeepCopyInto(out *StaticSiteInitParameters) {
	*out = *in
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]StaticSiteIdentityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.SkuSize != nil {
		in, out := &in.SkuSize, &out.SkuSize
		*out = new(string)
		**out = **in
	}
	if in.SkuTier != nil {
		in, out := &in.SkuTier, &out.SkuTier
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticSiteInitParameters.
func (in *StaticSiteInitParameters) DeepCopy() *StaticSiteInitParameters {
	if in == nil {
		return nil
	}
	out := new(StaticSiteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticSiteList) DeepCopyInto(out *StaticSiteList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StaticSite, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticSiteList.
func (in *StaticSiteList) DeepCopy() *StaticSiteList {
	if in == nil {
		return nil
	}
	out := new(StaticSiteList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StaticSiteList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticSiteObservation) DeepCopyInto(out *StaticSiteObservation) {
	*out = *in
	if in.DefaultHostName != nil {
		in, out := &in.DefaultHostName, &out.DefaultHostName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]StaticSiteIdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SkuSize != nil {
		in, out := &in.SkuSize, &out.SkuSize
		*out = new(string)
		**out = **in
	}
	if in.SkuTier != nil {
		in, out := &in.SkuTier, &out.SkuTier
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticSiteObservation.
func (in *StaticSiteObservation) DeepCopy() *StaticSiteObservation {
	if in == nil {
		return nil
	}
	out := new(StaticSiteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticSiteParameters) DeepCopyInto(out *StaticSiteParameters) {
	*out = *in
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]StaticSiteIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SkuSize != nil {
		in, out := &in.SkuSize, &out.SkuSize
		*out = new(string)
		**out = **in
	}
	if in.SkuTier != nil {
		in, out := &in.SkuTier, &out.SkuTier
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticSiteParameters.
func (in *StaticSiteParameters) DeepCopy() *StaticSiteParameters {
	if in == nil {
		return nil
	}
	out := new(StaticSiteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticSiteSpec) DeepCopyInto(out *StaticSiteSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticSiteSpec.
func (in *StaticSiteSpec) DeepCopy() *StaticSiteSpec {
	if in == nil {
		return nil
	}
	out := new(StaticSiteSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticSiteStatus) DeepCopyInto(out *StaticSiteStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticSiteStatus.
func (in *StaticSiteStatus) DeepCopy() *StaticSiteStatus {
	if in == nil {
		return nil
	}
	out := new(StaticSiteStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusCodeInitParameters) DeepCopyInto(out *StatusCodeInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.StatusCodeRange != nil {
		in, out := &in.StatusCodeRange, &out.StatusCodeRange
		*out = new(string)
		**out = **in
	}
	if in.SubStatus != nil {
		in, out := &in.SubStatus, &out.SubStatus
		*out = new(float64)
		**out = **in
	}
	if in.Win32Status != nil {
		in, out := &in.Win32Status, &out.Win32Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusCodeInitParameters.
func (in *StatusCodeInitParameters) DeepCopy() *StatusCodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(StatusCodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusCodeObservation) DeepCopyInto(out *StatusCodeObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.StatusCodeRange != nil {
		in, out := &in.StatusCodeRange, &out.StatusCodeRange
		*out = new(string)
		**out = **in
	}
	if in.SubStatus != nil {
		in, out := &in.SubStatus, &out.SubStatus
		*out = new(float64)
		**out = **in
	}
	if in.Win32Status != nil {
		in, out := &in.Win32Status, &out.Win32Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusCodeObservation.
func (in *StatusCodeObservation) DeepCopy() *StatusCodeObservation {
	if in == nil {
		return nil
	}
	out := new(StatusCodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusCodeParameters) DeepCopyInto(out *StatusCodeParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.StatusCodeRange != nil {
		in, out := &in.StatusCodeRange, &out.StatusCodeRange
		*out = new(string)
		**out = **in
	}
	if in.SubStatus != nil {
		in, out := &in.SubStatus, &out.SubStatus
		*out = new(float64)
		**out = **in
	}
	if in.Win32Status != nil {
		in, out := &in.Win32Status, &out.Win32Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusCodeParameters.
func (in *StatusCodeParameters) DeepCopy() *StatusCodeParameters {
	if in == nil {
		return nil
	}
	out := new(StatusCodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StickySettingsInitParameters) DeepCopyInto(out *StickySettingsInitParameters) {
	*out = *in
	if in.AppSettingNames != nil {
		in, out := &in.AppSettingNames, &out.AppSettingNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConnectionStringNames != nil {
		in, out := &in.ConnectionStringNames, &out.ConnectionStringNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StickySettingsInitParameters.
func (in *StickySettingsInitParameters) DeepCopy() *StickySettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(StickySettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StickySettingsObservation) DeepCopyInto(out *StickySettingsObservation) {
	*out = *in
	if in.AppSettingNames != nil {
		in, out := &in.AppSettingNames, &out.AppSettingNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConnectionStringNames != nil {
		in, out := &in.ConnectionStringNames, &out.ConnectionStringNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StickySettingsObservation.
func (in *StickySettingsObservation) DeepCopy() *StickySettingsObservation {
	if in == nil {
		return nil
	}
	out := new(StickySettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StickySettingsParameters) DeepCopyInto(out *StickySettingsParameters) {
	*out = *in
	if in.AppSettingNames != nil {
		in, out := &in.AppSettingNames, &out.AppSettingNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConnectionStringNames != nil {
		in, out := &in.ConnectionStringNames, &out.ConnectionStringNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StickySettingsParameters.
func (in *StickySettingsParameters) DeepCopy() *StickySettingsParameters {
	if in == nil {
		return nil
	}
	out := new(StickySettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountInitParameters) DeepCopyInto(out *StorageAccountInitParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountInitParameters.
func (in *StorageAccountInitParameters) DeepCopy() *StorageAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountObservation) DeepCopyInto(out *StorageAccountObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountObservation.
func (in *StorageAccountObservation) DeepCopy() *StorageAccountObservation {
	if in == nil {
		return nil
	}
	out := new(StorageAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountParameters) DeepCopyInto(out *StorageAccountParameters) {
	*out = *in
	out.AccessKeySecretRef = in.AccessKeySecretRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountParameters.
func (in *StorageAccountParameters) DeepCopy() *StorageAccountParameters {
	if in == nil {
		return nil
	}
	out := new(StorageAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerInitParameters) DeepCopyInto(out *TriggerInitParameters) {
	*out = *in
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = make([]RequestsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SlowRequest != nil {
		in, out := &in.SlowRequest, &out.SlowRequest
		*out = make([]SlowRequestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = make([]StatusCodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerInitParameters.
func (in *TriggerInitParameters) DeepCopy() *TriggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerObservation) DeepCopyInto(out *TriggerObservation) {
	*out = *in
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = make([]RequestsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SlowRequest != nil {
		in, out := &in.SlowRequest, &out.SlowRequest
		*out = make([]SlowRequestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = make([]StatusCodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerObservation.
func (in *TriggerObservation) DeepCopy() *TriggerObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerParameters) DeepCopyInto(out *TriggerParameters) {
	*out = *in
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = make([]RequestsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SlowRequest != nil {
		in, out := &in.SlowRequest, &out.SlowRequest
		*out = make([]SlowRequestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = make([]StatusCodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerParameters.
func (in *TriggerParameters) DeepCopy() *TriggerParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerRequestsInitParameters) DeepCopyInto(out *TriggerRequestsInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerRequestsInitParameters.
func (in *TriggerRequestsInitParameters) DeepCopy() *TriggerRequestsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerRequestsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerRequestsObservation) DeepCopyInto(out *TriggerRequestsObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerRequestsObservation.
func (in *TriggerRequestsObservation) DeepCopy() *TriggerRequestsObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerRequestsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerRequestsParameters) DeepCopyInto(out *TriggerRequestsParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerRequestsParameters.
func (in *TriggerRequestsParameters) DeepCopy() *TriggerRequestsParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerRequestsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerSlowRequestInitParameters) DeepCopyInto(out *TriggerSlowRequestInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TimeTaken != nil {
		in, out := &in.TimeTaken, &out.TimeTaken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerSlowRequestInitParameters.
func (in *TriggerSlowRequestInitParameters) DeepCopy() *TriggerSlowRequestInitParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerSlowRequestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerSlowRequestObservation) DeepCopyInto(out *TriggerSlowRequestObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TimeTaken != nil {
		in, out := &in.TimeTaken, &out.TimeTaken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerSlowRequestObservation.
func (in *TriggerSlowRequestObservation) DeepCopy() *TriggerSlowRequestObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerSlowRequestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerSlowRequestParameters) DeepCopyInto(out *TriggerSlowRequestParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TimeTaken != nil {
		in, out := &in.TimeTaken, &out.TimeTaken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerSlowRequestParameters.
func (in *TriggerSlowRequestParameters) DeepCopy() *TriggerSlowRequestParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerSlowRequestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerStatusCodeInitParameters) DeepCopyInto(out *TriggerStatusCodeInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.StatusCodeRange != nil {
		in, out := &in.StatusCodeRange, &out.StatusCodeRange
		*out = new(string)
		**out = **in
	}
	if in.SubStatus != nil {
		in, out := &in.SubStatus, &out.SubStatus
		*out = new(float64)
		**out = **in
	}
	if in.Win32Status != nil {
		in, out := &in.Win32Status, &out.Win32Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerStatusCodeInitParameters.
func (in *TriggerStatusCodeInitParameters) DeepCopy() *TriggerStatusCodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerStatusCodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerStatusCodeObservation) DeepCopyInto(out *TriggerStatusCodeObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.StatusCodeRange != nil {
		in, out := &in.StatusCodeRange, &out.StatusCodeRange
		*out = new(string)
		**out = **in
	}
	if in.SubStatus != nil {
		in, out := &in.SubStatus, &out.SubStatus
		*out = new(float64)
		**out = **in
	}
	if in.Win32Status != nil {
		in, out := &in.Win32Status, &out.Win32Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerStatusCodeObservation.
func (in *TriggerStatusCodeObservation) DeepCopy() *TriggerStatusCodeObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerStatusCodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerStatusCodeParameters) DeepCopyInto(out *TriggerStatusCodeParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.StatusCodeRange != nil {
		in, out := &in.StatusCodeRange, &out.StatusCodeRange
		*out = new(string)
		**out = **in
	}
	if in.SubStatus != nil {
		in, out := &in.SubStatus, &out.SubStatus
		*out = new(float64)
		**out = **in
	}
	if in.Win32Status != nil {
		in, out := &in.Win32Status, &out.Win32Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerStatusCodeParameters.
func (in *TriggerStatusCodeParameters) DeepCopy() *TriggerStatusCodeParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerStatusCodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TwitterInitParameters) DeepCopyInto(out *TwitterInitParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TwitterInitParameters.
func (in *TwitterInitParameters) DeepCopy() *TwitterInitParameters {
	if in == nil {
		return nil
	}
	out := new(TwitterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TwitterObservation) DeepCopyInto(out *TwitterObservation) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TwitterObservation.
func (in *TwitterObservation) DeepCopy() *TwitterObservation {
	if in == nil {
		return nil
	}
	out := new(TwitterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TwitterParameters) DeepCopyInto(out *TwitterParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	out.ConsumerSecretSecretRef = in.ConsumerSecretSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TwitterParameters.
func (in *TwitterParameters) DeepCopy() *TwitterParameters {
	if in == nil {
		return nil
	}
	out := new(TwitterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TwitterV2InitParameters) DeepCopyInto(out *TwitterV2InitParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TwitterV2InitParameters.
func (in *TwitterV2InitParameters) DeepCopy() *TwitterV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(TwitterV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TwitterV2Observation) DeepCopyInto(out *TwitterV2Observation) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TwitterV2Observation.
func (in *TwitterV2Observation) DeepCopy() *TwitterV2Observation {
	if in == nil {
		return nil
	}
	out := new(TwitterV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TwitterV2Parameters) DeepCopyInto(out *TwitterV2Parameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TwitterV2Parameters.
func (in *TwitterV2Parameters) DeepCopy() *TwitterV2Parameters {
	if in == nil {
		return nil
	}
	out := new(TwitterV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualApplicationInitParameters) DeepCopyInto(out *VirtualApplicationInitParameters) {
	*out = *in
	if in.PhysicalPath != nil {
		in, out := &in.PhysicalPath, &out.PhysicalPath
		*out = new(string)
		**out = **in
	}
	if in.Preload != nil {
		in, out := &in.Preload, &out.Preload
		*out = new(bool)
		**out = **in
	}
	if in.VirtualDirectory != nil {
		in, out := &in.VirtualDirectory, &out.VirtualDirectory
		*out = make([]VirtualDirectoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualPath != nil {
		in, out := &in.VirtualPath, &out.VirtualPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualApplicationInitParameters.
func (in *VirtualApplicationInitParameters) DeepCopy() *VirtualApplicationInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualApplicationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualApplicationObservation) DeepCopyInto(out *VirtualApplicationObservation) {
	*out = *in
	if in.PhysicalPath != nil {
		in, out := &in.PhysicalPath, &out.PhysicalPath
		*out = new(string)
		**out = **in
	}
	if in.Preload != nil {
		in, out := &in.Preload, &out.Preload
		*out = new(bool)
		**out = **in
	}
	if in.VirtualDirectory != nil {
		in, out := &in.VirtualDirectory, &out.VirtualDirectory
		*out = make([]VirtualDirectoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualPath != nil {
		in, out := &in.VirtualPath, &out.VirtualPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualApplicationObservation.
func (in *VirtualApplicationObservation) DeepCopy() *VirtualApplicationObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualApplicationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualApplicationParameters) DeepCopyInto(out *VirtualApplicationParameters) {
	*out = *in
	if in.PhysicalPath != nil {
		in, out := &in.PhysicalPath, &out.PhysicalPath
		*out = new(string)
		**out = **in
	}
	if in.Preload != nil {
		in, out := &in.Preload, &out.Preload
		*out = new(bool)
		**out = **in
	}
	if in.VirtualDirectory != nil {
		in, out := &in.VirtualDirectory, &out.VirtualDirectory
		*out = make([]VirtualDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualPath != nil {
		in, out := &in.VirtualPath, &out.VirtualPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualApplicationParameters.
func (in *VirtualApplicationParameters) DeepCopy() *VirtualApplicationParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualApplicationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualApplicationVirtualDirectoryInitParameters) DeepCopyInto(out *VirtualApplicationVirtualDirectoryInitParameters) {
	*out = *in
	if in.PhysicalPath != nil {
		in, out := &in.PhysicalPath, &out.PhysicalPath
		*out = new(string)
		**out = **in
	}
	if in.VirtualPath != nil {
		in, out := &in.VirtualPath, &out.VirtualPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualApplicationVirtualDirectoryInitParameters.
func (in *VirtualApplicationVirtualDirectoryInitParameters) DeepCopy() *VirtualApplicationVirtualDirectoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualApplicationVirtualDirectoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualApplicationVirtualDirectoryObservation) DeepCopyInto(out *VirtualApplicationVirtualDirectoryObservation) {
	*out = *in
	if in.PhysicalPath != nil {
		in, out := &in.PhysicalPath, &out.PhysicalPath
		*out = new(string)
		**out = **in
	}
	if in.VirtualPath != nil {
		in, out := &in.VirtualPath, &out.VirtualPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualApplicationVirtualDirectoryObservation.
func (in *VirtualApplicationVirtualDirectoryObservation) DeepCopy() *VirtualApplicationVirtualDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualApplicationVirtualDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualApplicationVirtualDirectoryParameters) DeepCopyInto(out *VirtualApplicationVirtualDirectoryParameters) {
	*out = *in
	if in.PhysicalPath != nil {
		in, out := &in.PhysicalPath, &out.PhysicalPath
		*out = new(string)
		**out = **in
	}
	if in.VirtualPath != nil {
		in, out := &in.VirtualPath, &out.VirtualPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualApplicationVirtualDirectoryParameters.
func (in *VirtualApplicationVirtualDirectoryParameters) DeepCopy() *VirtualApplicationVirtualDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualApplicationVirtualDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDirectoryInitParameters) DeepCopyInto(out *VirtualDirectoryInitParameters) {
	*out = *in
	if in.PhysicalPath != nil {
		in, out := &in.PhysicalPath, &out.PhysicalPath
		*out = new(string)
		**out = **in
	}
	if in.VirtualPath != nil {
		in, out := &in.VirtualPath, &out.VirtualPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDirectoryInitParameters.
func (in *VirtualDirectoryInitParameters) DeepCopy() *VirtualDirectoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualDirectoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDirectoryObservation) DeepCopyInto(out *VirtualDirectoryObservation) {
	*out = *in
	if in.PhysicalPath != nil {
		in, out := &in.PhysicalPath, &out.PhysicalPath
		*out = new(string)
		**out = **in
	}
	if in.VirtualPath != nil {
		in, out := &in.VirtualPath, &out.VirtualPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDirectoryObservation.
func (in *VirtualDirectoryObservation) DeepCopy() *VirtualDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualDirectoryParameters) DeepCopyInto(out *VirtualDirectoryParameters) {
	*out = *in
	if in.PhysicalPath != nil {
		in, out := &in.PhysicalPath, &out.PhysicalPath
		*out = new(string)
		**out = **in
	}
	if in.VirtualPath != nil {
		in, out := &in.VirtualPath, &out.VirtualPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualDirectoryParameters.
func (in *VirtualDirectoryParameters) DeepCopy() *VirtualDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionApp) DeepCopyInto(out *WindowsFunctionApp) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionApp.
func (in *WindowsFunctionApp) DeepCopy() *WindowsFunctionApp {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionApp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WindowsFunctionApp) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsActiveDirectoryInitParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsActiveDirectoryInitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsActiveDirectoryInitParameters.
func (in *WindowsFunctionAppAuthSettingsActiveDirectoryInitParameters) DeepCopy() *WindowsFunctionAppAuthSettingsActiveDirectoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsActiveDirectoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsActiveDirectoryObservation) DeepCopyInto(out *WindowsFunctionAppAuthSettingsActiveDirectoryObservation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsActiveDirectoryObservation.
func (in *WindowsFunctionAppAuthSettingsActiveDirectoryObservation) DeepCopy() *WindowsFunctionAppAuthSettingsActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsActiveDirectoryParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsActiveDirectoryParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsActiveDirectoryParameters.
func (in *WindowsFunctionAppAuthSettingsActiveDirectoryParameters) DeepCopy() *WindowsFunctionAppAuthSettingsActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsFacebookInitParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsFacebookInitParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsFacebookInitParameters.
func (in *WindowsFunctionAppAuthSettingsFacebookInitParameters) DeepCopy() *WindowsFunctionAppAuthSettingsFacebookInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsFacebookInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsFacebookObservation) DeepCopyInto(out *WindowsFunctionAppAuthSettingsFacebookObservation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsFacebookObservation.
func (in *WindowsFunctionAppAuthSettingsFacebookObservation) DeepCopy() *WindowsFunctionAppAuthSettingsFacebookObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsFacebookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsFacebookParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsFacebookParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSecretRef != nil {
		in, out := &in.AppSecretSecretRef, &out.AppSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsFacebookParameters.
func (in *WindowsFunctionAppAuthSettingsFacebookParameters) DeepCopy() *WindowsFunctionAppAuthSettingsFacebookParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsFacebookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsGithubInitParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsGithubInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsGithubInitParameters.
func (in *WindowsFunctionAppAuthSettingsGithubInitParameters) DeepCopy() *WindowsFunctionAppAuthSettingsGithubInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsGithubInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsGithubObservation) DeepCopyInto(out *WindowsFunctionAppAuthSettingsGithubObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsGithubObservation.
func (in *WindowsFunctionAppAuthSettingsGithubObservation) DeepCopy() *WindowsFunctionAppAuthSettingsGithubObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsGithubObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsGithubParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsGithubParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsGithubParameters.
func (in *WindowsFunctionAppAuthSettingsGithubParameters) DeepCopy() *WindowsFunctionAppAuthSettingsGithubParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsGithubParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsGoogleInitParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsGoogleInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsGoogleInitParameters.
func (in *WindowsFunctionAppAuthSettingsGoogleInitParameters) DeepCopy() *WindowsFunctionAppAuthSettingsGoogleInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsGoogleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsGoogleObservation) DeepCopyInto(out *WindowsFunctionAppAuthSettingsGoogleObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsGoogleObservation.
func (in *WindowsFunctionAppAuthSettingsGoogleObservation) DeepCopy() *WindowsFunctionAppAuthSettingsGoogleObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsGoogleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsGoogleParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsGoogleParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsGoogleParameters.
func (in *WindowsFunctionAppAuthSettingsGoogleParameters) DeepCopy() *WindowsFunctionAppAuthSettingsGoogleParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsGoogleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsInitParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsInitParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]WindowsFunctionAppAuthSettingsActiveDirectoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]WindowsFunctionAppAuthSettingsFacebookInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]WindowsFunctionAppAuthSettingsGithubInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]WindowsFunctionAppAuthSettingsGoogleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]WindowsFunctionAppAuthSettingsMicrosoftInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]WindowsFunctionAppAuthSettingsTwitterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsInitParameters.
func (in *WindowsFunctionAppAuthSettingsInitParameters) DeepCopy() *WindowsFunctionAppAuthSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsMicrosoftInitParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsMicrosoftInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsMicrosoftInitParameters.
func (in *WindowsFunctionAppAuthSettingsMicrosoftInitParameters) DeepCopy() *WindowsFunctionAppAuthSettingsMicrosoftInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsMicrosoftInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsMicrosoftObservation) DeepCopyInto(out *WindowsFunctionAppAuthSettingsMicrosoftObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsMicrosoftObservation.
func (in *WindowsFunctionAppAuthSettingsMicrosoftObservation) DeepCopy() *WindowsFunctionAppAuthSettingsMicrosoftObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsMicrosoftObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsMicrosoftParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsMicrosoftParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsMicrosoftParameters.
func (in *WindowsFunctionAppAuthSettingsMicrosoftParameters) DeepCopy() *WindowsFunctionAppAuthSettingsMicrosoftParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsMicrosoftParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsObservation) DeepCopyInto(out *WindowsFunctionAppAuthSettingsObservation) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]WindowsFunctionAppAuthSettingsActiveDirectoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]WindowsFunctionAppAuthSettingsFacebookObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]WindowsFunctionAppAuthSettingsGithubObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]WindowsFunctionAppAuthSettingsGoogleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]WindowsFunctionAppAuthSettingsMicrosoftObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]WindowsFunctionAppAuthSettingsTwitterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsObservation.
func (in *WindowsFunctionAppAuthSettingsObservation) DeepCopy() *WindowsFunctionAppAuthSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]WindowsFunctionAppAuthSettingsActiveDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]WindowsFunctionAppAuthSettingsFacebookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]WindowsFunctionAppAuthSettingsGithubParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]WindowsFunctionAppAuthSettingsGoogleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]WindowsFunctionAppAuthSettingsMicrosoftParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]WindowsFunctionAppAuthSettingsTwitterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsParameters.
func (in *WindowsFunctionAppAuthSettingsParameters) DeepCopy() *WindowsFunctionAppAuthSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsTwitterInitParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsTwitterInitParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsTwitterInitParameters.
func (in *WindowsFunctionAppAuthSettingsTwitterInitParameters) DeepCopy() *WindowsFunctionAppAuthSettingsTwitterInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsTwitterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsTwitterObservation) DeepCopyInto(out *WindowsFunctionAppAuthSettingsTwitterObservation) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsTwitterObservation.
func (in *WindowsFunctionAppAuthSettingsTwitterObservation) DeepCopy() *WindowsFunctionAppAuthSettingsTwitterObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsTwitterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsTwitterParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsTwitterParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSecretRef != nil {
		in, out := &in.ConsumerSecretSecretRef, &out.ConsumerSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsTwitterParameters.
func (in *WindowsFunctionAppAuthSettingsTwitterParameters) DeepCopy() *WindowsFunctionAppAuthSettingsTwitterParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsTwitterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2InitParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2InitParameters) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2InitParameters.
func (in *WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2InitParameters) DeepCopy() *WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2Observation) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2Observation) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2Observation.
func (in *WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2Observation) DeepCopy() *WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2Parameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2Parameters) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2Parameters.
func (in *WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2Parameters) DeepCopy() *WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2AppleV2InitParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2AppleV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2AppleV2InitParameters.
func (in *WindowsFunctionAppAuthSettingsV2AppleV2InitParameters) DeepCopy() *WindowsFunctionAppAuthSettingsV2AppleV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2AppleV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2AppleV2Observation) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2AppleV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2AppleV2Observation.
func (in *WindowsFunctionAppAuthSettingsV2AppleV2Observation) DeepCopy() *WindowsFunctionAppAuthSettingsV2AppleV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2AppleV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2AppleV2Parameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2AppleV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2AppleV2Parameters.
func (in *WindowsFunctionAppAuthSettingsV2AppleV2Parameters) DeepCopy() *WindowsFunctionAppAuthSettingsV2AppleV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2AppleV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2InitParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2InitParameters.
func (in *WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2InitParameters) DeepCopy() *WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2Observation) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2Observation.
func (in *WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2Observation) DeepCopy() *WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2Parameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2Parameters.
func (in *WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2Parameters) DeepCopy() *WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2CustomOidcV2InitParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2CustomOidcV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2CustomOidcV2InitParameters.
func (in *WindowsFunctionAppAuthSettingsV2CustomOidcV2InitParameters) DeepCopy() *WindowsFunctionAppAuthSettingsV2CustomOidcV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2CustomOidcV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2CustomOidcV2Observation) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2CustomOidcV2Observation) {
	*out = *in
	if in.AuthorisationEndpoint != nil {
		in, out := &in.AuthorisationEndpoint, &out.AuthorisationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.CertificationURI != nil {
		in, out := &in.CertificationURI, &out.CertificationURI
		*out = new(string)
		**out = **in
	}
	if in.ClientCredentialMethod != nil {
		in, out := &in.ClientCredentialMethod, &out.ClientCredentialMethod
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.IssuerEndpoint != nil {
		in, out := &in.IssuerEndpoint, &out.IssuerEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TokenEndpoint != nil {
		in, out := &in.TokenEndpoint, &out.TokenEndpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2CustomOidcV2Observation.
func (in *WindowsFunctionAppAuthSettingsV2CustomOidcV2Observation) DeepCopy() *WindowsFunctionAppAuthSettingsV2CustomOidcV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2CustomOidcV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2CustomOidcV2Parameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2CustomOidcV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2CustomOidcV2Parameters.
func (in *WindowsFunctionAppAuthSettingsV2CustomOidcV2Parameters) DeepCopy() *WindowsFunctionAppAuthSettingsV2CustomOidcV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2CustomOidcV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2FacebookV2InitParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2FacebookV2InitParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2FacebookV2InitParameters.
func (in *WindowsFunctionAppAuthSettingsV2FacebookV2InitParameters) DeepCopy() *WindowsFunctionAppAuthSettingsV2FacebookV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2FacebookV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2FacebookV2Observation) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2FacebookV2Observation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2FacebookV2Observation.
func (in *WindowsFunctionAppAuthSettingsV2FacebookV2Observation) DeepCopy() *WindowsFunctionAppAuthSettingsV2FacebookV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2FacebookV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2FacebookV2Parameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2FacebookV2Parameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2FacebookV2Parameters.
func (in *WindowsFunctionAppAuthSettingsV2FacebookV2Parameters) DeepCopy() *WindowsFunctionAppAuthSettingsV2FacebookV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2FacebookV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2GithubV2InitParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2GithubV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2GithubV2InitParameters.
func (in *WindowsFunctionAppAuthSettingsV2GithubV2InitParameters) DeepCopy() *WindowsFunctionAppAuthSettingsV2GithubV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2GithubV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2GithubV2Observation) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2GithubV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2GithubV2Observation.
func (in *WindowsFunctionAppAuthSettingsV2GithubV2Observation) DeepCopy() *WindowsFunctionAppAuthSettingsV2GithubV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2GithubV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2GithubV2Parameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2GithubV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2GithubV2Parameters.
func (in *WindowsFunctionAppAuthSettingsV2GithubV2Parameters) DeepCopy() *WindowsFunctionAppAuthSettingsV2GithubV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2GithubV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2GoogleV2InitParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2GoogleV2InitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2GoogleV2InitParameters.
func (in *WindowsFunctionAppAuthSettingsV2GoogleV2InitParameters) DeepCopy() *WindowsFunctionAppAuthSettingsV2GoogleV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2GoogleV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2GoogleV2Observation) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2GoogleV2Observation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2GoogleV2Observation.
func (in *WindowsFunctionAppAuthSettingsV2GoogleV2Observation) DeepCopy() *WindowsFunctionAppAuthSettingsV2GoogleV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2GoogleV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2GoogleV2Parameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2GoogleV2Parameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2GoogleV2Parameters.
func (in *WindowsFunctionAppAuthSettingsV2GoogleV2Parameters) DeepCopy() *WindowsFunctionAppAuthSettingsV2GoogleV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2GoogleV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2InitParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2InitParameters) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]WindowsFunctionAppAuthSettingsV2AppleV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]WindowsFunctionAppAuthSettingsV2CustomOidcV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]WindowsFunctionAppAuthSettingsV2FacebookV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]WindowsFunctionAppAuthSettingsV2GithubV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]WindowsFunctionAppAuthSettingsV2GoogleV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]WindowsFunctionAppAuthSettingsV2LoginInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]WindowsFunctionAppAuthSettingsV2MicrosoftV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]WindowsFunctionAppAuthSettingsV2TwitterV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2InitParameters.
func (in *WindowsFunctionAppAuthSettingsV2InitParameters) DeepCopy() *WindowsFunctionAppAuthSettingsV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2LoginInitParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2LoginInitParameters) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2LoginInitParameters.
func (in *WindowsFunctionAppAuthSettingsV2LoginInitParameters) DeepCopy() *WindowsFunctionAppAuthSettingsV2LoginInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2LoginInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2LoginObservation) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2LoginObservation) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2LoginObservation.
func (in *WindowsFunctionAppAuthSettingsV2LoginObservation) DeepCopy() *WindowsFunctionAppAuthSettingsV2LoginObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2LoginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2LoginParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2LoginParameters) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2LoginParameters.
func (in *WindowsFunctionAppAuthSettingsV2LoginParameters) DeepCopy() *WindowsFunctionAppAuthSettingsV2LoginParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2LoginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2MicrosoftV2InitParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2MicrosoftV2InitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2MicrosoftV2InitParameters.
func (in *WindowsFunctionAppAuthSettingsV2MicrosoftV2InitParameters) DeepCopy() *WindowsFunctionAppAuthSettingsV2MicrosoftV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2MicrosoftV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2MicrosoftV2Observation) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2MicrosoftV2Observation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2MicrosoftV2Observation.
func (in *WindowsFunctionAppAuthSettingsV2MicrosoftV2Observation) DeepCopy() *WindowsFunctionAppAuthSettingsV2MicrosoftV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2MicrosoftV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2MicrosoftV2Parameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2MicrosoftV2Parameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2MicrosoftV2Parameters.
func (in *WindowsFunctionAppAuthSettingsV2MicrosoftV2Parameters) DeepCopy() *WindowsFunctionAppAuthSettingsV2MicrosoftV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2MicrosoftV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2Observation) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2Observation) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]WindowsFunctionAppAuthSettingsV2AppleV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]WindowsFunctionAppAuthSettingsV2CustomOidcV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]WindowsFunctionAppAuthSettingsV2FacebookV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]WindowsFunctionAppAuthSettingsV2GithubV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]WindowsFunctionAppAuthSettingsV2GoogleV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]WindowsFunctionAppAuthSettingsV2LoginObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]WindowsFunctionAppAuthSettingsV2MicrosoftV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]WindowsFunctionAppAuthSettingsV2TwitterV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2Observation.
func (in *WindowsFunctionAppAuthSettingsV2Observation) DeepCopy() *WindowsFunctionAppAuthSettingsV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2Parameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2Parameters) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]WindowsFunctionAppAuthSettingsV2AppleV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]WindowsFunctionAppAuthSettingsV2CustomOidcV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]WindowsFunctionAppAuthSettingsV2FacebookV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]WindowsFunctionAppAuthSettingsV2GithubV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]WindowsFunctionAppAuthSettingsV2GoogleV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]WindowsFunctionAppAuthSettingsV2LoginParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]WindowsFunctionAppAuthSettingsV2MicrosoftV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]WindowsFunctionAppAuthSettingsV2TwitterV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2Parameters.
func (in *WindowsFunctionAppAuthSettingsV2Parameters) DeepCopy() *WindowsFunctionAppAuthSettingsV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2TwitterV2InitParameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2TwitterV2InitParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2TwitterV2InitParameters.
func (in *WindowsFunctionAppAuthSettingsV2TwitterV2InitParameters) DeepCopy() *WindowsFunctionAppAuthSettingsV2TwitterV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2TwitterV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2TwitterV2Observation) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2TwitterV2Observation) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2TwitterV2Observation.
func (in *WindowsFunctionAppAuthSettingsV2TwitterV2Observation) DeepCopy() *WindowsFunctionAppAuthSettingsV2TwitterV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2TwitterV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppAuthSettingsV2TwitterV2Parameters) DeepCopyInto(out *WindowsFunctionAppAuthSettingsV2TwitterV2Parameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppAuthSettingsV2TwitterV2Parameters.
func (in *WindowsFunctionAppAuthSettingsV2TwitterV2Parameters) DeepCopy() *WindowsFunctionAppAuthSettingsV2TwitterV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppAuthSettingsV2TwitterV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppBackupInitParameters) DeepCopyInto(out *WindowsFunctionAppBackupInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]WindowsFunctionAppBackupScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppBackupInitParameters.
func (in *WindowsFunctionAppBackupInitParameters) DeepCopy() *WindowsFunctionAppBackupInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppBackupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppBackupObservation) DeepCopyInto(out *WindowsFunctionAppBackupObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]WindowsFunctionAppBackupScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppBackupObservation.
func (in *WindowsFunctionAppBackupObservation) DeepCopy() *WindowsFunctionAppBackupObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppBackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppBackupParameters) DeepCopyInto(out *WindowsFunctionAppBackupParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]WindowsFunctionAppBackupScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.StorageAccountURLSecretRef = in.StorageAccountURLSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppBackupParameters.
func (in *WindowsFunctionAppBackupParameters) DeepCopy() *WindowsFunctionAppBackupParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppBackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppBackupScheduleInitParameters) DeepCopyInto(out *WindowsFunctionAppBackupScheduleInitParameters) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppBackupScheduleInitParameters.
func (in *WindowsFunctionAppBackupScheduleInitParameters) DeepCopy() *WindowsFunctionAppBackupScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppBackupScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppBackupScheduleObservation) DeepCopyInto(out *WindowsFunctionAppBackupScheduleObservation) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.LastExecutionTime != nil {
		in, out := &in.LastExecutionTime, &out.LastExecutionTime
		*out = new(string)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppBackupScheduleObservation.
func (in *WindowsFunctionAppBackupScheduleObservation) DeepCopy() *WindowsFunctionAppBackupScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppBackupScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppBackupScheduleParameters) DeepCopyInto(out *WindowsFunctionAppBackupScheduleParameters) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppBackupScheduleParameters.
func (in *WindowsFunctionAppBackupScheduleParameters) DeepCopy() *WindowsFunctionAppBackupScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppBackupScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppConnectionStringInitParameters) DeepCopyInto(out *WindowsFunctionAppConnectionStringInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppConnectionStringInitParameters.
func (in *WindowsFunctionAppConnectionStringInitParameters) DeepCopy() *WindowsFunctionAppConnectionStringInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppConnectionStringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppConnectionStringObservation) DeepCopyInto(out *WindowsFunctionAppConnectionStringObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppConnectionStringObservation.
func (in *WindowsFunctionAppConnectionStringObservation) DeepCopy() *WindowsFunctionAppConnectionStringObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppConnectionStringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppConnectionStringParameters) DeepCopyInto(out *WindowsFunctionAppConnectionStringParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	out.ValueSecretRef = in.ValueSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppConnectionStringParameters.
func (in *WindowsFunctionAppConnectionStringParameters) DeepCopy() *WindowsFunctionAppConnectionStringParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppConnectionStringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppIdentityInitParameters) DeepCopyInto(out *WindowsFunctionAppIdentityInitParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppIdentityInitParameters.
func (in *WindowsFunctionAppIdentityInitParameters) DeepCopy() *WindowsFunctionAppIdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppIdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppIdentityObservation) DeepCopyInto(out *WindowsFunctionAppIdentityObservation) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppIdentityObservation.
func (in *WindowsFunctionAppIdentityObservation) DeepCopy() *WindowsFunctionAppIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppIdentityParameters) DeepCopyInto(out *WindowsFunctionAppIdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppIdentityParameters.
func (in *WindowsFunctionAppIdentityParameters) DeepCopy() *WindowsFunctionAppIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppInitParameters) DeepCopyInto(out *WindowsFunctionAppInitParameters) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]WindowsFunctionAppAuthSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]WindowsFunctionAppAuthSettingsV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]WindowsFunctionAppBackupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BuiltinLoggingEnabled != nil {
		in, out := &in.BuiltinLoggingEnabled, &out.BuiltinLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]WindowsFunctionAppConnectionStringInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContentShareForceDisabled != nil {
		in, out := &in.ContentShareForceDisabled, &out.ContentShareForceDisabled
		*out = new(bool)
		**out = **in
	}
	if in.DailyMemoryTimeQuota != nil {
		in, out := &in.DailyMemoryTimeQuota, &out.DailyMemoryTimeQuota
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FunctionsExtensionVersion != nil {
		in, out := &in.FunctionsExtensionVersion, &out.FunctionsExtensionVersion
		*out = new(string)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]WindowsFunctionAppIdentityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]WindowsFunctionAppSiteConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StickySettings != nil {
		in, out := &in.StickySettings, &out.StickySettings
		*out = make([]WindowsFunctionAppStickySettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]WindowsFunctionAppStorageAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageKeyVaultSecretID != nil {
		in, out := &in.StorageKeyVaultSecretID, &out.StorageKeyVaultSecretID
		*out = new(string)
		**out = **in
	}
	if in.StorageUsesManagedIdentity != nil {
		in, out := &in.StorageUsesManagedIdentity, &out.StorageUsesManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZipDeployFile != nil {
		in, out := &in.ZipDeployFile, &out.ZipDeployFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppInitParameters.
func (in *WindowsFunctionAppInitParameters) DeepCopy() *WindowsFunctionAppInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppList) DeepCopyInto(out *WindowsFunctionAppList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WindowsFunctionApp, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppList.
func (in *WindowsFunctionAppList) DeepCopy() *WindowsFunctionAppList {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WindowsFunctionAppList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppObservation) DeepCopyInto(out *WindowsFunctionAppObservation) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]WindowsFunctionAppAuthSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]WindowsFunctionAppAuthSettingsV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]WindowsFunctionAppBackupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BuiltinLoggingEnabled != nil {
		in, out := &in.BuiltinLoggingEnabled, &out.BuiltinLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]WindowsFunctionAppConnectionStringObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContentShareForceDisabled != nil {
		in, out := &in.ContentShareForceDisabled, &out.ContentShareForceDisabled
		*out = new(bool)
		**out = **in
	}
	if in.DailyMemoryTimeQuota != nil {
		in, out := &in.DailyMemoryTimeQuota, &out.DailyMemoryTimeQuota
		*out = new(float64)
		**out = **in
	}
	if in.DefaultHostName != nil {
		in, out := &in.DefaultHostName, &out.DefaultHostName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FunctionsExtensionVersion != nil {
		in, out := &in.FunctionsExtensionVersion, &out.FunctionsExtensionVersion
		*out = new(string)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.HostingEnvironmentID != nil {
		in, out := &in.HostingEnvironmentID, &out.HostingEnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]WindowsFunctionAppIdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OutboundIPAddressList != nil {
		in, out := &in.OutboundIPAddressList, &out.OutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OutboundIPAddresses != nil {
		in, out := &in.OutboundIPAddresses, &out.OutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.PossibleOutboundIPAddressList != nil {
		in, out := &in.PossibleOutboundIPAddressList, &out.PossibleOutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PossibleOutboundIPAddresses != nil {
		in, out := &in.PossibleOutboundIPAddresses, &out.PossibleOutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]WindowsFunctionAppSiteConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StickySettings != nil {
		in, out := &in.StickySettings, &out.StickySettings
		*out = make([]WindowsFunctionAppStickySettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]WindowsFunctionAppStorageAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.StorageKeyVaultSecretID != nil {
		in, out := &in.StorageKeyVaultSecretID, &out.StorageKeyVaultSecretID
		*out = new(string)
		**out = **in
	}
	if in.StorageUsesManagedIdentity != nil {
		in, out := &in.StorageUsesManagedIdentity, &out.StorageUsesManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.ZipDeployFile != nil {
		in, out := &in.ZipDeployFile, &out.ZipDeployFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppObservation.
func (in *WindowsFunctionAppObservation) DeepCopy() *WindowsFunctionAppObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppParameters) DeepCopyInto(out *WindowsFunctionAppParameters) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]WindowsFunctionAppAuthSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]WindowsFunctionAppAuthSettingsV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]WindowsFunctionAppBackupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BuiltinLoggingEnabled != nil {
		in, out := &in.BuiltinLoggingEnabled, &out.BuiltinLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]WindowsFunctionAppConnectionStringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContentShareForceDisabled != nil {
		in, out := &in.ContentShareForceDisabled, &out.ContentShareForceDisabled
		*out = new(bool)
		**out = **in
	}
	if in.DailyMemoryTimeQuota != nil {
		in, out := &in.DailyMemoryTimeQuota, &out.DailyMemoryTimeQuota
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FunctionsExtensionVersion != nil {
		in, out := &in.FunctionsExtensionVersion, &out.FunctionsExtensionVersion
		*out = new(string)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]WindowsFunctionAppIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanIDRef != nil {
		in, out := &in.ServicePlanIDRef, &out.ServicePlanIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServicePlanIDSelector != nil {
		in, out := &in.ServicePlanIDSelector, &out.ServicePlanIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]WindowsFunctionAppSiteConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StickySettings != nil {
		in, out := &in.StickySettings, &out.StickySettings
		*out = make([]WindowsFunctionAppStickySettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]WindowsFunctionAppStorageAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountAccessKeySecretRef != nil {
		in, out := &in.StorageAccountAccessKeySecretRef, &out.StorageAccountAccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountNameRef != nil {
		in, out := &in.StorageAccountNameRef, &out.StorageAccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountNameSelector != nil {
		in, out := &in.StorageAccountNameSelector, &out.StorageAccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageKeyVaultSecretID != nil {
		in, out := &in.StorageKeyVaultSecretID, &out.StorageKeyVaultSecretID
		*out = new(string)
		**out = **in
	}
	if in.StorageUsesManagedIdentity != nil {
		in, out := &in.StorageUsesManagedIdentity, &out.StorageUsesManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ZipDeployFile != nil {
		in, out := &in.ZipDeployFile, &out.ZipDeployFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppParameters.
func (in *WindowsFunctionAppParameters) DeepCopy() *WindowsFunctionAppParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigAppServiceLogsInitParameters) DeepCopyInto(out *WindowsFunctionAppSiteConfigAppServiceLogsInitParameters) {
	*out = *in
	if in.DiskQuotaMb != nil {
		in, out := &in.DiskQuotaMb, &out.DiskQuotaMb
		*out = new(float64)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigAppServiceLogsInitParameters.
func (in *WindowsFunctionAppSiteConfigAppServiceLogsInitParameters) DeepCopy() *WindowsFunctionAppSiteConfigAppServiceLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigAppServiceLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigAppServiceLogsObservation) DeepCopyInto(out *WindowsFunctionAppSiteConfigAppServiceLogsObservation) {
	*out = *in
	if in.DiskQuotaMb != nil {
		in, out := &in.DiskQuotaMb, &out.DiskQuotaMb
		*out = new(float64)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigAppServiceLogsObservation.
func (in *WindowsFunctionAppSiteConfigAppServiceLogsObservation) DeepCopy() *WindowsFunctionAppSiteConfigAppServiceLogsObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigAppServiceLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigAppServiceLogsParameters) DeepCopyInto(out *WindowsFunctionAppSiteConfigAppServiceLogsParameters) {
	*out = *in
	if in.DiskQuotaMb != nil {
		in, out := &in.DiskQuotaMb, &out.DiskQuotaMb
		*out = new(float64)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigAppServiceLogsParameters.
func (in *WindowsFunctionAppSiteConfigAppServiceLogsParameters) DeepCopy() *WindowsFunctionAppSiteConfigAppServiceLogsParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigAppServiceLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigApplicationStackInitParameters) DeepCopyInto(out *WindowsFunctionAppSiteConfigApplicationStackInitParameters) {
	*out = *in
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PowershellCoreVersion != nil {
		in, out := &in.PowershellCoreVersion, &out.PowershellCoreVersion
		*out = new(string)
		**out = **in
	}
	if in.UseCustomRuntime != nil {
		in, out := &in.UseCustomRuntime, &out.UseCustomRuntime
		*out = new(bool)
		**out = **in
	}
	if in.UseDotnetIsolatedRuntime != nil {
		in, out := &in.UseDotnetIsolatedRuntime, &out.UseDotnetIsolatedRuntime
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigApplicationStackInitParameters.
func (in *WindowsFunctionAppSiteConfigApplicationStackInitParameters) DeepCopy() *WindowsFunctionAppSiteConfigApplicationStackInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigApplicationStackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigApplicationStackObservation) DeepCopyInto(out *WindowsFunctionAppSiteConfigApplicationStackObservation) {
	*out = *in
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PowershellCoreVersion != nil {
		in, out := &in.PowershellCoreVersion, &out.PowershellCoreVersion
		*out = new(string)
		**out = **in
	}
	if in.UseCustomRuntime != nil {
		in, out := &in.UseCustomRuntime, &out.UseCustomRuntime
		*out = new(bool)
		**out = **in
	}
	if in.UseDotnetIsolatedRuntime != nil {
		in, out := &in.UseDotnetIsolatedRuntime, &out.UseDotnetIsolatedRuntime
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigApplicationStackObservation.
func (in *WindowsFunctionAppSiteConfigApplicationStackObservation) DeepCopy() *WindowsFunctionAppSiteConfigApplicationStackObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigApplicationStackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigApplicationStackParameters) DeepCopyInto(out *WindowsFunctionAppSiteConfigApplicationStackParameters) {
	*out = *in
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PowershellCoreVersion != nil {
		in, out := &in.PowershellCoreVersion, &out.PowershellCoreVersion
		*out = new(string)
		**out = **in
	}
	if in.UseCustomRuntime != nil {
		in, out := &in.UseCustomRuntime, &out.UseCustomRuntime
		*out = new(bool)
		**out = **in
	}
	if in.UseDotnetIsolatedRuntime != nil {
		in, out := &in.UseDotnetIsolatedRuntime, &out.UseDotnetIsolatedRuntime
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigApplicationStackParameters.
func (in *WindowsFunctionAppSiteConfigApplicationStackParameters) DeepCopy() *WindowsFunctionAppSiteConfigApplicationStackParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigApplicationStackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigCorsInitParameters) DeepCopyInto(out *WindowsFunctionAppSiteConfigCorsInitParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigCorsInitParameters.
func (in *WindowsFunctionAppSiteConfigCorsInitParameters) DeepCopy() *WindowsFunctionAppSiteConfigCorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigCorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigCorsObservation) DeepCopyInto(out *WindowsFunctionAppSiteConfigCorsObservation) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigCorsObservation.
func (in *WindowsFunctionAppSiteConfigCorsObservation) DeepCopy() *WindowsFunctionAppSiteConfigCorsObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigCorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigCorsParameters) DeepCopyInto(out *WindowsFunctionAppSiteConfigCorsParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigCorsParameters.
func (in *WindowsFunctionAppSiteConfigCorsParameters) DeepCopy() *WindowsFunctionAppSiteConfigCorsParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigCorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigIPRestrictionHeadersInitParameters) DeepCopyInto(out *WindowsFunctionAppSiteConfigIPRestrictionHeadersInitParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigIPRestrictionHeadersInitParameters.
func (in *WindowsFunctionAppSiteConfigIPRestrictionHeadersInitParameters) DeepCopy() *WindowsFunctionAppSiteConfigIPRestrictionHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigIPRestrictionHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigIPRestrictionHeadersObservation) DeepCopyInto(out *WindowsFunctionAppSiteConfigIPRestrictionHeadersObservation) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigIPRestrictionHeadersObservation.
func (in *WindowsFunctionAppSiteConfigIPRestrictionHeadersObservation) DeepCopy() *WindowsFunctionAppSiteConfigIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigIPRestrictionHeadersParameters) DeepCopyInto(out *WindowsFunctionAppSiteConfigIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigIPRestrictionHeadersParameters.
func (in *WindowsFunctionAppSiteConfigIPRestrictionHeadersParameters) DeepCopy() *WindowsFunctionAppSiteConfigIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigIPRestrictionInitParameters) DeepCopyInto(out *WindowsFunctionAppSiteConfigIPRestrictionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsFunctionAppSiteConfigIPRestrictionHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigIPRestrictionInitParameters.
func (in *WindowsFunctionAppSiteConfigIPRestrictionInitParameters) DeepCopy() *WindowsFunctionAppSiteConfigIPRestrictionInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigIPRestrictionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigIPRestrictionObservation) DeepCopyInto(out *WindowsFunctionAppSiteConfigIPRestrictionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsFunctionAppSiteConfigIPRestrictionHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigIPRestrictionObservation.
func (in *WindowsFunctionAppSiteConfigIPRestrictionObservation) DeepCopy() *WindowsFunctionAppSiteConfigIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigIPRestrictionParameters) DeepCopyInto(out *WindowsFunctionAppSiteConfigIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsFunctionAppSiteConfigIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigIPRestrictionParameters.
func (in *WindowsFunctionAppSiteConfigIPRestrictionParameters) DeepCopy() *WindowsFunctionAppSiteConfigIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigInitParameters) DeepCopyInto(out *WindowsFunctionAppSiteConfigInitParameters) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(float64)
		**out = **in
	}
	if in.AppServiceLogs != nil {
		in, out := &in.AppServiceLogs, &out.AppServiceLogs
		*out = make([]WindowsFunctionAppSiteConfigAppServiceLogsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]WindowsFunctionAppSiteConfigApplicationStackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]WindowsFunctionAppSiteConfigCorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(float64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]WindowsFunctionAppSiteConfigIPRestrictionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]WindowsFunctionAppSiteConfigScmIPRestrictionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigInitParameters.
func (in *WindowsFunctionAppSiteConfigInitParameters) DeepCopy() *WindowsFunctionAppSiteConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigObservation) DeepCopyInto(out *WindowsFunctionAppSiteConfigObservation) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(float64)
		**out = **in
	}
	if in.AppServiceLogs != nil {
		in, out := &in.AppServiceLogs, &out.AppServiceLogs
		*out = make([]WindowsFunctionAppSiteConfigAppServiceLogsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]WindowsFunctionAppSiteConfigApplicationStackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]WindowsFunctionAppSiteConfigCorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DetailedErrorLoggingEnabled != nil {
		in, out := &in.DetailedErrorLoggingEnabled, &out.DetailedErrorLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(float64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]WindowsFunctionAppSiteConfigIPRestrictionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]WindowsFunctionAppSiteConfigScmIPRestrictionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmType != nil {
		in, out := &in.ScmType, &out.ScmType
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WindowsFxVersion != nil {
		in, out := &in.WindowsFxVersion, &out.WindowsFxVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigObservation.
func (in *WindowsFunctionAppSiteConfigObservation) DeepCopy() *WindowsFunctionAppSiteConfigObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigParameters) DeepCopyInto(out *WindowsFunctionAppSiteConfigParameters) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(float64)
		**out = **in
	}
	if in.AppServiceLogs != nil {
		in, out := &in.AppServiceLogs, &out.AppServiceLogs
		*out = make([]WindowsFunctionAppSiteConfigAppServiceLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationInsightsConnectionStringSecretRef != nil {
		in, out := &in.ApplicationInsightsConnectionStringSecretRef, &out.ApplicationInsightsConnectionStringSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ApplicationInsightsKeySecretRef != nil {
		in, out := &in.ApplicationInsightsKeySecretRef, &out.ApplicationInsightsKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]WindowsFunctionAppSiteConfigApplicationStackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]WindowsFunctionAppSiteConfigCorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(float64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]WindowsFunctionAppSiteConfigIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]WindowsFunctionAppSiteConfigScmIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigParameters.
func (in *WindowsFunctionAppSiteConfigParameters) DeepCopy() *WindowsFunctionAppSiteConfigParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigScmIPRestrictionHeadersInitParameters) DeepCopyInto(out *WindowsFunctionAppSiteConfigScmIPRestrictionHeadersInitParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigScmIPRestrictionHeadersInitParameters.
func (in *WindowsFunctionAppSiteConfigScmIPRestrictionHeadersInitParameters) DeepCopy() *WindowsFunctionAppSiteConfigScmIPRestrictionHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigScmIPRestrictionHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigScmIPRestrictionHeadersObservation) DeepCopyInto(out *WindowsFunctionAppSiteConfigScmIPRestrictionHeadersObservation) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigScmIPRestrictionHeadersObservation.
func (in *WindowsFunctionAppSiteConfigScmIPRestrictionHeadersObservation) DeepCopy() *WindowsFunctionAppSiteConfigScmIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigScmIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigScmIPRestrictionHeadersParameters) DeepCopyInto(out *WindowsFunctionAppSiteConfigScmIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigScmIPRestrictionHeadersParameters.
func (in *WindowsFunctionAppSiteConfigScmIPRestrictionHeadersParameters) DeepCopy() *WindowsFunctionAppSiteConfigScmIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigScmIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigScmIPRestrictionInitParameters) DeepCopyInto(out *WindowsFunctionAppSiteConfigScmIPRestrictionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsFunctionAppSiteConfigScmIPRestrictionHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigScmIPRestrictionInitParameters.
func (in *WindowsFunctionAppSiteConfigScmIPRestrictionInitParameters) DeepCopy() *WindowsFunctionAppSiteConfigScmIPRestrictionInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigScmIPRestrictionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigScmIPRestrictionObservation) DeepCopyInto(out *WindowsFunctionAppSiteConfigScmIPRestrictionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsFunctionAppSiteConfigScmIPRestrictionHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigScmIPRestrictionObservation.
func (in *WindowsFunctionAppSiteConfigScmIPRestrictionObservation) DeepCopy() *WindowsFunctionAppSiteConfigScmIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigScmIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteConfigScmIPRestrictionParameters) DeepCopyInto(out *WindowsFunctionAppSiteConfigScmIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsFunctionAppSiteConfigScmIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteConfigScmIPRestrictionParameters.
func (in *WindowsFunctionAppSiteConfigScmIPRestrictionParameters) DeepCopy() *WindowsFunctionAppSiteConfigScmIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteConfigScmIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteCredentialInitParameters) DeepCopyInto(out *WindowsFunctionAppSiteCredentialInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteCredentialInitParameters.
func (in *WindowsFunctionAppSiteCredentialInitParameters) DeepCopy() *WindowsFunctionAppSiteCredentialInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteCredentialInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteCredentialObservation) DeepCopyInto(out *WindowsFunctionAppSiteCredentialObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteCredentialObservation.
func (in *WindowsFunctionAppSiteCredentialObservation) DeepCopy() *WindowsFunctionAppSiteCredentialObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteCredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSiteCredentialParameters) DeepCopyInto(out *WindowsFunctionAppSiteCredentialParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSiteCredentialParameters.
func (in *WindowsFunctionAppSiteCredentialParameters) DeepCopy() *WindowsFunctionAppSiteCredentialParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSiteCredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlot) DeepCopyInto(out *WindowsFunctionAppSlot) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlot.
func (in *WindowsFunctionAppSlot) DeepCopy() *WindowsFunctionAppSlot {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WindowsFunctionAppSlot) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsActiveDirectoryInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsActiveDirectoryInitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsActiveDirectoryInitParameters.
func (in *WindowsFunctionAppSlotAuthSettingsActiveDirectoryInitParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsActiveDirectoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsActiveDirectoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsActiveDirectoryObservation) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsActiveDirectoryObservation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsActiveDirectoryObservation.
func (in *WindowsFunctionAppSlotAuthSettingsActiveDirectoryObservation) DeepCopy() *WindowsFunctionAppSlotAuthSettingsActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsActiveDirectoryParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsActiveDirectoryParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsActiveDirectoryParameters.
func (in *WindowsFunctionAppSlotAuthSettingsActiveDirectoryParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsFacebookInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsFacebookInitParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsFacebookInitParameters.
func (in *WindowsFunctionAppSlotAuthSettingsFacebookInitParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsFacebookInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsFacebookInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsFacebookObservation) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsFacebookObservation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsFacebookObservation.
func (in *WindowsFunctionAppSlotAuthSettingsFacebookObservation) DeepCopy() *WindowsFunctionAppSlotAuthSettingsFacebookObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsFacebookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsFacebookParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsFacebookParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSecretRef != nil {
		in, out := &in.AppSecretSecretRef, &out.AppSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsFacebookParameters.
func (in *WindowsFunctionAppSlotAuthSettingsFacebookParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsFacebookParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsFacebookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsGithubInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsGithubInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsGithubInitParameters.
func (in *WindowsFunctionAppSlotAuthSettingsGithubInitParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsGithubInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsGithubInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsGithubObservation) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsGithubObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsGithubObservation.
func (in *WindowsFunctionAppSlotAuthSettingsGithubObservation) DeepCopy() *WindowsFunctionAppSlotAuthSettingsGithubObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsGithubObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsGithubParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsGithubParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsGithubParameters.
func (in *WindowsFunctionAppSlotAuthSettingsGithubParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsGithubParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsGithubParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsGoogleInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsGoogleInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsGoogleInitParameters.
func (in *WindowsFunctionAppSlotAuthSettingsGoogleInitParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsGoogleInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsGoogleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsGoogleObservation) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsGoogleObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsGoogleObservation.
func (in *WindowsFunctionAppSlotAuthSettingsGoogleObservation) DeepCopy() *WindowsFunctionAppSlotAuthSettingsGoogleObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsGoogleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsGoogleParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsGoogleParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsGoogleParameters.
func (in *WindowsFunctionAppSlotAuthSettingsGoogleParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsGoogleParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsGoogleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsInitParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]WindowsFunctionAppSlotAuthSettingsActiveDirectoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]WindowsFunctionAppSlotAuthSettingsFacebookInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]WindowsFunctionAppSlotAuthSettingsGithubInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]WindowsFunctionAppSlotAuthSettingsGoogleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]WindowsFunctionAppSlotAuthSettingsMicrosoftInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]WindowsFunctionAppSlotAuthSettingsTwitterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsInitParameters.
func (in *WindowsFunctionAppSlotAuthSettingsInitParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsMicrosoftInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsMicrosoftInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsMicrosoftInitParameters.
func (in *WindowsFunctionAppSlotAuthSettingsMicrosoftInitParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsMicrosoftInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsMicrosoftInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsMicrosoftObservation) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsMicrosoftObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsMicrosoftObservation.
func (in *WindowsFunctionAppSlotAuthSettingsMicrosoftObservation) DeepCopy() *WindowsFunctionAppSlotAuthSettingsMicrosoftObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsMicrosoftObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsMicrosoftParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsMicrosoftParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsMicrosoftParameters.
func (in *WindowsFunctionAppSlotAuthSettingsMicrosoftParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsMicrosoftParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsMicrosoftParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsObservation) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsObservation) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]WindowsFunctionAppSlotAuthSettingsActiveDirectoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]WindowsFunctionAppSlotAuthSettingsFacebookObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]WindowsFunctionAppSlotAuthSettingsGithubObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]WindowsFunctionAppSlotAuthSettingsGoogleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]WindowsFunctionAppSlotAuthSettingsMicrosoftObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]WindowsFunctionAppSlotAuthSettingsTwitterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsObservation.
func (in *WindowsFunctionAppSlotAuthSettingsObservation) DeepCopy() *WindowsFunctionAppSlotAuthSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]WindowsFunctionAppSlotAuthSettingsActiveDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]WindowsFunctionAppSlotAuthSettingsFacebookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]WindowsFunctionAppSlotAuthSettingsGithubParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]WindowsFunctionAppSlotAuthSettingsGoogleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]WindowsFunctionAppSlotAuthSettingsMicrosoftParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]WindowsFunctionAppSlotAuthSettingsTwitterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsParameters.
func (in *WindowsFunctionAppSlotAuthSettingsParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsTwitterInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsTwitterInitParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsTwitterInitParameters.
func (in *WindowsFunctionAppSlotAuthSettingsTwitterInitParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsTwitterInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsTwitterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsTwitterObservation) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsTwitterObservation) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsTwitterObservation.
func (in *WindowsFunctionAppSlotAuthSettingsTwitterObservation) DeepCopy() *WindowsFunctionAppSlotAuthSettingsTwitterObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsTwitterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsTwitterParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsTwitterParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSecretRef != nil {
		in, out := &in.ConsumerSecretSecretRef, &out.ConsumerSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsTwitterParameters.
func (in *WindowsFunctionAppSlotAuthSettingsTwitterParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsTwitterParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsTwitterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2InitParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2InitParameters) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2InitParameters.
func (in *WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2InitParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2Observation) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2Observation) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2Observation.
func (in *WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2Observation) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2Parameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2Parameters) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2Parameters.
func (in *WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2Parameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2AppleV2InitParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2AppleV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2AppleV2InitParameters.
func (in *WindowsFunctionAppSlotAuthSettingsV2AppleV2InitParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2AppleV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2AppleV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2AppleV2Observation) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2AppleV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2AppleV2Observation.
func (in *WindowsFunctionAppSlotAuthSettingsV2AppleV2Observation) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2AppleV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2AppleV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2AppleV2Parameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2AppleV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2AppleV2Parameters.
func (in *WindowsFunctionAppSlotAuthSettingsV2AppleV2Parameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2AppleV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2AppleV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2InitParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2InitParameters.
func (in *WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2InitParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2Observation) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2Observation.
func (in *WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2Observation) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2Parameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2Parameters.
func (in *WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2Parameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2InitParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2InitParameters.
func (in *WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2InitParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2Observation) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2Observation) {
	*out = *in
	if in.AuthorisationEndpoint != nil {
		in, out := &in.AuthorisationEndpoint, &out.AuthorisationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.CertificationURI != nil {
		in, out := &in.CertificationURI, &out.CertificationURI
		*out = new(string)
		**out = **in
	}
	if in.ClientCredentialMethod != nil {
		in, out := &in.ClientCredentialMethod, &out.ClientCredentialMethod
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.IssuerEndpoint != nil {
		in, out := &in.IssuerEndpoint, &out.IssuerEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TokenEndpoint != nil {
		in, out := &in.TokenEndpoint, &out.TokenEndpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2Observation.
func (in *WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2Observation) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2Parameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2Parameters.
func (in *WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2Parameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2FacebookV2InitParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2FacebookV2InitParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2FacebookV2InitParameters.
func (in *WindowsFunctionAppSlotAuthSettingsV2FacebookV2InitParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2FacebookV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2FacebookV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2FacebookV2Observation) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2FacebookV2Observation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2FacebookV2Observation.
func (in *WindowsFunctionAppSlotAuthSettingsV2FacebookV2Observation) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2FacebookV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2FacebookV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2FacebookV2Parameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2FacebookV2Parameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2FacebookV2Parameters.
func (in *WindowsFunctionAppSlotAuthSettingsV2FacebookV2Parameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2FacebookV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2FacebookV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2GithubV2InitParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2GithubV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2GithubV2InitParameters.
func (in *WindowsFunctionAppSlotAuthSettingsV2GithubV2InitParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2GithubV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2GithubV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2GithubV2Observation) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2GithubV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2GithubV2Observation.
func (in *WindowsFunctionAppSlotAuthSettingsV2GithubV2Observation) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2GithubV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2GithubV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2GithubV2Parameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2GithubV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2GithubV2Parameters.
func (in *WindowsFunctionAppSlotAuthSettingsV2GithubV2Parameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2GithubV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2GithubV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2GoogleV2InitParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2GoogleV2InitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2GoogleV2InitParameters.
func (in *WindowsFunctionAppSlotAuthSettingsV2GoogleV2InitParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2GoogleV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2GoogleV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2GoogleV2Observation) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2GoogleV2Observation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2GoogleV2Observation.
func (in *WindowsFunctionAppSlotAuthSettingsV2GoogleV2Observation) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2GoogleV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2GoogleV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2GoogleV2Parameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2GoogleV2Parameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2GoogleV2Parameters.
func (in *WindowsFunctionAppSlotAuthSettingsV2GoogleV2Parameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2GoogleV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2GoogleV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2InitParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2InitParameters) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2AppleV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2FacebookV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2GithubV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2GoogleV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2LoginInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2TwitterV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2InitParameters.
func (in *WindowsFunctionAppSlotAuthSettingsV2InitParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2LoginInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2LoginInitParameters) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2LoginInitParameters.
func (in *WindowsFunctionAppSlotAuthSettingsV2LoginInitParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2LoginInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2LoginInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2LoginObservation) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2LoginObservation) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2LoginObservation.
func (in *WindowsFunctionAppSlotAuthSettingsV2LoginObservation) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2LoginObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2LoginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2LoginParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2LoginParameters) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2LoginParameters.
func (in *WindowsFunctionAppSlotAuthSettingsV2LoginParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2LoginParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2LoginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2InitParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2InitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2InitParameters.
func (in *WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2InitParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2Observation) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2Observation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2Observation.
func (in *WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2Observation) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2Parameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2Parameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2Parameters.
func (in *WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2Parameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2Observation) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2Observation) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2AppleV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2FacebookV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2GithubV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2GoogleV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2LoginObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2TwitterV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2Observation.
func (in *WindowsFunctionAppSlotAuthSettingsV2Observation) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2Parameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2Parameters) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2AppleV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2FacebookV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2GithubV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2GoogleV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2LoginParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2TwitterV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2Parameters.
func (in *WindowsFunctionAppSlotAuthSettingsV2Parameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2TwitterV2InitParameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2TwitterV2InitParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2TwitterV2InitParameters.
func (in *WindowsFunctionAppSlotAuthSettingsV2TwitterV2InitParameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2TwitterV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2TwitterV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2TwitterV2Observation) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2TwitterV2Observation) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2TwitterV2Observation.
func (in *WindowsFunctionAppSlotAuthSettingsV2TwitterV2Observation) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2TwitterV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2TwitterV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotAuthSettingsV2TwitterV2Parameters) DeepCopyInto(out *WindowsFunctionAppSlotAuthSettingsV2TwitterV2Parameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotAuthSettingsV2TwitterV2Parameters.
func (in *WindowsFunctionAppSlotAuthSettingsV2TwitterV2Parameters) DeepCopy() *WindowsFunctionAppSlotAuthSettingsV2TwitterV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotAuthSettingsV2TwitterV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotBackupInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotBackupInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]WindowsFunctionAppSlotBackupScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotBackupInitParameters.
func (in *WindowsFunctionAppSlotBackupInitParameters) DeepCopy() *WindowsFunctionAppSlotBackupInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotBackupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotBackupObservation) DeepCopyInto(out *WindowsFunctionAppSlotBackupObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]WindowsFunctionAppSlotBackupScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotBackupObservation.
func (in *WindowsFunctionAppSlotBackupObservation) DeepCopy() *WindowsFunctionAppSlotBackupObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotBackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotBackupParameters) DeepCopyInto(out *WindowsFunctionAppSlotBackupParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]WindowsFunctionAppSlotBackupScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.StorageAccountURLSecretRef = in.StorageAccountURLSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotBackupParameters.
func (in *WindowsFunctionAppSlotBackupParameters) DeepCopy() *WindowsFunctionAppSlotBackupParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotBackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotBackupScheduleInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotBackupScheduleInitParameters) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotBackupScheduleInitParameters.
func (in *WindowsFunctionAppSlotBackupScheduleInitParameters) DeepCopy() *WindowsFunctionAppSlotBackupScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotBackupScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotBackupScheduleObservation) DeepCopyInto(out *WindowsFunctionAppSlotBackupScheduleObservation) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.LastExecutionTime != nil {
		in, out := &in.LastExecutionTime, &out.LastExecutionTime
		*out = new(string)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotBackupScheduleObservation.
func (in *WindowsFunctionAppSlotBackupScheduleObservation) DeepCopy() *WindowsFunctionAppSlotBackupScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotBackupScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotBackupScheduleParameters) DeepCopyInto(out *WindowsFunctionAppSlotBackupScheduleParameters) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotBackupScheduleParameters.
func (in *WindowsFunctionAppSlotBackupScheduleParameters) DeepCopy() *WindowsFunctionAppSlotBackupScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotBackupScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotConnectionStringInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotConnectionStringInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotConnectionStringInitParameters.
func (in *WindowsFunctionAppSlotConnectionStringInitParameters) DeepCopy() *WindowsFunctionAppSlotConnectionStringInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotConnectionStringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotConnectionStringObservation) DeepCopyInto(out *WindowsFunctionAppSlotConnectionStringObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotConnectionStringObservation.
func (in *WindowsFunctionAppSlotConnectionStringObservation) DeepCopy() *WindowsFunctionAppSlotConnectionStringObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotConnectionStringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotConnectionStringParameters) DeepCopyInto(out *WindowsFunctionAppSlotConnectionStringParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	out.ValueSecretRef = in.ValueSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotConnectionStringParameters.
func (in *WindowsFunctionAppSlotConnectionStringParameters) DeepCopy() *WindowsFunctionAppSlotConnectionStringParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotConnectionStringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotIdentityInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotIdentityInitParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotIdentityInitParameters.
func (in *WindowsFunctionAppSlotIdentityInitParameters) DeepCopy() *WindowsFunctionAppSlotIdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotIdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotIdentityObservation) DeepCopyInto(out *WindowsFunctionAppSlotIdentityObservation) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotIdentityObservation.
func (in *WindowsFunctionAppSlotIdentityObservation) DeepCopy() *WindowsFunctionAppSlotIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotIdentityParameters) DeepCopyInto(out *WindowsFunctionAppSlotIdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotIdentityParameters.
func (in *WindowsFunctionAppSlotIdentityParameters) DeepCopy() *WindowsFunctionAppSlotIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotInitParameters) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]WindowsFunctionAppSlotAuthSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]WindowsFunctionAppSlotBackupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BuiltinLoggingEnabled != nil {
		in, out := &in.BuiltinLoggingEnabled, &out.BuiltinLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]WindowsFunctionAppSlotConnectionStringInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContentShareForceDisabled != nil {
		in, out := &in.ContentShareForceDisabled, &out.ContentShareForceDisabled
		*out = new(bool)
		**out = **in
	}
	if in.DailyMemoryTimeQuota != nil {
		in, out := &in.DailyMemoryTimeQuota, &out.DailyMemoryTimeQuota
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FunctionsExtensionVersion != nil {
		in, out := &in.FunctionsExtensionVersion, &out.FunctionsExtensionVersion
		*out = new(string)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]WindowsFunctionAppSlotIdentityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]WindowsFunctionAppSlotSiteConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]WindowsFunctionAppSlotStorageAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageKeyVaultSecretID != nil {
		in, out := &in.StorageKeyVaultSecretID, &out.StorageKeyVaultSecretID
		*out = new(string)
		**out = **in
	}
	if in.StorageUsesManagedIdentity != nil {
		in, out := &in.StorageUsesManagedIdentity, &out.StorageUsesManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotInitParameters.
func (in *WindowsFunctionAppSlotInitParameters) DeepCopy() *WindowsFunctionAppSlotInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotList) DeepCopyInto(out *WindowsFunctionAppSlotList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WindowsFunctionAppSlot, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotList.
func (in *WindowsFunctionAppSlotList) DeepCopy() *WindowsFunctionAppSlotList {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WindowsFunctionAppSlotList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotObservation) DeepCopyInto(out *WindowsFunctionAppSlotObservation) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]WindowsFunctionAppSlotAuthSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]WindowsFunctionAppSlotBackupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BuiltinLoggingEnabled != nil {
		in, out := &in.BuiltinLoggingEnabled, &out.BuiltinLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]WindowsFunctionAppSlotConnectionStringObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContentShareForceDisabled != nil {
		in, out := &in.ContentShareForceDisabled, &out.ContentShareForceDisabled
		*out = new(bool)
		**out = **in
	}
	if in.DailyMemoryTimeQuota != nil {
		in, out := &in.DailyMemoryTimeQuota, &out.DailyMemoryTimeQuota
		*out = new(float64)
		**out = **in
	}
	if in.DefaultHostName != nil {
		in, out := &in.DefaultHostName, &out.DefaultHostName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FunctionAppID != nil {
		in, out := &in.FunctionAppID, &out.FunctionAppID
		*out = new(string)
		**out = **in
	}
	if in.FunctionsExtensionVersion != nil {
		in, out := &in.FunctionsExtensionVersion, &out.FunctionsExtensionVersion
		*out = new(string)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.HostingEnvironmentID != nil {
		in, out := &in.HostingEnvironmentID, &out.HostingEnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]WindowsFunctionAppSlotIdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.OutboundIPAddressList != nil {
		in, out := &in.OutboundIPAddressList, &out.OutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OutboundIPAddresses != nil {
		in, out := &in.OutboundIPAddresses, &out.OutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.PossibleOutboundIPAddressList != nil {
		in, out := &in.PossibleOutboundIPAddressList, &out.PossibleOutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PossibleOutboundIPAddresses != nil {
		in, out := &in.PossibleOutboundIPAddresses, &out.PossibleOutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]WindowsFunctionAppSlotSiteConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]WindowsFunctionAppSlotStorageAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.StorageKeyVaultSecretID != nil {
		in, out := &in.StorageKeyVaultSecretID, &out.StorageKeyVaultSecretID
		*out = new(string)
		**out = **in
	}
	if in.StorageUsesManagedIdentity != nil {
		in, out := &in.StorageUsesManagedIdentity, &out.StorageUsesManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotObservation.
func (in *WindowsFunctionAppSlotObservation) DeepCopy() *WindowsFunctionAppSlotObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotParameters) DeepCopyInto(out *WindowsFunctionAppSlotParameters) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]WindowsFunctionAppSlotAuthSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]WindowsFunctionAppSlotAuthSettingsV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]WindowsFunctionAppSlotBackupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BuiltinLoggingEnabled != nil {
		in, out := &in.BuiltinLoggingEnabled, &out.BuiltinLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]WindowsFunctionAppSlotConnectionStringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContentShareForceDisabled != nil {
		in, out := &in.ContentShareForceDisabled, &out.ContentShareForceDisabled
		*out = new(bool)
		**out = **in
	}
	if in.DailyMemoryTimeQuota != nil {
		in, out := &in.DailyMemoryTimeQuota, &out.DailyMemoryTimeQuota
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FunctionAppID != nil {
		in, out := &in.FunctionAppID, &out.FunctionAppID
		*out = new(string)
		**out = **in
	}
	if in.FunctionAppIDRef != nil {
		in, out := &in.FunctionAppIDRef, &out.FunctionAppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionAppIDSelector != nil {
		in, out := &in.FunctionAppIDSelector, &out.FunctionAppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionsExtensionVersion != nil {
		in, out := &in.FunctionsExtensionVersion, &out.FunctionsExtensionVersion
		*out = new(string)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]WindowsFunctionAppSlotIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]WindowsFunctionAppSlotSiteConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]WindowsFunctionAppSlotStorageAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountAccessKeySecretRef != nil {
		in, out := &in.StorageAccountAccessKeySecretRef, &out.StorageAccountAccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountNameRef != nil {
		in, out := &in.StorageAccountNameRef, &out.StorageAccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountNameSelector != nil {
		in, out := &in.StorageAccountNameSelector, &out.StorageAccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageKeyVaultSecretID != nil {
		in, out := &in.StorageKeyVaultSecretID, &out.StorageKeyVaultSecretID
		*out = new(string)
		**out = **in
	}
	if in.StorageUsesManagedIdentity != nil {
		in, out := &in.StorageUsesManagedIdentity, &out.StorageUsesManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotParameters.
func (in *WindowsFunctionAppSlotParameters) DeepCopy() *WindowsFunctionAppSlotParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigAppServiceLogsInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigAppServiceLogsInitParameters) {
	*out = *in
	if in.DiskQuotaMb != nil {
		in, out := &in.DiskQuotaMb, &out.DiskQuotaMb
		*out = new(float64)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigAppServiceLogsInitParameters.
func (in *WindowsFunctionAppSlotSiteConfigAppServiceLogsInitParameters) DeepCopy() *WindowsFunctionAppSlotSiteConfigAppServiceLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigAppServiceLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigAppServiceLogsObservation) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigAppServiceLogsObservation) {
	*out = *in
	if in.DiskQuotaMb != nil {
		in, out := &in.DiskQuotaMb, &out.DiskQuotaMb
		*out = new(float64)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigAppServiceLogsObservation.
func (in *WindowsFunctionAppSlotSiteConfigAppServiceLogsObservation) DeepCopy() *WindowsFunctionAppSlotSiteConfigAppServiceLogsObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigAppServiceLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigAppServiceLogsParameters) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigAppServiceLogsParameters) {
	*out = *in
	if in.DiskQuotaMb != nil {
		in, out := &in.DiskQuotaMb, &out.DiskQuotaMb
		*out = new(float64)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigAppServiceLogsParameters.
func (in *WindowsFunctionAppSlotSiteConfigAppServiceLogsParameters) DeepCopy() *WindowsFunctionAppSlotSiteConfigAppServiceLogsParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigAppServiceLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigApplicationStackInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigApplicationStackInitParameters) {
	*out = *in
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PowershellCoreVersion != nil {
		in, out := &in.PowershellCoreVersion, &out.PowershellCoreVersion
		*out = new(string)
		**out = **in
	}
	if in.UseCustomRuntime != nil {
		in, out := &in.UseCustomRuntime, &out.UseCustomRuntime
		*out = new(bool)
		**out = **in
	}
	if in.UseDotnetIsolatedRuntime != nil {
		in, out := &in.UseDotnetIsolatedRuntime, &out.UseDotnetIsolatedRuntime
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigApplicationStackInitParameters.
func (in *WindowsFunctionAppSlotSiteConfigApplicationStackInitParameters) DeepCopy() *WindowsFunctionAppSlotSiteConfigApplicationStackInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigApplicationStackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigApplicationStackObservation) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigApplicationStackObservation) {
	*out = *in
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PowershellCoreVersion != nil {
		in, out := &in.PowershellCoreVersion, &out.PowershellCoreVersion
		*out = new(string)
		**out = **in
	}
	if in.UseCustomRuntime != nil {
		in, out := &in.UseCustomRuntime, &out.UseCustomRuntime
		*out = new(bool)
		**out = **in
	}
	if in.UseDotnetIsolatedRuntime != nil {
		in, out := &in.UseDotnetIsolatedRuntime, &out.UseDotnetIsolatedRuntime
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigApplicationStackObservation.
func (in *WindowsFunctionAppSlotSiteConfigApplicationStackObservation) DeepCopy() *WindowsFunctionAppSlotSiteConfigApplicationStackObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigApplicationStackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigApplicationStackParameters) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigApplicationStackParameters) {
	*out = *in
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PowershellCoreVersion != nil {
		in, out := &in.PowershellCoreVersion, &out.PowershellCoreVersion
		*out = new(string)
		**out = **in
	}
	if in.UseCustomRuntime != nil {
		in, out := &in.UseCustomRuntime, &out.UseCustomRuntime
		*out = new(bool)
		**out = **in
	}
	if in.UseDotnetIsolatedRuntime != nil {
		in, out := &in.UseDotnetIsolatedRuntime, &out.UseDotnetIsolatedRuntime
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigApplicationStackParameters.
func (in *WindowsFunctionAppSlotSiteConfigApplicationStackParameters) DeepCopy() *WindowsFunctionAppSlotSiteConfigApplicationStackParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigApplicationStackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigCorsInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigCorsInitParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigCorsInitParameters.
func (in *WindowsFunctionAppSlotSiteConfigCorsInitParameters) DeepCopy() *WindowsFunctionAppSlotSiteConfigCorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigCorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigCorsObservation) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigCorsObservation) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigCorsObservation.
func (in *WindowsFunctionAppSlotSiteConfigCorsObservation) DeepCopy() *WindowsFunctionAppSlotSiteConfigCorsObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigCorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigCorsParameters) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigCorsParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigCorsParameters.
func (in *WindowsFunctionAppSlotSiteConfigCorsParameters) DeepCopy() *WindowsFunctionAppSlotSiteConfigCorsParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigCorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigIPRestrictionHeadersInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigIPRestrictionHeadersInitParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigIPRestrictionHeadersInitParameters.
func (in *WindowsFunctionAppSlotSiteConfigIPRestrictionHeadersInitParameters) DeepCopy() *WindowsFunctionAppSlotSiteConfigIPRestrictionHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigIPRestrictionHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigIPRestrictionHeadersObservation) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigIPRestrictionHeadersObservation) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigIPRestrictionHeadersObservation.
func (in *WindowsFunctionAppSlotSiteConfigIPRestrictionHeadersObservation) DeepCopy() *WindowsFunctionAppSlotSiteConfigIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigIPRestrictionHeadersParameters) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigIPRestrictionHeadersParameters.
func (in *WindowsFunctionAppSlotSiteConfigIPRestrictionHeadersParameters) DeepCopy() *WindowsFunctionAppSlotSiteConfigIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigIPRestrictionInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigIPRestrictionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsFunctionAppSlotSiteConfigIPRestrictionHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigIPRestrictionInitParameters.
func (in *WindowsFunctionAppSlotSiteConfigIPRestrictionInitParameters) DeepCopy() *WindowsFunctionAppSlotSiteConfigIPRestrictionInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigIPRestrictionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigIPRestrictionObservation) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigIPRestrictionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsFunctionAppSlotSiteConfigIPRestrictionHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigIPRestrictionObservation.
func (in *WindowsFunctionAppSlotSiteConfigIPRestrictionObservation) DeepCopy() *WindowsFunctionAppSlotSiteConfigIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigIPRestrictionParameters) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsFunctionAppSlotSiteConfigIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigIPRestrictionParameters.
func (in *WindowsFunctionAppSlotSiteConfigIPRestrictionParameters) DeepCopy() *WindowsFunctionAppSlotSiteConfigIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigInitParameters) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(float64)
		**out = **in
	}
	if in.AppServiceLogs != nil {
		in, out := &in.AppServiceLogs, &out.AppServiceLogs
		*out = make([]WindowsFunctionAppSlotSiteConfigAppServiceLogsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]WindowsFunctionAppSlotSiteConfigApplicationStackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoSwapSlotName != nil {
		in, out := &in.AutoSwapSlotName, &out.AutoSwapSlotName
		*out = new(string)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]WindowsFunctionAppSlotSiteConfigCorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(float64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]WindowsFunctionAppSlotSiteConfigIPRestrictionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]WindowsFunctionAppSlotSiteConfigScmIPRestrictionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigInitParameters.
func (in *WindowsFunctionAppSlotSiteConfigInitParameters) DeepCopy() *WindowsFunctionAppSlotSiteConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigObservation) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigObservation) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(float64)
		**out = **in
	}
	if in.AppServiceLogs != nil {
		in, out := &in.AppServiceLogs, &out.AppServiceLogs
		*out = make([]WindowsFunctionAppSlotSiteConfigAppServiceLogsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]WindowsFunctionAppSlotSiteConfigApplicationStackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoSwapSlotName != nil {
		in, out := &in.AutoSwapSlotName, &out.AutoSwapSlotName
		*out = new(string)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]WindowsFunctionAppSlotSiteConfigCorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DetailedErrorLoggingEnabled != nil {
		in, out := &in.DetailedErrorLoggingEnabled, &out.DetailedErrorLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(float64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]WindowsFunctionAppSlotSiteConfigIPRestrictionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]WindowsFunctionAppSlotSiteConfigScmIPRestrictionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmType != nil {
		in, out := &in.ScmType, &out.ScmType
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WindowsFxVersion != nil {
		in, out := &in.WindowsFxVersion, &out.WindowsFxVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigObservation.
func (in *WindowsFunctionAppSlotSiteConfigObservation) DeepCopy() *WindowsFunctionAppSlotSiteConfigObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigParameters) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigParameters) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(float64)
		**out = **in
	}
	if in.AppServiceLogs != nil {
		in, out := &in.AppServiceLogs, &out.AppServiceLogs
		*out = make([]WindowsFunctionAppSlotSiteConfigAppServiceLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationInsightsConnectionStringSecretRef != nil {
		in, out := &in.ApplicationInsightsConnectionStringSecretRef, &out.ApplicationInsightsConnectionStringSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ApplicationInsightsKeySecretRef != nil {
		in, out := &in.ApplicationInsightsKeySecretRef, &out.ApplicationInsightsKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]WindowsFunctionAppSlotSiteConfigApplicationStackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoSwapSlotName != nil {
		in, out := &in.AutoSwapSlotName, &out.AutoSwapSlotName
		*out = new(string)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]WindowsFunctionAppSlotSiteConfigCorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(float64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]WindowsFunctionAppSlotSiteConfigIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]WindowsFunctionAppSlotSiteConfigScmIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigParameters.
func (in *WindowsFunctionAppSlotSiteConfigParameters) DeepCopy() *WindowsFunctionAppSlotSiteConfigParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigScmIPRestrictionHeadersInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigScmIPRestrictionHeadersInitParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigScmIPRestrictionHeadersInitParameters.
func (in *WindowsFunctionAppSlotSiteConfigScmIPRestrictionHeadersInitParameters) DeepCopy() *WindowsFunctionAppSlotSiteConfigScmIPRestrictionHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigScmIPRestrictionHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigScmIPRestrictionHeadersObservation) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigScmIPRestrictionHeadersObservation) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigScmIPRestrictionHeadersObservation.
func (in *WindowsFunctionAppSlotSiteConfigScmIPRestrictionHeadersObservation) DeepCopy() *WindowsFunctionAppSlotSiteConfigScmIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigScmIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigScmIPRestrictionHeadersParameters) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigScmIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigScmIPRestrictionHeadersParameters.
func (in *WindowsFunctionAppSlotSiteConfigScmIPRestrictionHeadersParameters) DeepCopy() *WindowsFunctionAppSlotSiteConfigScmIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigScmIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigScmIPRestrictionInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigScmIPRestrictionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsFunctionAppSlotSiteConfigScmIPRestrictionHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigScmIPRestrictionInitParameters.
func (in *WindowsFunctionAppSlotSiteConfigScmIPRestrictionInitParameters) DeepCopy() *WindowsFunctionAppSlotSiteConfigScmIPRestrictionInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigScmIPRestrictionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigScmIPRestrictionObservation) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigScmIPRestrictionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsFunctionAppSlotSiteConfigScmIPRestrictionHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigScmIPRestrictionObservation.
func (in *WindowsFunctionAppSlotSiteConfigScmIPRestrictionObservation) DeepCopy() *WindowsFunctionAppSlotSiteConfigScmIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigScmIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteConfigScmIPRestrictionParameters) DeepCopyInto(out *WindowsFunctionAppSlotSiteConfigScmIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsFunctionAppSlotSiteConfigScmIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteConfigScmIPRestrictionParameters.
func (in *WindowsFunctionAppSlotSiteConfigScmIPRestrictionParameters) DeepCopy() *WindowsFunctionAppSlotSiteConfigScmIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteConfigScmIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteCredentialInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotSiteCredentialInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteCredentialInitParameters.
func (in *WindowsFunctionAppSlotSiteCredentialInitParameters) DeepCopy() *WindowsFunctionAppSlotSiteCredentialInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteCredentialInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteCredentialObservation) DeepCopyInto(out *WindowsFunctionAppSlotSiteCredentialObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteCredentialObservation.
func (in *WindowsFunctionAppSlotSiteCredentialObservation) DeepCopy() *WindowsFunctionAppSlotSiteCredentialObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteCredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSiteCredentialParameters) DeepCopyInto(out *WindowsFunctionAppSlotSiteCredentialParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSiteCredentialParameters.
func (in *WindowsFunctionAppSlotSiteCredentialParameters) DeepCopy() *WindowsFunctionAppSlotSiteCredentialParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSiteCredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotSpec) DeepCopyInto(out *WindowsFunctionAppSlotSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotSpec.
func (in *WindowsFunctionAppSlotSpec) DeepCopy() *WindowsFunctionAppSlotSpec {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotStatus) DeepCopyInto(out *WindowsFunctionAppSlotStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotStatus.
func (in *WindowsFunctionAppSlotStatus) DeepCopy() *WindowsFunctionAppSlotStatus {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotStorageAccountInitParameters) DeepCopyInto(out *WindowsFunctionAppSlotStorageAccountInitParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotStorageAccountInitParameters.
func (in *WindowsFunctionAppSlotStorageAccountInitParameters) DeepCopy() *WindowsFunctionAppSlotStorageAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotStorageAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotStorageAccountObservation) DeepCopyInto(out *WindowsFunctionAppSlotStorageAccountObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotStorageAccountObservation.
func (in *WindowsFunctionAppSlotStorageAccountObservation) DeepCopy() *WindowsFunctionAppSlotStorageAccountObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotStorageAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSlotStorageAccountParameters) DeepCopyInto(out *WindowsFunctionAppSlotStorageAccountParameters) {
	*out = *in
	out.AccessKeySecretRef = in.AccessKeySecretRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSlotStorageAccountParameters.
func (in *WindowsFunctionAppSlotStorageAccountParameters) DeepCopy() *WindowsFunctionAppSlotStorageAccountParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSlotStorageAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppSpec) DeepCopyInto(out *WindowsFunctionAppSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppSpec.
func (in *WindowsFunctionAppSpec) DeepCopy() *WindowsFunctionAppSpec {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppStatus) DeepCopyInto(out *WindowsFunctionAppStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppStatus.
func (in *WindowsFunctionAppStatus) DeepCopy() *WindowsFunctionAppStatus {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppStickySettingsInitParameters) DeepCopyInto(out *WindowsFunctionAppStickySettingsInitParameters) {
	*out = *in
	if in.AppSettingNames != nil {
		in, out := &in.AppSettingNames, &out.AppSettingNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConnectionStringNames != nil {
		in, out := &in.ConnectionStringNames, &out.ConnectionStringNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppStickySettingsInitParameters.
func (in *WindowsFunctionAppStickySettingsInitParameters) DeepCopy() *WindowsFunctionAppStickySettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppStickySettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppStickySettingsObservation) DeepCopyInto(out *WindowsFunctionAppStickySettingsObservation) {
	*out = *in
	if in.AppSettingNames != nil {
		in, out := &in.AppSettingNames, &out.AppSettingNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConnectionStringNames != nil {
		in, out := &in.ConnectionStringNames, &out.ConnectionStringNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppStickySettingsObservation.
func (in *WindowsFunctionAppStickySettingsObservation) DeepCopy() *WindowsFunctionAppStickySettingsObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppStickySettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppStickySettingsParameters) DeepCopyInto(out *WindowsFunctionAppStickySettingsParameters) {
	*out = *in
	if in.AppSettingNames != nil {
		in, out := &in.AppSettingNames, &out.AppSettingNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConnectionStringNames != nil {
		in, out := &in.ConnectionStringNames, &out.ConnectionStringNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppStickySettingsParameters.
func (in *WindowsFunctionAppStickySettingsParameters) DeepCopy() *WindowsFunctionAppStickySettingsParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppStickySettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppStorageAccountInitParameters) DeepCopyInto(out *WindowsFunctionAppStorageAccountInitParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppStorageAccountInitParameters.
func (in *WindowsFunctionAppStorageAccountInitParameters) DeepCopy() *WindowsFunctionAppStorageAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppStorageAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppStorageAccountObservation) DeepCopyInto(out *WindowsFunctionAppStorageAccountObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppStorageAccountObservation.
func (in *WindowsFunctionAppStorageAccountObservation) DeepCopy() *WindowsFunctionAppStorageAccountObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppStorageAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsFunctionAppStorageAccountParameters) DeepCopyInto(out *WindowsFunctionAppStorageAccountParameters) {
	*out = *in
	out.AccessKeySecretRef = in.AccessKeySecretRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsFunctionAppStorageAccountParameters.
func (in *WindowsFunctionAppStorageAccountParameters) DeepCopy() *WindowsFunctionAppStorageAccountParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsFunctionAppStorageAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebApp) DeepCopyInto(out *WindowsWebApp) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebApp.
func (in *WindowsWebApp) DeepCopy() *WindowsWebApp {
	if in == nil {
		return nil
	}
	out := new(WindowsWebApp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WindowsWebApp) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsActiveDirectoryInitParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsActiveDirectoryInitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsActiveDirectoryInitParameters.
func (in *WindowsWebAppAuthSettingsActiveDirectoryInitParameters) DeepCopy() *WindowsWebAppAuthSettingsActiveDirectoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsActiveDirectoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsActiveDirectoryObservation) DeepCopyInto(out *WindowsWebAppAuthSettingsActiveDirectoryObservation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsActiveDirectoryObservation.
func (in *WindowsWebAppAuthSettingsActiveDirectoryObservation) DeepCopy() *WindowsWebAppAuthSettingsActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsActiveDirectoryParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsActiveDirectoryParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsActiveDirectoryParameters.
func (in *WindowsWebAppAuthSettingsActiveDirectoryParameters) DeepCopy() *WindowsWebAppAuthSettingsActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsFacebookInitParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsFacebookInitParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsFacebookInitParameters.
func (in *WindowsWebAppAuthSettingsFacebookInitParameters) DeepCopy() *WindowsWebAppAuthSettingsFacebookInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsFacebookInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsFacebookObservation) DeepCopyInto(out *WindowsWebAppAuthSettingsFacebookObservation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsFacebookObservation.
func (in *WindowsWebAppAuthSettingsFacebookObservation) DeepCopy() *WindowsWebAppAuthSettingsFacebookObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsFacebookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsFacebookParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsFacebookParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSecretRef != nil {
		in, out := &in.AppSecretSecretRef, &out.AppSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsFacebookParameters.
func (in *WindowsWebAppAuthSettingsFacebookParameters) DeepCopy() *WindowsWebAppAuthSettingsFacebookParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsFacebookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsGithubInitParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsGithubInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsGithubInitParameters.
func (in *WindowsWebAppAuthSettingsGithubInitParameters) DeepCopy() *WindowsWebAppAuthSettingsGithubInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsGithubInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsGithubObservation) DeepCopyInto(out *WindowsWebAppAuthSettingsGithubObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsGithubObservation.
func (in *WindowsWebAppAuthSettingsGithubObservation) DeepCopy() *WindowsWebAppAuthSettingsGithubObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsGithubObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsGithubParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsGithubParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsGithubParameters.
func (in *WindowsWebAppAuthSettingsGithubParameters) DeepCopy() *WindowsWebAppAuthSettingsGithubParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsGithubParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsGoogleInitParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsGoogleInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsGoogleInitParameters.
func (in *WindowsWebAppAuthSettingsGoogleInitParameters) DeepCopy() *WindowsWebAppAuthSettingsGoogleInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsGoogleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsGoogleObservation) DeepCopyInto(out *WindowsWebAppAuthSettingsGoogleObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsGoogleObservation.
func (in *WindowsWebAppAuthSettingsGoogleObservation) DeepCopy() *WindowsWebAppAuthSettingsGoogleObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsGoogleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsGoogleParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsGoogleParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsGoogleParameters.
func (in *WindowsWebAppAuthSettingsGoogleParameters) DeepCopy() *WindowsWebAppAuthSettingsGoogleParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsGoogleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsInitParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsInitParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]WindowsWebAppAuthSettingsActiveDirectoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]WindowsWebAppAuthSettingsFacebookInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]WindowsWebAppAuthSettingsGithubInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]WindowsWebAppAuthSettingsGoogleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]WindowsWebAppAuthSettingsMicrosoftInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]WindowsWebAppAuthSettingsTwitterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsInitParameters.
func (in *WindowsWebAppAuthSettingsInitParameters) DeepCopy() *WindowsWebAppAuthSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsMicrosoftInitParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsMicrosoftInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsMicrosoftInitParameters.
func (in *WindowsWebAppAuthSettingsMicrosoftInitParameters) DeepCopy() *WindowsWebAppAuthSettingsMicrosoftInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsMicrosoftInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsMicrosoftObservation) DeepCopyInto(out *WindowsWebAppAuthSettingsMicrosoftObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsMicrosoftObservation.
func (in *WindowsWebAppAuthSettingsMicrosoftObservation) DeepCopy() *WindowsWebAppAuthSettingsMicrosoftObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsMicrosoftObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsMicrosoftParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsMicrosoftParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsMicrosoftParameters.
func (in *WindowsWebAppAuthSettingsMicrosoftParameters) DeepCopy() *WindowsWebAppAuthSettingsMicrosoftParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsMicrosoftParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsObservation) DeepCopyInto(out *WindowsWebAppAuthSettingsObservation) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]WindowsWebAppAuthSettingsActiveDirectoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]WindowsWebAppAuthSettingsFacebookObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]WindowsWebAppAuthSettingsGithubObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]WindowsWebAppAuthSettingsGoogleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]WindowsWebAppAuthSettingsMicrosoftObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]WindowsWebAppAuthSettingsTwitterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsObservation.
func (in *WindowsWebAppAuthSettingsObservation) DeepCopy() *WindowsWebAppAuthSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]WindowsWebAppAuthSettingsActiveDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]WindowsWebAppAuthSettingsFacebookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]WindowsWebAppAuthSettingsGithubParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]WindowsWebAppAuthSettingsGoogleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]WindowsWebAppAuthSettingsMicrosoftParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]WindowsWebAppAuthSettingsTwitterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsParameters.
func (in *WindowsWebAppAuthSettingsParameters) DeepCopy() *WindowsWebAppAuthSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsTwitterInitParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsTwitterInitParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsTwitterInitParameters.
func (in *WindowsWebAppAuthSettingsTwitterInitParameters) DeepCopy() *WindowsWebAppAuthSettingsTwitterInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsTwitterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsTwitterObservation) DeepCopyInto(out *WindowsWebAppAuthSettingsTwitterObservation) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsTwitterObservation.
func (in *WindowsWebAppAuthSettingsTwitterObservation) DeepCopy() *WindowsWebAppAuthSettingsTwitterObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsTwitterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsTwitterParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsTwitterParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSecretRef != nil {
		in, out := &in.ConsumerSecretSecretRef, &out.ConsumerSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsTwitterParameters.
func (in *WindowsWebAppAuthSettingsTwitterParameters) DeepCopy() *WindowsWebAppAuthSettingsTwitterParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsTwitterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2ActiveDirectoryV2InitParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsV2ActiveDirectoryV2InitParameters) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2ActiveDirectoryV2InitParameters.
func (in *WindowsWebAppAuthSettingsV2ActiveDirectoryV2InitParameters) DeepCopy() *WindowsWebAppAuthSettingsV2ActiveDirectoryV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2ActiveDirectoryV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2ActiveDirectoryV2Observation) DeepCopyInto(out *WindowsWebAppAuthSettingsV2ActiveDirectoryV2Observation) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2ActiveDirectoryV2Observation.
func (in *WindowsWebAppAuthSettingsV2ActiveDirectoryV2Observation) DeepCopy() *WindowsWebAppAuthSettingsV2ActiveDirectoryV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2ActiveDirectoryV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2ActiveDirectoryV2Parameters) DeepCopyInto(out *WindowsWebAppAuthSettingsV2ActiveDirectoryV2Parameters) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2ActiveDirectoryV2Parameters.
func (in *WindowsWebAppAuthSettingsV2ActiveDirectoryV2Parameters) DeepCopy() *WindowsWebAppAuthSettingsV2ActiveDirectoryV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2ActiveDirectoryV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2AppleV2InitParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsV2AppleV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2AppleV2InitParameters.
func (in *WindowsWebAppAuthSettingsV2AppleV2InitParameters) DeepCopy() *WindowsWebAppAuthSettingsV2AppleV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2AppleV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2AppleV2Observation) DeepCopyInto(out *WindowsWebAppAuthSettingsV2AppleV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2AppleV2Observation.
func (in *WindowsWebAppAuthSettingsV2AppleV2Observation) DeepCopy() *WindowsWebAppAuthSettingsV2AppleV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2AppleV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2AppleV2Parameters) DeepCopyInto(out *WindowsWebAppAuthSettingsV2AppleV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2AppleV2Parameters.
func (in *WindowsWebAppAuthSettingsV2AppleV2Parameters) DeepCopy() *WindowsWebAppAuthSettingsV2AppleV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2AppleV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2AzureStaticWebAppV2InitParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsV2AzureStaticWebAppV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2AzureStaticWebAppV2InitParameters.
func (in *WindowsWebAppAuthSettingsV2AzureStaticWebAppV2InitParameters) DeepCopy() *WindowsWebAppAuthSettingsV2AzureStaticWebAppV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2AzureStaticWebAppV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2AzureStaticWebAppV2Observation) DeepCopyInto(out *WindowsWebAppAuthSettingsV2AzureStaticWebAppV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2AzureStaticWebAppV2Observation.
func (in *WindowsWebAppAuthSettingsV2AzureStaticWebAppV2Observation) DeepCopy() *WindowsWebAppAuthSettingsV2AzureStaticWebAppV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2AzureStaticWebAppV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2AzureStaticWebAppV2Parameters) DeepCopyInto(out *WindowsWebAppAuthSettingsV2AzureStaticWebAppV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2AzureStaticWebAppV2Parameters.
func (in *WindowsWebAppAuthSettingsV2AzureStaticWebAppV2Parameters) DeepCopy() *WindowsWebAppAuthSettingsV2AzureStaticWebAppV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2AzureStaticWebAppV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2CustomOidcV2InitParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsV2CustomOidcV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2CustomOidcV2InitParameters.
func (in *WindowsWebAppAuthSettingsV2CustomOidcV2InitParameters) DeepCopy() *WindowsWebAppAuthSettingsV2CustomOidcV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2CustomOidcV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2CustomOidcV2Observation) DeepCopyInto(out *WindowsWebAppAuthSettingsV2CustomOidcV2Observation) {
	*out = *in
	if in.AuthorisationEndpoint != nil {
		in, out := &in.AuthorisationEndpoint, &out.AuthorisationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.CertificationURI != nil {
		in, out := &in.CertificationURI, &out.CertificationURI
		*out = new(string)
		**out = **in
	}
	if in.ClientCredentialMethod != nil {
		in, out := &in.ClientCredentialMethod, &out.ClientCredentialMethod
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.IssuerEndpoint != nil {
		in, out := &in.IssuerEndpoint, &out.IssuerEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TokenEndpoint != nil {
		in, out := &in.TokenEndpoint, &out.TokenEndpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2CustomOidcV2Observation.
func (in *WindowsWebAppAuthSettingsV2CustomOidcV2Observation) DeepCopy() *WindowsWebAppAuthSettingsV2CustomOidcV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2CustomOidcV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2CustomOidcV2Parameters) DeepCopyInto(out *WindowsWebAppAuthSettingsV2CustomOidcV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2CustomOidcV2Parameters.
func (in *WindowsWebAppAuthSettingsV2CustomOidcV2Parameters) DeepCopy() *WindowsWebAppAuthSettingsV2CustomOidcV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2CustomOidcV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2FacebookV2InitParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsV2FacebookV2InitParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2FacebookV2InitParameters.
func (in *WindowsWebAppAuthSettingsV2FacebookV2InitParameters) DeepCopy() *WindowsWebAppAuthSettingsV2FacebookV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2FacebookV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2FacebookV2Observation) DeepCopyInto(out *WindowsWebAppAuthSettingsV2FacebookV2Observation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2FacebookV2Observation.
func (in *WindowsWebAppAuthSettingsV2FacebookV2Observation) DeepCopy() *WindowsWebAppAuthSettingsV2FacebookV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2FacebookV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2FacebookV2Parameters) DeepCopyInto(out *WindowsWebAppAuthSettingsV2FacebookV2Parameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2FacebookV2Parameters.
func (in *WindowsWebAppAuthSettingsV2FacebookV2Parameters) DeepCopy() *WindowsWebAppAuthSettingsV2FacebookV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2FacebookV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2GithubV2InitParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsV2GithubV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2GithubV2InitParameters.
func (in *WindowsWebAppAuthSettingsV2GithubV2InitParameters) DeepCopy() *WindowsWebAppAuthSettingsV2GithubV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2GithubV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2GithubV2Observation) DeepCopyInto(out *WindowsWebAppAuthSettingsV2GithubV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2GithubV2Observation.
func (in *WindowsWebAppAuthSettingsV2GithubV2Observation) DeepCopy() *WindowsWebAppAuthSettingsV2GithubV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2GithubV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2GithubV2Parameters) DeepCopyInto(out *WindowsWebAppAuthSettingsV2GithubV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2GithubV2Parameters.
func (in *WindowsWebAppAuthSettingsV2GithubV2Parameters) DeepCopy() *WindowsWebAppAuthSettingsV2GithubV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2GithubV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2GoogleV2InitParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsV2GoogleV2InitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2GoogleV2InitParameters.
func (in *WindowsWebAppAuthSettingsV2GoogleV2InitParameters) DeepCopy() *WindowsWebAppAuthSettingsV2GoogleV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2GoogleV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2GoogleV2Observation) DeepCopyInto(out *WindowsWebAppAuthSettingsV2GoogleV2Observation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2GoogleV2Observation.
func (in *WindowsWebAppAuthSettingsV2GoogleV2Observation) DeepCopy() *WindowsWebAppAuthSettingsV2GoogleV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2GoogleV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2GoogleV2Parameters) DeepCopyInto(out *WindowsWebAppAuthSettingsV2GoogleV2Parameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2GoogleV2Parameters.
func (in *WindowsWebAppAuthSettingsV2GoogleV2Parameters) DeepCopy() *WindowsWebAppAuthSettingsV2GoogleV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2GoogleV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2InitParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsV2InitParameters) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]WindowsWebAppAuthSettingsV2ActiveDirectoryV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]WindowsWebAppAuthSettingsV2AppleV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]WindowsWebAppAuthSettingsV2AzureStaticWebAppV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]WindowsWebAppAuthSettingsV2CustomOidcV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]WindowsWebAppAuthSettingsV2FacebookV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]WindowsWebAppAuthSettingsV2GithubV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]WindowsWebAppAuthSettingsV2GoogleV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]WindowsWebAppAuthSettingsV2LoginInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]WindowsWebAppAuthSettingsV2MicrosoftV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]WindowsWebAppAuthSettingsV2TwitterV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2InitParameters.
func (in *WindowsWebAppAuthSettingsV2InitParameters) DeepCopy() *WindowsWebAppAuthSettingsV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2LoginInitParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsV2LoginInitParameters) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2LoginInitParameters.
func (in *WindowsWebAppAuthSettingsV2LoginInitParameters) DeepCopy() *WindowsWebAppAuthSettingsV2LoginInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2LoginInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2LoginObservation) DeepCopyInto(out *WindowsWebAppAuthSettingsV2LoginObservation) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2LoginObservation.
func (in *WindowsWebAppAuthSettingsV2LoginObservation) DeepCopy() *WindowsWebAppAuthSettingsV2LoginObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2LoginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2LoginParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsV2LoginParameters) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2LoginParameters.
func (in *WindowsWebAppAuthSettingsV2LoginParameters) DeepCopy() *WindowsWebAppAuthSettingsV2LoginParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2LoginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2MicrosoftV2InitParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsV2MicrosoftV2InitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2MicrosoftV2InitParameters.
func (in *WindowsWebAppAuthSettingsV2MicrosoftV2InitParameters) DeepCopy() *WindowsWebAppAuthSettingsV2MicrosoftV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2MicrosoftV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2MicrosoftV2Observation) DeepCopyInto(out *WindowsWebAppAuthSettingsV2MicrosoftV2Observation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2MicrosoftV2Observation.
func (in *WindowsWebAppAuthSettingsV2MicrosoftV2Observation) DeepCopy() *WindowsWebAppAuthSettingsV2MicrosoftV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2MicrosoftV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2MicrosoftV2Parameters) DeepCopyInto(out *WindowsWebAppAuthSettingsV2MicrosoftV2Parameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2MicrosoftV2Parameters.
func (in *WindowsWebAppAuthSettingsV2MicrosoftV2Parameters) DeepCopy() *WindowsWebAppAuthSettingsV2MicrosoftV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2MicrosoftV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2Observation) DeepCopyInto(out *WindowsWebAppAuthSettingsV2Observation) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]WindowsWebAppAuthSettingsV2ActiveDirectoryV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]WindowsWebAppAuthSettingsV2AppleV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]WindowsWebAppAuthSettingsV2AzureStaticWebAppV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]WindowsWebAppAuthSettingsV2CustomOidcV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]WindowsWebAppAuthSettingsV2FacebookV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]WindowsWebAppAuthSettingsV2GithubV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]WindowsWebAppAuthSettingsV2GoogleV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]WindowsWebAppAuthSettingsV2LoginObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]WindowsWebAppAuthSettingsV2MicrosoftV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]WindowsWebAppAuthSettingsV2TwitterV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2Observation.
func (in *WindowsWebAppAuthSettingsV2Observation) DeepCopy() *WindowsWebAppAuthSettingsV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2Parameters) DeepCopyInto(out *WindowsWebAppAuthSettingsV2Parameters) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]WindowsWebAppAuthSettingsV2ActiveDirectoryV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]WindowsWebAppAuthSettingsV2AppleV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]WindowsWebAppAuthSettingsV2AzureStaticWebAppV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]WindowsWebAppAuthSettingsV2CustomOidcV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]WindowsWebAppAuthSettingsV2FacebookV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]WindowsWebAppAuthSettingsV2GithubV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]WindowsWebAppAuthSettingsV2GoogleV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]WindowsWebAppAuthSettingsV2LoginParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]WindowsWebAppAuthSettingsV2MicrosoftV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]WindowsWebAppAuthSettingsV2TwitterV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2Parameters.
func (in *WindowsWebAppAuthSettingsV2Parameters) DeepCopy() *WindowsWebAppAuthSettingsV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2TwitterV2InitParameters) DeepCopyInto(out *WindowsWebAppAuthSettingsV2TwitterV2InitParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2TwitterV2InitParameters.
func (in *WindowsWebAppAuthSettingsV2TwitterV2InitParameters) DeepCopy() *WindowsWebAppAuthSettingsV2TwitterV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2TwitterV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2TwitterV2Observation) DeepCopyInto(out *WindowsWebAppAuthSettingsV2TwitterV2Observation) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2TwitterV2Observation.
func (in *WindowsWebAppAuthSettingsV2TwitterV2Observation) DeepCopy() *WindowsWebAppAuthSettingsV2TwitterV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2TwitterV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppAuthSettingsV2TwitterV2Parameters) DeepCopyInto(out *WindowsWebAppAuthSettingsV2TwitterV2Parameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppAuthSettingsV2TwitterV2Parameters.
func (in *WindowsWebAppAuthSettingsV2TwitterV2Parameters) DeepCopy() *WindowsWebAppAuthSettingsV2TwitterV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppAuthSettingsV2TwitterV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppBackupInitParameters) DeepCopyInto(out *WindowsWebAppBackupInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]WindowsWebAppBackupScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppBackupInitParameters.
func (in *WindowsWebAppBackupInitParameters) DeepCopy() *WindowsWebAppBackupInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppBackupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppBackupObservation) DeepCopyInto(out *WindowsWebAppBackupObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]WindowsWebAppBackupScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppBackupObservation.
func (in *WindowsWebAppBackupObservation) DeepCopy() *WindowsWebAppBackupObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppBackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppBackupParameters) DeepCopyInto(out *WindowsWebAppBackupParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]WindowsWebAppBackupScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.StorageAccountURLSecretRef = in.StorageAccountURLSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppBackupParameters.
func (in *WindowsWebAppBackupParameters) DeepCopy() *WindowsWebAppBackupParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppBackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppBackupScheduleInitParameters) DeepCopyInto(out *WindowsWebAppBackupScheduleInitParameters) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppBackupScheduleInitParameters.
func (in *WindowsWebAppBackupScheduleInitParameters) DeepCopy() *WindowsWebAppBackupScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppBackupScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppBackupScheduleObservation) DeepCopyInto(out *WindowsWebAppBackupScheduleObservation) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.LastExecutionTime != nil {
		in, out := &in.LastExecutionTime, &out.LastExecutionTime
		*out = new(string)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppBackupScheduleObservation.
func (in *WindowsWebAppBackupScheduleObservation) DeepCopy() *WindowsWebAppBackupScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppBackupScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppBackupScheduleParameters) DeepCopyInto(out *WindowsWebAppBackupScheduleParameters) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppBackupScheduleParameters.
func (in *WindowsWebAppBackupScheduleParameters) DeepCopy() *WindowsWebAppBackupScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppBackupScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppConnectionStringInitParameters) DeepCopyInto(out *WindowsWebAppConnectionStringInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppConnectionStringInitParameters.
func (in *WindowsWebAppConnectionStringInitParameters) DeepCopy() *WindowsWebAppConnectionStringInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppConnectionStringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppConnectionStringObservation) DeepCopyInto(out *WindowsWebAppConnectionStringObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppConnectionStringObservation.
func (in *WindowsWebAppConnectionStringObservation) DeepCopy() *WindowsWebAppConnectionStringObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppConnectionStringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppConnectionStringParameters) DeepCopyInto(out *WindowsWebAppConnectionStringParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	out.ValueSecretRef = in.ValueSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppConnectionStringParameters.
func (in *WindowsWebAppConnectionStringParameters) DeepCopy() *WindowsWebAppConnectionStringParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppConnectionStringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppIdentityInitParameters) DeepCopyInto(out *WindowsWebAppIdentityInitParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppIdentityInitParameters.
func (in *WindowsWebAppIdentityInitParameters) DeepCopy() *WindowsWebAppIdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppIdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppIdentityObservation) DeepCopyInto(out *WindowsWebAppIdentityObservation) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppIdentityObservation.
func (in *WindowsWebAppIdentityObservation) DeepCopy() *WindowsWebAppIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppIdentityParameters) DeepCopyInto(out *WindowsWebAppIdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppIdentityParameters.
func (in *WindowsWebAppIdentityParameters) DeepCopy() *WindowsWebAppIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppInitParameters) DeepCopyInto(out *WindowsWebAppInitParameters) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]WindowsWebAppAuthSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]WindowsWebAppAuthSettingsV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]WindowsWebAppBackupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientAffinityEnabled != nil {
		in, out := &in.ClientAffinityEnabled, &out.ClientAffinityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]WindowsWebAppConnectionStringInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]WindowsWebAppIdentityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Logs != nil {
		in, out := &in.Logs, &out.Logs
		*out = make([]WindowsWebAppLogsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]WindowsWebAppSiteConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StickySettings != nil {
		in, out := &in.StickySettings, &out.StickySettings
		*out = make([]WindowsWebAppStickySettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]WindowsWebAppStorageAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZipDeployFile != nil {
		in, out := &in.ZipDeployFile, &out.ZipDeployFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppInitParameters.
func (in *WindowsWebAppInitParameters) DeepCopy() *WindowsWebAppInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppList) DeepCopyInto(out *WindowsWebAppList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WindowsWebApp, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppList.
func (in *WindowsWebAppList) DeepCopy() *WindowsWebAppList {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WindowsWebAppList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppLogsApplicationLogsInitParameters) DeepCopyInto(out *WindowsWebAppLogsApplicationLogsInitParameters) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]LogsApplicationLogsAzureBlobStorageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemLevel != nil {
		in, out := &in.FileSystemLevel, &out.FileSystemLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppLogsApplicationLogsInitParameters.
func (in *WindowsWebAppLogsApplicationLogsInitParameters) DeepCopy() *WindowsWebAppLogsApplicationLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppLogsApplicationLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppLogsApplicationLogsObservation) DeepCopyInto(out *WindowsWebAppLogsApplicationLogsObservation) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]LogsApplicationLogsAzureBlobStorageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemLevel != nil {
		in, out := &in.FileSystemLevel, &out.FileSystemLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppLogsApplicationLogsObservation.
func (in *WindowsWebAppLogsApplicationLogsObservation) DeepCopy() *WindowsWebAppLogsApplicationLogsObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppLogsApplicationLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppLogsApplicationLogsParameters) DeepCopyInto(out *WindowsWebAppLogsApplicationLogsParameters) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]LogsApplicationLogsAzureBlobStorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemLevel != nil {
		in, out := &in.FileSystemLevel, &out.FileSystemLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppLogsApplicationLogsParameters.
func (in *WindowsWebAppLogsApplicationLogsParameters) DeepCopy() *WindowsWebAppLogsApplicationLogsParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppLogsApplicationLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppLogsHTTPLogsAzureBlobStorageInitParameters) DeepCopyInto(out *WindowsWebAppLogsHTTPLogsAzureBlobStorageInitParameters) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppLogsHTTPLogsAzureBlobStorageInitParameters.
func (in *WindowsWebAppLogsHTTPLogsAzureBlobStorageInitParameters) DeepCopy() *WindowsWebAppLogsHTTPLogsAzureBlobStorageInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppLogsHTTPLogsAzureBlobStorageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppLogsHTTPLogsAzureBlobStorageObservation) DeepCopyInto(out *WindowsWebAppLogsHTTPLogsAzureBlobStorageObservation) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppLogsHTTPLogsAzureBlobStorageObservation.
func (in *WindowsWebAppLogsHTTPLogsAzureBlobStorageObservation) DeepCopy() *WindowsWebAppLogsHTTPLogsAzureBlobStorageObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppLogsHTTPLogsAzureBlobStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppLogsHTTPLogsAzureBlobStorageParameters) DeepCopyInto(out *WindowsWebAppLogsHTTPLogsAzureBlobStorageParameters) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	out.SASURLSecretRef = in.SASURLSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppLogsHTTPLogsAzureBlobStorageParameters.
func (in *WindowsWebAppLogsHTTPLogsAzureBlobStorageParameters) DeepCopy() *WindowsWebAppLogsHTTPLogsAzureBlobStorageParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppLogsHTTPLogsAzureBlobStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppLogsHTTPLogsInitParameters) DeepCopyInto(out *WindowsWebAppLogsHTTPLogsInitParameters) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]WindowsWebAppLogsHTTPLogsAzureBlobStorageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystem != nil {
		in, out := &in.FileSystem, &out.FileSystem
		*out = make([]LogsHTTPLogsFileSystemInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppLogsHTTPLogsInitParameters.
func (in *WindowsWebAppLogsHTTPLogsInitParameters) DeepCopy() *WindowsWebAppLogsHTTPLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppLogsHTTPLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppLogsHTTPLogsObservation) DeepCopyInto(out *WindowsWebAppLogsHTTPLogsObservation) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]WindowsWebAppLogsHTTPLogsAzureBlobStorageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystem != nil {
		in, out := &in.FileSystem, &out.FileSystem
		*out = make([]LogsHTTPLogsFileSystemObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppLogsHTTPLogsObservation.
func (in *WindowsWebAppLogsHTTPLogsObservation) DeepCopy() *WindowsWebAppLogsHTTPLogsObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppLogsHTTPLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppLogsHTTPLogsParameters) DeepCopyInto(out *WindowsWebAppLogsHTTPLogsParameters) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]WindowsWebAppLogsHTTPLogsAzureBlobStorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystem != nil {
		in, out := &in.FileSystem, &out.FileSystem
		*out = make([]LogsHTTPLogsFileSystemParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppLogsHTTPLogsParameters.
func (in *WindowsWebAppLogsHTTPLogsParameters) DeepCopy() *WindowsWebAppLogsHTTPLogsParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppLogsHTTPLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppLogsInitParameters) DeepCopyInto(out *WindowsWebAppLogsInitParameters) {
	*out = *in
	if in.ApplicationLogs != nil {
		in, out := &in.ApplicationLogs, &out.ApplicationLogs
		*out = make([]WindowsWebAppLogsApplicationLogsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DetailedErrorMessages != nil {
		in, out := &in.DetailedErrorMessages, &out.DetailedErrorMessages
		*out = new(bool)
		**out = **in
	}
	if in.FailedRequestTracing != nil {
		in, out := &in.FailedRequestTracing, &out.FailedRequestTracing
		*out = new(bool)
		**out = **in
	}
	if in.HTTPLogs != nil {
		in, out := &in.HTTPLogs, &out.HTTPLogs
		*out = make([]WindowsWebAppLogsHTTPLogsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppLogsInitParameters.
func (in *WindowsWebAppLogsInitParameters) DeepCopy() *WindowsWebAppLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppLogsObservation) DeepCopyInto(out *WindowsWebAppLogsObservation) {
	*out = *in
	if in.ApplicationLogs != nil {
		in, out := &in.ApplicationLogs, &out.ApplicationLogs
		*out = make([]WindowsWebAppLogsApplicationLogsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DetailedErrorMessages != nil {
		in, out := &in.DetailedErrorMessages, &out.DetailedErrorMessages
		*out = new(bool)
		**out = **in
	}
	if in.FailedRequestTracing != nil {
		in, out := &in.FailedRequestTracing, &out.FailedRequestTracing
		*out = new(bool)
		**out = **in
	}
	if in.HTTPLogs != nil {
		in, out := &in.HTTPLogs, &out.HTTPLogs
		*out = make([]WindowsWebAppLogsHTTPLogsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppLogsObservation.
func (in *WindowsWebAppLogsObservation) DeepCopy() *WindowsWebAppLogsObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppLogsParameters) DeepCopyInto(out *WindowsWebAppLogsParameters) {
	*out = *in
	if in.ApplicationLogs != nil {
		in, out := &in.ApplicationLogs, &out.ApplicationLogs
		*out = make([]WindowsWebAppLogsApplicationLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DetailedErrorMessages != nil {
		in, out := &in.DetailedErrorMessages, &out.DetailedErrorMessages
		*out = new(bool)
		**out = **in
	}
	if in.FailedRequestTracing != nil {
		in, out := &in.FailedRequestTracing, &out.FailedRequestTracing
		*out = new(bool)
		**out = **in
	}
	if in.HTTPLogs != nil {
		in, out := &in.HTTPLogs, &out.HTTPLogs
		*out = make([]WindowsWebAppLogsHTTPLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppLogsParameters.
func (in *WindowsWebAppLogsParameters) DeepCopy() *WindowsWebAppLogsParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppObservation) DeepCopyInto(out *WindowsWebAppObservation) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]WindowsWebAppAuthSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]WindowsWebAppAuthSettingsV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]WindowsWebAppBackupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientAffinityEnabled != nil {
		in, out := &in.ClientAffinityEnabled, &out.ClientAffinityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]WindowsWebAppConnectionStringObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultHostName != nil {
		in, out := &in.DefaultHostName, &out.DefaultHostName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.HostingEnvironmentID != nil {
		in, out := &in.HostingEnvironmentID, &out.HostingEnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]WindowsWebAppIdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Logs != nil {
		in, out := &in.Logs, &out.Logs
		*out = make([]WindowsWebAppLogsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutboundIPAddressList != nil {
		in, out := &in.OutboundIPAddressList, &out.OutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OutboundIPAddresses != nil {
		in, out := &in.OutboundIPAddresses, &out.OutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.PossibleOutboundIPAddressList != nil {
		in, out := &in.PossibleOutboundIPAddressList, &out.PossibleOutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PossibleOutboundIPAddresses != nil {
		in, out := &in.PossibleOutboundIPAddresses, &out.PossibleOutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]WindowsWebAppSiteConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StickySettings != nil {
		in, out := &in.StickySettings, &out.StickySettings
		*out = make([]WindowsWebAppStickySettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]WindowsWebAppStorageAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.ZipDeployFile != nil {
		in, out := &in.ZipDeployFile, &out.ZipDeployFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppObservation.
func (in *WindowsWebAppObservation) DeepCopy() *WindowsWebAppObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppParameters) DeepCopyInto(out *WindowsWebAppParameters) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]WindowsWebAppAuthSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]WindowsWebAppAuthSettingsV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]WindowsWebAppBackupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientAffinityEnabled != nil {
		in, out := &in.ClientAffinityEnabled, &out.ClientAffinityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]WindowsWebAppConnectionStringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]WindowsWebAppIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Logs != nil {
		in, out := &in.Logs, &out.Logs
		*out = make([]WindowsWebAppLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanIDRef != nil {
		in, out := &in.ServicePlanIDRef, &out.ServicePlanIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServicePlanIDSelector != nil {
		in, out := &in.ServicePlanIDSelector, &out.ServicePlanIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]WindowsWebAppSiteConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StickySettings != nil {
		in, out := &in.StickySettings, &out.StickySettings
		*out = make([]WindowsWebAppStickySettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]WindowsWebAppStorageAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ZipDeployFile != nil {
		in, out := &in.ZipDeployFile, &out.ZipDeployFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppParameters.
func (in *WindowsWebAppParameters) DeepCopy() *WindowsWebAppParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigApplicationStackInitParameters) DeepCopyInto(out *WindowsWebAppSiteConfigApplicationStackInitParameters) {
	*out = *in
	if in.CurrentStack != nil {
		in, out := &in.CurrentStack, &out.CurrentStack
		*out = new(string)
		**out = **in
	}
	if in.DockerContainerName != nil {
		in, out := &in.DockerContainerName, &out.DockerContainerName
		*out = new(string)
		**out = **in
	}
	if in.DockerContainerRegistry != nil {
		in, out := &in.DockerContainerRegistry, &out.DockerContainerRegistry
		*out = new(string)
		**out = **in
	}
	if in.DockerContainerTag != nil {
		in, out := &in.DockerContainerTag, &out.DockerContainerTag
		*out = new(string)
		**out = **in
	}
	if in.DotnetCoreVersion != nil {
		in, out := &in.DotnetCoreVersion, &out.DotnetCoreVersion
		*out = new(string)
		**out = **in
	}
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaContainer != nil {
		in, out := &in.JavaContainer, &out.JavaContainer
		*out = new(string)
		**out = **in
	}
	if in.JavaContainerVersion != nil {
		in, out := &in.JavaContainerVersion, &out.JavaContainerVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaEmbeddedServerEnabled != nil {
		in, out := &in.JavaEmbeddedServerEnabled, &out.JavaEmbeddedServerEnabled
		*out = new(bool)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PHPVersion != nil {
		in, out := &in.PHPVersion, &out.PHPVersion
		*out = new(string)
		**out = **in
	}
	if in.Python != nil {
		in, out := &in.Python, &out.Python
		*out = new(bool)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.TomcatVersion != nil {
		in, out := &in.TomcatVersion, &out.TomcatVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigApplicationStackInitParameters.
func (in *WindowsWebAppSiteConfigApplicationStackInitParameters) DeepCopy() *WindowsWebAppSiteConfigApplicationStackInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigApplicationStackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigApplicationStackObservation) DeepCopyInto(out *WindowsWebAppSiteConfigApplicationStackObservation) {
	*out = *in
	if in.CurrentStack != nil {
		in, out := &in.CurrentStack, &out.CurrentStack
		*out = new(string)
		**out = **in
	}
	if in.DockerContainerName != nil {
		in, out := &in.DockerContainerName, &out.DockerContainerName
		*out = new(string)
		**out = **in
	}
	if in.DockerContainerRegistry != nil {
		in, out := &in.DockerContainerRegistry, &out.DockerContainerRegistry
		*out = new(string)
		**out = **in
	}
	if in.DockerContainerTag != nil {
		in, out := &in.DockerContainerTag, &out.DockerContainerTag
		*out = new(string)
		**out = **in
	}
	if in.DotnetCoreVersion != nil {
		in, out := &in.DotnetCoreVersion, &out.DotnetCoreVersion
		*out = new(string)
		**out = **in
	}
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaContainer != nil {
		in, out := &in.JavaContainer, &out.JavaContainer
		*out = new(string)
		**out = **in
	}
	if in.JavaContainerVersion != nil {
		in, out := &in.JavaContainerVersion, &out.JavaContainerVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaEmbeddedServerEnabled != nil {
		in, out := &in.JavaEmbeddedServerEnabled, &out.JavaEmbeddedServerEnabled
		*out = new(bool)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PHPVersion != nil {
		in, out := &in.PHPVersion, &out.PHPVersion
		*out = new(string)
		**out = **in
	}
	if in.Python != nil {
		in, out := &in.Python, &out.Python
		*out = new(bool)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.TomcatVersion != nil {
		in, out := &in.TomcatVersion, &out.TomcatVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigApplicationStackObservation.
func (in *WindowsWebAppSiteConfigApplicationStackObservation) DeepCopy() *WindowsWebAppSiteConfigApplicationStackObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigApplicationStackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigApplicationStackParameters) DeepCopyInto(out *WindowsWebAppSiteConfigApplicationStackParameters) {
	*out = *in
	if in.CurrentStack != nil {
		in, out := &in.CurrentStack, &out.CurrentStack
		*out = new(string)
		**out = **in
	}
	if in.DockerContainerName != nil {
		in, out := &in.DockerContainerName, &out.DockerContainerName
		*out = new(string)
		**out = **in
	}
	if in.DockerContainerRegistry != nil {
		in, out := &in.DockerContainerRegistry, &out.DockerContainerRegistry
		*out = new(string)
		**out = **in
	}
	if in.DockerContainerTag != nil {
		in, out := &in.DockerContainerTag, &out.DockerContainerTag
		*out = new(string)
		**out = **in
	}
	if in.DotnetCoreVersion != nil {
		in, out := &in.DotnetCoreVersion, &out.DotnetCoreVersion
		*out = new(string)
		**out = **in
	}
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaContainer != nil {
		in, out := &in.JavaContainer, &out.JavaContainer
		*out = new(string)
		**out = **in
	}
	if in.JavaContainerVersion != nil {
		in, out := &in.JavaContainerVersion, &out.JavaContainerVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaEmbeddedServerEnabled != nil {
		in, out := &in.JavaEmbeddedServerEnabled, &out.JavaEmbeddedServerEnabled
		*out = new(bool)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PHPVersion != nil {
		in, out := &in.PHPVersion, &out.PHPVersion
		*out = new(string)
		**out = **in
	}
	if in.Python != nil {
		in, out := &in.Python, &out.Python
		*out = new(bool)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.TomcatVersion != nil {
		in, out := &in.TomcatVersion, &out.TomcatVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigApplicationStackParameters.
func (in *WindowsWebAppSiteConfigApplicationStackParameters) DeepCopy() *WindowsWebAppSiteConfigApplicationStackParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigApplicationStackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigAutoHealSettingInitParameters) DeepCopyInto(out *WindowsWebAppSiteConfigAutoHealSettingInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]SiteConfigAutoHealSettingActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]SiteConfigAutoHealSettingTriggerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigAutoHealSettingInitParameters.
func (in *WindowsWebAppSiteConfigAutoHealSettingInitParameters) DeepCopy() *WindowsWebAppSiteConfigAutoHealSettingInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigAutoHealSettingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigAutoHealSettingObservation) DeepCopyInto(out *WindowsWebAppSiteConfigAutoHealSettingObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]SiteConfigAutoHealSettingActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]SiteConfigAutoHealSettingTriggerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigAutoHealSettingObservation.
func (in *WindowsWebAppSiteConfigAutoHealSettingObservation) DeepCopy() *WindowsWebAppSiteConfigAutoHealSettingObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigAutoHealSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigAutoHealSettingParameters) DeepCopyInto(out *WindowsWebAppSiteConfigAutoHealSettingParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]SiteConfigAutoHealSettingActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]SiteConfigAutoHealSettingTriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigAutoHealSettingParameters.
func (in *WindowsWebAppSiteConfigAutoHealSettingParameters) DeepCopy() *WindowsWebAppSiteConfigAutoHealSettingParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigAutoHealSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigCorsInitParameters) DeepCopyInto(out *WindowsWebAppSiteConfigCorsInitParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigCorsInitParameters.
func (in *WindowsWebAppSiteConfigCorsInitParameters) DeepCopy() *WindowsWebAppSiteConfigCorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigCorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigCorsObservation) DeepCopyInto(out *WindowsWebAppSiteConfigCorsObservation) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigCorsObservation.
func (in *WindowsWebAppSiteConfigCorsObservation) DeepCopy() *WindowsWebAppSiteConfigCorsObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigCorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigCorsParameters) DeepCopyInto(out *WindowsWebAppSiteConfigCorsParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigCorsParameters.
func (in *WindowsWebAppSiteConfigCorsParameters) DeepCopy() *WindowsWebAppSiteConfigCorsParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigCorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigIPRestrictionHeadersInitParameters) DeepCopyInto(out *WindowsWebAppSiteConfigIPRestrictionHeadersInitParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigIPRestrictionHeadersInitParameters.
func (in *WindowsWebAppSiteConfigIPRestrictionHeadersInitParameters) DeepCopy() *WindowsWebAppSiteConfigIPRestrictionHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigIPRestrictionHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigIPRestrictionHeadersObservation) DeepCopyInto(out *WindowsWebAppSiteConfigIPRestrictionHeadersObservation) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigIPRestrictionHeadersObservation.
func (in *WindowsWebAppSiteConfigIPRestrictionHeadersObservation) DeepCopy() *WindowsWebAppSiteConfigIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigIPRestrictionHeadersParameters) DeepCopyInto(out *WindowsWebAppSiteConfigIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigIPRestrictionHeadersParameters.
func (in *WindowsWebAppSiteConfigIPRestrictionHeadersParameters) DeepCopy() *WindowsWebAppSiteConfigIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigIPRestrictionInitParameters) DeepCopyInto(out *WindowsWebAppSiteConfigIPRestrictionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsWebAppSiteConfigIPRestrictionHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigIPRestrictionInitParameters.
func (in *WindowsWebAppSiteConfigIPRestrictionInitParameters) DeepCopy() *WindowsWebAppSiteConfigIPRestrictionInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigIPRestrictionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigIPRestrictionObservation) DeepCopyInto(out *WindowsWebAppSiteConfigIPRestrictionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsWebAppSiteConfigIPRestrictionHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigIPRestrictionObservation.
func (in *WindowsWebAppSiteConfigIPRestrictionObservation) DeepCopy() *WindowsWebAppSiteConfigIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigIPRestrictionParameters) DeepCopyInto(out *WindowsWebAppSiteConfigIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsWebAppSiteConfigIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigIPRestrictionParameters.
func (in *WindowsWebAppSiteConfigIPRestrictionParameters) DeepCopy() *WindowsWebAppSiteConfigIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigInitParameters) DeepCopyInto(out *WindowsWebAppSiteConfigInitParameters) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]WindowsWebAppSiteConfigApplicationStackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealEnabled != nil {
		in, out := &in.AutoHealEnabled, &out.AutoHealEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealSetting != nil {
		in, out := &in.AutoHealSetting, &out.AutoHealSetting
		*out = make([]WindowsWebAppSiteConfigAutoHealSettingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainerRegistryManagedIdentityClientID != nil {
		in, out := &in.ContainerRegistryManagedIdentityClientID, &out.ContainerRegistryManagedIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryUseManagedIdentity != nil {
		in, out := &in.ContainerRegistryUseManagedIdentity, &out.ContainerRegistryUseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]WindowsWebAppSiteConfigCorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]WindowsWebAppSiteConfigIPRestrictionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.LocalMySQLEnabled != nil {
		in, out := &in.LocalMySQLEnabled, &out.LocalMySQLEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]WindowsWebAppSiteConfigScmIPRestrictionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VirtualApplication != nil {
		in, out := &in.VirtualApplication, &out.VirtualApplication
		*out = make([]VirtualApplicationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigInitParameters.
func (in *WindowsWebAppSiteConfigInitParameters) DeepCopy() *WindowsWebAppSiteConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigObservation) DeepCopyInto(out *WindowsWebAppSiteConfigObservation) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]WindowsWebAppSiteConfigApplicationStackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealEnabled != nil {
		in, out := &in.AutoHealEnabled, &out.AutoHealEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealSetting != nil {
		in, out := &in.AutoHealSetting, &out.AutoHealSetting
		*out = make([]WindowsWebAppSiteConfigAutoHealSettingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainerRegistryManagedIdentityClientID != nil {
		in, out := &in.ContainerRegistryManagedIdentityClientID, &out.ContainerRegistryManagedIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryUseManagedIdentity != nil {
		in, out := &in.ContainerRegistryUseManagedIdentity, &out.ContainerRegistryUseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]WindowsWebAppSiteConfigCorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DetailedErrorLoggingEnabled != nil {
		in, out := &in.DetailedErrorLoggingEnabled, &out.DetailedErrorLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]WindowsWebAppSiteConfigIPRestrictionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LinuxFxVersion != nil {
		in, out := &in.LinuxFxVersion, &out.LinuxFxVersion
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.LocalMySQLEnabled != nil {
		in, out := &in.LocalMySQLEnabled, &out.LocalMySQLEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]WindowsWebAppSiteConfigScmIPRestrictionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmType != nil {
		in, out := &in.ScmType, &out.ScmType
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VirtualApplication != nil {
		in, out := &in.VirtualApplication, &out.VirtualApplication
		*out = make([]VirtualApplicationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WindowsFxVersion != nil {
		in, out := &in.WindowsFxVersion, &out.WindowsFxVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigObservation.
func (in *WindowsWebAppSiteConfigObservation) DeepCopy() *WindowsWebAppSiteConfigObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigParameters) DeepCopyInto(out *WindowsWebAppSiteConfigParameters) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]WindowsWebAppSiteConfigApplicationStackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealEnabled != nil {
		in, out := &in.AutoHealEnabled, &out.AutoHealEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealSetting != nil {
		in, out := &in.AutoHealSetting, &out.AutoHealSetting
		*out = make([]WindowsWebAppSiteConfigAutoHealSettingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainerRegistryManagedIdentityClientID != nil {
		in, out := &in.ContainerRegistryManagedIdentityClientID, &out.ContainerRegistryManagedIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryUseManagedIdentity != nil {
		in, out := &in.ContainerRegistryUseManagedIdentity, &out.ContainerRegistryUseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]WindowsWebAppSiteConfigCorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]WindowsWebAppSiteConfigIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.LocalMySQLEnabled != nil {
		in, out := &in.LocalMySQLEnabled, &out.LocalMySQLEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]WindowsWebAppSiteConfigScmIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VirtualApplication != nil {
		in, out := &in.VirtualApplication, &out.VirtualApplication
		*out = make([]VirtualApplicationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigParameters.
func (in *WindowsWebAppSiteConfigParameters) DeepCopy() *WindowsWebAppSiteConfigParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigScmIPRestrictionHeadersInitParameters) DeepCopyInto(out *WindowsWebAppSiteConfigScmIPRestrictionHeadersInitParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigScmIPRestrictionHeadersInitParameters.
func (in *WindowsWebAppSiteConfigScmIPRestrictionHeadersInitParameters) DeepCopy() *WindowsWebAppSiteConfigScmIPRestrictionHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigScmIPRestrictionHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigScmIPRestrictionHeadersObservation) DeepCopyInto(out *WindowsWebAppSiteConfigScmIPRestrictionHeadersObservation) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigScmIPRestrictionHeadersObservation.
func (in *WindowsWebAppSiteConfigScmIPRestrictionHeadersObservation) DeepCopy() *WindowsWebAppSiteConfigScmIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigScmIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigScmIPRestrictionHeadersParameters) DeepCopyInto(out *WindowsWebAppSiteConfigScmIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigScmIPRestrictionHeadersParameters.
func (in *WindowsWebAppSiteConfigScmIPRestrictionHeadersParameters) DeepCopy() *WindowsWebAppSiteConfigScmIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigScmIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigScmIPRestrictionInitParameters) DeepCopyInto(out *WindowsWebAppSiteConfigScmIPRestrictionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsWebAppSiteConfigScmIPRestrictionHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigScmIPRestrictionInitParameters.
func (in *WindowsWebAppSiteConfigScmIPRestrictionInitParameters) DeepCopy() *WindowsWebAppSiteConfigScmIPRestrictionInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigScmIPRestrictionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigScmIPRestrictionObservation) DeepCopyInto(out *WindowsWebAppSiteConfigScmIPRestrictionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsWebAppSiteConfigScmIPRestrictionHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigScmIPRestrictionObservation.
func (in *WindowsWebAppSiteConfigScmIPRestrictionObservation) DeepCopy() *WindowsWebAppSiteConfigScmIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigScmIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteConfigScmIPRestrictionParameters) DeepCopyInto(out *WindowsWebAppSiteConfigScmIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsWebAppSiteConfigScmIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteConfigScmIPRestrictionParameters.
func (in *WindowsWebAppSiteConfigScmIPRestrictionParameters) DeepCopy() *WindowsWebAppSiteConfigScmIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteConfigScmIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteCredentialInitParameters) DeepCopyInto(out *WindowsWebAppSiteCredentialInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteCredentialInitParameters.
func (in *WindowsWebAppSiteCredentialInitParameters) DeepCopy() *WindowsWebAppSiteCredentialInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteCredentialInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteCredentialObservation) DeepCopyInto(out *WindowsWebAppSiteCredentialObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteCredentialObservation.
func (in *WindowsWebAppSiteCredentialObservation) DeepCopy() *WindowsWebAppSiteCredentialObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteCredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSiteCredentialParameters) DeepCopyInto(out *WindowsWebAppSiteCredentialParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSiteCredentialParameters.
func (in *WindowsWebAppSiteCredentialParameters) DeepCopy() *WindowsWebAppSiteCredentialParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSiteCredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlot) DeepCopyInto(out *WindowsWebAppSlot) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlot.
func (in *WindowsWebAppSlot) DeepCopy() *WindowsWebAppSlot {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WindowsWebAppSlot) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsActiveDirectoryInitParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsActiveDirectoryInitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsActiveDirectoryInitParameters.
func (in *WindowsWebAppSlotAuthSettingsActiveDirectoryInitParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsActiveDirectoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsActiveDirectoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsActiveDirectoryObservation) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsActiveDirectoryObservation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsActiveDirectoryObservation.
func (in *WindowsWebAppSlotAuthSettingsActiveDirectoryObservation) DeepCopy() *WindowsWebAppSlotAuthSettingsActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsActiveDirectoryParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsActiveDirectoryParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsActiveDirectoryParameters.
func (in *WindowsWebAppSlotAuthSettingsActiveDirectoryParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsFacebookInitParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsFacebookInitParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsFacebookInitParameters.
func (in *WindowsWebAppSlotAuthSettingsFacebookInitParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsFacebookInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsFacebookInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsFacebookObservation) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsFacebookObservation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsFacebookObservation.
func (in *WindowsWebAppSlotAuthSettingsFacebookObservation) DeepCopy() *WindowsWebAppSlotAuthSettingsFacebookObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsFacebookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsFacebookParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsFacebookParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSecretRef != nil {
		in, out := &in.AppSecretSecretRef, &out.AppSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsFacebookParameters.
func (in *WindowsWebAppSlotAuthSettingsFacebookParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsFacebookParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsFacebookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsGithubInitParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsGithubInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsGithubInitParameters.
func (in *WindowsWebAppSlotAuthSettingsGithubInitParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsGithubInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsGithubInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsGithubObservation) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsGithubObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsGithubObservation.
func (in *WindowsWebAppSlotAuthSettingsGithubObservation) DeepCopy() *WindowsWebAppSlotAuthSettingsGithubObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsGithubObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsGithubParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsGithubParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsGithubParameters.
func (in *WindowsWebAppSlotAuthSettingsGithubParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsGithubParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsGithubParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsGoogleInitParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsGoogleInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsGoogleInitParameters.
func (in *WindowsWebAppSlotAuthSettingsGoogleInitParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsGoogleInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsGoogleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsGoogleObservation) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsGoogleObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsGoogleObservation.
func (in *WindowsWebAppSlotAuthSettingsGoogleObservation) DeepCopy() *WindowsWebAppSlotAuthSettingsGoogleObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsGoogleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsGoogleParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsGoogleParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsGoogleParameters.
func (in *WindowsWebAppSlotAuthSettingsGoogleParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsGoogleParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsGoogleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsInitParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsInitParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]WindowsWebAppSlotAuthSettingsActiveDirectoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]WindowsWebAppSlotAuthSettingsFacebookInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]WindowsWebAppSlotAuthSettingsGithubInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]WindowsWebAppSlotAuthSettingsGoogleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]WindowsWebAppSlotAuthSettingsMicrosoftInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]WindowsWebAppSlotAuthSettingsTwitterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsInitParameters.
func (in *WindowsWebAppSlotAuthSettingsInitParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsMicrosoftInitParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsMicrosoftInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsMicrosoftInitParameters.
func (in *WindowsWebAppSlotAuthSettingsMicrosoftInitParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsMicrosoftInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsMicrosoftInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsMicrosoftObservation) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsMicrosoftObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsMicrosoftObservation.
func (in *WindowsWebAppSlotAuthSettingsMicrosoftObservation) DeepCopy() *WindowsWebAppSlotAuthSettingsMicrosoftObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsMicrosoftObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsMicrosoftParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsMicrosoftParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsMicrosoftParameters.
func (in *WindowsWebAppSlotAuthSettingsMicrosoftParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsMicrosoftParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsMicrosoftParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsObservation) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsObservation) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]WindowsWebAppSlotAuthSettingsActiveDirectoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]WindowsWebAppSlotAuthSettingsFacebookObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]WindowsWebAppSlotAuthSettingsGithubObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]WindowsWebAppSlotAuthSettingsGoogleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]WindowsWebAppSlotAuthSettingsMicrosoftObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]WindowsWebAppSlotAuthSettingsTwitterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsObservation.
func (in *WindowsWebAppSlotAuthSettingsObservation) DeepCopy() *WindowsWebAppSlotAuthSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]WindowsWebAppSlotAuthSettingsActiveDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]WindowsWebAppSlotAuthSettingsFacebookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]WindowsWebAppSlotAuthSettingsGithubParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]WindowsWebAppSlotAuthSettingsGoogleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]WindowsWebAppSlotAuthSettingsMicrosoftParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]WindowsWebAppSlotAuthSettingsTwitterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsParameters.
func (in *WindowsWebAppSlotAuthSettingsParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsTwitterInitParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsTwitterInitParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsTwitterInitParameters.
func (in *WindowsWebAppSlotAuthSettingsTwitterInitParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsTwitterInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsTwitterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsTwitterObservation) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsTwitterObservation) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsTwitterObservation.
func (in *WindowsWebAppSlotAuthSettingsTwitterObservation) DeepCopy() *WindowsWebAppSlotAuthSettingsTwitterObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsTwitterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsTwitterParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsTwitterParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSecretRef != nil {
		in, out := &in.ConsumerSecretSecretRef, &out.ConsumerSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsTwitterParameters.
func (in *WindowsWebAppSlotAuthSettingsTwitterParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsTwitterParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsTwitterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2InitParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2InitParameters) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2InitParameters.
func (in *WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2InitParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2Observation) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2Observation) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2Observation.
func (in *WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2Observation) DeepCopy() *WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2Parameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2Parameters) {
	*out = *in
	if in.AllowedApplications != nil {
		in, out := &in.AllowedApplications, &out.AllowedApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedGroups != nil {
		in, out := &in.AllowedGroups, &out.AllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedIdentities != nil {
		in, out := &in.AllowedIdentities, &out.AllowedIdentities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretCertificateThumbprint != nil {
		in, out := &in.ClientSecretCertificateThumbprint, &out.ClientSecretCertificateThumbprint
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.JwtAllowedClientApplications != nil {
		in, out := &in.JwtAllowedClientApplications, &out.JwtAllowedClientApplications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtAllowedGroups != nil {
		in, out := &in.JwtAllowedGroups, &out.JwtAllowedGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginParameters != nil {
		in, out := &in.LoginParameters, &out.LoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAuthEndpoint != nil {
		in, out := &in.TenantAuthEndpoint, &out.TenantAuthEndpoint
		*out = new(string)
		**out = **in
	}
	if in.WwwAuthenticationDisabled != nil {
		in, out := &in.WwwAuthenticationDisabled, &out.WwwAuthenticationDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2Parameters.
func (in *WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2Parameters) DeepCopy() *WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2AppleV2InitParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2AppleV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2AppleV2InitParameters.
func (in *WindowsWebAppSlotAuthSettingsV2AppleV2InitParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsV2AppleV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2AppleV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2AppleV2Observation) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2AppleV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2AppleV2Observation.
func (in *WindowsWebAppSlotAuthSettingsV2AppleV2Observation) DeepCopy() *WindowsWebAppSlotAuthSettingsV2AppleV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2AppleV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2AppleV2Parameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2AppleV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2AppleV2Parameters.
func (in *WindowsWebAppSlotAuthSettingsV2AppleV2Parameters) DeepCopy() *WindowsWebAppSlotAuthSettingsV2AppleV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2AppleV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2InitParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2InitParameters.
func (in *WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2InitParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2Observation) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2Observation.
func (in *WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2Observation) DeepCopy() *WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2Parameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2Parameters.
func (in *WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2Parameters) DeepCopy() *WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2CustomOidcV2InitParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2CustomOidcV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2CustomOidcV2InitParameters.
func (in *WindowsWebAppSlotAuthSettingsV2CustomOidcV2InitParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsV2CustomOidcV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2CustomOidcV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2CustomOidcV2Observation) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2CustomOidcV2Observation) {
	*out = *in
	if in.AuthorisationEndpoint != nil {
		in, out := &in.AuthorisationEndpoint, &out.AuthorisationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.CertificationURI != nil {
		in, out := &in.CertificationURI, &out.CertificationURI
		*out = new(string)
		**out = **in
	}
	if in.ClientCredentialMethod != nil {
		in, out := &in.ClientCredentialMethod, &out.ClientCredentialMethod
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.IssuerEndpoint != nil {
		in, out := &in.IssuerEndpoint, &out.IssuerEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TokenEndpoint != nil {
		in, out := &in.TokenEndpoint, &out.TokenEndpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2CustomOidcV2Observation.
func (in *WindowsWebAppSlotAuthSettingsV2CustomOidcV2Observation) DeepCopy() *WindowsWebAppSlotAuthSettingsV2CustomOidcV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2CustomOidcV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2CustomOidcV2Parameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2CustomOidcV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameClaimType != nil {
		in, out := &in.NameClaimType, &out.NameClaimType
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConfigurationEndpoint != nil {
		in, out := &in.OpenIDConfigurationEndpoint, &out.OpenIDConfigurationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2CustomOidcV2Parameters.
func (in *WindowsWebAppSlotAuthSettingsV2CustomOidcV2Parameters) DeepCopy() *WindowsWebAppSlotAuthSettingsV2CustomOidcV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2CustomOidcV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2FacebookV2InitParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2FacebookV2InitParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2FacebookV2InitParameters.
func (in *WindowsWebAppSlotAuthSettingsV2FacebookV2InitParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsV2FacebookV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2FacebookV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2FacebookV2Observation) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2FacebookV2Observation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2FacebookV2Observation.
func (in *WindowsWebAppSlotAuthSettingsV2FacebookV2Observation) DeepCopy() *WindowsWebAppSlotAuthSettingsV2FacebookV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2FacebookV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2FacebookV2Parameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2FacebookV2Parameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.GraphAPIVersion != nil {
		in, out := &in.GraphAPIVersion, &out.GraphAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2FacebookV2Parameters.
func (in *WindowsWebAppSlotAuthSettingsV2FacebookV2Parameters) DeepCopy() *WindowsWebAppSlotAuthSettingsV2FacebookV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2FacebookV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2GithubV2InitParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2GithubV2InitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2GithubV2InitParameters.
func (in *WindowsWebAppSlotAuthSettingsV2GithubV2InitParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsV2GithubV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2GithubV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2GithubV2Observation) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2GithubV2Observation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2GithubV2Observation.
func (in *WindowsWebAppSlotAuthSettingsV2GithubV2Observation) DeepCopy() *WindowsWebAppSlotAuthSettingsV2GithubV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2GithubV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2GithubV2Parameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2GithubV2Parameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2GithubV2Parameters.
func (in *WindowsWebAppSlotAuthSettingsV2GithubV2Parameters) DeepCopy() *WindowsWebAppSlotAuthSettingsV2GithubV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2GithubV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2GoogleV2InitParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2GoogleV2InitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2GoogleV2InitParameters.
func (in *WindowsWebAppSlotAuthSettingsV2GoogleV2InitParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsV2GoogleV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2GoogleV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2GoogleV2Observation) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2GoogleV2Observation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2GoogleV2Observation.
func (in *WindowsWebAppSlotAuthSettingsV2GoogleV2Observation) DeepCopy() *WindowsWebAppSlotAuthSettingsV2GoogleV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2GoogleV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2GoogleV2Parameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2GoogleV2Parameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2GoogleV2Parameters.
func (in *WindowsWebAppSlotAuthSettingsV2GoogleV2Parameters) DeepCopy() *WindowsWebAppSlotAuthSettingsV2GoogleV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2GoogleV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2InitParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2InitParameters) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2AppleV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2CustomOidcV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2FacebookV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2GithubV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2GoogleV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]WindowsWebAppSlotAuthSettingsV2LoginInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2MicrosoftV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2TwitterV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2InitParameters.
func (in *WindowsWebAppSlotAuthSettingsV2InitParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2LoginInitParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2LoginInitParameters) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2LoginInitParameters.
func (in *WindowsWebAppSlotAuthSettingsV2LoginInitParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsV2LoginInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2LoginInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2LoginObservation) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2LoginObservation) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2LoginObservation.
func (in *WindowsWebAppSlotAuthSettingsV2LoginObservation) DeepCopy() *WindowsWebAppSlotAuthSettingsV2LoginObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2LoginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2LoginParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2LoginParameters) {
	*out = *in
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CookieExpirationConvention != nil {
		in, out := &in.CookieExpirationConvention, &out.CookieExpirationConvention
		*out = new(string)
		**out = **in
	}
	if in.CookieExpirationTime != nil {
		in, out := &in.CookieExpirationTime, &out.CookieExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LogoutEndpoint != nil {
		in, out := &in.LogoutEndpoint, &out.LogoutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NonceExpirationTime != nil {
		in, out := &in.NonceExpirationTime, &out.NonceExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.PreserveURLFragmentsForLogins != nil {
		in, out := &in.PreserveURLFragmentsForLogins, &out.PreserveURLFragmentsForLogins
		*out = new(bool)
		**out = **in
	}
	if in.TokenRefreshExtensionTime != nil {
		in, out := &in.TokenRefreshExtensionTime, &out.TokenRefreshExtensionTime
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TokenStorePath != nil {
		in, out := &in.TokenStorePath, &out.TokenStorePath
		*out = new(string)
		**out = **in
	}
	if in.TokenStoreSASSettingName != nil {
		in, out := &in.TokenStoreSASSettingName, &out.TokenStoreSASSettingName
		*out = new(string)
		**out = **in
	}
	if in.ValidateNonce != nil {
		in, out := &in.ValidateNonce, &out.ValidateNonce
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2LoginParameters.
func (in *WindowsWebAppSlotAuthSettingsV2LoginParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsV2LoginParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2LoginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2MicrosoftV2InitParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2MicrosoftV2InitParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2MicrosoftV2InitParameters.
func (in *WindowsWebAppSlotAuthSettingsV2MicrosoftV2InitParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsV2MicrosoftV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2MicrosoftV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2MicrosoftV2Observation) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2MicrosoftV2Observation) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2MicrosoftV2Observation.
func (in *WindowsWebAppSlotAuthSettingsV2MicrosoftV2Observation) DeepCopy() *WindowsWebAppSlotAuthSettingsV2MicrosoftV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2MicrosoftV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2MicrosoftV2Parameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2MicrosoftV2Parameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2MicrosoftV2Parameters.
func (in *WindowsWebAppSlotAuthSettingsV2MicrosoftV2Parameters) DeepCopy() *WindowsWebAppSlotAuthSettingsV2MicrosoftV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2MicrosoftV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2Observation) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2Observation) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2AppleV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2CustomOidcV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2FacebookV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2GithubV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2GoogleV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]WindowsWebAppSlotAuthSettingsV2LoginObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2MicrosoftV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2TwitterV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2Observation.
func (in *WindowsWebAppSlotAuthSettingsV2Observation) DeepCopy() *WindowsWebAppSlotAuthSettingsV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2Parameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2Parameters) {
	*out = *in
	if in.ActiveDirectoryV2 != nil {
		in, out := &in.ActiveDirectoryV2, &out.ActiveDirectoryV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppleV2 != nil {
		in, out := &in.AppleV2, &out.AppleV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2AppleV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthEnabled != nil {
		in, out := &in.AuthEnabled, &out.AuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AzureStaticWebAppV2 != nil {
		in, out := &in.AzureStaticWebAppV2, &out.AzureStaticWebAppV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigFilePath != nil {
		in, out := &in.ConfigFilePath, &out.ConfigFilePath
		*out = new(string)
		**out = **in
	}
	if in.CustomOidcV2 != nil {
		in, out := &in.CustomOidcV2, &out.CustomOidcV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2CustomOidcV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FacebookV2 != nil {
		in, out := &in.FacebookV2, &out.FacebookV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2FacebookV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardProxyConvention != nil {
		in, out := &in.ForwardProxyConvention, &out.ForwardProxyConvention
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomHostHeaderName != nil {
		in, out := &in.ForwardProxyCustomHostHeaderName, &out.ForwardProxyCustomHostHeaderName
		*out = new(string)
		**out = **in
	}
	if in.ForwardProxyCustomSchemeHeaderName != nil {
		in, out := &in.ForwardProxyCustomSchemeHeaderName, &out.ForwardProxyCustomSchemeHeaderName
		*out = new(string)
		**out = **in
	}
	if in.GithubV2 != nil {
		in, out := &in.GithubV2, &out.GithubV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2GithubV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleV2 != nil {
		in, out := &in.GoogleV2, &out.GoogleV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2GoogleV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRouteAPIPrefix != nil {
		in, out := &in.HTTPRouteAPIPrefix, &out.HTTPRouteAPIPrefix
		*out = new(string)
		**out = **in
	}
	if in.Login != nil {
		in, out := &in.Login, &out.Login
		*out = make([]WindowsWebAppSlotAuthSettingsV2LoginParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MicrosoftV2 != nil {
		in, out := &in.MicrosoftV2, &out.MicrosoftV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2MicrosoftV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAuthentication != nil {
		in, out := &in.RequireAuthentication, &out.RequireAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.RequireHTTPS != nil {
		in, out := &in.RequireHTTPS, &out.RequireHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TwitterV2 != nil {
		in, out := &in.TwitterV2, &out.TwitterV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2TwitterV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedAction != nil {
		in, out := &in.UnauthenticatedAction, &out.UnauthenticatedAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2Parameters.
func (in *WindowsWebAppSlotAuthSettingsV2Parameters) DeepCopy() *WindowsWebAppSlotAuthSettingsV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2TwitterV2InitParameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2TwitterV2InitParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2TwitterV2InitParameters.
func (in *WindowsWebAppSlotAuthSettingsV2TwitterV2InitParameters) DeepCopy() *WindowsWebAppSlotAuthSettingsV2TwitterV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2TwitterV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2TwitterV2Observation) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2TwitterV2Observation) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2TwitterV2Observation.
func (in *WindowsWebAppSlotAuthSettingsV2TwitterV2Observation) DeepCopy() *WindowsWebAppSlotAuthSettingsV2TwitterV2Observation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2TwitterV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotAuthSettingsV2TwitterV2Parameters) DeepCopyInto(out *WindowsWebAppSlotAuthSettingsV2TwitterV2Parameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotAuthSettingsV2TwitterV2Parameters.
func (in *WindowsWebAppSlotAuthSettingsV2TwitterV2Parameters) DeepCopy() *WindowsWebAppSlotAuthSettingsV2TwitterV2Parameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotAuthSettingsV2TwitterV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotBackupInitParameters) DeepCopyInto(out *WindowsWebAppSlotBackupInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]WindowsWebAppSlotBackupScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotBackupInitParameters.
func (in *WindowsWebAppSlotBackupInitParameters) DeepCopy() *WindowsWebAppSlotBackupInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotBackupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotBackupObservation) DeepCopyInto(out *WindowsWebAppSlotBackupObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]WindowsWebAppSlotBackupScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotBackupObservation.
func (in *WindowsWebAppSlotBackupObservation) DeepCopy() *WindowsWebAppSlotBackupObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotBackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotBackupParameters) DeepCopyInto(out *WindowsWebAppSlotBackupParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]WindowsWebAppSlotBackupScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.StorageAccountURLSecretRef = in.StorageAccountURLSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotBackupParameters.
func (in *WindowsWebAppSlotBackupParameters) DeepCopy() *WindowsWebAppSlotBackupParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotBackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotBackupScheduleInitParameters) DeepCopyInto(out *WindowsWebAppSlotBackupScheduleInitParameters) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotBackupScheduleInitParameters.
func (in *WindowsWebAppSlotBackupScheduleInitParameters) DeepCopy() *WindowsWebAppSlotBackupScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotBackupScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotBackupScheduleObservation) DeepCopyInto(out *WindowsWebAppSlotBackupScheduleObservation) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.LastExecutionTime != nil {
		in, out := &in.LastExecutionTime, &out.LastExecutionTime
		*out = new(string)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotBackupScheduleObservation.
func (in *WindowsWebAppSlotBackupScheduleObservation) DeepCopy() *WindowsWebAppSlotBackupScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotBackupScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotBackupScheduleParameters) DeepCopyInto(out *WindowsWebAppSlotBackupScheduleParameters) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotBackupScheduleParameters.
func (in *WindowsWebAppSlotBackupScheduleParameters) DeepCopy() *WindowsWebAppSlotBackupScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotBackupScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotConnectionStringInitParameters) DeepCopyInto(out *WindowsWebAppSlotConnectionStringInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotConnectionStringInitParameters.
func (in *WindowsWebAppSlotConnectionStringInitParameters) DeepCopy() *WindowsWebAppSlotConnectionStringInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotConnectionStringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotConnectionStringObservation) DeepCopyInto(out *WindowsWebAppSlotConnectionStringObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotConnectionStringObservation.
func (in *WindowsWebAppSlotConnectionStringObservation) DeepCopy() *WindowsWebAppSlotConnectionStringObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotConnectionStringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotConnectionStringParameters) DeepCopyInto(out *WindowsWebAppSlotConnectionStringParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	out.ValueSecretRef = in.ValueSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotConnectionStringParameters.
func (in *WindowsWebAppSlotConnectionStringParameters) DeepCopy() *WindowsWebAppSlotConnectionStringParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotConnectionStringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotIdentityInitParameters) DeepCopyInto(out *WindowsWebAppSlotIdentityInitParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotIdentityInitParameters.
func (in *WindowsWebAppSlotIdentityInitParameters) DeepCopy() *WindowsWebAppSlotIdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotIdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotIdentityObservation) DeepCopyInto(out *WindowsWebAppSlotIdentityObservation) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotIdentityObservation.
func (in *WindowsWebAppSlotIdentityObservation) DeepCopy() *WindowsWebAppSlotIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotIdentityParameters) DeepCopyInto(out *WindowsWebAppSlotIdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotIdentityParameters.
func (in *WindowsWebAppSlotIdentityParameters) DeepCopy() *WindowsWebAppSlotIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotInitParameters) DeepCopyInto(out *WindowsWebAppSlotInitParameters) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]WindowsWebAppSlotAuthSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]WindowsWebAppSlotBackupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientAffinityEnabled != nil {
		in, out := &in.ClientAffinityEnabled, &out.ClientAffinityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]WindowsWebAppSlotConnectionStringInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]WindowsWebAppSlotIdentityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Logs != nil {
		in, out := &in.Logs, &out.Logs
		*out = make([]WindowsWebAppSlotLogsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]WindowsWebAppSlotSiteConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]WindowsWebAppSlotStorageAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZipDeployFile != nil {
		in, out := &in.ZipDeployFile, &out.ZipDeployFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotInitParameters.
func (in *WindowsWebAppSlotInitParameters) DeepCopy() *WindowsWebAppSlotInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotList) DeepCopyInto(out *WindowsWebAppSlotList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WindowsWebAppSlot, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotList.
func (in *WindowsWebAppSlotList) DeepCopy() *WindowsWebAppSlotList {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WindowsWebAppSlotList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageInitParameters) DeepCopyInto(out *WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageInitParameters) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.SASURL != nil {
		in, out := &in.SASURL, &out.SASURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageInitParameters.
func (in *WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageInitParameters) DeepCopy() *WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageObservation) DeepCopyInto(out *WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageObservation) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.SASURL != nil {
		in, out := &in.SASURL, &out.SASURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageObservation.
func (in *WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageObservation) DeepCopy() *WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageParameters) DeepCopyInto(out *WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageParameters) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.SASURL != nil {
		in, out := &in.SASURL, &out.SASURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageParameters.
func (in *WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageParameters) DeepCopy() *WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotLogsApplicationLogsInitParameters) DeepCopyInto(out *WindowsWebAppSlotLogsApplicationLogsInitParameters) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemLevel != nil {
		in, out := &in.FileSystemLevel, &out.FileSystemLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotLogsApplicationLogsInitParameters.
func (in *WindowsWebAppSlotLogsApplicationLogsInitParameters) DeepCopy() *WindowsWebAppSlotLogsApplicationLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotLogsApplicationLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotLogsApplicationLogsObservation) DeepCopyInto(out *WindowsWebAppSlotLogsApplicationLogsObservation) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemLevel != nil {
		in, out := &in.FileSystemLevel, &out.FileSystemLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotLogsApplicationLogsObservation.
func (in *WindowsWebAppSlotLogsApplicationLogsObservation) DeepCopy() *WindowsWebAppSlotLogsApplicationLogsObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotLogsApplicationLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotLogsApplicationLogsParameters) DeepCopyInto(out *WindowsWebAppSlotLogsApplicationLogsParameters) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemLevel != nil {
		in, out := &in.FileSystemLevel, &out.FileSystemLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotLogsApplicationLogsParameters.
func (in *WindowsWebAppSlotLogsApplicationLogsParameters) DeepCopy() *WindowsWebAppSlotLogsApplicationLogsParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotLogsApplicationLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageInitParameters) DeepCopyInto(out *WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageInitParameters) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageInitParameters.
func (in *WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageInitParameters) DeepCopy() *WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageObservation) DeepCopyInto(out *WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageObservation) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageObservation.
func (in *WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageObservation) DeepCopy() *WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageParameters) DeepCopyInto(out *WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageParameters) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	out.SASURLSecretRef = in.SASURLSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageParameters.
func (in *WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageParameters) DeepCopy() *WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotLogsHTTPLogsFileSystemInitParameters) DeepCopyInto(out *WindowsWebAppSlotLogsHTTPLogsFileSystemInitParameters) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.RetentionInMb != nil {
		in, out := &in.RetentionInMb, &out.RetentionInMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotLogsHTTPLogsFileSystemInitParameters.
func (in *WindowsWebAppSlotLogsHTTPLogsFileSystemInitParameters) DeepCopy() *WindowsWebAppSlotLogsHTTPLogsFileSystemInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotLogsHTTPLogsFileSystemInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotLogsHTTPLogsFileSystemObservation) DeepCopyInto(out *WindowsWebAppSlotLogsHTTPLogsFileSystemObservation) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.RetentionInMb != nil {
		in, out := &in.RetentionInMb, &out.RetentionInMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotLogsHTTPLogsFileSystemObservation.
func (in *WindowsWebAppSlotLogsHTTPLogsFileSystemObservation) DeepCopy() *WindowsWebAppSlotLogsHTTPLogsFileSystemObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotLogsHTTPLogsFileSystemObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotLogsHTTPLogsFileSystemParameters) DeepCopyInto(out *WindowsWebAppSlotLogsHTTPLogsFileSystemParameters) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.RetentionInMb != nil {
		in, out := &in.RetentionInMb, &out.RetentionInMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotLogsHTTPLogsFileSystemParameters.
func (in *WindowsWebAppSlotLogsHTTPLogsFileSystemParameters) DeepCopy() *WindowsWebAppSlotLogsHTTPLogsFileSystemParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotLogsHTTPLogsFileSystemParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotLogsHTTPLogsInitParameters) DeepCopyInto(out *WindowsWebAppSlotLogsHTTPLogsInitParameters) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystem != nil {
		in, out := &in.FileSystem, &out.FileSystem
		*out = make([]WindowsWebAppSlotLogsHTTPLogsFileSystemInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotLogsHTTPLogsInitParameters.
func (in *WindowsWebAppSlotLogsHTTPLogsInitParameters) DeepCopy() *WindowsWebAppSlotLogsHTTPLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotLogsHTTPLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotLogsHTTPLogsObservation) DeepCopyInto(out *WindowsWebAppSlotLogsHTTPLogsObservation) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystem != nil {
		in, out := &in.FileSystem, &out.FileSystem
		*out = make([]WindowsWebAppSlotLogsHTTPLogsFileSystemObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotLogsHTTPLogsObservation.
func (in *WindowsWebAppSlotLogsHTTPLogsObservation) DeepCopy() *WindowsWebAppSlotLogsHTTPLogsObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotLogsHTTPLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotLogsHTTPLogsParameters) DeepCopyInto(out *WindowsWebAppSlotLogsHTTPLogsParameters) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystem != nil {
		in, out := &in.FileSystem, &out.FileSystem
		*out = make([]WindowsWebAppSlotLogsHTTPLogsFileSystemParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotLogsHTTPLogsParameters.
func (in *WindowsWebAppSlotLogsHTTPLogsParameters) DeepCopy() *WindowsWebAppSlotLogsHTTPLogsParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotLogsHTTPLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotLogsInitParameters) DeepCopyInto(out *WindowsWebAppSlotLogsInitParameters) {
	*out = *in
	if in.ApplicationLogs != nil {
		in, out := &in.ApplicationLogs, &out.ApplicationLogs
		*out = make([]WindowsWebAppSlotLogsApplicationLogsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DetailedErrorMessages != nil {
		in, out := &in.DetailedErrorMessages, &out.DetailedErrorMessages
		*out = new(bool)
		**out = **in
	}
	if in.FailedRequestTracing != nil {
		in, out := &in.FailedRequestTracing, &out.FailedRequestTracing
		*out = new(bool)
		**out = **in
	}
	if in.HTTPLogs != nil {
		in, out := &in.HTTPLogs, &out.HTTPLogs
		*out = make([]WindowsWebAppSlotLogsHTTPLogsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotLogsInitParameters.
func (in *WindowsWebAppSlotLogsInitParameters) DeepCopy() *WindowsWebAppSlotLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotLogsObservation) DeepCopyInto(out *WindowsWebAppSlotLogsObservation) {
	*out = *in
	if in.ApplicationLogs != nil {
		in, out := &in.ApplicationLogs, &out.ApplicationLogs
		*out = make([]WindowsWebAppSlotLogsApplicationLogsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DetailedErrorMessages != nil {
		in, out := &in.DetailedErrorMessages, &out.DetailedErrorMessages
		*out = new(bool)
		**out = **in
	}
	if in.FailedRequestTracing != nil {
		in, out := &in.FailedRequestTracing, &out.FailedRequestTracing
		*out = new(bool)
		**out = **in
	}
	if in.HTTPLogs != nil {
		in, out := &in.HTTPLogs, &out.HTTPLogs
		*out = make([]WindowsWebAppSlotLogsHTTPLogsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotLogsObservation.
func (in *WindowsWebAppSlotLogsObservation) DeepCopy() *WindowsWebAppSlotLogsObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotLogsParameters) DeepCopyInto(out *WindowsWebAppSlotLogsParameters) {
	*out = *in
	if in.ApplicationLogs != nil {
		in, out := &in.ApplicationLogs, &out.ApplicationLogs
		*out = make([]WindowsWebAppSlotLogsApplicationLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DetailedErrorMessages != nil {
		in, out := &in.DetailedErrorMessages, &out.DetailedErrorMessages
		*out = new(bool)
		**out = **in
	}
	if in.FailedRequestTracing != nil {
		in, out := &in.FailedRequestTracing, &out.FailedRequestTracing
		*out = new(bool)
		**out = **in
	}
	if in.HTTPLogs != nil {
		in, out := &in.HTTPLogs, &out.HTTPLogs
		*out = make([]WindowsWebAppSlotLogsHTTPLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotLogsParameters.
func (in *WindowsWebAppSlotLogsParameters) DeepCopy() *WindowsWebAppSlotLogsParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotObservation) DeepCopyInto(out *WindowsWebAppSlotObservation) {
	*out = *in
	if in.AppServiceID != nil {
		in, out := &in.AppServiceID, &out.AppServiceID
		*out = new(string)
		**out = **in
	}
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]WindowsWebAppSlotAuthSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]WindowsWebAppSlotBackupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientAffinityEnabled != nil {
		in, out := &in.ClientAffinityEnabled, &out.ClientAffinityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]WindowsWebAppSlotConnectionStringObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultHostName != nil {
		in, out := &in.DefaultHostName, &out.DefaultHostName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.HostingEnvironmentID != nil {
		in, out := &in.HostingEnvironmentID, &out.HostingEnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]WindowsWebAppSlotIdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Logs != nil {
		in, out := &in.Logs, &out.Logs
		*out = make([]WindowsWebAppSlotLogsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutboundIPAddressList != nil {
		in, out := &in.OutboundIPAddressList, &out.OutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OutboundIPAddresses != nil {
		in, out := &in.OutboundIPAddresses, &out.OutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.PossibleOutboundIPAddressList != nil {
		in, out := &in.PossibleOutboundIPAddressList, &out.PossibleOutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PossibleOutboundIPAddresses != nil {
		in, out := &in.PossibleOutboundIPAddresses, &out.PossibleOutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]WindowsWebAppSlotSiteConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]WindowsWebAppSlotStorageAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.ZipDeployFile != nil {
		in, out := &in.ZipDeployFile, &out.ZipDeployFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotObservation.
func (in *WindowsWebAppSlotObservation) DeepCopy() *WindowsWebAppSlotObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotParameters) DeepCopyInto(out *WindowsWebAppSlotParameters) {
	*out = *in
	if in.AppServiceID != nil {
		in, out := &in.AppServiceID, &out.AppServiceID
		*out = new(string)
		**out = **in
	}
	if in.AppServiceIDRef != nil {
		in, out := &in.AppServiceIDRef, &out.AppServiceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AppServiceIDSelector != nil {
		in, out := &in.AppServiceIDSelector, &out.AppServiceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]WindowsWebAppSlotAuthSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthSettingsV2 != nil {
		in, out := &in.AuthSettingsV2, &out.AuthSettingsV2
		*out = make([]WindowsWebAppSlotAuthSettingsV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]WindowsWebAppSlotBackupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientAffinityEnabled != nil {
		in, out := &in.ClientAffinityEnabled, &out.ClientAffinityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]WindowsWebAppSlotConnectionStringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]WindowsWebAppSlotIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Logs != nil {
		in, out := &in.Logs, &out.Logs
		*out = make([]WindowsWebAppSlotLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]WindowsWebAppSlotSiteConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]WindowsWebAppSlotStorageAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ZipDeployFile != nil {
		in, out := &in.ZipDeployFile, &out.ZipDeployFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotParameters.
func (in *WindowsWebAppSlotParameters) DeepCopy() *WindowsWebAppSlotParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigApplicationStackInitParameters) DeepCopyInto(out *WindowsWebAppSlotSiteConfigApplicationStackInitParameters) {
	*out = *in
	if in.CurrentStack != nil {
		in, out := &in.CurrentStack, &out.CurrentStack
		*out = new(string)
		**out = **in
	}
	if in.DockerContainerName != nil {
		in, out := &in.DockerContainerName, &out.DockerContainerName
		*out = new(string)
		**out = **in
	}
	if in.DockerContainerRegistry != nil {
		in, out := &in.DockerContainerRegistry, &out.DockerContainerRegistry
		*out = new(string)
		**out = **in
	}
	if in.DockerContainerTag != nil {
		in, out := &in.DockerContainerTag, &out.DockerContainerTag
		*out = new(string)
		**out = **in
	}
	if in.DotnetCoreVersion != nil {
		in, out := &in.DotnetCoreVersion, &out.DotnetCoreVersion
		*out = new(string)
		**out = **in
	}
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaContainer != nil {
		in, out := &in.JavaContainer, &out.JavaContainer
		*out = new(string)
		**out = **in
	}
	if in.JavaContainerVersion != nil {
		in, out := &in.JavaContainerVersion, &out.JavaContainerVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaEmbeddedServerEnabled != nil {
		in, out := &in.JavaEmbeddedServerEnabled, &out.JavaEmbeddedServerEnabled
		*out = new(bool)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PHPVersion != nil {
		in, out := &in.PHPVersion, &out.PHPVersion
		*out = new(string)
		**out = **in
	}
	if in.Python != nil {
		in, out := &in.Python, &out.Python
		*out = new(bool)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.TomcatVersion != nil {
		in, out := &in.TomcatVersion, &out.TomcatVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigApplicationStackInitParameters.
func (in *WindowsWebAppSlotSiteConfigApplicationStackInitParameters) DeepCopy() *WindowsWebAppSlotSiteConfigApplicationStackInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigApplicationStackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigApplicationStackObservation) DeepCopyInto(out *WindowsWebAppSlotSiteConfigApplicationStackObservation) {
	*out = *in
	if in.CurrentStack != nil {
		in, out := &in.CurrentStack, &out.CurrentStack
		*out = new(string)
		**out = **in
	}
	if in.DockerContainerName != nil {
		in, out := &in.DockerContainerName, &out.DockerContainerName
		*out = new(string)
		**out = **in
	}
	if in.DockerContainerRegistry != nil {
		in, out := &in.DockerContainerRegistry, &out.DockerContainerRegistry
		*out = new(string)
		**out = **in
	}
	if in.DockerContainerTag != nil {
		in, out := &in.DockerContainerTag, &out.DockerContainerTag
		*out = new(string)
		**out = **in
	}
	if in.DotnetCoreVersion != nil {
		in, out := &in.DotnetCoreVersion, &out.DotnetCoreVersion
		*out = new(string)
		**out = **in
	}
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaContainer != nil {
		in, out := &in.JavaContainer, &out.JavaContainer
		*out = new(string)
		**out = **in
	}
	if in.JavaContainerVersion != nil {
		in, out := &in.JavaContainerVersion, &out.JavaContainerVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaEmbeddedServerEnabled != nil {
		in, out := &in.JavaEmbeddedServerEnabled, &out.JavaEmbeddedServerEnabled
		*out = new(bool)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PHPVersion != nil {
		in, out := &in.PHPVersion, &out.PHPVersion
		*out = new(string)
		**out = **in
	}
	if in.Python != nil {
		in, out := &in.Python, &out.Python
		*out = new(bool)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.TomcatVersion != nil {
		in, out := &in.TomcatVersion, &out.TomcatVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigApplicationStackObservation.
func (in *WindowsWebAppSlotSiteConfigApplicationStackObservation) DeepCopy() *WindowsWebAppSlotSiteConfigApplicationStackObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigApplicationStackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigApplicationStackParameters) DeepCopyInto(out *WindowsWebAppSlotSiteConfigApplicationStackParameters) {
	*out = *in
	if in.CurrentStack != nil {
		in, out := &in.CurrentStack, &out.CurrentStack
		*out = new(string)
		**out = **in
	}
	if in.DockerContainerName != nil {
		in, out := &in.DockerContainerName, &out.DockerContainerName
		*out = new(string)
		**out = **in
	}
	if in.DockerContainerRegistry != nil {
		in, out := &in.DockerContainerRegistry, &out.DockerContainerRegistry
		*out = new(string)
		**out = **in
	}
	if in.DockerContainerTag != nil {
		in, out := &in.DockerContainerTag, &out.DockerContainerTag
		*out = new(string)
		**out = **in
	}
	if in.DotnetCoreVersion != nil {
		in, out := &in.DotnetCoreVersion, &out.DotnetCoreVersion
		*out = new(string)
		**out = **in
	}
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaContainer != nil {
		in, out := &in.JavaContainer, &out.JavaContainer
		*out = new(string)
		**out = **in
	}
	if in.JavaContainerVersion != nil {
		in, out := &in.JavaContainerVersion, &out.JavaContainerVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaEmbeddedServerEnabled != nil {
		in, out := &in.JavaEmbeddedServerEnabled, &out.JavaEmbeddedServerEnabled
		*out = new(bool)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PHPVersion != nil {
		in, out := &in.PHPVersion, &out.PHPVersion
		*out = new(string)
		**out = **in
	}
	if in.Python != nil {
		in, out := &in.Python, &out.Python
		*out = new(bool)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.TomcatVersion != nil {
		in, out := &in.TomcatVersion, &out.TomcatVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigApplicationStackParameters.
func (in *WindowsWebAppSlotSiteConfigApplicationStackParameters) DeepCopy() *WindowsWebAppSlotSiteConfigApplicationStackParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigApplicationStackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigAutoHealSettingActionInitParameters) DeepCopyInto(out *WindowsWebAppSlotSiteConfigAutoHealSettingActionInitParameters) {
	*out = *in
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.CustomAction != nil {
		in, out := &in.CustomAction, &out.CustomAction
		*out = make([]ActionCustomActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinimumProcessExecutionTime != nil {
		in, out := &in.MinimumProcessExecutionTime, &out.MinimumProcessExecutionTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigAutoHealSettingActionInitParameters.
func (in *WindowsWebAppSlotSiteConfigAutoHealSettingActionInitParameters) DeepCopy() *WindowsWebAppSlotSiteConfigAutoHealSettingActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigAutoHealSettingActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigAutoHealSettingActionObservation) DeepCopyInto(out *WindowsWebAppSlotSiteConfigAutoHealSettingActionObservation) {
	*out = *in
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.CustomAction != nil {
		in, out := &in.CustomAction, &out.CustomAction
		*out = make([]ActionCustomActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinimumProcessExecutionTime != nil {
		in, out := &in.MinimumProcessExecutionTime, &out.MinimumProcessExecutionTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigAutoHealSettingActionObservation.
func (in *WindowsWebAppSlotSiteConfigAutoHealSettingActionObservation) DeepCopy() *WindowsWebAppSlotSiteConfigAutoHealSettingActionObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigAutoHealSettingActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigAutoHealSettingActionParameters) DeepCopyInto(out *WindowsWebAppSlotSiteConfigAutoHealSettingActionParameters) {
	*out = *in
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.CustomAction != nil {
		in, out := &in.CustomAction, &out.CustomAction
		*out = make([]ActionCustomActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinimumProcessExecutionTime != nil {
		in, out := &in.MinimumProcessExecutionTime, &out.MinimumProcessExecutionTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigAutoHealSettingActionParameters.
func (in *WindowsWebAppSlotSiteConfigAutoHealSettingActionParameters) DeepCopy() *WindowsWebAppSlotSiteConfigAutoHealSettingActionParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigAutoHealSettingActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigAutoHealSettingInitParameters) DeepCopyInto(out *WindowsWebAppSlotSiteConfigAutoHealSettingInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]WindowsWebAppSlotSiteConfigAutoHealSettingActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]WindowsWebAppSlotSiteConfigAutoHealSettingTriggerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigAutoHealSettingInitParameters.
func (in *WindowsWebAppSlotSiteConfigAutoHealSettingInitParameters) DeepCopy() *WindowsWebAppSlotSiteConfigAutoHealSettingInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigAutoHealSettingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigAutoHealSettingObservation) DeepCopyInto(out *WindowsWebAppSlotSiteConfigAutoHealSettingObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]WindowsWebAppSlotSiteConfigAutoHealSettingActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]WindowsWebAppSlotSiteConfigAutoHealSettingTriggerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigAutoHealSettingObservation.
func (in *WindowsWebAppSlotSiteConfigAutoHealSettingObservation) DeepCopy() *WindowsWebAppSlotSiteConfigAutoHealSettingObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigAutoHealSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigAutoHealSettingParameters) DeepCopyInto(out *WindowsWebAppSlotSiteConfigAutoHealSettingParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]WindowsWebAppSlotSiteConfigAutoHealSettingActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]WindowsWebAppSlotSiteConfigAutoHealSettingTriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigAutoHealSettingParameters.
func (in *WindowsWebAppSlotSiteConfigAutoHealSettingParameters) DeepCopy() *WindowsWebAppSlotSiteConfigAutoHealSettingParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigAutoHealSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigAutoHealSettingTriggerInitParameters) DeepCopyInto(out *WindowsWebAppSlotSiteConfigAutoHealSettingTriggerInitParameters) {
	*out = *in
	if in.PrivateMemoryKb != nil {
		in, out := &in.PrivateMemoryKb, &out.PrivateMemoryKb
		*out = new(float64)
		**out = **in
	}
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = make([]SiteConfigAutoHealSettingTriggerRequestsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SlowRequest != nil {
		in, out := &in.SlowRequest, &out.SlowRequest
		*out = make([]SiteConfigAutoHealSettingTriggerSlowRequestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = make([]SiteConfigAutoHealSettingTriggerStatusCodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigAutoHealSettingTriggerInitParameters.
func (in *WindowsWebAppSlotSiteConfigAutoHealSettingTriggerInitParameters) DeepCopy() *WindowsWebAppSlotSiteConfigAutoHealSettingTriggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigAutoHealSettingTriggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigAutoHealSettingTriggerObservation) DeepCopyInto(out *WindowsWebAppSlotSiteConfigAutoHealSettingTriggerObservation) {
	*out = *in
	if in.PrivateMemoryKb != nil {
		in, out := &in.PrivateMemoryKb, &out.PrivateMemoryKb
		*out = new(float64)
		**out = **in
	}
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = make([]SiteConfigAutoHealSettingTriggerRequestsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SlowRequest != nil {
		in, out := &in.SlowRequest, &out.SlowRequest
		*out = make([]SiteConfigAutoHealSettingTriggerSlowRequestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = make([]SiteConfigAutoHealSettingTriggerStatusCodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigAutoHealSettingTriggerObservation.
func (in *WindowsWebAppSlotSiteConfigAutoHealSettingTriggerObservation) DeepCopy() *WindowsWebAppSlotSiteConfigAutoHealSettingTriggerObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigAutoHealSettingTriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigAutoHealSettingTriggerParameters) DeepCopyInto(out *WindowsWebAppSlotSiteConfigAutoHealSettingTriggerParameters) {
	*out = *in
	if in.PrivateMemoryKb != nil {
		in, out := &in.PrivateMemoryKb, &out.PrivateMemoryKb
		*out = new(float64)
		**out = **in
	}
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = make([]SiteConfigAutoHealSettingTriggerRequestsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SlowRequest != nil {
		in, out := &in.SlowRequest, &out.SlowRequest
		*out = make([]SiteConfigAutoHealSettingTriggerSlowRequestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = make([]SiteConfigAutoHealSettingTriggerStatusCodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigAutoHealSettingTriggerParameters.
func (in *WindowsWebAppSlotSiteConfigAutoHealSettingTriggerParameters) DeepCopy() *WindowsWebAppSlotSiteConfigAutoHealSettingTriggerParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigAutoHealSettingTriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigCorsInitParameters) DeepCopyInto(out *WindowsWebAppSlotSiteConfigCorsInitParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigCorsInitParameters.
func (in *WindowsWebAppSlotSiteConfigCorsInitParameters) DeepCopy() *WindowsWebAppSlotSiteConfigCorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigCorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigCorsObservation) DeepCopyInto(out *WindowsWebAppSlotSiteConfigCorsObservation) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigCorsObservation.
func (in *WindowsWebAppSlotSiteConfigCorsObservation) DeepCopy() *WindowsWebAppSlotSiteConfigCorsObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigCorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigCorsParameters) DeepCopyInto(out *WindowsWebAppSlotSiteConfigCorsParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigCorsParameters.
func (in *WindowsWebAppSlotSiteConfigCorsParameters) DeepCopy() *WindowsWebAppSlotSiteConfigCorsParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigCorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigIPRestrictionHeadersInitParameters) DeepCopyInto(out *WindowsWebAppSlotSiteConfigIPRestrictionHeadersInitParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigIPRestrictionHeadersInitParameters.
func (in *WindowsWebAppSlotSiteConfigIPRestrictionHeadersInitParameters) DeepCopy() *WindowsWebAppSlotSiteConfigIPRestrictionHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigIPRestrictionHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigIPRestrictionHeadersObservation) DeepCopyInto(out *WindowsWebAppSlotSiteConfigIPRestrictionHeadersObservation) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigIPRestrictionHeadersObservation.
func (in *WindowsWebAppSlotSiteConfigIPRestrictionHeadersObservation) DeepCopy() *WindowsWebAppSlotSiteConfigIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigIPRestrictionHeadersParameters) DeepCopyInto(out *WindowsWebAppSlotSiteConfigIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigIPRestrictionHeadersParameters.
func (in *WindowsWebAppSlotSiteConfigIPRestrictionHeadersParameters) DeepCopy() *WindowsWebAppSlotSiteConfigIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigIPRestrictionInitParameters) DeepCopyInto(out *WindowsWebAppSlotSiteConfigIPRestrictionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsWebAppSlotSiteConfigIPRestrictionHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigIPRestrictionInitParameters.
func (in *WindowsWebAppSlotSiteConfigIPRestrictionInitParameters) DeepCopy() *WindowsWebAppSlotSiteConfigIPRestrictionInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigIPRestrictionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigIPRestrictionObservation) DeepCopyInto(out *WindowsWebAppSlotSiteConfigIPRestrictionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsWebAppSlotSiteConfigIPRestrictionHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigIPRestrictionObservation.
func (in *WindowsWebAppSlotSiteConfigIPRestrictionObservation) DeepCopy() *WindowsWebAppSlotSiteConfigIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigIPRestrictionParameters) DeepCopyInto(out *WindowsWebAppSlotSiteConfigIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsWebAppSlotSiteConfigIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigIPRestrictionParameters.
func (in *WindowsWebAppSlotSiteConfigIPRestrictionParameters) DeepCopy() *WindowsWebAppSlotSiteConfigIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigInitParameters) DeepCopyInto(out *WindowsWebAppSlotSiteConfigInitParameters) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]WindowsWebAppSlotSiteConfigApplicationStackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealEnabled != nil {
		in, out := &in.AutoHealEnabled, &out.AutoHealEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealSetting != nil {
		in, out := &in.AutoHealSetting, &out.AutoHealSetting
		*out = make([]WindowsWebAppSlotSiteConfigAutoHealSettingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoSwapSlotName != nil {
		in, out := &in.AutoSwapSlotName, &out.AutoSwapSlotName
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryManagedIdentityClientID != nil {
		in, out := &in.ContainerRegistryManagedIdentityClientID, &out.ContainerRegistryManagedIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryUseManagedIdentity != nil {
		in, out := &in.ContainerRegistryUseManagedIdentity, &out.ContainerRegistryUseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]WindowsWebAppSlotSiteConfigCorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]WindowsWebAppSlotSiteConfigIPRestrictionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.LocalMySQLEnabled != nil {
		in, out := &in.LocalMySQLEnabled, &out.LocalMySQLEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]WindowsWebAppSlotSiteConfigScmIPRestrictionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VirtualApplication != nil {
		in, out := &in.VirtualApplication, &out.VirtualApplication
		*out = make([]SiteConfigVirtualApplicationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigInitParameters.
func (in *WindowsWebAppSlotSiteConfigInitParameters) DeepCopy() *WindowsWebAppSlotSiteConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigObservation) DeepCopyInto(out *WindowsWebAppSlotSiteConfigObservation) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]WindowsWebAppSlotSiteConfigApplicationStackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealEnabled != nil {
		in, out := &in.AutoHealEnabled, &out.AutoHealEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealSetting != nil {
		in, out := &in.AutoHealSetting, &out.AutoHealSetting
		*out = make([]WindowsWebAppSlotSiteConfigAutoHealSettingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoSwapSlotName != nil {
		in, out := &in.AutoSwapSlotName, &out.AutoSwapSlotName
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryManagedIdentityClientID != nil {
		in, out := &in.ContainerRegistryManagedIdentityClientID, &out.ContainerRegistryManagedIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryUseManagedIdentity != nil {
		in, out := &in.ContainerRegistryUseManagedIdentity, &out.ContainerRegistryUseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]WindowsWebAppSlotSiteConfigCorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DetailedErrorLoggingEnabled != nil {
		in, out := &in.DetailedErrorLoggingEnabled, &out.DetailedErrorLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]WindowsWebAppSlotSiteConfigIPRestrictionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.LocalMySQLEnabled != nil {
		in, out := &in.LocalMySQLEnabled, &out.LocalMySQLEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]WindowsWebAppSlotSiteConfigScmIPRestrictionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmType != nil {
		in, out := &in.ScmType, &out.ScmType
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VirtualApplication != nil {
		in, out := &in.VirtualApplication, &out.VirtualApplication
		*out = make([]SiteConfigVirtualApplicationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WindowsFxVersion != nil {
		in, out := &in.WindowsFxVersion, &out.WindowsFxVersion
		*out = new(string)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigObservation.
func (in *WindowsWebAppSlotSiteConfigObservation) DeepCopy() *WindowsWebAppSlotSiteConfigObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigParameters) DeepCopyInto(out *WindowsWebAppSlotSiteConfigParameters) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]WindowsWebAppSlotSiteConfigApplicationStackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealEnabled != nil {
		in, out := &in.AutoHealEnabled, &out.AutoHealEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealSetting != nil {
		in, out := &in.AutoHealSetting, &out.AutoHealSetting
		*out = make([]WindowsWebAppSlotSiteConfigAutoHealSettingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoSwapSlotName != nil {
		in, out := &in.AutoSwapSlotName, &out.AutoSwapSlotName
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryManagedIdentityClientID != nil {
		in, out := &in.ContainerRegistryManagedIdentityClientID, &out.ContainerRegistryManagedIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryUseManagedIdentity != nil {
		in, out := &in.ContainerRegistryUseManagedIdentity, &out.ContainerRegistryUseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]WindowsWebAppSlotSiteConfigCorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]WindowsWebAppSlotSiteConfigIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.LocalMySQLEnabled != nil {
		in, out := &in.LocalMySQLEnabled, &out.LocalMySQLEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]WindowsWebAppSlotSiteConfigScmIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VirtualApplication != nil {
		in, out := &in.VirtualApplication, &out.VirtualApplication
		*out = make([]SiteConfigVirtualApplicationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigParameters.
func (in *WindowsWebAppSlotSiteConfigParameters) DeepCopy() *WindowsWebAppSlotSiteConfigParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersInitParameters) DeepCopyInto(out *WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersInitParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersInitParameters.
func (in *WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersInitParameters) DeepCopy() *WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersObservation) DeepCopyInto(out *WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersObservation) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersObservation.
func (in *WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersObservation) DeepCopy() *WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersParameters) DeepCopyInto(out *WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersParameters.
func (in *WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersParameters) DeepCopy() *WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigScmIPRestrictionInitParameters) DeepCopyInto(out *WindowsWebAppSlotSiteConfigScmIPRestrictionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigScmIPRestrictionInitParameters.
func (in *WindowsWebAppSlotSiteConfigScmIPRestrictionInitParameters) DeepCopy() *WindowsWebAppSlotSiteConfigScmIPRestrictionInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigScmIPRestrictionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigScmIPRestrictionObservation) DeepCopyInto(out *WindowsWebAppSlotSiteConfigScmIPRestrictionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigScmIPRestrictionObservation.
func (in *WindowsWebAppSlotSiteConfigScmIPRestrictionObservation) DeepCopy() *WindowsWebAppSlotSiteConfigScmIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigScmIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteConfigScmIPRestrictionParameters) DeepCopyInto(out *WindowsWebAppSlotSiteConfigScmIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteConfigScmIPRestrictionParameters.
func (in *WindowsWebAppSlotSiteConfigScmIPRestrictionParameters) DeepCopy() *WindowsWebAppSlotSiteConfigScmIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteConfigScmIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteCredentialInitParameters) DeepCopyInto(out *WindowsWebAppSlotSiteCredentialInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteCredentialInitParameters.
func (in *WindowsWebAppSlotSiteCredentialInitParameters) DeepCopy() *WindowsWebAppSlotSiteCredentialInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteCredentialInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteCredentialObservation) DeepCopyInto(out *WindowsWebAppSlotSiteCredentialObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteCredentialObservation.
func (in *WindowsWebAppSlotSiteCredentialObservation) DeepCopy() *WindowsWebAppSlotSiteCredentialObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteCredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSiteCredentialParameters) DeepCopyInto(out *WindowsWebAppSlotSiteCredentialParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSiteCredentialParameters.
func (in *WindowsWebAppSlotSiteCredentialParameters) DeepCopy() *WindowsWebAppSlotSiteCredentialParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSiteCredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotSpec) DeepCopyInto(out *WindowsWebAppSlotSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotSpec.
func (in *WindowsWebAppSlotSpec) DeepCopy() *WindowsWebAppSlotSpec {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotStatus) DeepCopyInto(out *WindowsWebAppSlotStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotStatus.
func (in *WindowsWebAppSlotStatus) DeepCopy() *WindowsWebAppSlotStatus {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotStorageAccountInitParameters) DeepCopyInto(out *WindowsWebAppSlotStorageAccountInitParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotStorageAccountInitParameters.
func (in *WindowsWebAppSlotStorageAccountInitParameters) DeepCopy() *WindowsWebAppSlotStorageAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotStorageAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotStorageAccountObservation) DeepCopyInto(out *WindowsWebAppSlotStorageAccountObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotStorageAccountObservation.
func (in *WindowsWebAppSlotStorageAccountObservation) DeepCopy() *WindowsWebAppSlotStorageAccountObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotStorageAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSlotStorageAccountParameters) DeepCopyInto(out *WindowsWebAppSlotStorageAccountParameters) {
	*out = *in
	out.AccessKeySecretRef = in.AccessKeySecretRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSlotStorageAccountParameters.
func (in *WindowsWebAppSlotStorageAccountParameters) DeepCopy() *WindowsWebAppSlotStorageAccountParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSlotStorageAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppSpec) DeepCopyInto(out *WindowsWebAppSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppSpec.
func (in *WindowsWebAppSpec) DeepCopy() *WindowsWebAppSpec {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppStatus) DeepCopyInto(out *WindowsWebAppStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppStatus.
func (in *WindowsWebAppStatus) DeepCopy() *WindowsWebAppStatus {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppStickySettingsInitParameters) DeepCopyInto(out *WindowsWebAppStickySettingsInitParameters) {
	*out = *in
	if in.AppSettingNames != nil {
		in, out := &in.AppSettingNames, &out.AppSettingNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConnectionStringNames != nil {
		in, out := &in.ConnectionStringNames, &out.ConnectionStringNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppStickySettingsInitParameters.
func (in *WindowsWebAppStickySettingsInitParameters) DeepCopy() *WindowsWebAppStickySettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppStickySettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppStickySettingsObservation) DeepCopyInto(out *WindowsWebAppStickySettingsObservation) {
	*out = *in
	if in.AppSettingNames != nil {
		in, out := &in.AppSettingNames, &out.AppSettingNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConnectionStringNames != nil {
		in, out := &in.ConnectionStringNames, &out.ConnectionStringNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppStickySettingsObservation.
func (in *WindowsWebAppStickySettingsObservation) DeepCopy() *WindowsWebAppStickySettingsObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppStickySettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppStickySettingsParameters) DeepCopyInto(out *WindowsWebAppStickySettingsParameters) {
	*out = *in
	if in.AppSettingNames != nil {
		in, out := &in.AppSettingNames, &out.AppSettingNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConnectionStringNames != nil {
		in, out := &in.ConnectionStringNames, &out.ConnectionStringNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppStickySettingsParameters.
func (in *WindowsWebAppStickySettingsParameters) DeepCopy() *WindowsWebAppStickySettingsParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppStickySettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppStorageAccountInitParameters) DeepCopyInto(out *WindowsWebAppStorageAccountInitParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppStorageAccountInitParameters.
func (in *WindowsWebAppStorageAccountInitParameters) DeepCopy() *WindowsWebAppStorageAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppStorageAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppStorageAccountObservation) DeepCopyInto(out *WindowsWebAppStorageAccountObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppStorageAccountObservation.
func (in *WindowsWebAppStorageAccountObservation) DeepCopy() *WindowsWebAppStorageAccountObservation {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppStorageAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowsWebAppStorageAccountParameters) DeepCopyInto(out *WindowsWebAppStorageAccountParameters) {
	*out = *in
	out.AccessKeySecretRef = in.AccessKeySecretRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowsWebAppStorageAccountParameters.
func (in *WindowsWebAppStorageAccountParameters) DeepCopy() *WindowsWebAppStorageAccountParameters {
	if in == nil {
		return nil
	}
	out := new(WindowsWebAppStorageAccountParameters)
	in.DeepCopyInto(out)
	return out
}
