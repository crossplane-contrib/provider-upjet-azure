//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionObservation) DeepCopyInto(out *ActionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionObservation.
func (in *ActionObservation) DeepCopy() *ActionObservation {
	if in == nil {
		return nil
	}
	out := new(ActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionParameters) DeepCopyInto(out *ActionParameters) {
	*out = *in
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.MinimumProcessExecutionTime != nil {
		in, out := &in.MinimumProcessExecutionTime, &out.MinimumProcessExecutionTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionParameters.
func (in *ActionParameters) DeepCopy() *ActionParameters {
	if in == nil {
		return nil
	}
	out := new(ActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectoryObservation) DeepCopyInto(out *ActiveDirectoryObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectoryObservation.
func (in *ActiveDirectoryObservation) DeepCopy() *ActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectoryParameters) DeepCopyInto(out *ActiveDirectoryParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectoryParameters.
func (in *ActiveDirectoryParameters) DeepCopy() *ActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppServiceLogsObservation) DeepCopyInto(out *AppServiceLogsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppServiceLogsObservation.
func (in *AppServiceLogsObservation) DeepCopy() *AppServiceLogsObservation {
	if in == nil {
		return nil
	}
	out := new(AppServiceLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppServiceLogsParameters) DeepCopyInto(out *AppServiceLogsParameters) {
	*out = *in
	if in.DiskQuotaMb != nil {
		in, out := &in.DiskQuotaMb, &out.DiskQuotaMb
		*out = new(float64)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppServiceLogsParameters.
func (in *AppServiceLogsParameters) DeepCopy() *AppServiceLogsParameters {
	if in == nil {
		return nil
	}
	out := new(AppServiceLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppServicePlan) DeepCopyInto(out *AppServicePlan) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppServicePlan.
func (in *AppServicePlan) DeepCopy() *AppServicePlan {
	if in == nil {
		return nil
	}
	out := new(AppServicePlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppServicePlan) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppServicePlanList) DeepCopyInto(out *AppServicePlanList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AppServicePlan, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppServicePlanList.
func (in *AppServicePlanList) DeepCopy() *AppServicePlanList {
	if in == nil {
		return nil
	}
	out := new(AppServicePlanList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppServicePlanList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppServicePlanObservation) DeepCopyInto(out *AppServicePlanObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MaximumNumberOfWorkers != nil {
		in, out := &in.MaximumNumberOfWorkers, &out.MaximumNumberOfWorkers
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppServicePlanObservation.
func (in *AppServicePlanObservation) DeepCopy() *AppServicePlanObservation {
	if in == nil {
		return nil
	}
	out := new(AppServicePlanObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppServicePlanParameters) DeepCopyInto(out *AppServicePlanParameters) {
	*out = *in
	if in.AppServiceEnvironmentID != nil {
		in, out := &in.AppServiceEnvironmentID, &out.AppServiceEnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.IsXenon != nil {
		in, out := &in.IsXenon, &out.IsXenon
		*out = new(bool)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaximumElasticWorkerCount != nil {
		in, out := &in.MaximumElasticWorkerCount, &out.MaximumElasticWorkerCount
		*out = new(float64)
		**out = **in
	}
	if in.PerSiteScaling != nil {
		in, out := &in.PerSiteScaling, &out.PerSiteScaling
		*out = new(bool)
		**out = **in
	}
	if in.Reserved != nil {
		in, out := &in.Reserved, &out.Reserved
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = make([]SkuParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppServicePlanParameters.
func (in *AppServicePlanParameters) DeepCopy() *AppServicePlanParameters {
	if in == nil {
		return nil
	}
	out := new(AppServicePlanParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppServicePlanSpec) DeepCopyInto(out *AppServicePlanSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppServicePlanSpec.
func (in *AppServicePlanSpec) DeepCopy() *AppServicePlanSpec {
	if in == nil {
		return nil
	}
	out := new(AppServicePlanSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppServicePlanStatus) DeepCopyInto(out *AppServicePlanStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppServicePlanStatus.
func (in *AppServicePlanStatus) DeepCopy() *AppServicePlanStatus {
	if in == nil {
		return nil
	}
	out := new(AppServicePlanStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLogsAzureBlobStorageObservation) DeepCopyInto(out *ApplicationLogsAzureBlobStorageObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLogsAzureBlobStorageObservation.
func (in *ApplicationLogsAzureBlobStorageObservation) DeepCopy() *ApplicationLogsAzureBlobStorageObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationLogsAzureBlobStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLogsAzureBlobStorageParameters) DeepCopyInto(out *ApplicationLogsAzureBlobStorageParameters) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.SASURL != nil {
		in, out := &in.SASURL, &out.SASURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLogsAzureBlobStorageParameters.
func (in *ApplicationLogsAzureBlobStorageParameters) DeepCopy() *ApplicationLogsAzureBlobStorageParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationLogsAzureBlobStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLogsObservation) DeepCopyInto(out *ApplicationLogsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLogsObservation.
func (in *ApplicationLogsObservation) DeepCopy() *ApplicationLogsObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLogsParameters) DeepCopyInto(out *ApplicationLogsParameters) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]AzureBlobStorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemLevel != nil {
		in, out := &in.FileSystemLevel, &out.FileSystemLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLogsParameters.
func (in *ApplicationLogsParameters) DeepCopy() *ApplicationLogsParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationStackDockerObservation) DeepCopyInto(out *ApplicationStackDockerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationStackDockerObservation.
func (in *ApplicationStackDockerObservation) DeepCopy() *ApplicationStackDockerObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationStackDockerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationStackDockerParameters) DeepCopyInto(out *ApplicationStackDockerParameters) {
	*out = *in
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.ImageTag != nil {
		in, out := &in.ImageTag, &out.ImageTag
		*out = new(string)
		**out = **in
	}
	if in.RegistryPasswordSecretRef != nil {
		in, out := &in.RegistryPasswordSecretRef, &out.RegistryPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.RegistryURL != nil {
		in, out := &in.RegistryURL, &out.RegistryURL
		*out = new(string)
		**out = **in
	}
	if in.RegistryUsernameSecretRef != nil {
		in, out := &in.RegistryUsernameSecretRef, &out.RegistryUsernameSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationStackDockerParameters.
func (in *ApplicationStackDockerParameters) DeepCopy() *ApplicationStackDockerParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationStackDockerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationStackObservation) DeepCopyInto(out *ApplicationStackObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationStackObservation.
func (in *ApplicationStackObservation) DeepCopy() *ApplicationStackObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationStackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationStackParameters) DeepCopyInto(out *ApplicationStackParameters) {
	*out = *in
	if in.Docker != nil {
		in, out := &in.Docker, &out.Docker
		*out = make([]DockerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PowershellCoreVersion != nil {
		in, out := &in.PowershellCoreVersion, &out.PowershellCoreVersion
		*out = new(string)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.UseCustomRuntime != nil {
		in, out := &in.UseCustomRuntime, &out.UseCustomRuntime
		*out = new(bool)
		**out = **in
	}
	if in.UseDotnetIsolatedRuntime != nil {
		in, out := &in.UseDotnetIsolatedRuntime, &out.UseDotnetIsolatedRuntime
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationStackParameters.
func (in *ApplicationStackParameters) DeepCopy() *ApplicationStackParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationStackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsActiveDirectoryObservation) DeepCopyInto(out *AuthSettingsActiveDirectoryObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsActiveDirectoryObservation.
func (in *AuthSettingsActiveDirectoryObservation) DeepCopy() *AuthSettingsActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsActiveDirectoryParameters) DeepCopyInto(out *AuthSettingsActiveDirectoryParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsActiveDirectoryParameters.
func (in *AuthSettingsActiveDirectoryParameters) DeepCopy() *AuthSettingsActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsFacebookObservation) DeepCopyInto(out *AuthSettingsFacebookObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsFacebookObservation.
func (in *AuthSettingsFacebookObservation) DeepCopy() *AuthSettingsFacebookObservation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsFacebookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsFacebookParameters) DeepCopyInto(out *AuthSettingsFacebookParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	out.AppSecretSecretRef = in.AppSecretSecretRef
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsFacebookParameters.
func (in *AuthSettingsFacebookParameters) DeepCopy() *AuthSettingsFacebookParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsFacebookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsGithubObservation) DeepCopyInto(out *AuthSettingsGithubObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsGithubObservation.
func (in *AuthSettingsGithubObservation) DeepCopy() *AuthSettingsGithubObservation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsGithubObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsGithubParameters) DeepCopyInto(out *AuthSettingsGithubParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsGithubParameters.
func (in *AuthSettingsGithubParameters) DeepCopy() *AuthSettingsGithubParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsGithubParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsGoogleObservation) DeepCopyInto(out *AuthSettingsGoogleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsGoogleObservation.
func (in *AuthSettingsGoogleObservation) DeepCopy() *AuthSettingsGoogleObservation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsGoogleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsGoogleParameters) DeepCopyInto(out *AuthSettingsGoogleParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsGoogleParameters.
func (in *AuthSettingsGoogleParameters) DeepCopy() *AuthSettingsGoogleParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsGoogleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsMicrosoftObservation) DeepCopyInto(out *AuthSettingsMicrosoftObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsMicrosoftObservation.
func (in *AuthSettingsMicrosoftObservation) DeepCopy() *AuthSettingsMicrosoftObservation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsMicrosoftObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsMicrosoftParameters) DeepCopyInto(out *AuthSettingsMicrosoftParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsMicrosoftParameters.
func (in *AuthSettingsMicrosoftParameters) DeepCopy() *AuthSettingsMicrosoftParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsMicrosoftParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsObservation) DeepCopyInto(out *AuthSettingsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsObservation.
func (in *AuthSettingsObservation) DeepCopy() *AuthSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsParameters) DeepCopyInto(out *AuthSettingsParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]ActiveDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParams != nil {
		in, out := &in.AdditionalLoginParams, &out.AdditionalLoginParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]FacebookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]GoogleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]MicrosoftParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]TwitterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsParameters.
func (in *AuthSettingsParameters) DeepCopy() *AuthSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsTwitterObservation) DeepCopyInto(out *AuthSettingsTwitterObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsTwitterObservation.
func (in *AuthSettingsTwitterObservation) DeepCopy() *AuthSettingsTwitterObservation {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsTwitterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSettingsTwitterParameters) DeepCopyInto(out *AuthSettingsTwitterParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	out.ConsumerSecretSecretRef = in.ConsumerSecretSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSettingsTwitterParameters.
func (in *AuthSettingsTwitterParameters) DeepCopy() *AuthSettingsTwitterParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSettingsTwitterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingActionObservation) DeepCopyInto(out *AutoHealSettingActionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingActionObservation.
func (in *AutoHealSettingActionObservation) DeepCopy() *AutoHealSettingActionObservation {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingActionParameters) DeepCopyInto(out *AutoHealSettingActionParameters) {
	*out = *in
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.MinimumProcessExecutionTime != nil {
		in, out := &in.MinimumProcessExecutionTime, &out.MinimumProcessExecutionTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingActionParameters.
func (in *AutoHealSettingActionParameters) DeepCopy() *AutoHealSettingActionParameters {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingObservation) DeepCopyInto(out *AutoHealSettingObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingObservation.
func (in *AutoHealSettingObservation) DeepCopy() *AutoHealSettingObservation {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingParameters) DeepCopyInto(out *AutoHealSettingParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingParameters.
func (in *AutoHealSettingParameters) DeepCopy() *AutoHealSettingParameters {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingTriggerObservation) DeepCopyInto(out *AutoHealSettingTriggerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingTriggerObservation.
func (in *AutoHealSettingTriggerObservation) DeepCopy() *AutoHealSettingTriggerObservation {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingTriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealSettingTriggerParameters) DeepCopyInto(out *AutoHealSettingTriggerParameters) {
	*out = *in
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = make([]TriggerRequestsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SlowRequest != nil {
		in, out := &in.SlowRequest, &out.SlowRequest
		*out = make([]TriggerSlowRequestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = make([]TriggerStatusCodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealSettingTriggerParameters.
func (in *AutoHealSettingTriggerParameters) DeepCopy() *AutoHealSettingTriggerParameters {
	if in == nil {
		return nil
	}
	out := new(AutoHealSettingTriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobStorageObservation) DeepCopyInto(out *AzureBlobStorageObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobStorageObservation.
func (in *AzureBlobStorageObservation) DeepCopy() *AzureBlobStorageObservation {
	if in == nil {
		return nil
	}
	out := new(AzureBlobStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobStorageParameters) DeepCopyInto(out *AzureBlobStorageParameters) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.SASURL != nil {
		in, out := &in.SASURL, &out.SASURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobStorageParameters.
func (in *AzureBlobStorageParameters) DeepCopy() *AzureBlobStorageParameters {
	if in == nil {
		return nil
	}
	out := new(AzureBlobStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupObservation) DeepCopyInto(out *BackupObservation) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupObservation.
func (in *BackupObservation) DeepCopy() *BackupObservation {
	if in == nil {
		return nil
	}
	out := new(BackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupParameters) DeepCopyInto(out *BackupParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.StorageAccountURLSecretRef = in.StorageAccountURLSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupParameters.
func (in *BackupParameters) DeepCopy() *BackupParameters {
	if in == nil {
		return nil
	}
	out := new(BackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupScheduleObservation) DeepCopyInto(out *BackupScheduleObservation) {
	*out = *in
	if in.LastExecutionTime != nil {
		in, out := &in.LastExecutionTime, &out.LastExecutionTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupScheduleObservation.
func (in *BackupScheduleObservation) DeepCopy() *BackupScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(BackupScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupScheduleParameters) DeepCopyInto(out *BackupScheduleParameters) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupScheduleParameters.
func (in *BackupScheduleParameters) DeepCopy() *BackupScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(BackupScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStringObservation) DeepCopyInto(out *ConnectionStringObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStringObservation.
func (in *ConnectionStringObservation) DeepCopy() *ConnectionStringObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionStringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStringParameters) DeepCopyInto(out *ConnectionStringParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	out.ValueSecretRef = in.ValueSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStringParameters.
func (in *ConnectionStringParameters) DeepCopy() *ConnectionStringParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionStringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsObservation) DeepCopyInto(out *CorsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsObservation.
func (in *CorsObservation) DeepCopy() *CorsObservation {
	if in == nil {
		return nil
	}
	out := new(CorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsParameters) DeepCopyInto(out *CorsParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsParameters.
func (in *CorsParameters) DeepCopy() *CorsParameters {
	if in == nil {
		return nil
	}
	out := new(CorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerObservation) DeepCopyInto(out *DockerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerObservation.
func (in *DockerObservation) DeepCopy() *DockerObservation {
	if in == nil {
		return nil
	}
	out := new(DockerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerParameters) DeepCopyInto(out *DockerParameters) {
	*out = *in
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.ImageTag != nil {
		in, out := &in.ImageTag, &out.ImageTag
		*out = new(string)
		**out = **in
	}
	if in.RegistryPasswordSecretRef != nil {
		in, out := &in.RegistryPasswordSecretRef, &out.RegistryPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.RegistryURL != nil {
		in, out := &in.RegistryURL, &out.RegistryURL
		*out = new(string)
		**out = **in
	}
	if in.RegistryUsernameSecretRef != nil {
		in, out := &in.RegistryUsernameSecretRef, &out.RegistryUsernameSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerParameters.
func (in *DockerParameters) DeepCopy() *DockerParameters {
	if in == nil {
		return nil
	}
	out := new(DockerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FacebookObservation) DeepCopyInto(out *FacebookObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FacebookObservation.
func (in *FacebookObservation) DeepCopy() *FacebookObservation {
	if in == nil {
		return nil
	}
	out := new(FacebookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FacebookParameters) DeepCopyInto(out *FacebookParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	out.AppSecretSecretRef = in.AppSecretSecretRef
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FacebookParameters.
func (in *FacebookParameters) DeepCopy() *FacebookParameters {
	if in == nil {
		return nil
	}
	out := new(FacebookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemObservation) DeepCopyInto(out *FileSystemObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemObservation.
func (in *FileSystemObservation) DeepCopy() *FileSystemObservation {
	if in == nil {
		return nil
	}
	out := new(FileSystemObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemParameters) DeepCopyInto(out *FileSystemParameters) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.RetentionInMb != nil {
		in, out := &in.RetentionInMb, &out.RetentionInMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemParameters.
func (in *FileSystemParameters) DeepCopy() *FileSystemParameters {
	if in == nil {
		return nil
	}
	out := new(FileSystemParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionApp) DeepCopyInto(out *FunctionApp) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionApp.
func (in *FunctionApp) DeepCopy() *FunctionApp {
	if in == nil {
		return nil
	}
	out := new(FunctionApp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FunctionApp) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppList) DeepCopyInto(out *FunctionAppList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FunctionApp, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppList.
func (in *FunctionAppList) DeepCopy() *FunctionAppList {
	if in == nil {
		return nil
	}
	out := new(FunctionAppList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FunctionAppList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppObservation) DeepCopyInto(out *FunctionAppObservation) {
	*out = *in
	if in.CustomDomainVerificationID != nil {
		in, out := &in.CustomDomainVerificationID, &out.CustomDomainVerificationID
		*out = new(string)
		**out = **in
	}
	if in.DefaultHostName != nil {
		in, out := &in.DefaultHostName, &out.DefaultHostName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.OutboundIPAddresses != nil {
		in, out := &in.OutboundIPAddresses, &out.OutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.PossibleOutboundIPAddresses != nil {
		in, out := &in.PossibleOutboundIPAddresses, &out.PossibleOutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.SiteCredential != nil {
		in, out := &in.SiteCredential, &out.SiteCredential
		*out = make([]SiteCredentialObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppObservation.
func (in *FunctionAppObservation) DeepCopy() *FunctionAppObservation {
	if in == nil {
		return nil
	}
	out := new(FunctionAppObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppParameters) DeepCopyInto(out *FunctionAppParameters) {
	*out = *in
	if in.AppServicePlanID != nil {
		in, out := &in.AppServicePlanID, &out.AppServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.AppServicePlanIDRef != nil {
		in, out := &in.AppServicePlanIDRef, &out.AppServicePlanIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AppServicePlanIDSelector != nil {
		in, out := &in.AppServicePlanIDSelector, &out.AppServicePlanIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]AuthSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientCertMode != nil {
		in, out := &in.ClientCertMode, &out.ClientCertMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]ConnectionStringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DailyMemoryTimeQuota != nil {
		in, out := &in.DailyMemoryTimeQuota, &out.DailyMemoryTimeQuota
		*out = new(float64)
		**out = **in
	}
	if in.EnableBuiltinLogging != nil {
		in, out := &in.EnableBuiltinLogging, &out.EnableBuiltinLogging
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]SiteConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceControl != nil {
		in, out := &in.SourceControl, &out.SourceControl
		*out = make([]SourceControlParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.StorageAccountAccessKeySecretRef = in.StorageAccountAccessKeySecretRef
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountNameRef != nil {
		in, out := &in.StorageAccountNameRef, &out.StorageAccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountNameSelector != nil {
		in, out := &in.StorageAccountNameSelector, &out.StorageAccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppParameters.
func (in *FunctionAppParameters) DeepCopy() *FunctionAppParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlot) DeepCopyInto(out *FunctionAppSlot) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlot.
func (in *FunctionAppSlot) DeepCopy() *FunctionAppSlot {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FunctionAppSlot) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotAuthSettingsObservation) DeepCopyInto(out *FunctionAppSlotAuthSettingsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotAuthSettingsObservation.
func (in *FunctionAppSlotAuthSettingsObservation) DeepCopy() *FunctionAppSlotAuthSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotAuthSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotAuthSettingsParameters) DeepCopyInto(out *FunctionAppSlotAuthSettingsParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]AuthSettingsActiveDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParams != nil {
		in, out := &in.AdditionalLoginParams, &out.AdditionalLoginParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]AuthSettingsFacebookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]AuthSettingsGoogleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]AuthSettingsMicrosoftParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]AuthSettingsTwitterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotAuthSettingsParameters.
func (in *FunctionAppSlotAuthSettingsParameters) DeepCopy() *FunctionAppSlotAuthSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotAuthSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotConnectionStringObservation) DeepCopyInto(out *FunctionAppSlotConnectionStringObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotConnectionStringObservation.
func (in *FunctionAppSlotConnectionStringObservation) DeepCopy() *FunctionAppSlotConnectionStringObservation {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotConnectionStringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotConnectionStringParameters) DeepCopyInto(out *FunctionAppSlotConnectionStringParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	out.ValueSecretRef = in.ValueSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotConnectionStringParameters.
func (in *FunctionAppSlotConnectionStringParameters) DeepCopy() *FunctionAppSlotConnectionStringParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotConnectionStringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotIdentityObservation) DeepCopyInto(out *FunctionAppSlotIdentityObservation) {
	*out = *in
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotIdentityObservation.
func (in *FunctionAppSlotIdentityObservation) DeepCopy() *FunctionAppSlotIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotIdentityParameters) DeepCopyInto(out *FunctionAppSlotIdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotIdentityParameters.
func (in *FunctionAppSlotIdentityParameters) DeepCopy() *FunctionAppSlotIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotList) DeepCopyInto(out *FunctionAppSlotList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FunctionAppSlot, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotList.
func (in *FunctionAppSlotList) DeepCopy() *FunctionAppSlotList {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FunctionAppSlotList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotObservation) DeepCopyInto(out *FunctionAppSlotObservation) {
	*out = *in
	if in.DefaultHostName != nil {
		in, out := &in.DefaultHostName, &out.DefaultHostName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]FunctionAppSlotIdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.OutboundIPAddresses != nil {
		in, out := &in.OutboundIPAddresses, &out.OutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.PossibleOutboundIPAddresses != nil {
		in, out := &in.PossibleOutboundIPAddresses, &out.PossibleOutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.SiteCredential != nil {
		in, out := &in.SiteCredential, &out.SiteCredential
		*out = make([]FunctionAppSlotSiteCredentialObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotObservation.
func (in *FunctionAppSlotObservation) DeepCopy() *FunctionAppSlotObservation {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotParameters) DeepCopyInto(out *FunctionAppSlotParameters) {
	*out = *in
	if in.AppServicePlanID != nil {
		in, out := &in.AppServicePlanID, &out.AppServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.AppServicePlanIDRef != nil {
		in, out := &in.AppServicePlanIDRef, &out.AppServicePlanIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AppServicePlanIDSelector != nil {
		in, out := &in.AppServicePlanIDSelector, &out.AppServicePlanIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]FunctionAppSlotAuthSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]FunctionAppSlotConnectionStringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DailyMemoryTimeQuota != nil {
		in, out := &in.DailyMemoryTimeQuota, &out.DailyMemoryTimeQuota
		*out = new(float64)
		**out = **in
	}
	if in.EnableBuiltinLogging != nil {
		in, out := &in.EnableBuiltinLogging, &out.EnableBuiltinLogging
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FunctionAppName != nil {
		in, out := &in.FunctionAppName, &out.FunctionAppName
		*out = new(string)
		**out = **in
	}
	if in.FunctionAppNameRef != nil {
		in, out := &in.FunctionAppNameRef, &out.FunctionAppNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionAppNameSelector != nil {
		in, out := &in.FunctionAppNameSelector, &out.FunctionAppNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]FunctionAppSlotIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]FunctionAppSlotSiteConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.StorageAccountAccessKeySecretRef = in.StorageAccountAccessKeySecretRef
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountNameRef != nil {
		in, out := &in.StorageAccountNameRef, &out.StorageAccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountNameSelector != nil {
		in, out := &in.StorageAccountNameSelector, &out.StorageAccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotParameters.
func (in *FunctionAppSlotParameters) DeepCopy() *FunctionAppSlotParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotSiteConfigObservation) DeepCopyInto(out *FunctionAppSlotSiteConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotSiteConfigObservation.
func (in *FunctionAppSlotSiteConfigObservation) DeepCopy() *FunctionAppSlotSiteConfigObservation {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotSiteConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotSiteConfigParameters) DeepCopyInto(out *FunctionAppSlotSiteConfigParameters) {
	*out = *in
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(float64)
		**out = **in
	}
	if in.AutoSwapSlotName != nil {
		in, out := &in.AutoSwapSlotName, &out.AutoSwapSlotName
		*out = new(string)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]SiteConfigCorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DotnetFrameworkVersion != nil {
		in, out := &in.DotnetFrameworkVersion, &out.DotnetFrameworkVersion
		*out = new(string)
		**out = **in
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(float64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]SiteConfigIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.LinuxFxVersion != nil {
		in, out := &in.LinuxFxVersion, &out.LinuxFxVersion
		*out = new(string)
		**out = **in
	}
	if in.MinTLSVersion != nil {
		in, out := &in.MinTLSVersion, &out.MinTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]SiteConfigScmIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmType != nil {
		in, out := &in.ScmType, &out.ScmType
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorkerProcess != nil {
		in, out := &in.Use32BitWorkerProcess, &out.Use32BitWorkerProcess
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotSiteConfigParameters.
func (in *FunctionAppSlotSiteConfigParameters) DeepCopy() *FunctionAppSlotSiteConfigParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotSiteConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotSiteCredentialObservation) DeepCopyInto(out *FunctionAppSlotSiteCredentialObservation) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotSiteCredentialObservation.
func (in *FunctionAppSlotSiteCredentialObservation) DeepCopy() *FunctionAppSlotSiteCredentialObservation {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotSiteCredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotSiteCredentialParameters) DeepCopyInto(out *FunctionAppSlotSiteCredentialParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotSiteCredentialParameters.
func (in *FunctionAppSlotSiteCredentialParameters) DeepCopy() *FunctionAppSlotSiteCredentialParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotSiteCredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotSpec) DeepCopyInto(out *FunctionAppSlotSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotSpec.
func (in *FunctionAppSlotSpec) DeepCopy() *FunctionAppSlotSpec {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSlotStatus) DeepCopyInto(out *FunctionAppSlotStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSlotStatus.
func (in *FunctionAppSlotStatus) DeepCopy() *FunctionAppSlotStatus {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSlotStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppSpec) DeepCopyInto(out *FunctionAppSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppSpec.
func (in *FunctionAppSpec) DeepCopy() *FunctionAppSpec {
	if in == nil {
		return nil
	}
	out := new(FunctionAppSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionAppStatus) DeepCopyInto(out *FunctionAppStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionAppStatus.
func (in *FunctionAppStatus) DeepCopy() *FunctionAppStatus {
	if in == nil {
		return nil
	}
	out := new(FunctionAppStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubObservation) DeepCopyInto(out *GithubObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubObservation.
func (in *GithubObservation) DeepCopy() *GithubObservation {
	if in == nil {
		return nil
	}
	out := new(GithubObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubParameters) DeepCopyInto(out *GithubParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubParameters.
func (in *GithubParameters) DeepCopy() *GithubParameters {
	if in == nil {
		return nil
	}
	out := new(GithubParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleObservation) DeepCopyInto(out *GoogleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleObservation.
func (in *GoogleObservation) DeepCopy() *GoogleObservation {
	if in == nil {
		return nil
	}
	out := new(GoogleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleParameters) DeepCopyInto(out *GoogleParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleParameters.
func (in *GoogleParameters) DeepCopy() *GoogleParameters {
	if in == nil {
		return nil
	}
	out := new(GoogleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPLogsAzureBlobStorageObservation) DeepCopyInto(out *HTTPLogsAzureBlobStorageObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPLogsAzureBlobStorageObservation.
func (in *HTTPLogsAzureBlobStorageObservation) DeepCopy() *HTTPLogsAzureBlobStorageObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPLogsAzureBlobStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPLogsAzureBlobStorageParameters) DeepCopyInto(out *HTTPLogsAzureBlobStorageParameters) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	out.SASURLSecretRef = in.SASURLSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPLogsAzureBlobStorageParameters.
func (in *HTTPLogsAzureBlobStorageParameters) DeepCopy() *HTTPLogsAzureBlobStorageParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPLogsAzureBlobStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPLogsFileSystemObservation) DeepCopyInto(out *HTTPLogsFileSystemObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPLogsFileSystemObservation.
func (in *HTTPLogsFileSystemObservation) DeepCopy() *HTTPLogsFileSystemObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPLogsFileSystemObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPLogsFileSystemParameters) DeepCopyInto(out *HTTPLogsFileSystemParameters) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.RetentionInMb != nil {
		in, out := &in.RetentionInMb, &out.RetentionInMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPLogsFileSystemParameters.
func (in *HTTPLogsFileSystemParameters) DeepCopy() *HTTPLogsFileSystemParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPLogsFileSystemParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPLogsObservation) DeepCopyInto(out *HTTPLogsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPLogsObservation.
func (in *HTTPLogsObservation) DeepCopy() *HTTPLogsObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPLogsParameters) DeepCopyInto(out *HTTPLogsParameters) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]HTTPLogsAzureBlobStorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystem != nil {
		in, out := &in.FileSystem, &out.FileSystem
		*out = make([]FileSystemParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPLogsParameters.
func (in *HTTPLogsParameters) DeepCopy() *HTTPLogsParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadersObservation) DeepCopyInto(out *HeadersObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadersObservation.
func (in *HeadersObservation) DeepCopy() *HeadersObservation {
	if in == nil {
		return nil
	}
	out := new(HeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadersParameters) DeepCopyInto(out *HeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadersParameters.
func (in *HeadersParameters) DeepCopy() *HeadersParameters {
	if in == nil {
		return nil
	}
	out := new(HeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPRestrictionHeadersObservation) DeepCopyInto(out *IPRestrictionHeadersObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPRestrictionHeadersObservation.
func (in *IPRestrictionHeadersObservation) DeepCopy() *IPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(IPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPRestrictionHeadersParameters) DeepCopyInto(out *IPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPRestrictionHeadersParameters.
func (in *IPRestrictionHeadersParameters) DeepCopy() *IPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(IPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPRestrictionObservation) DeepCopyInto(out *IPRestrictionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPRestrictionObservation.
func (in *IPRestrictionObservation) DeepCopy() *IPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(IPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPRestrictionParameters) DeepCopyInto(out *IPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]HeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPRestrictionParameters.
func (in *IPRestrictionParameters) DeepCopy() *IPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(IPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityObservation) DeepCopyInto(out *IdentityObservation) {
	*out = *in
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityObservation.
func (in *IdentityObservation) DeepCopy() *IdentityObservation {
	if in == nil {
		return nil
	}
	out := new(IdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityParameters) DeepCopyInto(out *IdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityParameters.
func (in *IdentityParameters) DeepCopy() *IdentityParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionApp) DeepCopyInto(out *LinuxFunctionApp) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionApp.
func (in *LinuxFunctionApp) DeepCopy() *LinuxFunctionApp {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionApp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinuxFunctionApp) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsActiveDirectoryObservation) DeepCopyInto(out *LinuxFunctionAppAuthSettingsActiveDirectoryObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsActiveDirectoryObservation.
func (in *LinuxFunctionAppAuthSettingsActiveDirectoryObservation) DeepCopy() *LinuxFunctionAppAuthSettingsActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsActiveDirectoryParameters) DeepCopyInto(out *LinuxFunctionAppAuthSettingsActiveDirectoryParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsActiveDirectoryParameters.
func (in *LinuxFunctionAppAuthSettingsActiveDirectoryParameters) DeepCopy() *LinuxFunctionAppAuthSettingsActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsFacebookObservation) DeepCopyInto(out *LinuxFunctionAppAuthSettingsFacebookObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsFacebookObservation.
func (in *LinuxFunctionAppAuthSettingsFacebookObservation) DeepCopy() *LinuxFunctionAppAuthSettingsFacebookObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsFacebookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsFacebookParameters) DeepCopyInto(out *LinuxFunctionAppAuthSettingsFacebookParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSecretRef != nil {
		in, out := &in.AppSecretSecretRef, &out.AppSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsFacebookParameters.
func (in *LinuxFunctionAppAuthSettingsFacebookParameters) DeepCopy() *LinuxFunctionAppAuthSettingsFacebookParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsFacebookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsGoogleObservation) DeepCopyInto(out *LinuxFunctionAppAuthSettingsGoogleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsGoogleObservation.
func (in *LinuxFunctionAppAuthSettingsGoogleObservation) DeepCopy() *LinuxFunctionAppAuthSettingsGoogleObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsGoogleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsGoogleParameters) DeepCopyInto(out *LinuxFunctionAppAuthSettingsGoogleParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsGoogleParameters.
func (in *LinuxFunctionAppAuthSettingsGoogleParameters) DeepCopy() *LinuxFunctionAppAuthSettingsGoogleParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsGoogleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsMicrosoftObservation) DeepCopyInto(out *LinuxFunctionAppAuthSettingsMicrosoftObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsMicrosoftObservation.
func (in *LinuxFunctionAppAuthSettingsMicrosoftObservation) DeepCopy() *LinuxFunctionAppAuthSettingsMicrosoftObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsMicrosoftObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsMicrosoftParameters) DeepCopyInto(out *LinuxFunctionAppAuthSettingsMicrosoftParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsMicrosoftParameters.
func (in *LinuxFunctionAppAuthSettingsMicrosoftParameters) DeepCopy() *LinuxFunctionAppAuthSettingsMicrosoftParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsMicrosoftParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsObservation) DeepCopyInto(out *LinuxFunctionAppAuthSettingsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsObservation.
func (in *LinuxFunctionAppAuthSettingsObservation) DeepCopy() *LinuxFunctionAppAuthSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsParameters) DeepCopyInto(out *LinuxFunctionAppAuthSettingsParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]LinuxFunctionAppAuthSettingsActiveDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]LinuxFunctionAppAuthSettingsFacebookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]GithubParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]LinuxFunctionAppAuthSettingsGoogleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]LinuxFunctionAppAuthSettingsMicrosoftParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]LinuxFunctionAppAuthSettingsTwitterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsParameters.
func (in *LinuxFunctionAppAuthSettingsParameters) DeepCopy() *LinuxFunctionAppAuthSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsTwitterObservation) DeepCopyInto(out *LinuxFunctionAppAuthSettingsTwitterObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsTwitterObservation.
func (in *LinuxFunctionAppAuthSettingsTwitterObservation) DeepCopy() *LinuxFunctionAppAuthSettingsTwitterObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsTwitterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppAuthSettingsTwitterParameters) DeepCopyInto(out *LinuxFunctionAppAuthSettingsTwitterParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSecretRef != nil {
		in, out := &in.ConsumerSecretSecretRef, &out.ConsumerSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppAuthSettingsTwitterParameters.
func (in *LinuxFunctionAppAuthSettingsTwitterParameters) DeepCopy() *LinuxFunctionAppAuthSettingsTwitterParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppAuthSettingsTwitterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppConnectionStringObservation) DeepCopyInto(out *LinuxFunctionAppConnectionStringObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppConnectionStringObservation.
func (in *LinuxFunctionAppConnectionStringObservation) DeepCopy() *LinuxFunctionAppConnectionStringObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppConnectionStringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppConnectionStringParameters) DeepCopyInto(out *LinuxFunctionAppConnectionStringParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	out.ValueSecretRef = in.ValueSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppConnectionStringParameters.
func (in *LinuxFunctionAppConnectionStringParameters) DeepCopy() *LinuxFunctionAppConnectionStringParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppConnectionStringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppIdentityObservation) DeepCopyInto(out *LinuxFunctionAppIdentityObservation) {
	*out = *in
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppIdentityObservation.
func (in *LinuxFunctionAppIdentityObservation) DeepCopy() *LinuxFunctionAppIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppIdentityParameters) DeepCopyInto(out *LinuxFunctionAppIdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppIdentityParameters.
func (in *LinuxFunctionAppIdentityParameters) DeepCopy() *LinuxFunctionAppIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppList) DeepCopyInto(out *LinuxFunctionAppList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LinuxFunctionApp, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppList.
func (in *LinuxFunctionAppList) DeepCopy() *LinuxFunctionAppList {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinuxFunctionAppList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppObservation) DeepCopyInto(out *LinuxFunctionAppObservation) {
	*out = *in
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]BackupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultHostName != nil {
		in, out := &in.DefaultHostName, &out.DefaultHostName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]LinuxFunctionAppIdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.OutboundIPAddressList != nil {
		in, out := &in.OutboundIPAddressList, &out.OutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OutboundIPAddresses != nil {
		in, out := &in.OutboundIPAddresses, &out.OutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.PossibleOutboundIPAddressList != nil {
		in, out := &in.PossibleOutboundIPAddressList, &out.PossibleOutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PossibleOutboundIPAddresses != nil {
		in, out := &in.PossibleOutboundIPAddresses, &out.PossibleOutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]LinuxFunctionAppSiteConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SiteCredential != nil {
		in, out := &in.SiteCredential, &out.SiteCredential
		*out = make([]LinuxFunctionAppSiteCredentialObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppObservation.
func (in *LinuxFunctionAppObservation) DeepCopy() *LinuxFunctionAppObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppParameters) DeepCopyInto(out *LinuxFunctionAppParameters) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]LinuxFunctionAppAuthSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]BackupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BuiltinLoggingEnabled != nil {
		in, out := &in.BuiltinLoggingEnabled, &out.BuiltinLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]LinuxFunctionAppConnectionStringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContentShareForceDisabled != nil {
		in, out := &in.ContentShareForceDisabled, &out.ContentShareForceDisabled
		*out = new(bool)
		**out = **in
	}
	if in.DailyMemoryTimeQuota != nil {
		in, out := &in.DailyMemoryTimeQuota, &out.DailyMemoryTimeQuota
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FunctionsExtensionVersion != nil {
		in, out := &in.FunctionsExtensionVersion, &out.FunctionsExtensionVersion
		*out = new(string)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]LinuxFunctionAppIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanIDRef != nil {
		in, out := &in.ServicePlanIDRef, &out.ServicePlanIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServicePlanIDSelector != nil {
		in, out := &in.ServicePlanIDSelector, &out.ServicePlanIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]LinuxFunctionAppSiteConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StickySettings != nil {
		in, out := &in.StickySettings, &out.StickySettings
		*out = make([]StickySettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]StorageAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountAccessKeySecretRef != nil {
		in, out := &in.StorageAccountAccessKeySecretRef, &out.StorageAccountAccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountNameRef != nil {
		in, out := &in.StorageAccountNameRef, &out.StorageAccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountNameSelector != nil {
		in, out := &in.StorageAccountNameSelector, &out.StorageAccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageKeyVaultSecretID != nil {
		in, out := &in.StorageKeyVaultSecretID, &out.StorageKeyVaultSecretID
		*out = new(string)
		**out = **in
	}
	if in.StorageUsesManagedIdentity != nil {
		in, out := &in.StorageUsesManagedIdentity, &out.StorageUsesManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppParameters.
func (in *LinuxFunctionAppParameters) DeepCopy() *LinuxFunctionAppParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigCorsObservation) DeepCopyInto(out *LinuxFunctionAppSiteConfigCorsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigCorsObservation.
func (in *LinuxFunctionAppSiteConfigCorsObservation) DeepCopy() *LinuxFunctionAppSiteConfigCorsObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigCorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigCorsParameters) DeepCopyInto(out *LinuxFunctionAppSiteConfigCorsParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigCorsParameters.
func (in *LinuxFunctionAppSiteConfigCorsParameters) DeepCopy() *LinuxFunctionAppSiteConfigCorsParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigCorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigIPRestrictionObservation) DeepCopyInto(out *LinuxFunctionAppSiteConfigIPRestrictionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigIPRestrictionObservation.
func (in *LinuxFunctionAppSiteConfigIPRestrictionObservation) DeepCopy() *LinuxFunctionAppSiteConfigIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigIPRestrictionParameters) DeepCopyInto(out *LinuxFunctionAppSiteConfigIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]SiteConfigIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigIPRestrictionParameters.
func (in *LinuxFunctionAppSiteConfigIPRestrictionParameters) DeepCopy() *LinuxFunctionAppSiteConfigIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigObservation) DeepCopyInto(out *LinuxFunctionAppSiteConfigObservation) {
	*out = *in
	if in.DetailedErrorLoggingEnabled != nil {
		in, out := &in.DetailedErrorLoggingEnabled, &out.DetailedErrorLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LinuxFxVersion != nil {
		in, out := &in.LinuxFxVersion, &out.LinuxFxVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmType != nil {
		in, out := &in.ScmType, &out.ScmType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigObservation.
func (in *LinuxFunctionAppSiteConfigObservation) DeepCopy() *LinuxFunctionAppSiteConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigParameters) DeepCopyInto(out *LinuxFunctionAppSiteConfigParameters) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(float64)
		**out = **in
	}
	if in.AppServiceLogs != nil {
		in, out := &in.AppServiceLogs, &out.AppServiceLogs
		*out = make([]AppServiceLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationInsightsConnectionStringSecretRef != nil {
		in, out := &in.ApplicationInsightsConnectionStringSecretRef, &out.ApplicationInsightsConnectionStringSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ApplicationInsightsKeySecretRef != nil {
		in, out := &in.ApplicationInsightsKeySecretRef, &out.ApplicationInsightsKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]ApplicationStackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainerRegistryManagedIdentityClientID != nil {
		in, out := &in.ContainerRegistryManagedIdentityClientID, &out.ContainerRegistryManagedIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryUseManagedIdentity != nil {
		in, out := &in.ContainerRegistryUseManagedIdentity, &out.ContainerRegistryUseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]LinuxFunctionAppSiteConfigCorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(float64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]LinuxFunctionAppSiteConfigIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]LinuxFunctionAppSiteConfigScmIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigParameters.
func (in *LinuxFunctionAppSiteConfigParameters) DeepCopy() *LinuxFunctionAppSiteConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigScmIPRestrictionHeadersObservation) DeepCopyInto(out *LinuxFunctionAppSiteConfigScmIPRestrictionHeadersObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigScmIPRestrictionHeadersObservation.
func (in *LinuxFunctionAppSiteConfigScmIPRestrictionHeadersObservation) DeepCopy() *LinuxFunctionAppSiteConfigScmIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigScmIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigScmIPRestrictionHeadersParameters) DeepCopyInto(out *LinuxFunctionAppSiteConfigScmIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigScmIPRestrictionHeadersParameters.
func (in *LinuxFunctionAppSiteConfigScmIPRestrictionHeadersParameters) DeepCopy() *LinuxFunctionAppSiteConfigScmIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigScmIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigScmIPRestrictionObservation) DeepCopyInto(out *LinuxFunctionAppSiteConfigScmIPRestrictionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigScmIPRestrictionObservation.
func (in *LinuxFunctionAppSiteConfigScmIPRestrictionObservation) DeepCopy() *LinuxFunctionAppSiteConfigScmIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigScmIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteConfigScmIPRestrictionParameters) DeepCopyInto(out *LinuxFunctionAppSiteConfigScmIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxFunctionAppSiteConfigScmIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteConfigScmIPRestrictionParameters.
func (in *LinuxFunctionAppSiteConfigScmIPRestrictionParameters) DeepCopy() *LinuxFunctionAppSiteConfigScmIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteConfigScmIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteCredentialObservation) DeepCopyInto(out *LinuxFunctionAppSiteCredentialObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteCredentialObservation.
func (in *LinuxFunctionAppSiteCredentialObservation) DeepCopy() *LinuxFunctionAppSiteCredentialObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteCredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSiteCredentialParameters) DeepCopyInto(out *LinuxFunctionAppSiteCredentialParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSiteCredentialParameters.
func (in *LinuxFunctionAppSiteCredentialParameters) DeepCopy() *LinuxFunctionAppSiteCredentialParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSiteCredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlot) DeepCopyInto(out *LinuxFunctionAppSlot) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlot.
func (in *LinuxFunctionAppSlot) DeepCopy() *LinuxFunctionAppSlot {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinuxFunctionAppSlot) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsActiveDirectoryObservation) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsActiveDirectoryObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsActiveDirectoryObservation.
func (in *LinuxFunctionAppSlotAuthSettingsActiveDirectoryObservation) DeepCopy() *LinuxFunctionAppSlotAuthSettingsActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsActiveDirectoryParameters) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsActiveDirectoryParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsActiveDirectoryParameters.
func (in *LinuxFunctionAppSlotAuthSettingsActiveDirectoryParameters) DeepCopy() *LinuxFunctionAppSlotAuthSettingsActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsFacebookObservation) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsFacebookObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsFacebookObservation.
func (in *LinuxFunctionAppSlotAuthSettingsFacebookObservation) DeepCopy() *LinuxFunctionAppSlotAuthSettingsFacebookObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsFacebookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsFacebookParameters) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsFacebookParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSecretRef != nil {
		in, out := &in.AppSecretSecretRef, &out.AppSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsFacebookParameters.
func (in *LinuxFunctionAppSlotAuthSettingsFacebookParameters) DeepCopy() *LinuxFunctionAppSlotAuthSettingsFacebookParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsFacebookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsGoogleObservation) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsGoogleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsGoogleObservation.
func (in *LinuxFunctionAppSlotAuthSettingsGoogleObservation) DeepCopy() *LinuxFunctionAppSlotAuthSettingsGoogleObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsGoogleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsGoogleParameters) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsGoogleParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsGoogleParameters.
func (in *LinuxFunctionAppSlotAuthSettingsGoogleParameters) DeepCopy() *LinuxFunctionAppSlotAuthSettingsGoogleParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsGoogleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsMicrosoftObservation) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsMicrosoftObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsMicrosoftObservation.
func (in *LinuxFunctionAppSlotAuthSettingsMicrosoftObservation) DeepCopy() *LinuxFunctionAppSlotAuthSettingsMicrosoftObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsMicrosoftObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsMicrosoftParameters) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsMicrosoftParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsMicrosoftParameters.
func (in *LinuxFunctionAppSlotAuthSettingsMicrosoftParameters) DeepCopy() *LinuxFunctionAppSlotAuthSettingsMicrosoftParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsMicrosoftParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsObservation) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsObservation.
func (in *LinuxFunctionAppSlotAuthSettingsObservation) DeepCopy() *LinuxFunctionAppSlotAuthSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsParameters) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]LinuxFunctionAppSlotAuthSettingsActiveDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]LinuxFunctionAppSlotAuthSettingsFacebookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]AuthSettingsGithubParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]LinuxFunctionAppSlotAuthSettingsGoogleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]LinuxFunctionAppSlotAuthSettingsMicrosoftParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]LinuxFunctionAppSlotAuthSettingsTwitterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsParameters.
func (in *LinuxFunctionAppSlotAuthSettingsParameters) DeepCopy() *LinuxFunctionAppSlotAuthSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsTwitterObservation) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsTwitterObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsTwitterObservation.
func (in *LinuxFunctionAppSlotAuthSettingsTwitterObservation) DeepCopy() *LinuxFunctionAppSlotAuthSettingsTwitterObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsTwitterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotAuthSettingsTwitterParameters) DeepCopyInto(out *LinuxFunctionAppSlotAuthSettingsTwitterParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSecretRef != nil {
		in, out := &in.ConsumerSecretSecretRef, &out.ConsumerSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotAuthSettingsTwitterParameters.
func (in *LinuxFunctionAppSlotAuthSettingsTwitterParameters) DeepCopy() *LinuxFunctionAppSlotAuthSettingsTwitterParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotAuthSettingsTwitterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotBackupObservation) DeepCopyInto(out *LinuxFunctionAppSlotBackupObservation) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]BackupScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotBackupObservation.
func (in *LinuxFunctionAppSlotBackupObservation) DeepCopy() *LinuxFunctionAppSlotBackupObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotBackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotBackupParameters) DeepCopyInto(out *LinuxFunctionAppSlotBackupParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]BackupScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.StorageAccountURLSecretRef = in.StorageAccountURLSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotBackupParameters.
func (in *LinuxFunctionAppSlotBackupParameters) DeepCopy() *LinuxFunctionAppSlotBackupParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotBackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotConnectionStringObservation) DeepCopyInto(out *LinuxFunctionAppSlotConnectionStringObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotConnectionStringObservation.
func (in *LinuxFunctionAppSlotConnectionStringObservation) DeepCopy() *LinuxFunctionAppSlotConnectionStringObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotConnectionStringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotConnectionStringParameters) DeepCopyInto(out *LinuxFunctionAppSlotConnectionStringParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	out.ValueSecretRef = in.ValueSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotConnectionStringParameters.
func (in *LinuxFunctionAppSlotConnectionStringParameters) DeepCopy() *LinuxFunctionAppSlotConnectionStringParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotConnectionStringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotIdentityObservation) DeepCopyInto(out *LinuxFunctionAppSlotIdentityObservation) {
	*out = *in
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotIdentityObservation.
func (in *LinuxFunctionAppSlotIdentityObservation) DeepCopy() *LinuxFunctionAppSlotIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotIdentityParameters) DeepCopyInto(out *LinuxFunctionAppSlotIdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotIdentityParameters.
func (in *LinuxFunctionAppSlotIdentityParameters) DeepCopy() *LinuxFunctionAppSlotIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotList) DeepCopyInto(out *LinuxFunctionAppSlotList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LinuxFunctionAppSlot, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotList.
func (in *LinuxFunctionAppSlotList) DeepCopy() *LinuxFunctionAppSlotList {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinuxFunctionAppSlotList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotObservation) DeepCopyInto(out *LinuxFunctionAppSlotObservation) {
	*out = *in
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]LinuxFunctionAppSlotBackupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultHostName != nil {
		in, out := &in.DefaultHostName, &out.DefaultHostName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]LinuxFunctionAppSlotIdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.OutboundIPAddressList != nil {
		in, out := &in.OutboundIPAddressList, &out.OutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OutboundIPAddresses != nil {
		in, out := &in.OutboundIPAddresses, &out.OutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.PossibleOutboundIPAddressList != nil {
		in, out := &in.PossibleOutboundIPAddressList, &out.PossibleOutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PossibleOutboundIPAddresses != nil {
		in, out := &in.PossibleOutboundIPAddresses, &out.PossibleOutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]LinuxFunctionAppSlotSiteConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SiteCredential != nil {
		in, out := &in.SiteCredential, &out.SiteCredential
		*out = make([]LinuxFunctionAppSlotSiteCredentialObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotObservation.
func (in *LinuxFunctionAppSlotObservation) DeepCopy() *LinuxFunctionAppSlotObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotParameters) DeepCopyInto(out *LinuxFunctionAppSlotParameters) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]LinuxFunctionAppSlotAuthSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]LinuxFunctionAppSlotBackupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BuiltinLoggingEnabled != nil {
		in, out := &in.BuiltinLoggingEnabled, &out.BuiltinLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]LinuxFunctionAppSlotConnectionStringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContentShareForceDisabled != nil {
		in, out := &in.ContentShareForceDisabled, &out.ContentShareForceDisabled
		*out = new(bool)
		**out = **in
	}
	if in.DailyMemoryTimeQuota != nil {
		in, out := &in.DailyMemoryTimeQuota, &out.DailyMemoryTimeQuota
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FunctionAppID != nil {
		in, out := &in.FunctionAppID, &out.FunctionAppID
		*out = new(string)
		**out = **in
	}
	if in.FunctionAppIDRef != nil {
		in, out := &in.FunctionAppIDRef, &out.FunctionAppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionAppIDSelector != nil {
		in, out := &in.FunctionAppIDSelector, &out.FunctionAppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionsExtensionVersion != nil {
		in, out := &in.FunctionsExtensionVersion, &out.FunctionsExtensionVersion
		*out = new(string)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]LinuxFunctionAppSlotIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]LinuxFunctionAppSlotSiteConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]LinuxFunctionAppSlotStorageAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountAccessKeySecretRef != nil {
		in, out := &in.StorageAccountAccessKeySecretRef, &out.StorageAccountAccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountNameRef != nil {
		in, out := &in.StorageAccountNameRef, &out.StorageAccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountNameSelector != nil {
		in, out := &in.StorageAccountNameSelector, &out.StorageAccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageKeyVaultSecretID != nil {
		in, out := &in.StorageKeyVaultSecretID, &out.StorageKeyVaultSecretID
		*out = new(string)
		**out = **in
	}
	if in.StorageUsesManagedIdentity != nil {
		in, out := &in.StorageUsesManagedIdentity, &out.StorageUsesManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotParameters.
func (in *LinuxFunctionAppSlotParameters) DeepCopy() *LinuxFunctionAppSlotParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigCorsObservation) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigCorsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigCorsObservation.
func (in *LinuxFunctionAppSlotSiteConfigCorsObservation) DeepCopy() *LinuxFunctionAppSlotSiteConfigCorsObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigCorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigCorsParameters) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigCorsParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigCorsParameters.
func (in *LinuxFunctionAppSlotSiteConfigCorsParameters) DeepCopy() *LinuxFunctionAppSlotSiteConfigCorsParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigCorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersObservation) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersObservation.
func (in *LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersObservation) DeepCopy() *LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersParameters) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersParameters.
func (in *LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersParameters) DeepCopy() *LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigIPRestrictionObservation) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigIPRestrictionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigIPRestrictionObservation.
func (in *LinuxFunctionAppSlotSiteConfigIPRestrictionObservation) DeepCopy() *LinuxFunctionAppSlotSiteConfigIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigIPRestrictionParameters) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxFunctionAppSlotSiteConfigIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigIPRestrictionParameters.
func (in *LinuxFunctionAppSlotSiteConfigIPRestrictionParameters) DeepCopy() *LinuxFunctionAppSlotSiteConfigIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigObservation) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigObservation) {
	*out = *in
	if in.DetailedErrorLoggingEnabled != nil {
		in, out := &in.DetailedErrorLoggingEnabled, &out.DetailedErrorLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LinuxFxVersion != nil {
		in, out := &in.LinuxFxVersion, &out.LinuxFxVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmType != nil {
		in, out := &in.ScmType, &out.ScmType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigObservation.
func (in *LinuxFunctionAppSlotSiteConfigObservation) DeepCopy() *LinuxFunctionAppSlotSiteConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigParameters) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigParameters) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(float64)
		**out = **in
	}
	if in.AppServiceLogs != nil {
		in, out := &in.AppServiceLogs, &out.AppServiceLogs
		*out = make([]SiteConfigAppServiceLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationInsightsConnectionStringSecretRef != nil {
		in, out := &in.ApplicationInsightsConnectionStringSecretRef, &out.ApplicationInsightsConnectionStringSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ApplicationInsightsKeySecretRef != nil {
		in, out := &in.ApplicationInsightsKeySecretRef, &out.ApplicationInsightsKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]SiteConfigApplicationStackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoSwapSlotName != nil {
		in, out := &in.AutoSwapSlotName, &out.AutoSwapSlotName
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryManagedIdentityClientID != nil {
		in, out := &in.ContainerRegistryManagedIdentityClientID, &out.ContainerRegistryManagedIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryUseManagedIdentity != nil {
		in, out := &in.ContainerRegistryUseManagedIdentity, &out.ContainerRegistryUseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]LinuxFunctionAppSlotSiteConfigCorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(float64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]LinuxFunctionAppSlotSiteConfigIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]LinuxFunctionAppSlotSiteConfigScmIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigParameters.
func (in *LinuxFunctionAppSlotSiteConfigParameters) DeepCopy() *LinuxFunctionAppSlotSiteConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersObservation) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersObservation.
func (in *LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersObservation) DeepCopy() *LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersParameters) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersParameters.
func (in *LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersParameters) DeepCopy() *LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigScmIPRestrictionObservation) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigScmIPRestrictionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigScmIPRestrictionObservation.
func (in *LinuxFunctionAppSlotSiteConfigScmIPRestrictionObservation) DeepCopy() *LinuxFunctionAppSlotSiteConfigScmIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigScmIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteConfigScmIPRestrictionParameters) DeepCopyInto(out *LinuxFunctionAppSlotSiteConfigScmIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxFunctionAppSlotSiteConfigScmIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteConfigScmIPRestrictionParameters.
func (in *LinuxFunctionAppSlotSiteConfigScmIPRestrictionParameters) DeepCopy() *LinuxFunctionAppSlotSiteConfigScmIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteConfigScmIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteCredentialObservation) DeepCopyInto(out *LinuxFunctionAppSlotSiteCredentialObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteCredentialObservation.
func (in *LinuxFunctionAppSlotSiteCredentialObservation) DeepCopy() *LinuxFunctionAppSlotSiteCredentialObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteCredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSiteCredentialParameters) DeepCopyInto(out *LinuxFunctionAppSlotSiteCredentialParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSiteCredentialParameters.
func (in *LinuxFunctionAppSlotSiteCredentialParameters) DeepCopy() *LinuxFunctionAppSlotSiteCredentialParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSiteCredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotSpec) DeepCopyInto(out *LinuxFunctionAppSlotSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotSpec.
func (in *LinuxFunctionAppSlotSpec) DeepCopy() *LinuxFunctionAppSlotSpec {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotStatus) DeepCopyInto(out *LinuxFunctionAppSlotStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotStatus.
func (in *LinuxFunctionAppSlotStatus) DeepCopy() *LinuxFunctionAppSlotStatus {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotStorageAccountObservation) DeepCopyInto(out *LinuxFunctionAppSlotStorageAccountObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotStorageAccountObservation.
func (in *LinuxFunctionAppSlotStorageAccountObservation) DeepCopy() *LinuxFunctionAppSlotStorageAccountObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotStorageAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSlotStorageAccountParameters) DeepCopyInto(out *LinuxFunctionAppSlotStorageAccountParameters) {
	*out = *in
	out.AccessKeySecretRef = in.AccessKeySecretRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSlotStorageAccountParameters.
func (in *LinuxFunctionAppSlotStorageAccountParameters) DeepCopy() *LinuxFunctionAppSlotStorageAccountParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSlotStorageAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppSpec) DeepCopyInto(out *LinuxFunctionAppSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppSpec.
func (in *LinuxFunctionAppSpec) DeepCopy() *LinuxFunctionAppSpec {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxFunctionAppStatus) DeepCopyInto(out *LinuxFunctionAppStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxFunctionAppStatus.
func (in *LinuxFunctionAppStatus) DeepCopy() *LinuxFunctionAppStatus {
	if in == nil {
		return nil
	}
	out := new(LinuxFunctionAppStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebApp) DeepCopyInto(out *LinuxWebApp) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebApp.
func (in *LinuxWebApp) DeepCopy() *LinuxWebApp {
	if in == nil {
		return nil
	}
	out := new(LinuxWebApp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinuxWebApp) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsActiveDirectoryObservation) DeepCopyInto(out *LinuxWebAppAuthSettingsActiveDirectoryObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsActiveDirectoryObservation.
func (in *LinuxWebAppAuthSettingsActiveDirectoryObservation) DeepCopy() *LinuxWebAppAuthSettingsActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsActiveDirectoryParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsActiveDirectoryParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsActiveDirectoryParameters.
func (in *LinuxWebAppAuthSettingsActiveDirectoryParameters) DeepCopy() *LinuxWebAppAuthSettingsActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsFacebookObservation) DeepCopyInto(out *LinuxWebAppAuthSettingsFacebookObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsFacebookObservation.
func (in *LinuxWebAppAuthSettingsFacebookObservation) DeepCopy() *LinuxWebAppAuthSettingsFacebookObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsFacebookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsFacebookParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsFacebookParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSecretRef != nil {
		in, out := &in.AppSecretSecretRef, &out.AppSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsFacebookParameters.
func (in *LinuxWebAppAuthSettingsFacebookParameters) DeepCopy() *LinuxWebAppAuthSettingsFacebookParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsFacebookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsGithubObservation) DeepCopyInto(out *LinuxWebAppAuthSettingsGithubObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsGithubObservation.
func (in *LinuxWebAppAuthSettingsGithubObservation) DeepCopy() *LinuxWebAppAuthSettingsGithubObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsGithubObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsGithubParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsGithubParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsGithubParameters.
func (in *LinuxWebAppAuthSettingsGithubParameters) DeepCopy() *LinuxWebAppAuthSettingsGithubParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsGithubParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsGoogleObservation) DeepCopyInto(out *LinuxWebAppAuthSettingsGoogleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsGoogleObservation.
func (in *LinuxWebAppAuthSettingsGoogleObservation) DeepCopy() *LinuxWebAppAuthSettingsGoogleObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsGoogleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsGoogleParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsGoogleParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsGoogleParameters.
func (in *LinuxWebAppAuthSettingsGoogleParameters) DeepCopy() *LinuxWebAppAuthSettingsGoogleParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsGoogleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsMicrosoftObservation) DeepCopyInto(out *LinuxWebAppAuthSettingsMicrosoftObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsMicrosoftObservation.
func (in *LinuxWebAppAuthSettingsMicrosoftObservation) DeepCopy() *LinuxWebAppAuthSettingsMicrosoftObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsMicrosoftObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsMicrosoftParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsMicrosoftParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsMicrosoftParameters.
func (in *LinuxWebAppAuthSettingsMicrosoftParameters) DeepCopy() *LinuxWebAppAuthSettingsMicrosoftParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsMicrosoftParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsObservation) DeepCopyInto(out *LinuxWebAppAuthSettingsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsObservation.
func (in *LinuxWebAppAuthSettingsObservation) DeepCopy() *LinuxWebAppAuthSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]LinuxWebAppAuthSettingsActiveDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]LinuxWebAppAuthSettingsFacebookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]LinuxWebAppAuthSettingsGithubParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]LinuxWebAppAuthSettingsGoogleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]LinuxWebAppAuthSettingsMicrosoftParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]LinuxWebAppAuthSettingsTwitterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsParameters.
func (in *LinuxWebAppAuthSettingsParameters) DeepCopy() *LinuxWebAppAuthSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsTwitterObservation) DeepCopyInto(out *LinuxWebAppAuthSettingsTwitterObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsTwitterObservation.
func (in *LinuxWebAppAuthSettingsTwitterObservation) DeepCopy() *LinuxWebAppAuthSettingsTwitterObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsTwitterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppAuthSettingsTwitterParameters) DeepCopyInto(out *LinuxWebAppAuthSettingsTwitterParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSecretRef != nil {
		in, out := &in.ConsumerSecretSecretRef, &out.ConsumerSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppAuthSettingsTwitterParameters.
func (in *LinuxWebAppAuthSettingsTwitterParameters) DeepCopy() *LinuxWebAppAuthSettingsTwitterParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppAuthSettingsTwitterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppBackupObservation) DeepCopyInto(out *LinuxWebAppBackupObservation) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]LinuxWebAppBackupScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppBackupObservation.
func (in *LinuxWebAppBackupObservation) DeepCopy() *LinuxWebAppBackupObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppBackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppBackupParameters) DeepCopyInto(out *LinuxWebAppBackupParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]LinuxWebAppBackupScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.StorageAccountURLSecretRef = in.StorageAccountURLSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppBackupParameters.
func (in *LinuxWebAppBackupParameters) DeepCopy() *LinuxWebAppBackupParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppBackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppBackupScheduleObservation) DeepCopyInto(out *LinuxWebAppBackupScheduleObservation) {
	*out = *in
	if in.LastExecutionTime != nil {
		in, out := &in.LastExecutionTime, &out.LastExecutionTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppBackupScheduleObservation.
func (in *LinuxWebAppBackupScheduleObservation) DeepCopy() *LinuxWebAppBackupScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppBackupScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppBackupScheduleParameters) DeepCopyInto(out *LinuxWebAppBackupScheduleParameters) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppBackupScheduleParameters.
func (in *LinuxWebAppBackupScheduleParameters) DeepCopy() *LinuxWebAppBackupScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppBackupScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppConnectionStringObservation) DeepCopyInto(out *LinuxWebAppConnectionStringObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppConnectionStringObservation.
func (in *LinuxWebAppConnectionStringObservation) DeepCopy() *LinuxWebAppConnectionStringObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppConnectionStringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppConnectionStringParameters) DeepCopyInto(out *LinuxWebAppConnectionStringParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	out.ValueSecretRef = in.ValueSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppConnectionStringParameters.
func (in *LinuxWebAppConnectionStringParameters) DeepCopy() *LinuxWebAppConnectionStringParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppConnectionStringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppIdentityObservation) DeepCopyInto(out *LinuxWebAppIdentityObservation) {
	*out = *in
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppIdentityObservation.
func (in *LinuxWebAppIdentityObservation) DeepCopy() *LinuxWebAppIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppIdentityParameters) DeepCopyInto(out *LinuxWebAppIdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppIdentityParameters.
func (in *LinuxWebAppIdentityParameters) DeepCopy() *LinuxWebAppIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppList) DeepCopyInto(out *LinuxWebAppList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LinuxWebApp, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppList.
func (in *LinuxWebAppList) DeepCopy() *LinuxWebAppList {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinuxWebAppList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppObservation) DeepCopyInto(out *LinuxWebAppObservation) {
	*out = *in
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]LinuxWebAppBackupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultHostName != nil {
		in, out := &in.DefaultHostName, &out.DefaultHostName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]LinuxWebAppIdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.OutboundIPAddressList != nil {
		in, out := &in.OutboundIPAddressList, &out.OutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OutboundIPAddresses != nil {
		in, out := &in.OutboundIPAddresses, &out.OutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.PossibleOutboundIPAddressList != nil {
		in, out := &in.PossibleOutboundIPAddressList, &out.PossibleOutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PossibleOutboundIPAddresses != nil {
		in, out := &in.PossibleOutboundIPAddresses, &out.PossibleOutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]LinuxWebAppSiteConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SiteCredential != nil {
		in, out := &in.SiteCredential, &out.SiteCredential
		*out = make([]LinuxWebAppSiteCredentialObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppObservation.
func (in *LinuxWebAppObservation) DeepCopy() *LinuxWebAppObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppParameters) DeepCopyInto(out *LinuxWebAppParameters) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]LinuxWebAppAuthSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]LinuxWebAppBackupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientAffinityEnabled != nil {
		in, out := &in.ClientAffinityEnabled, &out.ClientAffinityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]LinuxWebAppConnectionStringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]LinuxWebAppIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Logs != nil {
		in, out := &in.Logs, &out.Logs
		*out = make([]LogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanIDRef != nil {
		in, out := &in.ServicePlanIDRef, &out.ServicePlanIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServicePlanIDSelector != nil {
		in, out := &in.ServicePlanIDSelector, &out.ServicePlanIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]LinuxWebAppSiteConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StickySettings != nil {
		in, out := &in.StickySettings, &out.StickySettings
		*out = make([]LinuxWebAppStickySettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]LinuxWebAppStorageAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ZipDeployFile != nil {
		in, out := &in.ZipDeployFile, &out.ZipDeployFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppParameters.
func (in *LinuxWebAppParameters) DeepCopy() *LinuxWebAppParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigApplicationStackObservation) DeepCopyInto(out *LinuxWebAppSiteConfigApplicationStackObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigApplicationStackObservation.
func (in *LinuxWebAppSiteConfigApplicationStackObservation) DeepCopy() *LinuxWebAppSiteConfigApplicationStackObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigApplicationStackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigApplicationStackParameters) DeepCopyInto(out *LinuxWebAppSiteConfigApplicationStackParameters) {
	*out = *in
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = new(string)
		**out = **in
	}
	if in.DockerImageTag != nil {
		in, out := &in.DockerImageTag, &out.DockerImageTag
		*out = new(string)
		**out = **in
	}
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.GoVersion != nil {
		in, out := &in.GoVersion, &out.GoVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaServer != nil {
		in, out := &in.JavaServer, &out.JavaServer
		*out = new(string)
		**out = **in
	}
	if in.JavaServerVersion != nil {
		in, out := &in.JavaServerVersion, &out.JavaServerVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PHPVersion != nil {
		in, out := &in.PHPVersion, &out.PHPVersion
		*out = new(string)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.RubyVersion != nil {
		in, out := &in.RubyVersion, &out.RubyVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigApplicationStackParameters.
func (in *LinuxWebAppSiteConfigApplicationStackParameters) DeepCopy() *LinuxWebAppSiteConfigApplicationStackParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigApplicationStackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigCorsObservation) DeepCopyInto(out *LinuxWebAppSiteConfigCorsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigCorsObservation.
func (in *LinuxWebAppSiteConfigCorsObservation) DeepCopy() *LinuxWebAppSiteConfigCorsObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigCorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigCorsParameters) DeepCopyInto(out *LinuxWebAppSiteConfigCorsParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigCorsParameters.
func (in *LinuxWebAppSiteConfigCorsParameters) DeepCopy() *LinuxWebAppSiteConfigCorsParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigCorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigIPRestrictionHeadersObservation) DeepCopyInto(out *LinuxWebAppSiteConfigIPRestrictionHeadersObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigIPRestrictionHeadersObservation.
func (in *LinuxWebAppSiteConfigIPRestrictionHeadersObservation) DeepCopy() *LinuxWebAppSiteConfigIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigIPRestrictionHeadersParameters) DeepCopyInto(out *LinuxWebAppSiteConfigIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigIPRestrictionHeadersParameters.
func (in *LinuxWebAppSiteConfigIPRestrictionHeadersParameters) DeepCopy() *LinuxWebAppSiteConfigIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigIPRestrictionObservation) DeepCopyInto(out *LinuxWebAppSiteConfigIPRestrictionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigIPRestrictionObservation.
func (in *LinuxWebAppSiteConfigIPRestrictionObservation) DeepCopy() *LinuxWebAppSiteConfigIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigIPRestrictionParameters) DeepCopyInto(out *LinuxWebAppSiteConfigIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxWebAppSiteConfigIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigIPRestrictionParameters.
func (in *LinuxWebAppSiteConfigIPRestrictionParameters) DeepCopy() *LinuxWebAppSiteConfigIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigObservation) DeepCopyInto(out *LinuxWebAppSiteConfigObservation) {
	*out = *in
	if in.DetailedErrorLoggingEnabled != nil {
		in, out := &in.DetailedErrorLoggingEnabled, &out.DetailedErrorLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LinuxFxVersion != nil {
		in, out := &in.LinuxFxVersion, &out.LinuxFxVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmType != nil {
		in, out := &in.ScmType, &out.ScmType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigObservation.
func (in *LinuxWebAppSiteConfigObservation) DeepCopy() *LinuxWebAppSiteConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigParameters) DeepCopyInto(out *LinuxWebAppSiteConfigParameters) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]LinuxWebAppSiteConfigApplicationStackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealEnabled != nil {
		in, out := &in.AutoHealEnabled, &out.AutoHealEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealSetting != nil {
		in, out := &in.AutoHealSetting, &out.AutoHealSetting
		*out = make([]AutoHealSettingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainerRegistryManagedIdentityClientID != nil {
		in, out := &in.ContainerRegistryManagedIdentityClientID, &out.ContainerRegistryManagedIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryUseManagedIdentity != nil {
		in, out := &in.ContainerRegistryUseManagedIdentity, &out.ContainerRegistryUseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]LinuxWebAppSiteConfigCorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]LinuxWebAppSiteConfigIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.LocalMySQLEnabled != nil {
		in, out := &in.LocalMySQLEnabled, &out.LocalMySQLEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]LinuxWebAppSiteConfigScmIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigParameters.
func (in *LinuxWebAppSiteConfigParameters) DeepCopy() *LinuxWebAppSiteConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigScmIPRestrictionHeadersObservation) DeepCopyInto(out *LinuxWebAppSiteConfigScmIPRestrictionHeadersObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigScmIPRestrictionHeadersObservation.
func (in *LinuxWebAppSiteConfigScmIPRestrictionHeadersObservation) DeepCopy() *LinuxWebAppSiteConfigScmIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigScmIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigScmIPRestrictionHeadersParameters) DeepCopyInto(out *LinuxWebAppSiteConfigScmIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigScmIPRestrictionHeadersParameters.
func (in *LinuxWebAppSiteConfigScmIPRestrictionHeadersParameters) DeepCopy() *LinuxWebAppSiteConfigScmIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigScmIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigScmIPRestrictionObservation) DeepCopyInto(out *LinuxWebAppSiteConfigScmIPRestrictionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigScmIPRestrictionObservation.
func (in *LinuxWebAppSiteConfigScmIPRestrictionObservation) DeepCopy() *LinuxWebAppSiteConfigScmIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigScmIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteConfigScmIPRestrictionParameters) DeepCopyInto(out *LinuxWebAppSiteConfigScmIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxWebAppSiteConfigScmIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteConfigScmIPRestrictionParameters.
func (in *LinuxWebAppSiteConfigScmIPRestrictionParameters) DeepCopy() *LinuxWebAppSiteConfigScmIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteConfigScmIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteCredentialObservation) DeepCopyInto(out *LinuxWebAppSiteCredentialObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteCredentialObservation.
func (in *LinuxWebAppSiteCredentialObservation) DeepCopy() *LinuxWebAppSiteCredentialObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteCredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSiteCredentialParameters) DeepCopyInto(out *LinuxWebAppSiteCredentialParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSiteCredentialParameters.
func (in *LinuxWebAppSiteCredentialParameters) DeepCopy() *LinuxWebAppSiteCredentialParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSiteCredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlot) DeepCopyInto(out *LinuxWebAppSlot) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlot.
func (in *LinuxWebAppSlot) DeepCopy() *LinuxWebAppSlot {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinuxWebAppSlot) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsActiveDirectoryObservation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsActiveDirectoryObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsActiveDirectoryObservation.
func (in *LinuxWebAppSlotAuthSettingsActiveDirectoryObservation) DeepCopy() *LinuxWebAppSlotAuthSettingsActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsActiveDirectoryParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsActiveDirectoryParameters) {
	*out = *in
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsActiveDirectoryParameters.
func (in *LinuxWebAppSlotAuthSettingsActiveDirectoryParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsFacebookObservation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsFacebookObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsFacebookObservation.
func (in *LinuxWebAppSlotAuthSettingsFacebookObservation) DeepCopy() *LinuxWebAppSlotAuthSettingsFacebookObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsFacebookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsFacebookParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsFacebookParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppSecretSecretRef != nil {
		in, out := &in.AppSecretSecretRef, &out.AppSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AppSecretSettingName != nil {
		in, out := &in.AppSecretSettingName, &out.AppSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsFacebookParameters.
func (in *LinuxWebAppSlotAuthSettingsFacebookParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsFacebookParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsFacebookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsGithubObservation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsGithubObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsGithubObservation.
func (in *LinuxWebAppSlotAuthSettingsGithubObservation) DeepCopy() *LinuxWebAppSlotAuthSettingsGithubObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsGithubObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsGithubParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsGithubParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsGithubParameters.
func (in *LinuxWebAppSlotAuthSettingsGithubParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsGithubParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsGithubParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsGoogleObservation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsGoogleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsGoogleObservation.
func (in *LinuxWebAppSlotAuthSettingsGoogleObservation) DeepCopy() *LinuxWebAppSlotAuthSettingsGoogleObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsGoogleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsGoogleParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsGoogleParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsGoogleParameters.
func (in *LinuxWebAppSlotAuthSettingsGoogleParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsGoogleParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsGoogleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsMicrosoftObservation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsMicrosoftObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsMicrosoftObservation.
func (in *LinuxWebAppSlotAuthSettingsMicrosoftObservation) DeepCopy() *LinuxWebAppSlotAuthSettingsMicrosoftObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsMicrosoftObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsMicrosoftParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsMicrosoftParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSecretSettingName != nil {
		in, out := &in.ClientSecretSettingName, &out.ClientSecretSettingName
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsMicrosoftParameters.
func (in *LinuxWebAppSlotAuthSettingsMicrosoftParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsMicrosoftParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsMicrosoftParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsObservation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsObservation.
func (in *LinuxWebAppSlotAuthSettingsObservation) DeepCopy() *LinuxWebAppSlotAuthSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]LinuxWebAppSlotAuthSettingsActiveDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalLoginParameters != nil {
		in, out := &in.AdditionalLoginParameters, &out.AdditionalLoginParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AllowedExternalRedirectUrls != nil {
		in, out := &in.AllowedExternalRedirectUrls, &out.AllowedExternalRedirectUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultProvider != nil {
		in, out := &in.DefaultProvider, &out.DefaultProvider
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Facebook != nil {
		in, out := &in.Facebook, &out.Facebook
		*out = make([]LinuxWebAppSlotAuthSettingsFacebookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = make([]LinuxWebAppSlotAuthSettingsGithubParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Google != nil {
		in, out := &in.Google, &out.Google
		*out = make([]LinuxWebAppSlotAuthSettingsGoogleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Microsoft != nil {
		in, out := &in.Microsoft, &out.Microsoft
		*out = make([]LinuxWebAppSlotAuthSettingsMicrosoftParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.TokenRefreshExtensionHours != nil {
		in, out := &in.TokenRefreshExtensionHours, &out.TokenRefreshExtensionHours
		*out = new(float64)
		**out = **in
	}
	if in.TokenStoreEnabled != nil {
		in, out := &in.TokenStoreEnabled, &out.TokenStoreEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Twitter != nil {
		in, out := &in.Twitter, &out.Twitter
		*out = make([]LinuxWebAppSlotAuthSettingsTwitterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnauthenticatedClientAction != nil {
		in, out := &in.UnauthenticatedClientAction, &out.UnauthenticatedClientAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsParameters.
func (in *LinuxWebAppSlotAuthSettingsParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsTwitterObservation) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsTwitterObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsTwitterObservation.
func (in *LinuxWebAppSlotAuthSettingsTwitterObservation) DeepCopy() *LinuxWebAppSlotAuthSettingsTwitterObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsTwitterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotAuthSettingsTwitterParameters) DeepCopyInto(out *LinuxWebAppSlotAuthSettingsTwitterParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.ConsumerSecretSecretRef != nil {
		in, out := &in.ConsumerSecretSecretRef, &out.ConsumerSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ConsumerSecretSettingName != nil {
		in, out := &in.ConsumerSecretSettingName, &out.ConsumerSecretSettingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotAuthSettingsTwitterParameters.
func (in *LinuxWebAppSlotAuthSettingsTwitterParameters) DeepCopy() *LinuxWebAppSlotAuthSettingsTwitterParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotAuthSettingsTwitterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotBackupObservation) DeepCopyInto(out *LinuxWebAppSlotBackupObservation) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]LinuxWebAppSlotBackupScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotBackupObservation.
func (in *LinuxWebAppSlotBackupObservation) DeepCopy() *LinuxWebAppSlotBackupObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotBackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotBackupParameters) DeepCopyInto(out *LinuxWebAppSlotBackupParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]LinuxWebAppSlotBackupScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.StorageAccountURLSecretRef = in.StorageAccountURLSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotBackupParameters.
func (in *LinuxWebAppSlotBackupParameters) DeepCopy() *LinuxWebAppSlotBackupParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotBackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotBackupScheduleObservation) DeepCopyInto(out *LinuxWebAppSlotBackupScheduleObservation) {
	*out = *in
	if in.LastExecutionTime != nil {
		in, out := &in.LastExecutionTime, &out.LastExecutionTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotBackupScheduleObservation.
func (in *LinuxWebAppSlotBackupScheduleObservation) DeepCopy() *LinuxWebAppSlotBackupScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotBackupScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotBackupScheduleParameters) DeepCopyInto(out *LinuxWebAppSlotBackupScheduleParameters) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotBackupScheduleParameters.
func (in *LinuxWebAppSlotBackupScheduleParameters) DeepCopy() *LinuxWebAppSlotBackupScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotBackupScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotConnectionStringObservation) DeepCopyInto(out *LinuxWebAppSlotConnectionStringObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotConnectionStringObservation.
func (in *LinuxWebAppSlotConnectionStringObservation) DeepCopy() *LinuxWebAppSlotConnectionStringObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotConnectionStringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotConnectionStringParameters) DeepCopyInto(out *LinuxWebAppSlotConnectionStringParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	out.ValueSecretRef = in.ValueSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotConnectionStringParameters.
func (in *LinuxWebAppSlotConnectionStringParameters) DeepCopy() *LinuxWebAppSlotConnectionStringParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotConnectionStringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotIdentityObservation) DeepCopyInto(out *LinuxWebAppSlotIdentityObservation) {
	*out = *in
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotIdentityObservation.
func (in *LinuxWebAppSlotIdentityObservation) DeepCopy() *LinuxWebAppSlotIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotIdentityParameters) DeepCopyInto(out *LinuxWebAppSlotIdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotIdentityParameters.
func (in *LinuxWebAppSlotIdentityParameters) DeepCopy() *LinuxWebAppSlotIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotList) DeepCopyInto(out *LinuxWebAppSlotList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LinuxWebAppSlot, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotList.
func (in *LinuxWebAppSlotList) DeepCopy() *LinuxWebAppSlotList {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinuxWebAppSlotList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotLogsObservation) DeepCopyInto(out *LinuxWebAppSlotLogsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotLogsObservation.
func (in *LinuxWebAppSlotLogsObservation) DeepCopy() *LinuxWebAppSlotLogsObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotLogsParameters) DeepCopyInto(out *LinuxWebAppSlotLogsParameters) {
	*out = *in
	if in.ApplicationLogs != nil {
		in, out := &in.ApplicationLogs, &out.ApplicationLogs
		*out = make([]LogsApplicationLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DetailedErrorMessages != nil {
		in, out := &in.DetailedErrorMessages, &out.DetailedErrorMessages
		*out = new(bool)
		**out = **in
	}
	if in.FailedRequestTracing != nil {
		in, out := &in.FailedRequestTracing, &out.FailedRequestTracing
		*out = new(bool)
		**out = **in
	}
	if in.HTTPLogs != nil {
		in, out := &in.HTTPLogs, &out.HTTPLogs
		*out = make([]LogsHTTPLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotLogsParameters.
func (in *LinuxWebAppSlotLogsParameters) DeepCopy() *LinuxWebAppSlotLogsParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotObservation) DeepCopyInto(out *LinuxWebAppSlotObservation) {
	*out = *in
	if in.AppMetadata != nil {
		in, out := &in.AppMetadata, &out.AppMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]LinuxWebAppSlotBackupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultHostName != nil {
		in, out := &in.DefaultHostName, &out.DefaultHostName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]LinuxWebAppSlotIdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.OutboundIPAddressList != nil {
		in, out := &in.OutboundIPAddressList, &out.OutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OutboundIPAddresses != nil {
		in, out := &in.OutboundIPAddresses, &out.OutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.PossibleOutboundIPAddressList != nil {
		in, out := &in.PossibleOutboundIPAddressList, &out.PossibleOutboundIPAddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PossibleOutboundIPAddresses != nil {
		in, out := &in.PossibleOutboundIPAddresses, &out.PossibleOutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]LinuxWebAppSlotSiteConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SiteCredential != nil {
		in, out := &in.SiteCredential, &out.SiteCredential
		*out = make([]LinuxWebAppSlotSiteCredentialObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotObservation.
func (in *LinuxWebAppSlotObservation) DeepCopy() *LinuxWebAppSlotObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotParameters) DeepCopyInto(out *LinuxWebAppSlotParameters) {
	*out = *in
	if in.AppServiceID != nil {
		in, out := &in.AppServiceID, &out.AppServiceID
		*out = new(string)
		**out = **in
	}
	if in.AppServiceIDRef != nil {
		in, out := &in.AppServiceIDRef, &out.AppServiceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AppServiceIDSelector != nil {
		in, out := &in.AppServiceIDSelector, &out.AppServiceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthSettings != nil {
		in, out := &in.AuthSettings, &out.AuthSettings
		*out = make([]LinuxWebAppSlotAuthSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = make([]LinuxWebAppSlotBackupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientAffinityEnabled != nil {
		in, out := &in.ClientAffinityEnabled, &out.ClientAffinityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateExclusionPaths != nil {
		in, out := &in.ClientCertificateExclusionPaths, &out.ClientCertificateExclusionPaths
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]LinuxWebAppSlotConnectionStringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPSOnly != nil {
		in, out := &in.HTTPSOnly, &out.HTTPSOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]LinuxWebAppSlotIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyVaultReferenceIdentityID != nil {
		in, out := &in.KeyVaultReferenceIdentityID, &out.KeyVaultReferenceIdentityID
		*out = new(string)
		**out = **in
	}
	if in.Logs != nil {
		in, out := &in.Logs, &out.Logs
		*out = make([]LinuxWebAppSlotLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanID != nil {
		in, out := &in.ServicePlanID, &out.ServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = make([]LinuxWebAppSlotSiteConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]LinuxWebAppSlotStorageAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ZipDeployFile != nil {
		in, out := &in.ZipDeployFile, &out.ZipDeployFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotParameters.
func (in *LinuxWebAppSlotParameters) DeepCopy() *LinuxWebAppSlotParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigApplicationStackObservation) DeepCopyInto(out *LinuxWebAppSlotSiteConfigApplicationStackObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigApplicationStackObservation.
func (in *LinuxWebAppSlotSiteConfigApplicationStackObservation) DeepCopy() *LinuxWebAppSlotSiteConfigApplicationStackObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigApplicationStackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigApplicationStackParameters) DeepCopyInto(out *LinuxWebAppSlotSiteConfigApplicationStackParameters) {
	*out = *in
	if in.DockerImage != nil {
		in, out := &in.DockerImage, &out.DockerImage
		*out = new(string)
		**out = **in
	}
	if in.DockerImageTag != nil {
		in, out := &in.DockerImageTag, &out.DockerImageTag
		*out = new(string)
		**out = **in
	}
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.GoVersion != nil {
		in, out := &in.GoVersion, &out.GoVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaServer != nil {
		in, out := &in.JavaServer, &out.JavaServer
		*out = new(string)
		**out = **in
	}
	if in.JavaServerVersion != nil {
		in, out := &in.JavaServerVersion, &out.JavaServerVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PHPVersion != nil {
		in, out := &in.PHPVersion, &out.PHPVersion
		*out = new(string)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.RubyVersion != nil {
		in, out := &in.RubyVersion, &out.RubyVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigApplicationStackParameters.
func (in *LinuxWebAppSlotSiteConfigApplicationStackParameters) DeepCopy() *LinuxWebAppSlotSiteConfigApplicationStackParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigApplicationStackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigCorsObservation) DeepCopyInto(out *LinuxWebAppSlotSiteConfigCorsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigCorsObservation.
func (in *LinuxWebAppSlotSiteConfigCorsObservation) DeepCopy() *LinuxWebAppSlotSiteConfigCorsObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigCorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigCorsParameters) DeepCopyInto(out *LinuxWebAppSlotSiteConfigCorsParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigCorsParameters.
func (in *LinuxWebAppSlotSiteConfigCorsParameters) DeepCopy() *LinuxWebAppSlotSiteConfigCorsParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigCorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigIPRestrictionHeadersObservation) DeepCopyInto(out *LinuxWebAppSlotSiteConfigIPRestrictionHeadersObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigIPRestrictionHeadersObservation.
func (in *LinuxWebAppSlotSiteConfigIPRestrictionHeadersObservation) DeepCopy() *LinuxWebAppSlotSiteConfigIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigIPRestrictionHeadersParameters) DeepCopyInto(out *LinuxWebAppSlotSiteConfigIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigIPRestrictionHeadersParameters.
func (in *LinuxWebAppSlotSiteConfigIPRestrictionHeadersParameters) DeepCopy() *LinuxWebAppSlotSiteConfigIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigIPRestrictionObservation) DeepCopyInto(out *LinuxWebAppSlotSiteConfigIPRestrictionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigIPRestrictionObservation.
func (in *LinuxWebAppSlotSiteConfigIPRestrictionObservation) DeepCopy() *LinuxWebAppSlotSiteConfigIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigIPRestrictionParameters) DeepCopyInto(out *LinuxWebAppSlotSiteConfigIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxWebAppSlotSiteConfigIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigIPRestrictionParameters.
func (in *LinuxWebAppSlotSiteConfigIPRestrictionParameters) DeepCopy() *LinuxWebAppSlotSiteConfigIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigObservation) DeepCopyInto(out *LinuxWebAppSlotSiteConfigObservation) {
	*out = *in
	if in.DetailedErrorLoggingEnabled != nil {
		in, out := &in.DetailedErrorLoggingEnabled, &out.DetailedErrorLoggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LinuxFxVersion != nil {
		in, out := &in.LinuxFxVersion, &out.LinuxFxVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmType != nil {
		in, out := &in.ScmType, &out.ScmType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigObservation.
func (in *LinuxWebAppSlotSiteConfigObservation) DeepCopy() *LinuxWebAppSlotSiteConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigParameters) DeepCopyInto(out *LinuxWebAppSlotSiteConfigParameters) {
	*out = *in
	if in.APIDefinitionURL != nil {
		in, out := &in.APIDefinitionURL, &out.APIDefinitionURL
		*out = new(string)
		**out = **in
	}
	if in.APIManagementAPIID != nil {
		in, out := &in.APIManagementAPIID, &out.APIManagementAPIID
		*out = new(string)
		**out = **in
	}
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppCommandLine != nil {
		in, out := &in.AppCommandLine, &out.AppCommandLine
		*out = new(string)
		**out = **in
	}
	if in.ApplicationStack != nil {
		in, out := &in.ApplicationStack, &out.ApplicationStack
		*out = make([]LinuxWebAppSlotSiteConfigApplicationStackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealEnabled != nil {
		in, out := &in.AutoHealEnabled, &out.AutoHealEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealSetting != nil {
		in, out := &in.AutoHealSetting, &out.AutoHealSetting
		*out = make([]SiteConfigAutoHealSettingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoSwapSlotName != nil {
		in, out := &in.AutoSwapSlotName, &out.AutoSwapSlotName
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryManagedIdentityClientID != nil {
		in, out := &in.ContainerRegistryManagedIdentityClientID, &out.ContainerRegistryManagedIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryUseManagedIdentity != nil {
		in, out := &in.ContainerRegistryUseManagedIdentity, &out.ContainerRegistryUseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]LinuxWebAppSlotSiteConfigCorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDocuments != nil {
		in, out := &in.DefaultDocuments, &out.DefaultDocuments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckEvictionTimeInMin != nil {
		in, out := &in.HealthCheckEvictionTimeInMin, &out.HealthCheckEvictionTimeInMin
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]LinuxWebAppSlotSiteConfigIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingMode != nil {
		in, out := &in.LoadBalancingMode, &out.LoadBalancingMode
		*out = new(string)
		**out = **in
	}
	if in.LocalMySQLEnabled != nil {
		in, out := &in.LocalMySQLEnabled, &out.LocalMySQLEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ManagedPipelineMode != nil {
		in, out := &in.ManagedPipelineMode, &out.ManagedPipelineMode
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.RemoteDebuggingEnabled != nil {
		in, out := &in.RemoteDebuggingEnabled, &out.RemoteDebuggingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoteDebuggingVersion != nil {
		in, out := &in.RemoteDebuggingVersion, &out.RemoteDebuggingVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]LinuxWebAppSlotSiteConfigScmIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmMinimumTLSVersion != nil {
		in, out := &in.ScmMinimumTLSVersion, &out.ScmMinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorker != nil {
		in, out := &in.Use32BitWorker, &out.Use32BitWorker
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigParameters.
func (in *LinuxWebAppSlotSiteConfigParameters) DeepCopy() *LinuxWebAppSlotSiteConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersObservation) DeepCopyInto(out *LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersObservation.
func (in *LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersObservation) DeepCopy() *LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersParameters) DeepCopyInto(out *LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersParameters.
func (in *LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersParameters) DeepCopy() *LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigScmIPRestrictionObservation) DeepCopyInto(out *LinuxWebAppSlotSiteConfigScmIPRestrictionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigScmIPRestrictionObservation.
func (in *LinuxWebAppSlotSiteConfigScmIPRestrictionObservation) DeepCopy() *LinuxWebAppSlotSiteConfigScmIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigScmIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteConfigScmIPRestrictionParameters) DeepCopyInto(out *LinuxWebAppSlotSiteConfigScmIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]LinuxWebAppSlotSiteConfigScmIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteConfigScmIPRestrictionParameters.
func (in *LinuxWebAppSlotSiteConfigScmIPRestrictionParameters) DeepCopy() *LinuxWebAppSlotSiteConfigScmIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteConfigScmIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteCredentialObservation) DeepCopyInto(out *LinuxWebAppSlotSiteCredentialObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteCredentialObservation.
func (in *LinuxWebAppSlotSiteCredentialObservation) DeepCopy() *LinuxWebAppSlotSiteCredentialObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteCredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSiteCredentialParameters) DeepCopyInto(out *LinuxWebAppSlotSiteCredentialParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSiteCredentialParameters.
func (in *LinuxWebAppSlotSiteCredentialParameters) DeepCopy() *LinuxWebAppSlotSiteCredentialParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSiteCredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotSpec) DeepCopyInto(out *LinuxWebAppSlotSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotSpec.
func (in *LinuxWebAppSlotSpec) DeepCopy() *LinuxWebAppSlotSpec {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotStatus) DeepCopyInto(out *LinuxWebAppSlotStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotStatus.
func (in *LinuxWebAppSlotStatus) DeepCopy() *LinuxWebAppSlotStatus {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotStorageAccountObservation) DeepCopyInto(out *LinuxWebAppSlotStorageAccountObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotStorageAccountObservation.
func (in *LinuxWebAppSlotStorageAccountObservation) DeepCopy() *LinuxWebAppSlotStorageAccountObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotStorageAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSlotStorageAccountParameters) DeepCopyInto(out *LinuxWebAppSlotStorageAccountParameters) {
	*out = *in
	out.AccessKeySecretRef = in.AccessKeySecretRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSlotStorageAccountParameters.
func (in *LinuxWebAppSlotStorageAccountParameters) DeepCopy() *LinuxWebAppSlotStorageAccountParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSlotStorageAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppSpec) DeepCopyInto(out *LinuxWebAppSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppSpec.
func (in *LinuxWebAppSpec) DeepCopy() *LinuxWebAppSpec {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppStatus) DeepCopyInto(out *LinuxWebAppStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppStatus.
func (in *LinuxWebAppStatus) DeepCopy() *LinuxWebAppStatus {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppStickySettingsObservation) DeepCopyInto(out *LinuxWebAppStickySettingsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppStickySettingsObservation.
func (in *LinuxWebAppStickySettingsObservation) DeepCopy() *LinuxWebAppStickySettingsObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppStickySettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppStickySettingsParameters) DeepCopyInto(out *LinuxWebAppStickySettingsParameters) {
	*out = *in
	if in.AppSettingNames != nil {
		in, out := &in.AppSettingNames, &out.AppSettingNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConnectionStringNames != nil {
		in, out := &in.ConnectionStringNames, &out.ConnectionStringNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppStickySettingsParameters.
func (in *LinuxWebAppStickySettingsParameters) DeepCopy() *LinuxWebAppStickySettingsParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppStickySettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppStorageAccountObservation) DeepCopyInto(out *LinuxWebAppStorageAccountObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppStorageAccountObservation.
func (in *LinuxWebAppStorageAccountObservation) DeepCopy() *LinuxWebAppStorageAccountObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppStorageAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxWebAppStorageAccountParameters) DeepCopyInto(out *LinuxWebAppStorageAccountParameters) {
	*out = *in
	out.AccessKeySecretRef = in.AccessKeySecretRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxWebAppStorageAccountParameters.
func (in *LinuxWebAppStorageAccountParameters) DeepCopy() *LinuxWebAppStorageAccountParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxWebAppStorageAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsApplicationLogsObservation) DeepCopyInto(out *LogsApplicationLogsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsApplicationLogsObservation.
func (in *LogsApplicationLogsObservation) DeepCopy() *LogsApplicationLogsObservation {
	if in == nil {
		return nil
	}
	out := new(LogsApplicationLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsApplicationLogsParameters) DeepCopyInto(out *LogsApplicationLogsParameters) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]ApplicationLogsAzureBlobStorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemLevel != nil {
		in, out := &in.FileSystemLevel, &out.FileSystemLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsApplicationLogsParameters.
func (in *LogsApplicationLogsParameters) DeepCopy() *LogsApplicationLogsParameters {
	if in == nil {
		return nil
	}
	out := new(LogsApplicationLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsHTTPLogsAzureBlobStorageObservation) DeepCopyInto(out *LogsHTTPLogsAzureBlobStorageObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsHTTPLogsAzureBlobStorageObservation.
func (in *LogsHTTPLogsAzureBlobStorageObservation) DeepCopy() *LogsHTTPLogsAzureBlobStorageObservation {
	if in == nil {
		return nil
	}
	out := new(LogsHTTPLogsAzureBlobStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsHTTPLogsAzureBlobStorageParameters) DeepCopyInto(out *LogsHTTPLogsAzureBlobStorageParameters) {
	*out = *in
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(float64)
		**out = **in
	}
	out.SASURLSecretRef = in.SASURLSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsHTTPLogsAzureBlobStorageParameters.
func (in *LogsHTTPLogsAzureBlobStorageParameters) DeepCopy() *LogsHTTPLogsAzureBlobStorageParameters {
	if in == nil {
		return nil
	}
	out := new(LogsHTTPLogsAzureBlobStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsHTTPLogsObservation) DeepCopyInto(out *LogsHTTPLogsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsHTTPLogsObservation.
func (in *LogsHTTPLogsObservation) DeepCopy() *LogsHTTPLogsObservation {
	if in == nil {
		return nil
	}
	out := new(LogsHTTPLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsHTTPLogsParameters) DeepCopyInto(out *LogsHTTPLogsParameters) {
	*out = *in
	if in.AzureBlobStorage != nil {
		in, out := &in.AzureBlobStorage, &out.AzureBlobStorage
		*out = make([]LogsHTTPLogsAzureBlobStorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystem != nil {
		in, out := &in.FileSystem, &out.FileSystem
		*out = make([]HTTPLogsFileSystemParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsHTTPLogsParameters.
func (in *LogsHTTPLogsParameters) DeepCopy() *LogsHTTPLogsParameters {
	if in == nil {
		return nil
	}
	out := new(LogsHTTPLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsObservation) DeepCopyInto(out *LogsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsObservation.
func (in *LogsObservation) DeepCopy() *LogsObservation {
	if in == nil {
		return nil
	}
	out := new(LogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsParameters) DeepCopyInto(out *LogsParameters) {
	*out = *in
	if in.ApplicationLogs != nil {
		in, out := &in.ApplicationLogs, &out.ApplicationLogs
		*out = make([]ApplicationLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DetailedErrorMessages != nil {
		in, out := &in.DetailedErrorMessages, &out.DetailedErrorMessages
		*out = new(bool)
		**out = **in
	}
	if in.FailedRequestTracing != nil {
		in, out := &in.FailedRequestTracing, &out.FailedRequestTracing
		*out = new(bool)
		**out = **in
	}
	if in.HTTPLogs != nil {
		in, out := &in.HTTPLogs, &out.HTTPLogs
		*out = make([]HTTPLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsParameters.
func (in *LogsParameters) DeepCopy() *LogsParameters {
	if in == nil {
		return nil
	}
	out := new(LogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicrosoftObservation) DeepCopyInto(out *MicrosoftObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicrosoftObservation.
func (in *MicrosoftObservation) DeepCopy() *MicrosoftObservation {
	if in == nil {
		return nil
	}
	out := new(MicrosoftObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicrosoftParameters) DeepCopyInto(out *MicrosoftParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicrosoftParameters.
func (in *MicrosoftParameters) DeepCopy() *MicrosoftParameters {
	if in == nil {
		return nil
	}
	out := new(MicrosoftParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsObservation) DeepCopyInto(out *RequestsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsObservation.
func (in *RequestsObservation) DeepCopy() *RequestsObservation {
	if in == nil {
		return nil
	}
	out := new(RequestsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsParameters) DeepCopyInto(out *RequestsParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsParameters.
func (in *RequestsParameters) DeepCopy() *RequestsParameters {
	if in == nil {
		return nil
	}
	out := new(RequestsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleObservation) DeepCopyInto(out *ScheduleObservation) {
	*out = *in
	if in.LastExecutionTime != nil {
		in, out := &in.LastExecutionTime, &out.LastExecutionTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleObservation.
func (in *ScheduleObservation) DeepCopy() *ScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleParameters) DeepCopyInto(out *ScheduleParameters) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyUnit != nil {
		in, out := &in.FrequencyUnit, &out.FrequencyUnit
		*out = new(string)
		**out = **in
	}
	if in.KeepAtLeastOneBackup != nil {
		in, out := &in.KeepAtLeastOneBackup, &out.KeepAtLeastOneBackup
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleParameters.
func (in *ScheduleParameters) DeepCopy() *ScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScmIPRestrictionHeadersObservation) DeepCopyInto(out *ScmIPRestrictionHeadersObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScmIPRestrictionHeadersObservation.
func (in *ScmIPRestrictionHeadersObservation) DeepCopy() *ScmIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(ScmIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScmIPRestrictionHeadersParameters) DeepCopyInto(out *ScmIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScmIPRestrictionHeadersParameters.
func (in *ScmIPRestrictionHeadersParameters) DeepCopy() *ScmIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(ScmIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScmIPRestrictionObservation) DeepCopyInto(out *ScmIPRestrictionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScmIPRestrictionObservation.
func (in *ScmIPRestrictionObservation) DeepCopy() *ScmIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(ScmIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScmIPRestrictionParameters) DeepCopyInto(out *ScmIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]ScmIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScmIPRestrictionParameters.
func (in *ScmIPRestrictionParameters) DeepCopy() *ScmIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(ScmIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePlan) DeepCopyInto(out *ServicePlan) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePlan.
func (in *ServicePlan) DeepCopy() *ServicePlan {
	if in == nil {
		return nil
	}
	out := new(ServicePlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServicePlan) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePlanList) DeepCopyInto(out *ServicePlanList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServicePlan, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePlanList.
func (in *ServicePlanList) DeepCopy() *ServicePlanList {
	if in == nil {
		return nil
	}
	out := new(ServicePlanList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServicePlanList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePlanObservation) DeepCopyInto(out *ServicePlanObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Reserved != nil {
		in, out := &in.Reserved, &out.Reserved
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePlanObservation.
func (in *ServicePlanObservation) DeepCopy() *ServicePlanObservation {
	if in == nil {
		return nil
	}
	out := new(ServicePlanObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePlanParameters) DeepCopyInto(out *ServicePlanParameters) {
	*out = *in
	if in.AppServiceEnvironmentID != nil {
		in, out := &in.AppServiceEnvironmentID, &out.AppServiceEnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaximumElasticWorkerCount != nil {
		in, out := &in.MaximumElasticWorkerCount, &out.MaximumElasticWorkerCount
		*out = new(float64)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.PerSiteScalingEnabled != nil {
		in, out := &in.PerSiteScalingEnabled, &out.PerSiteScalingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
	if in.ZoneBalancingEnabled != nil {
		in, out := &in.ZoneBalancingEnabled, &out.ZoneBalancingEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePlanParameters.
func (in *ServicePlanParameters) DeepCopy() *ServicePlanParameters {
	if in == nil {
		return nil
	}
	out := new(ServicePlanParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePlanSpec) DeepCopyInto(out *ServicePlanSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePlanSpec.
func (in *ServicePlanSpec) DeepCopy() *ServicePlanSpec {
	if in == nil {
		return nil
	}
	out := new(ServicePlanSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePlanStatus) DeepCopyInto(out *ServicePlanStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePlanStatus.
func (in *ServicePlanStatus) DeepCopy() *ServicePlanStatus {
	if in == nil {
		return nil
	}
	out := new(ServicePlanStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAppServiceLogsObservation) DeepCopyInto(out *SiteConfigAppServiceLogsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAppServiceLogsObservation.
func (in *SiteConfigAppServiceLogsObservation) DeepCopy() *SiteConfigAppServiceLogsObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAppServiceLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAppServiceLogsParameters) DeepCopyInto(out *SiteConfigAppServiceLogsParameters) {
	*out = *in
	if in.DiskQuotaMb != nil {
		in, out := &in.DiskQuotaMb, &out.DiskQuotaMb
		*out = new(float64)
		**out = **in
	}
	if in.RetentionPeriodDays != nil {
		in, out := &in.RetentionPeriodDays, &out.RetentionPeriodDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAppServiceLogsParameters.
func (in *SiteConfigAppServiceLogsParameters) DeepCopy() *SiteConfigAppServiceLogsParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAppServiceLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigApplicationStackObservation) DeepCopyInto(out *SiteConfigApplicationStackObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigApplicationStackObservation.
func (in *SiteConfigApplicationStackObservation) DeepCopy() *SiteConfigApplicationStackObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigApplicationStackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigApplicationStackParameters) DeepCopyInto(out *SiteConfigApplicationStackParameters) {
	*out = *in
	if in.Docker != nil {
		in, out := &in.Docker, &out.Docker
		*out = make([]ApplicationStackDockerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DotnetVersion != nil {
		in, out := &in.DotnetVersion, &out.DotnetVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.PowershellCoreVersion != nil {
		in, out := &in.PowershellCoreVersion, &out.PowershellCoreVersion
		*out = new(string)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.UseCustomRuntime != nil {
		in, out := &in.UseCustomRuntime, &out.UseCustomRuntime
		*out = new(bool)
		**out = **in
	}
	if in.UseDotnetIsolatedRuntime != nil {
		in, out := &in.UseDotnetIsolatedRuntime, &out.UseDotnetIsolatedRuntime
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigApplicationStackParameters.
func (in *SiteConfigApplicationStackParameters) DeepCopy() *SiteConfigApplicationStackParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigApplicationStackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAutoHealSettingObservation) DeepCopyInto(out *SiteConfigAutoHealSettingObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAutoHealSettingObservation.
func (in *SiteConfigAutoHealSettingObservation) DeepCopy() *SiteConfigAutoHealSettingObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAutoHealSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigAutoHealSettingParameters) DeepCopyInto(out *SiteConfigAutoHealSettingParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]AutoHealSettingActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]AutoHealSettingTriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigAutoHealSettingParameters.
func (in *SiteConfigAutoHealSettingParameters) DeepCopy() *SiteConfigAutoHealSettingParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigAutoHealSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigCorsObservation) DeepCopyInto(out *SiteConfigCorsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigCorsObservation.
func (in *SiteConfigCorsObservation) DeepCopy() *SiteConfigCorsObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigCorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigCorsParameters) DeepCopyInto(out *SiteConfigCorsParameters) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigCorsParameters.
func (in *SiteConfigCorsParameters) DeepCopy() *SiteConfigCorsParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigCorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigIPRestrictionHeadersObservation) DeepCopyInto(out *SiteConfigIPRestrictionHeadersObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigIPRestrictionHeadersObservation.
func (in *SiteConfigIPRestrictionHeadersObservation) DeepCopy() *SiteConfigIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigIPRestrictionHeadersParameters) DeepCopyInto(out *SiteConfigIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigIPRestrictionHeadersParameters.
func (in *SiteConfigIPRestrictionHeadersParameters) DeepCopy() *SiteConfigIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigIPRestrictionObservation) DeepCopyInto(out *SiteConfigIPRestrictionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigIPRestrictionObservation.
func (in *SiteConfigIPRestrictionObservation) DeepCopy() *SiteConfigIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigIPRestrictionParameters) DeepCopyInto(out *SiteConfigIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]IPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigIPRestrictionParameters.
func (in *SiteConfigIPRestrictionParameters) DeepCopy() *SiteConfigIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigObservation) DeepCopyInto(out *SiteConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigObservation.
func (in *SiteConfigObservation) DeepCopy() *SiteConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigParameters) DeepCopyInto(out *SiteConfigParameters) {
	*out = *in
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(float64)
		**out = **in
	}
	if in.AutoSwapSlotName != nil {
		in, out := &in.AutoSwapSlotName, &out.AutoSwapSlotName
		*out = new(string)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]CorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DotnetFrameworkVersion != nil {
		in, out := &in.DotnetFrameworkVersion, &out.DotnetFrameworkVersion
		*out = new(string)
		**out = **in
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(float64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPRestriction != nil {
		in, out := &in.IPRestriction, &out.IPRestriction
		*out = make([]IPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.LinuxFxVersion != nil {
		in, out := &in.LinuxFxVersion, &out.LinuxFxVersion
		*out = new(string)
		**out = **in
	}
	if in.MinTLSVersion != nil {
		in, out := &in.MinTLSVersion, &out.MinTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScmIPRestriction != nil {
		in, out := &in.ScmIPRestriction, &out.ScmIPRestriction
		*out = make([]ScmIPRestrictionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScmType != nil {
		in, out := &in.ScmType, &out.ScmType
		*out = new(string)
		**out = **in
	}
	if in.ScmUseMainIPRestriction != nil {
		in, out := &in.ScmUseMainIPRestriction, &out.ScmUseMainIPRestriction
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorkerProcess != nil {
		in, out := &in.Use32BitWorkerProcess, &out.Use32BitWorkerProcess
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigParameters.
func (in *SiteConfigParameters) DeepCopy() *SiteConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigScmIPRestrictionHeadersObservation) DeepCopyInto(out *SiteConfigScmIPRestrictionHeadersObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigScmIPRestrictionHeadersObservation.
func (in *SiteConfigScmIPRestrictionHeadersObservation) DeepCopy() *SiteConfigScmIPRestrictionHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigScmIPRestrictionHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigScmIPRestrictionHeadersParameters) DeepCopyInto(out *SiteConfigScmIPRestrictionHeadersParameters) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigScmIPRestrictionHeadersParameters.
func (in *SiteConfigScmIPRestrictionHeadersParameters) DeepCopy() *SiteConfigScmIPRestrictionHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigScmIPRestrictionHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigScmIPRestrictionObservation) DeepCopyInto(out *SiteConfigScmIPRestrictionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigScmIPRestrictionObservation.
func (in *SiteConfigScmIPRestrictionObservation) DeepCopy() *SiteConfigScmIPRestrictionObservation {
	if in == nil {
		return nil
	}
	out := new(SiteConfigScmIPRestrictionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteConfigScmIPRestrictionParameters) DeepCopyInto(out *SiteConfigScmIPRestrictionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]SiteConfigScmIPRestrictionHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetIDRef != nil {
		in, out := &in.VirtualNetworkSubnetIDRef, &out.VirtualNetworkSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkSubnetIDSelector != nil {
		in, out := &in.VirtualNetworkSubnetIDSelector, &out.VirtualNetworkSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteConfigScmIPRestrictionParameters.
func (in *SiteConfigScmIPRestrictionParameters) DeepCopy() *SiteConfigScmIPRestrictionParameters {
	if in == nil {
		return nil
	}
	out := new(SiteConfigScmIPRestrictionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteCredentialObservation) DeepCopyInto(out *SiteCredentialObservation) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteCredentialObservation.
func (in *SiteCredentialObservation) DeepCopy() *SiteCredentialObservation {
	if in == nil {
		return nil
	}
	out := new(SiteCredentialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteCredentialParameters) DeepCopyInto(out *SiteCredentialParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteCredentialParameters.
func (in *SiteCredentialParameters) DeepCopy() *SiteCredentialParameters {
	if in == nil {
		return nil
	}
	out := new(SiteCredentialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkuObservation) DeepCopyInto(out *SkuObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkuObservation.
func (in *SkuObservation) DeepCopy() *SkuObservation {
	if in == nil {
		return nil
	}
	out := new(SkuObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkuParameters) DeepCopyInto(out *SkuParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkuParameters.
func (in *SkuParameters) DeepCopy() *SkuParameters {
	if in == nil {
		return nil
	}
	out := new(SkuParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlowRequestObservation) DeepCopyInto(out *SlowRequestObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlowRequestObservation.
func (in *SlowRequestObservation) DeepCopy() *SlowRequestObservation {
	if in == nil {
		return nil
	}
	out := new(SlowRequestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlowRequestParameters) DeepCopyInto(out *SlowRequestParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TimeTaken != nil {
		in, out := &in.TimeTaken, &out.TimeTaken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlowRequestParameters.
func (in *SlowRequestParameters) DeepCopy() *SlowRequestParameters {
	if in == nil {
		return nil
	}
	out := new(SlowRequestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceControlObservation) DeepCopyInto(out *SourceControlObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceControlObservation.
func (in *SourceControlObservation) DeepCopy() *SourceControlObservation {
	if in == nil {
		return nil
	}
	out := new(SourceControlObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceControlParameters) DeepCopyInto(out *SourceControlParameters) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.ManualIntegration != nil {
		in, out := &in.ManualIntegration, &out.ManualIntegration
		*out = new(bool)
		**out = **in
	}
	if in.RepoURL != nil {
		in, out := &in.RepoURL, &out.RepoURL
		*out = new(string)
		**out = **in
	}
	if in.RollbackEnabled != nil {
		in, out := &in.RollbackEnabled, &out.RollbackEnabled
		*out = new(bool)
		**out = **in
	}
	if in.UseMercurial != nil {
		in, out := &in.UseMercurial, &out.UseMercurial
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceControlParameters.
func (in *SourceControlParameters) DeepCopy() *SourceControlParameters {
	if in == nil {
		return nil
	}
	out := new(SourceControlParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceControlToken) DeepCopyInto(out *SourceControlToken) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceControlToken.
func (in *SourceControlToken) DeepCopy() *SourceControlToken {
	if in == nil {
		return nil
	}
	out := new(SourceControlToken)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SourceControlToken) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceControlTokenList) DeepCopyInto(out *SourceControlTokenList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SourceControlToken, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceControlTokenList.
func (in *SourceControlTokenList) DeepCopy() *SourceControlTokenList {
	if in == nil {
		return nil
	}
	out := new(SourceControlTokenList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SourceControlTokenList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceControlTokenObservation) DeepCopyInto(out *SourceControlTokenObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceControlTokenObservation.
func (in *SourceControlTokenObservation) DeepCopy() *SourceControlTokenObservation {
	if in == nil {
		return nil
	}
	out := new(SourceControlTokenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceControlTokenParameters) DeepCopyInto(out *SourceControlTokenParameters) {
	*out = *in
	out.TokenSecretRef = in.TokenSecretRef
	if in.TokenSecretSecretRef != nil {
		in, out := &in.TokenSecretSecretRef, &out.TokenSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceControlTokenParameters.
func (in *SourceControlTokenParameters) DeepCopy() *SourceControlTokenParameters {
	if in == nil {
		return nil
	}
	out := new(SourceControlTokenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceControlTokenSpec) DeepCopyInto(out *SourceControlTokenSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceControlTokenSpec.
func (in *SourceControlTokenSpec) DeepCopy() *SourceControlTokenSpec {
	if in == nil {
		return nil
	}
	out := new(SourceControlTokenSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceControlTokenStatus) DeepCopyInto(out *SourceControlTokenStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceControlTokenStatus.
func (in *SourceControlTokenStatus) DeepCopy() *SourceControlTokenStatus {
	if in == nil {
		return nil
	}
	out := new(SourceControlTokenStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusCodeObservation) DeepCopyInto(out *StatusCodeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusCodeObservation.
func (in *StatusCodeObservation) DeepCopy() *StatusCodeObservation {
	if in == nil {
		return nil
	}
	out := new(StatusCodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusCodeParameters) DeepCopyInto(out *StatusCodeParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.StatusCodeRange != nil {
		in, out := &in.StatusCodeRange, &out.StatusCodeRange
		*out = new(string)
		**out = **in
	}
	if in.SubStatus != nil {
		in, out := &in.SubStatus, &out.SubStatus
		*out = new(float64)
		**out = **in
	}
	if in.Win32Status != nil {
		in, out := &in.Win32Status, &out.Win32Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusCodeParameters.
func (in *StatusCodeParameters) DeepCopy() *StatusCodeParameters {
	if in == nil {
		return nil
	}
	out := new(StatusCodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StickySettingsObservation) DeepCopyInto(out *StickySettingsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StickySettingsObservation.
func (in *StickySettingsObservation) DeepCopy() *StickySettingsObservation {
	if in == nil {
		return nil
	}
	out := new(StickySettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StickySettingsParameters) DeepCopyInto(out *StickySettingsParameters) {
	*out = *in
	if in.AppSettingNames != nil {
		in, out := &in.AppSettingNames, &out.AppSettingNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConnectionStringNames != nil {
		in, out := &in.ConnectionStringNames, &out.ConnectionStringNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StickySettingsParameters.
func (in *StickySettingsParameters) DeepCopy() *StickySettingsParameters {
	if in == nil {
		return nil
	}
	out := new(StickySettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountObservation) DeepCopyInto(out *StorageAccountObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountObservation.
func (in *StorageAccountObservation) DeepCopy() *StorageAccountObservation {
	if in == nil {
		return nil
	}
	out := new(StorageAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountParameters) DeepCopyInto(out *StorageAccountParameters) {
	*out = *in
	out.AccessKeySecretRef = in.AccessKeySecretRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountParameters.
func (in *StorageAccountParameters) DeepCopy() *StorageAccountParameters {
	if in == nil {
		return nil
	}
	out := new(StorageAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerObservation) DeepCopyInto(out *TriggerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerObservation.
func (in *TriggerObservation) DeepCopy() *TriggerObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerParameters) DeepCopyInto(out *TriggerParameters) {
	*out = *in
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = make([]RequestsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SlowRequest != nil {
		in, out := &in.SlowRequest, &out.SlowRequest
		*out = make([]SlowRequestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = make([]StatusCodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerParameters.
func (in *TriggerParameters) DeepCopy() *TriggerParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerRequestsObservation) DeepCopyInto(out *TriggerRequestsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerRequestsObservation.
func (in *TriggerRequestsObservation) DeepCopy() *TriggerRequestsObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerRequestsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerRequestsParameters) DeepCopyInto(out *TriggerRequestsParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerRequestsParameters.
func (in *TriggerRequestsParameters) DeepCopy() *TriggerRequestsParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerRequestsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerSlowRequestObservation) DeepCopyInto(out *TriggerSlowRequestObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerSlowRequestObservation.
func (in *TriggerSlowRequestObservation) DeepCopy() *TriggerSlowRequestObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerSlowRequestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerSlowRequestParameters) DeepCopyInto(out *TriggerSlowRequestParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TimeTaken != nil {
		in, out := &in.TimeTaken, &out.TimeTaken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerSlowRequestParameters.
func (in *TriggerSlowRequestParameters) DeepCopy() *TriggerSlowRequestParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerSlowRequestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerStatusCodeObservation) DeepCopyInto(out *TriggerStatusCodeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerStatusCodeObservation.
func (in *TriggerStatusCodeObservation) DeepCopy() *TriggerStatusCodeObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerStatusCodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerStatusCodeParameters) DeepCopyInto(out *TriggerStatusCodeParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.StatusCodeRange != nil {
		in, out := &in.StatusCodeRange, &out.StatusCodeRange
		*out = new(string)
		**out = **in
	}
	if in.SubStatus != nil {
		in, out := &in.SubStatus, &out.SubStatus
		*out = new(float64)
		**out = **in
	}
	if in.Win32Status != nil {
		in, out := &in.Win32Status, &out.Win32Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerStatusCodeParameters.
func (in *TriggerStatusCodeParameters) DeepCopy() *TriggerStatusCodeParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerStatusCodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TwitterObservation) DeepCopyInto(out *TwitterObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TwitterObservation.
func (in *TwitterObservation) DeepCopy() *TwitterObservation {
	if in == nil {
		return nil
	}
	out := new(TwitterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TwitterParameters) DeepCopyInto(out *TwitterParameters) {
	*out = *in
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	out.ConsumerSecretSecretRef = in.ConsumerSecretSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TwitterParameters.
func (in *TwitterParameters) DeepCopy() *TwitterParameters {
	if in == nil {
		return nil
	}
	out := new(TwitterParameters)
	in.DeepCopyInto(out)
	return out
}
