// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DNSInitParameters struct {

	// Whether to enable DNS proxy on Firewalls attached to this Firewall Policy? Defaults to false.
	ProxyEnabled *bool `json:"proxyEnabled,omitempty" tf:"proxy_enabled,omitempty"`

	// A list of custom DNS servers' IP addresses.
	Servers []*string `json:"servers,omitempty" tf:"servers,omitempty"`
}

type DNSObservation struct {

	// Whether to enable DNS proxy on Firewalls attached to this Firewall Policy? Defaults to false.
	ProxyEnabled *bool `json:"proxyEnabled,omitempty" tf:"proxy_enabled,omitempty"`

	// A list of custom DNS servers' IP addresses.
	Servers []*string `json:"servers,omitempty" tf:"servers,omitempty"`
}

type DNSParameters struct {

	// Whether to enable DNS proxy on Firewalls attached to this Firewall Policy? Defaults to false.
	// +kubebuilder:validation:Optional
	ProxyEnabled *bool `json:"proxyEnabled,omitempty" tf:"proxy_enabled,omitempty"`

	// A list of custom DNS servers' IP addresses.
	// +kubebuilder:validation:Optional
	Servers []*string `json:"servers,omitempty" tf:"servers,omitempty"`
}

type ExplicitProxyInitParameters struct {

	// Whether the pac file port and url need to be provided.
	EnablePacFile *bool `json:"enablePacFile,omitempty" tf:"enable_pac_file,omitempty"`

	// Whether the explicit proxy is enabled for this Firewall Policy.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The port number for explicit http protocol.
	HTTPPort *float64 `json:"httpPort,omitempty" tf:"http_port,omitempty"`

	// The port number for explicit proxy https protocol.
	HTTPSPort *float64 `json:"httpsPort,omitempty" tf:"https_port,omitempty"`

	// Specifies a SAS URL for PAC file.
	PacFile *string `json:"pacFile,omitempty" tf:"pac_file,omitempty"`

	// Specifies a port number for firewall to serve PAC file.
	PacFilePort *float64 `json:"pacFilePort,omitempty" tf:"pac_file_port,omitempty"`
}

type ExplicitProxyObservation struct {

	// Whether the pac file port and url need to be provided.
	EnablePacFile *bool `json:"enablePacFile,omitempty" tf:"enable_pac_file,omitempty"`

	// Whether the explicit proxy is enabled for this Firewall Policy.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The port number for explicit http protocol.
	HTTPPort *float64 `json:"httpPort,omitempty" tf:"http_port,omitempty"`

	// The port number for explicit proxy https protocol.
	HTTPSPort *float64 `json:"httpsPort,omitempty" tf:"https_port,omitempty"`

	// Specifies a SAS URL for PAC file.
	PacFile *string `json:"pacFile,omitempty" tf:"pac_file,omitempty"`

	// Specifies a port number for firewall to serve PAC file.
	PacFilePort *float64 `json:"pacFilePort,omitempty" tf:"pac_file_port,omitempty"`
}

type ExplicitProxyParameters struct {

	// Whether the pac file port and url need to be provided.
	// +kubebuilder:validation:Optional
	EnablePacFile *bool `json:"enablePacFile,omitempty" tf:"enable_pac_file,omitempty"`

	// Whether the explicit proxy is enabled for this Firewall Policy.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The port number for explicit http protocol.
	// +kubebuilder:validation:Optional
	HTTPPort *float64 `json:"httpPort,omitempty" tf:"http_port,omitempty"`

	// The port number for explicit proxy https protocol.
	// +kubebuilder:validation:Optional
	HTTPSPort *float64 `json:"httpsPort,omitempty" tf:"https_port,omitempty"`

	// Specifies a SAS URL for PAC file.
	// +kubebuilder:validation:Optional
	PacFile *string `json:"pacFile,omitempty" tf:"pac_file,omitempty"`

	// Specifies a port number for firewall to serve PAC file.
	// +kubebuilder:validation:Optional
	PacFilePort *float64 `json:"pacFilePort,omitempty" tf:"pac_file_port,omitempty"`
}

type FirewallPolicyIdentityInitParameters struct {

	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Firewall Policy.
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// Specifies the type of Managed Service Identity that should be configured on this Firewall Policy. Only possible value is UserAssigned.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type FirewallPolicyIdentityObservation struct {

	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Firewall Policy.
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// Specifies the type of Managed Service Identity that should be configured on this Firewall Policy. Only possible value is UserAssigned.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type FirewallPolicyIdentityParameters struct {

	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Firewall Policy.
	// +kubebuilder:validation:Optional
	IdentityIds []*string `json:"identityIds" tf:"identity_ids,omitempty"`

	// Specifies the type of Managed Service Identity that should be configured on this Firewall Policy. Only possible value is UserAssigned.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type FirewallPolicyInitParameters struct {

	// Whether enable auto learn private ip range.
	AutoLearnPrivateRangesEnabled *bool `json:"autoLearnPrivateRangesEnabled,omitempty" tf:"auto_learn_private_ranges_enabled,omitempty"`

	// The ID of the base Firewall Policy.
	BasePolicyID *string `json:"basePolicyId,omitempty" tf:"base_policy_id,omitempty"`

	// A dns block as defined below.
	DNS []DNSInitParameters `json:"dns,omitempty" tf:"dns,omitempty"`

	// A explicit_proxy block as defined below.
	ExplicitProxy []ExplicitProxyInitParameters `json:"explicitProxy,omitempty" tf:"explicit_proxy,omitempty"`

	// An identity block as defined below.
	Identity []FirewallPolicyIdentityInitParameters `json:"identity,omitempty" tf:"identity,omitempty"`

	// An insights block as defined below.
	Insights []InsightsInitParameters `json:"insights,omitempty" tf:"insights,omitempty"`

	// A intrusion_detection block as defined below.
	IntrusionDetection []IntrusionDetectionInitParameters `json:"intrusionDetection,omitempty" tf:"intrusion_detection,omitempty"`

	// The Azure Region where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// A list of private IP ranges to which traffic will not be SNAT.
	PrivateIPRanges []*string `json:"privateIpRanges,omitempty" tf:"private_ip_ranges,omitempty"`

	// Whether SQL Redirect traffic filtering is allowed. Enabling this flag requires no rule using ports between 11000-11999.
	SQLRedirectAllowed *bool `json:"sqlRedirectAllowed,omitempty" tf:"sql_redirect_allowed,omitempty"`

	// The SKU Tier of the Firewall Policy. Possible values are Standard, Premium and Basic. Changing this forces a new Firewall Policy to be created.
	Sku *string `json:"sku,omitempty" tf:"sku,omitempty"`

	// A tls_certificate block as defined below.
	TLSCertificate []TLSCertificateInitParameters `json:"tlsCertificate,omitempty" tf:"tls_certificate,omitempty"`

	// A mapping of tags which should be assigned to the Firewall Policy.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// A threat_intelligence_allowlist block as defined below.
	ThreatIntelligenceAllowlist []ThreatIntelligenceAllowlistInitParameters `json:"threatIntelligenceAllowlist,omitempty" tf:"threat_intelligence_allowlist,omitempty"`

	// The operation mode for Threat Intelligence. Possible values are Alert, Deny and Off. Defaults to Alert.
	ThreatIntelligenceMode *string `json:"threatIntelligenceMode,omitempty" tf:"threat_intelligence_mode,omitempty"`
}

type FirewallPolicyObservation struct {

	// Whether enable auto learn private ip range.
	AutoLearnPrivateRangesEnabled *bool `json:"autoLearnPrivateRangesEnabled,omitempty" tf:"auto_learn_private_ranges_enabled,omitempty"`

	// The ID of the base Firewall Policy.
	BasePolicyID *string `json:"basePolicyId,omitempty" tf:"base_policy_id,omitempty"`

	// A list of reference to child Firewall Policies of this Firewall Policy.
	ChildPolicies []*string `json:"childPolicies,omitempty" tf:"child_policies,omitempty"`

	// A dns block as defined below.
	DNS []DNSObservation `json:"dns,omitempty" tf:"dns,omitempty"`

	// A explicit_proxy block as defined below.
	ExplicitProxy []ExplicitProxyObservation `json:"explicitProxy,omitempty" tf:"explicit_proxy,omitempty"`

	// A list of references to Azure Firewalls that this Firewall Policy is associated with.
	Firewalls []*string `json:"firewalls,omitempty" tf:"firewalls,omitempty"`

	// The ID of the Firewall Policy.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// An identity block as defined below.
	Identity []FirewallPolicyIdentityObservation `json:"identity,omitempty" tf:"identity,omitempty"`

	// An insights block as defined below.
	Insights []InsightsObservation `json:"insights,omitempty" tf:"insights,omitempty"`

	// A intrusion_detection block as defined below.
	IntrusionDetection []IntrusionDetectionObservation `json:"intrusionDetection,omitempty" tf:"intrusion_detection,omitempty"`

	// The Azure Region where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// A list of private IP ranges to which traffic will not be SNAT.
	PrivateIPRanges []*string `json:"privateIpRanges,omitempty" tf:"private_ip_ranges,omitempty"`

	// The name of the Resource Group where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// A list of references to Firewall Policy Rule Collection Groups that belongs to this Firewall Policy.
	RuleCollectionGroups []*string `json:"ruleCollectionGroups,omitempty" tf:"rule_collection_groups,omitempty"`

	// Whether SQL Redirect traffic filtering is allowed. Enabling this flag requires no rule using ports between 11000-11999.
	SQLRedirectAllowed *bool `json:"sqlRedirectAllowed,omitempty" tf:"sql_redirect_allowed,omitempty"`

	// The SKU Tier of the Firewall Policy. Possible values are Standard, Premium and Basic. Changing this forces a new Firewall Policy to be created.
	Sku *string `json:"sku,omitempty" tf:"sku,omitempty"`

	// A tls_certificate block as defined below.
	TLSCertificate []TLSCertificateObservation `json:"tlsCertificate,omitempty" tf:"tls_certificate,omitempty"`

	// A mapping of tags which should be assigned to the Firewall Policy.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// A threat_intelligence_allowlist block as defined below.
	ThreatIntelligenceAllowlist []ThreatIntelligenceAllowlistObservation `json:"threatIntelligenceAllowlist,omitempty" tf:"threat_intelligence_allowlist,omitempty"`

	// The operation mode for Threat Intelligence. Possible values are Alert, Deny and Off. Defaults to Alert.
	ThreatIntelligenceMode *string `json:"threatIntelligenceMode,omitempty" tf:"threat_intelligence_mode,omitempty"`
}

type FirewallPolicyParameters struct {

	// Whether enable auto learn private ip range.
	// +kubebuilder:validation:Optional
	AutoLearnPrivateRangesEnabled *bool `json:"autoLearnPrivateRangesEnabled,omitempty" tf:"auto_learn_private_ranges_enabled,omitempty"`

	// The ID of the base Firewall Policy.
	// +kubebuilder:validation:Optional
	BasePolicyID *string `json:"basePolicyId,omitempty" tf:"base_policy_id,omitempty"`

	// A dns block as defined below.
	// +kubebuilder:validation:Optional
	DNS []DNSParameters `json:"dns,omitempty" tf:"dns,omitempty"`

	// A explicit_proxy block as defined below.
	// +kubebuilder:validation:Optional
	ExplicitProxy []ExplicitProxyParameters `json:"explicitProxy,omitempty" tf:"explicit_proxy,omitempty"`

	// An identity block as defined below.
	// +kubebuilder:validation:Optional
	Identity []FirewallPolicyIdentityParameters `json:"identity,omitempty" tf:"identity,omitempty"`

	// An insights block as defined below.
	// +kubebuilder:validation:Optional
	Insights []InsightsParameters `json:"insights,omitempty" tf:"insights,omitempty"`

	// A intrusion_detection block as defined below.
	// +kubebuilder:validation:Optional
	IntrusionDetection []IntrusionDetectionParameters `json:"intrusionDetection,omitempty" tf:"intrusion_detection,omitempty"`

	// The Azure Region where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// A list of private IP ranges to which traffic will not be SNAT.
	// +kubebuilder:validation:Optional
	PrivateIPRanges []*string `json:"privateIpRanges,omitempty" tf:"private_ip_ranges,omitempty"`

	// The name of the Resource Group where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// Whether SQL Redirect traffic filtering is allowed. Enabling this flag requires no rule using ports between 11000-11999.
	// +kubebuilder:validation:Optional
	SQLRedirectAllowed *bool `json:"sqlRedirectAllowed,omitempty" tf:"sql_redirect_allowed,omitempty"`

	// The SKU Tier of the Firewall Policy. Possible values are Standard, Premium and Basic. Changing this forces a new Firewall Policy to be created.
	// +kubebuilder:validation:Optional
	Sku *string `json:"sku,omitempty" tf:"sku,omitempty"`

	// A tls_certificate block as defined below.
	// +kubebuilder:validation:Optional
	TLSCertificate []TLSCertificateParameters `json:"tlsCertificate,omitempty" tf:"tls_certificate,omitempty"`

	// A mapping of tags which should be assigned to the Firewall Policy.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// A threat_intelligence_allowlist block as defined below.
	// +kubebuilder:validation:Optional
	ThreatIntelligenceAllowlist []ThreatIntelligenceAllowlistParameters `json:"threatIntelligenceAllowlist,omitempty" tf:"threat_intelligence_allowlist,omitempty"`

	// The operation mode for Threat Intelligence. Possible values are Alert, Deny and Off. Defaults to Alert.
	// +kubebuilder:validation:Optional
	ThreatIntelligenceMode *string `json:"threatIntelligenceMode,omitempty" tf:"threat_intelligence_mode,omitempty"`
}

type InsightsInitParameters struct {

	// The ID of the default Log Analytics Workspace that the Firewalls associated with this Firewall Policy will send their logs to, when there is no location matches in the log_analytics_workspace.
	DefaultLogAnalyticsWorkspaceID *string `json:"defaultLogAnalyticsWorkspaceId,omitempty" tf:"default_log_analytics_workspace_id,omitempty"`

	// Whether the insights functionality is enabled for this Firewall Policy.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// A list of log_analytics_workspace block as defined below.
	LogAnalyticsWorkspace []LogAnalyticsWorkspaceInitParameters `json:"logAnalyticsWorkspace,omitempty" tf:"log_analytics_workspace,omitempty"`

	// The log retention period in days.
	RetentionInDays *float64 `json:"retentionInDays,omitempty" tf:"retention_in_days,omitempty"`
}

type InsightsObservation struct {

	// The ID of the default Log Analytics Workspace that the Firewalls associated with this Firewall Policy will send their logs to, when there is no location matches in the log_analytics_workspace.
	DefaultLogAnalyticsWorkspaceID *string `json:"defaultLogAnalyticsWorkspaceId,omitempty" tf:"default_log_analytics_workspace_id,omitempty"`

	// Whether the insights functionality is enabled for this Firewall Policy.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// A list of log_analytics_workspace block as defined below.
	LogAnalyticsWorkspace []LogAnalyticsWorkspaceObservation `json:"logAnalyticsWorkspace,omitempty" tf:"log_analytics_workspace,omitempty"`

	// The log retention period in days.
	RetentionInDays *float64 `json:"retentionInDays,omitempty" tf:"retention_in_days,omitempty"`
}

type InsightsParameters struct {

	// The ID of the default Log Analytics Workspace that the Firewalls associated with this Firewall Policy will send their logs to, when there is no location matches in the log_analytics_workspace.
	// +kubebuilder:validation:Optional
	DefaultLogAnalyticsWorkspaceID *string `json:"defaultLogAnalyticsWorkspaceId" tf:"default_log_analytics_workspace_id,omitempty"`

	// Whether the insights functionality is enabled for this Firewall Policy.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// A list of log_analytics_workspace block as defined below.
	// +kubebuilder:validation:Optional
	LogAnalyticsWorkspace []LogAnalyticsWorkspaceParameters `json:"logAnalyticsWorkspace,omitempty" tf:"log_analytics_workspace,omitempty"`

	// The log retention period in days.
	// +kubebuilder:validation:Optional
	RetentionInDays *float64 `json:"retentionInDays,omitempty" tf:"retention_in_days,omitempty"`
}

type IntrusionDetectionInitParameters struct {

	// In which mode you want to run intrusion detection: Off, Alert or Deny.
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// A list of Private IP address ranges to identify traffic direction. By default, only ranges defined by IANA RFC 1918 are considered private IP addresses.
	PrivateRanges []*string `json:"privateRanges,omitempty" tf:"private_ranges,omitempty"`

	// One or more signature_overrides blocks as defined below.
	SignatureOverrides []SignatureOverridesInitParameters `json:"signatureOverrides,omitempty" tf:"signature_overrides,omitempty"`

	// One or more traffic_bypass blocks as defined below.
	TrafficBypass []TrafficBypassInitParameters `json:"trafficBypass,omitempty" tf:"traffic_bypass,omitempty"`
}

type IntrusionDetectionObservation struct {

	// In which mode you want to run intrusion detection: Off, Alert or Deny.
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// A list of Private IP address ranges to identify traffic direction. By default, only ranges defined by IANA RFC 1918 are considered private IP addresses.
	PrivateRanges []*string `json:"privateRanges,omitempty" tf:"private_ranges,omitempty"`

	// One or more signature_overrides blocks as defined below.
	SignatureOverrides []SignatureOverridesObservation `json:"signatureOverrides,omitempty" tf:"signature_overrides,omitempty"`

	// One or more traffic_bypass blocks as defined below.
	TrafficBypass []TrafficBypassObservation `json:"trafficBypass,omitempty" tf:"traffic_bypass,omitempty"`
}

type IntrusionDetectionParameters struct {

	// In which mode you want to run intrusion detection: Off, Alert or Deny.
	// +kubebuilder:validation:Optional
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// A list of Private IP address ranges to identify traffic direction. By default, only ranges defined by IANA RFC 1918 are considered private IP addresses.
	// +kubebuilder:validation:Optional
	PrivateRanges []*string `json:"privateRanges,omitempty" tf:"private_ranges,omitempty"`

	// One or more signature_overrides blocks as defined below.
	// +kubebuilder:validation:Optional
	SignatureOverrides []SignatureOverridesParameters `json:"signatureOverrides,omitempty" tf:"signature_overrides,omitempty"`

	// One or more traffic_bypass blocks as defined below.
	// +kubebuilder:validation:Optional
	TrafficBypass []TrafficBypassParameters `json:"trafficBypass,omitempty" tf:"traffic_bypass,omitempty"`
}

type LogAnalyticsWorkspaceInitParameters struct {

	// The location of the Firewalls, that when matches this Log Analytics Workspace will be used to consume their logs.
	FirewallLocation *string `json:"firewallLocation,omitempty" tf:"firewall_location,omitempty"`

	// 12-digit number (id) which identifies your signature.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type LogAnalyticsWorkspaceObservation struct {

	// The location of the Firewalls, that when matches this Log Analytics Workspace will be used to consume their logs.
	FirewallLocation *string `json:"firewallLocation,omitempty" tf:"firewall_location,omitempty"`

	// 12-digit number (id) which identifies your signature.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type LogAnalyticsWorkspaceParameters struct {

	// The location of the Firewalls, that when matches this Log Analytics Workspace will be used to consume their logs.
	// +kubebuilder:validation:Optional
	FirewallLocation *string `json:"firewallLocation" tf:"firewall_location,omitempty"`

	// 12-digit number (id) which identifies your signature.
	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`
}

type SignatureOverridesInitParameters struct {

	// 12-digit number (id) which identifies your signature.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// state can be any of Off, Alert or Deny.
	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type SignatureOverridesObservation struct {

	// 12-digit number (id) which identifies your signature.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// state can be any of Off, Alert or Deny.
	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type SignatureOverridesParameters struct {

	// 12-digit number (id) which identifies your signature.
	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// state can be any of Off, Alert or Deny.
	// +kubebuilder:validation:Optional
	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type TLSCertificateInitParameters struct {

	// The ID of the Key Vault, where the secret or certificate is stored.
	KeyVaultSecretID *string `json:"keyVaultSecretId,omitempty" tf:"key_vault_secret_id,omitempty"`

	// The name of the certificate.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type TLSCertificateObservation struct {

	// The ID of the Key Vault, where the secret or certificate is stored.
	KeyVaultSecretID *string `json:"keyVaultSecretId,omitempty" tf:"key_vault_secret_id,omitempty"`

	// The name of the certificate.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type TLSCertificateParameters struct {

	// The ID of the Key Vault, where the secret or certificate is stored.
	// +kubebuilder:validation:Optional
	KeyVaultSecretID *string `json:"keyVaultSecretId" tf:"key_vault_secret_id,omitempty"`

	// The name of the certificate.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type ThreatIntelligenceAllowlistInitParameters struct {

	// A list of FQDNs that will be skipped for threat detection.
	Fqdns []*string `json:"fqdns,omitempty" tf:"fqdns,omitempty"`

	// A list of IP addresses or CIDR ranges that will be skipped for threat detection.
	IPAddresses []*string `json:"ipAddresses,omitempty" tf:"ip_addresses,omitempty"`
}

type ThreatIntelligenceAllowlistObservation struct {

	// A list of FQDNs that will be skipped for threat detection.
	Fqdns []*string `json:"fqdns,omitempty" tf:"fqdns,omitempty"`

	// A list of IP addresses or CIDR ranges that will be skipped for threat detection.
	IPAddresses []*string `json:"ipAddresses,omitempty" tf:"ip_addresses,omitempty"`
}

type ThreatIntelligenceAllowlistParameters struct {

	// A list of FQDNs that will be skipped for threat detection.
	// +kubebuilder:validation:Optional
	Fqdns []*string `json:"fqdns,omitempty" tf:"fqdns,omitempty"`

	// A list of IP addresses or CIDR ranges that will be skipped for threat detection.
	// +kubebuilder:validation:Optional
	IPAddresses []*string `json:"ipAddresses,omitempty" tf:"ip_addresses,omitempty"`
}

type TrafficBypassInitParameters struct {

	// The description for this bypass traffic setting.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies a list of destination IP addresses that shall be bypassed by intrusion detection.
	DestinationAddresses []*string `json:"destinationAddresses,omitempty" tf:"destination_addresses,omitempty"`

	// Specifies a list of destination IP groups that shall be bypassed by intrusion detection.
	DestinationIPGroups []*string `json:"destinationIpGroups,omitempty" tf:"destination_ip_groups,omitempty"`

	// Specifies a list of destination IP ports that shall be bypassed by intrusion detection.
	DestinationPorts []*string `json:"destinationPorts,omitempty" tf:"destination_ports,omitempty"`

	// The name which should be used for this bypass traffic setting.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The protocols any of ANY, TCP, ICMP, UDP that shall be bypassed by intrusion detection.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Specifies a list of source addresses that shall be bypassed by intrusion detection.
	SourceAddresses []*string `json:"sourceAddresses,omitempty" tf:"source_addresses,omitempty"`

	// Specifies a list of source IP groups that shall be bypassed by intrusion detection.
	SourceIPGroups []*string `json:"sourceIpGroups,omitempty" tf:"source_ip_groups,omitempty"`
}

type TrafficBypassObservation struct {

	// The description for this bypass traffic setting.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies a list of destination IP addresses that shall be bypassed by intrusion detection.
	DestinationAddresses []*string `json:"destinationAddresses,omitempty" tf:"destination_addresses,omitempty"`

	// Specifies a list of destination IP groups that shall be bypassed by intrusion detection.
	DestinationIPGroups []*string `json:"destinationIpGroups,omitempty" tf:"destination_ip_groups,omitempty"`

	// Specifies a list of destination IP ports that shall be bypassed by intrusion detection.
	DestinationPorts []*string `json:"destinationPorts,omitempty" tf:"destination_ports,omitempty"`

	// The name which should be used for this bypass traffic setting.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The protocols any of ANY, TCP, ICMP, UDP that shall be bypassed by intrusion detection.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Specifies a list of source addresses that shall be bypassed by intrusion detection.
	SourceAddresses []*string `json:"sourceAddresses,omitempty" tf:"source_addresses,omitempty"`

	// Specifies a list of source IP groups that shall be bypassed by intrusion detection.
	SourceIPGroups []*string `json:"sourceIpGroups,omitempty" tf:"source_ip_groups,omitempty"`
}

type TrafficBypassParameters struct {

	// The description for this bypass traffic setting.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies a list of destination IP addresses that shall be bypassed by intrusion detection.
	// +kubebuilder:validation:Optional
	DestinationAddresses []*string `json:"destinationAddresses,omitempty" tf:"destination_addresses,omitempty"`

	// Specifies a list of destination IP groups that shall be bypassed by intrusion detection.
	// +kubebuilder:validation:Optional
	DestinationIPGroups []*string `json:"destinationIpGroups,omitempty" tf:"destination_ip_groups,omitempty"`

	// Specifies a list of destination IP ports that shall be bypassed by intrusion detection.
	// +kubebuilder:validation:Optional
	DestinationPorts []*string `json:"destinationPorts,omitempty" tf:"destination_ports,omitempty"`

	// The name which should be used for this bypass traffic setting.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The protocols any of ANY, TCP, ICMP, UDP that shall be bypassed by intrusion detection.
	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol" tf:"protocol,omitempty"`

	// Specifies a list of source addresses that shall be bypassed by intrusion detection.
	// +kubebuilder:validation:Optional
	SourceAddresses []*string `json:"sourceAddresses,omitempty" tf:"source_addresses,omitempty"`

	// Specifies a list of source IP groups that shall be bypassed by intrusion detection.
	// +kubebuilder:validation:Optional
	SourceIPGroups []*string `json:"sourceIpGroups,omitempty" tf:"source_ip_groups,omitempty"`
}

// FirewallPolicySpec defines the desired state of FirewallPolicy
type FirewallPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     FirewallPolicyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider FirewallPolicyInitParameters `json:"initProvider,omitempty"`
}

// FirewallPolicyStatus defines the observed state of FirewallPolicy.
type FirewallPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FirewallPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// FirewallPolicy is the Schema for the FirewallPolicys API. Manages a Firewall Policy.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type FirewallPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	Spec   FirewallPolicySpec   `json:"spec"`
	Status FirewallPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FirewallPolicyList contains a list of FirewallPolicys
type FirewallPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FirewallPolicy `json:"items"`
}

// Repository type metadata.
var (
	FirewallPolicy_Kind             = "FirewallPolicy"
	FirewallPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: FirewallPolicy_Kind}.String()
	FirewallPolicy_KindAPIVersion   = FirewallPolicy_Kind + "." + CRDGroupVersion.String()
	FirewallPolicy_GroupVersionKind = CRDGroupVersion.WithKind(FirewallPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&FirewallPolicy{}, &FirewallPolicyList{})
}
