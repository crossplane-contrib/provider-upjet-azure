// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DefinitionInitParameters struct {

	// The description of this Subnet Service Endpoint Storage Policy Definition.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The name which should be used for this Subnet Service Endpoint Storage Policy Definition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies a list of resources that this Subnet Service Endpoint Storage Policy Definition applies to.
	ServiceResources []*string `json:"serviceResources,omitempty" tf:"service_resources,omitempty"`
}

type DefinitionObservation struct {

	// The description of this Subnet Service Endpoint Storage Policy Definition.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The name which should be used for this Subnet Service Endpoint Storage Policy Definition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies a list of resources that this Subnet Service Endpoint Storage Policy Definition applies to.
	ServiceResources []*string `json:"serviceResources,omitempty" tf:"service_resources,omitempty"`
}

type DefinitionParameters struct {

	// The description of this Subnet Service Endpoint Storage Policy Definition.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The name which should be used for this Subnet Service Endpoint Storage Policy Definition.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies a list of resources that this Subnet Service Endpoint Storage Policy Definition applies to.
	// +kubebuilder:validation:Optional
	ServiceResources []*string `json:"serviceResources" tf:"service_resources,omitempty"`
}

type SubnetServiceEndpointStoragePolicyInitParameters struct {

	// A definition block as defined below
	Definition []DefinitionInitParameters `json:"definition,omitempty" tf:"definition,omitempty"`

	// The Azure Region where the Subnet Service Endpoint Storage Policy should exist. Changing this forces a new Subnet Service Endpoint Storage Policy to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// A mapping of tags which should be assigned to the Subnet Service Endpoint Storage Policy.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type SubnetServiceEndpointStoragePolicyObservation struct {

	// A definition block as defined below
	Definition []DefinitionObservation `json:"definition,omitempty" tf:"definition,omitempty"`

	// The ID of the Subnet Service Endpoint Storage Policy.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The Azure Region where the Subnet Service Endpoint Storage Policy should exist. Changing this forces a new Subnet Service Endpoint Storage Policy to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The name of the Resource Group where the Subnet Service Endpoint Storage Policy should exist. Changing this forces a new Subnet Service Endpoint Storage Policy to be created.
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// A mapping of tags which should be assigned to the Subnet Service Endpoint Storage Policy.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type SubnetServiceEndpointStoragePolicyParameters struct {

	// A definition block as defined below
	// +kubebuilder:validation:Optional
	Definition []DefinitionParameters `json:"definition,omitempty" tf:"definition,omitempty"`

	// The Azure Region where the Subnet Service Endpoint Storage Policy should exist. Changing this forces a new Subnet Service Endpoint Storage Policy to be created.
	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The name of the Resource Group where the Subnet Service Endpoint Storage Policy should exist. Changing this forces a new Subnet Service Endpoint Storage Policy to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// A mapping of tags which should be assigned to the Subnet Service Endpoint Storage Policy.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// SubnetServiceEndpointStoragePolicySpec defines the desired state of SubnetServiceEndpointStoragePolicy
type SubnetServiceEndpointStoragePolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SubnetServiceEndpointStoragePolicyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SubnetServiceEndpointStoragePolicyInitParameters `json:"initProvider,omitempty"`
}

// SubnetServiceEndpointStoragePolicyStatus defines the observed state of SubnetServiceEndpointStoragePolicy.
type SubnetServiceEndpointStoragePolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SubnetServiceEndpointStoragePolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SubnetServiceEndpointStoragePolicy is the Schema for the SubnetServiceEndpointStoragePolicys API. Manages a Subnet Service Endpoint Storage Policy.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type SubnetServiceEndpointStoragePolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	Spec   SubnetServiceEndpointStoragePolicySpec   `json:"spec"`
	Status SubnetServiceEndpointStoragePolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SubnetServiceEndpointStoragePolicyList contains a list of SubnetServiceEndpointStoragePolicys
type SubnetServiceEndpointStoragePolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SubnetServiceEndpointStoragePolicy `json:"items"`
}

// Repository type metadata.
var (
	SubnetServiceEndpointStoragePolicy_Kind             = "SubnetServiceEndpointStoragePolicy"
	SubnetServiceEndpointStoragePolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SubnetServiceEndpointStoragePolicy_Kind}.String()
	SubnetServiceEndpointStoragePolicy_KindAPIVersion   = SubnetServiceEndpointStoragePolicy_Kind + "." + CRDGroupVersion.String()
	SubnetServiceEndpointStoragePolicy_GroupVersionKind = CRDGroupVersion.WithKind(SubnetServiceEndpointStoragePolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&SubnetServiceEndpointStoragePolicy{}, &SubnetServiceEndpointStoragePolicyList{})
}
