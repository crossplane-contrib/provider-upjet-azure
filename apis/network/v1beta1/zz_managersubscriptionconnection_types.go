// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ManagerSubscriptionConnectionInitParameters struct {

	// A description of the Network Manager Subscription Connection.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the ID of the target Subscription. Changing this forces a new resource to be created.
	SubscriptionID *string `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`
}

type ManagerSubscriptionConnectionObservation struct {

	// The Connection state of the Network Manager Subscription Connection.
	ConnectionState *string `json:"connectionState,omitempty" tf:"connection_state,omitempty"`

	// A description of the Network Manager Subscription Connection.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The ID of the Network Manager Subscription Connection.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the ID of the Network Manager which the Subscription is connected to.
	NetworkManagerID *string `json:"networkManagerId,omitempty" tf:"network_manager_id,omitempty"`

	// Specifies the ID of the target Subscription. Changing this forces a new resource to be created.
	SubscriptionID *string `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`
}

type ManagerSubscriptionConnectionParameters struct {

	// A description of the Network Manager Subscription Connection.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the ID of the Network Manager which the Subscription is connected to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.Manager
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	NetworkManagerID *string `json:"networkManagerId,omitempty" tf:"network_manager_id,omitempty"`

	// Reference to a Manager in network to populate networkManagerId.
	// +kubebuilder:validation:Optional
	NetworkManagerIDRef *v1.Reference `json:"networkManagerIdRef,omitempty" tf:"-"`

	// Selector for a Manager in network to populate networkManagerId.
	// +kubebuilder:validation:Optional
	NetworkManagerIDSelector *v1.Selector `json:"networkManagerIdSelector,omitempty" tf:"-"`

	// Specifies the ID of the target Subscription. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	SubscriptionID *string `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`
}

// ManagerSubscriptionConnectionSpec defines the desired state of ManagerSubscriptionConnection
type ManagerSubscriptionConnectionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ManagerSubscriptionConnectionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ManagerSubscriptionConnectionInitParameters `json:"initProvider,omitempty"`
}

// ManagerSubscriptionConnectionStatus defines the observed state of ManagerSubscriptionConnection.
type ManagerSubscriptionConnectionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ManagerSubscriptionConnectionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ManagerSubscriptionConnection is the Schema for the ManagerSubscriptionConnections API. Manages a Network Manager Subscription Connection.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type ManagerSubscriptionConnection struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.subscriptionId) || (has(self.initProvider) && has(self.initProvider.subscriptionId))",message="spec.forProvider.subscriptionId is a required parameter"
	Spec   ManagerSubscriptionConnectionSpec   `json:"spec"`
	Status ManagerSubscriptionConnectionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ManagerSubscriptionConnectionList contains a list of ManagerSubscriptionConnections
type ManagerSubscriptionConnectionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ManagerSubscriptionConnection `json:"items"`
}

// Repository type metadata.
var (
	ManagerSubscriptionConnection_Kind             = "ManagerSubscriptionConnection"
	ManagerSubscriptionConnection_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ManagerSubscriptionConnection_Kind}.String()
	ManagerSubscriptionConnection_KindAPIVersion   = ManagerSubscriptionConnection_Kind + "." + CRDGroupVersion.String()
	ManagerSubscriptionConnection_GroupVersionKind = CRDGroupVersion.WithKind(ManagerSubscriptionConnection_Kind)
)

func init() {
	SchemeBuilder.Register(&ManagerSubscriptionConnection{}, &ManagerSubscriptionConnectionList{})
}
