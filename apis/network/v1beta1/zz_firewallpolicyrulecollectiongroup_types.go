// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ApplicationRuleCollectionInitParameters struct {

	// The action to take for the application rules in this collection. Possible values are Allow and Deny.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// The name which should be used for this application rule collection.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The priority of the application rule collection. The range is 100 - 65000.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// One or more application_rule (application rule) blocks as defined below.
	Rule []ApplicationRuleCollectionRuleInitParameters `json:"rule,omitempty" tf:"rule,omitempty"`
}

type ApplicationRuleCollectionObservation struct {

	// The action to take for the application rules in this collection. Possible values are Allow and Deny.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// The name which should be used for this application rule collection.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The priority of the application rule collection. The range is 100 - 65000.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// One or more application_rule (application rule) blocks as defined below.
	Rule []ApplicationRuleCollectionRuleObservation `json:"rule,omitempty" tf:"rule,omitempty"`
}

type ApplicationRuleCollectionParameters struct {

	// The action to take for the application rules in this collection. Possible values are Allow and Deny.
	// +kubebuilder:validation:Optional
	Action *string `json:"action" tf:"action,omitempty"`

	// The name which should be used for this application rule collection.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The priority of the application rule collection. The range is 100 - 65000.
	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// One or more application_rule (application rule) blocks as defined below.
	// +kubebuilder:validation:Optional
	Rule []ApplicationRuleCollectionRuleParameters `json:"rule" tf:"rule,omitempty"`
}

type ApplicationRuleCollectionRuleInitParameters struct {

	// The description which should be used for this rule.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies a list of destination IP addresses (including CIDR, IP range and *) or Service Tags.
	DestinationAddresses []*string `json:"destinationAddresses,omitempty" tf:"destination_addresses,omitempty"`

	// Specifies a list of destination FQDN tags.
	DestinationFqdnTags []*string `json:"destinationFqdnTags,omitempty" tf:"destination_fqdn_tags,omitempty"`

	// Specifies a list of destination FQDNs.
	DestinationFqdns []*string `json:"destinationFqdns,omitempty" tf:"destination_fqdns,omitempty"`

	// Specifies a list of destination URLs for which policy should hold. Needs Premium SKU for Firewall Policy. Conflicts with destination_fqdns.
	DestinationUrls []*string `json:"destinationUrls,omitempty" tf:"destination_urls,omitempty"`

	// The name which should be used for this network rule collection.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies a list of network protocols this rule applies to. Possible values are Any, TCP, UDP, ICMP.
	Protocols []ProtocolsInitParameters `json:"protocols,omitempty" tf:"protocols,omitempty"`

	// Specifies a list of source IP addresses (including CIDR, IP range and *).
	SourceAddresses []*string `json:"sourceAddresses,omitempty" tf:"source_addresses,omitempty"`

	// Specifies a list of source IP groups.
	SourceIPGroups []*string `json:"sourceIpGroups,omitempty" tf:"source_ip_groups,omitempty"`

	// Boolean specifying if TLS shall be terminated (true) or not (false). Must be true when using destination_urls. Needs Premium SKU for Firewall Policy.
	TerminateTLS *bool `json:"terminateTls,omitempty" tf:"terminate_tls,omitempty"`

	// Specifies a list of web categories to which access is denied or allowed depending on the value of action above. Needs Premium SKU for Firewall Policy.
	WebCategories []*string `json:"webCategories,omitempty" tf:"web_categories,omitempty"`
}

type ApplicationRuleCollectionRuleObservation struct {

	// The description which should be used for this rule.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies a list of destination IP addresses (including CIDR, IP range and *) or Service Tags.
	DestinationAddresses []*string `json:"destinationAddresses,omitempty" tf:"destination_addresses,omitempty"`

	// Specifies a list of destination FQDN tags.
	DestinationFqdnTags []*string `json:"destinationFqdnTags,omitempty" tf:"destination_fqdn_tags,omitempty"`

	// Specifies a list of destination FQDNs.
	DestinationFqdns []*string `json:"destinationFqdns,omitempty" tf:"destination_fqdns,omitempty"`

	// Specifies a list of destination URLs for which policy should hold. Needs Premium SKU for Firewall Policy. Conflicts with destination_fqdns.
	DestinationUrls []*string `json:"destinationUrls,omitempty" tf:"destination_urls,omitempty"`

	// The name which should be used for this network rule collection.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies a list of network protocols this rule applies to. Possible values are Any, TCP, UDP, ICMP.
	Protocols []ProtocolsObservation `json:"protocols,omitempty" tf:"protocols,omitempty"`

	// Specifies a list of source IP addresses (including CIDR, IP range and *).
	SourceAddresses []*string `json:"sourceAddresses,omitempty" tf:"source_addresses,omitempty"`

	// Specifies a list of source IP groups.
	SourceIPGroups []*string `json:"sourceIpGroups,omitempty" tf:"source_ip_groups,omitempty"`

	// Boolean specifying if TLS shall be terminated (true) or not (false). Must be true when using destination_urls. Needs Premium SKU for Firewall Policy.
	TerminateTLS *bool `json:"terminateTls,omitempty" tf:"terminate_tls,omitempty"`

	// Specifies a list of web categories to which access is denied or allowed depending on the value of action above. Needs Premium SKU for Firewall Policy.
	WebCategories []*string `json:"webCategories,omitempty" tf:"web_categories,omitempty"`
}

type ApplicationRuleCollectionRuleParameters struct {

	// The description which should be used for this rule.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies a list of destination IP addresses (including CIDR, IP range and *) or Service Tags.
	// +kubebuilder:validation:Optional
	DestinationAddresses []*string `json:"destinationAddresses,omitempty" tf:"destination_addresses,omitempty"`

	// Specifies a list of destination FQDN tags.
	// +kubebuilder:validation:Optional
	DestinationFqdnTags []*string `json:"destinationFqdnTags,omitempty" tf:"destination_fqdn_tags,omitempty"`

	// Specifies a list of destination FQDNs.
	// +kubebuilder:validation:Optional
	DestinationFqdns []*string `json:"destinationFqdns,omitempty" tf:"destination_fqdns,omitempty"`

	// Specifies a list of destination URLs for which policy should hold. Needs Premium SKU for Firewall Policy. Conflicts with destination_fqdns.
	// +kubebuilder:validation:Optional
	DestinationUrls []*string `json:"destinationUrls,omitempty" tf:"destination_urls,omitempty"`

	// The name which should be used for this network rule collection.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies a list of network protocols this rule applies to. Possible values are Any, TCP, UDP, ICMP.
	// +kubebuilder:validation:Optional
	Protocols []ProtocolsParameters `json:"protocols,omitempty" tf:"protocols,omitempty"`

	// Specifies a list of source IP addresses (including CIDR, IP range and *).
	// +kubebuilder:validation:Optional
	SourceAddresses []*string `json:"sourceAddresses,omitempty" tf:"source_addresses,omitempty"`

	// Specifies a list of source IP groups.
	// +kubebuilder:validation:Optional
	SourceIPGroups []*string `json:"sourceIpGroups,omitempty" tf:"source_ip_groups,omitempty"`

	// Boolean specifying if TLS shall be terminated (true) or not (false). Must be true when using destination_urls. Needs Premium SKU for Firewall Policy.
	// +kubebuilder:validation:Optional
	TerminateTLS *bool `json:"terminateTls,omitempty" tf:"terminate_tls,omitempty"`

	// Specifies a list of web categories to which access is denied or allowed depending on the value of action above. Needs Premium SKU for Firewall Policy.
	// +kubebuilder:validation:Optional
	WebCategories []*string `json:"webCategories,omitempty" tf:"web_categories,omitempty"`
}

type FirewallPolicyRuleCollectionGroupInitParameters struct {

	// One or more application_rule_collection blocks as defined below.
	ApplicationRuleCollection []ApplicationRuleCollectionInitParameters `json:"applicationRuleCollection,omitempty" tf:"application_rule_collection,omitempty"`

	// One or more nat_rule_collection blocks as defined below.
	NATRuleCollection []NATRuleCollectionInitParameters `json:"natRuleCollection,omitempty" tf:"nat_rule_collection,omitempty"`

	// One or more network_rule_collection blocks as defined below.
	NetworkRuleCollection []NetworkRuleCollectionInitParameters `json:"networkRuleCollection,omitempty" tf:"network_rule_collection,omitempty"`

	// The priority of the Firewall Policy Rule Collection Group. The range is 100-65000.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`
}

type FirewallPolicyRuleCollectionGroupObservation struct {

	// One or more application_rule_collection blocks as defined below.
	ApplicationRuleCollection []ApplicationRuleCollectionObservation `json:"applicationRuleCollection,omitempty" tf:"application_rule_collection,omitempty"`

	// The ID of the Firewall Policy where the Firewall Policy Rule Collection Group should exist. Changing this forces a new Firewall Policy Rule Collection Group to be created.
	FirewallPolicyID *string `json:"firewallPolicyId,omitempty" tf:"firewall_policy_id,omitempty"`

	// The ID of the Firewall Policy Rule Collection Group.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// One or more nat_rule_collection blocks as defined below.
	NATRuleCollection []NATRuleCollectionObservation `json:"natRuleCollection,omitempty" tf:"nat_rule_collection,omitempty"`

	// One or more network_rule_collection blocks as defined below.
	NetworkRuleCollection []NetworkRuleCollectionObservation `json:"networkRuleCollection,omitempty" tf:"network_rule_collection,omitempty"`

	// The priority of the Firewall Policy Rule Collection Group. The range is 100-65000.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`
}

type FirewallPolicyRuleCollectionGroupParameters struct {

	// One or more application_rule_collection blocks as defined below.
	// +kubebuilder:validation:Optional
	ApplicationRuleCollection []ApplicationRuleCollectionParameters `json:"applicationRuleCollection,omitempty" tf:"application_rule_collection,omitempty"`

	// The ID of the Firewall Policy where the Firewall Policy Rule Collection Group should exist. Changing this forces a new Firewall Policy Rule Collection Group to be created.
	// +crossplane:generate:reference:type=FirewallPolicy
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	FirewallPolicyID *string `json:"firewallPolicyId,omitempty" tf:"firewall_policy_id,omitempty"`

	// Reference to a FirewallPolicy to populate firewallPolicyId.
	// +kubebuilder:validation:Optional
	FirewallPolicyIDRef *v1.Reference `json:"firewallPolicyIdRef,omitempty" tf:"-"`

	// Selector for a FirewallPolicy to populate firewallPolicyId.
	// +kubebuilder:validation:Optional
	FirewallPolicyIDSelector *v1.Selector `json:"firewallPolicyIdSelector,omitempty" tf:"-"`

	// One or more nat_rule_collection blocks as defined below.
	// +kubebuilder:validation:Optional
	NATRuleCollection []NATRuleCollectionParameters `json:"natRuleCollection,omitempty" tf:"nat_rule_collection,omitempty"`

	// One or more network_rule_collection blocks as defined below.
	// +kubebuilder:validation:Optional
	NetworkRuleCollection []NetworkRuleCollectionParameters `json:"networkRuleCollection,omitempty" tf:"network_rule_collection,omitempty"`

	// The priority of the Firewall Policy Rule Collection Group. The range is 100-65000.
	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`
}

type NATRuleCollectionInitParameters struct {

	// The action to take for the NAT rules in this collection. Currently, the only possible value is Dnat.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// The name which should be used for this NAT rule collection.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The priority of the NAT rule collection. The range is 100 - 65000.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// A nat_rule (NAT rule) block as defined below.
	Rule []NATRuleCollectionRuleInitParameters `json:"rule,omitempty" tf:"rule,omitempty"`
}

type NATRuleCollectionObservation struct {

	// The action to take for the NAT rules in this collection. Currently, the only possible value is Dnat.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// The name which should be used for this NAT rule collection.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The priority of the NAT rule collection. The range is 100 - 65000.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// A nat_rule (NAT rule) block as defined below.
	Rule []NATRuleCollectionRuleObservation `json:"rule,omitempty" tf:"rule,omitempty"`
}

type NATRuleCollectionParameters struct {

	// The action to take for the NAT rules in this collection. Currently, the only possible value is Dnat.
	// +kubebuilder:validation:Optional
	Action *string `json:"action" tf:"action,omitempty"`

	// The name which should be used for this NAT rule collection.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The priority of the NAT rule collection. The range is 100 - 65000.
	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// A nat_rule (NAT rule) block as defined below.
	// +kubebuilder:validation:Optional
	Rule []NATRuleCollectionRuleParameters `json:"rule" tf:"rule,omitempty"`
}

type NATRuleCollectionRuleInitParameters struct {

	// The destination IP address (including CIDR).
	DestinationAddress *string `json:"destinationAddress,omitempty" tf:"destination_address,omitempty"`

	// Specifies a list of destination ports.
	DestinationPorts []*string `json:"destinationPorts,omitempty" tf:"destination_ports,omitempty"`

	// The name which should be used for this network rule collection.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies a list of network protocols this rule applies to. Possible values are Any, TCP, UDP, ICMP.
	Protocols []*string `json:"protocols,omitempty" tf:"protocols,omitempty"`

	// Specifies a list of source IP addresses (including CIDR, IP range and *).
	SourceAddresses []*string `json:"sourceAddresses,omitempty" tf:"source_addresses,omitempty"`

	// Specifies a list of source IP groups.
	SourceIPGroups []*string `json:"sourceIpGroups,omitempty" tf:"source_ip_groups,omitempty"`

	// Specifies the translated address.
	TranslatedAddress *string `json:"translatedAddress,omitempty" tf:"translated_address,omitempty"`

	// Specifies the translated FQDN.
	TranslatedFqdn *string `json:"translatedFqdn,omitempty" tf:"translated_fqdn,omitempty"`

	// Specifies the translated port.
	TranslatedPort *float64 `json:"translatedPort,omitempty" tf:"translated_port,omitempty"`
}

type NATRuleCollectionRuleObservation struct {

	// The destination IP address (including CIDR).
	DestinationAddress *string `json:"destinationAddress,omitempty" tf:"destination_address,omitempty"`

	// Specifies a list of destination ports.
	DestinationPorts []*string `json:"destinationPorts,omitempty" tf:"destination_ports,omitempty"`

	// The name which should be used for this network rule collection.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies a list of network protocols this rule applies to. Possible values are Any, TCP, UDP, ICMP.
	Protocols []*string `json:"protocols,omitempty" tf:"protocols,omitempty"`

	// Specifies a list of source IP addresses (including CIDR, IP range and *).
	SourceAddresses []*string `json:"sourceAddresses,omitempty" tf:"source_addresses,omitempty"`

	// Specifies a list of source IP groups.
	SourceIPGroups []*string `json:"sourceIpGroups,omitempty" tf:"source_ip_groups,omitempty"`

	// Specifies the translated address.
	TranslatedAddress *string `json:"translatedAddress,omitempty" tf:"translated_address,omitempty"`

	// Specifies the translated FQDN.
	TranslatedFqdn *string `json:"translatedFqdn,omitempty" tf:"translated_fqdn,omitempty"`

	// Specifies the translated port.
	TranslatedPort *float64 `json:"translatedPort,omitempty" tf:"translated_port,omitempty"`
}

type NATRuleCollectionRuleParameters struct {

	// The destination IP address (including CIDR).
	// +kubebuilder:validation:Optional
	DestinationAddress *string `json:"destinationAddress,omitempty" tf:"destination_address,omitempty"`

	// Specifies a list of destination ports.
	// +kubebuilder:validation:Optional
	DestinationPorts []*string `json:"destinationPorts,omitempty" tf:"destination_ports,omitempty"`

	// The name which should be used for this network rule collection.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies a list of network protocols this rule applies to. Possible values are Any, TCP, UDP, ICMP.
	// +kubebuilder:validation:Optional
	Protocols []*string `json:"protocols" tf:"protocols,omitempty"`

	// Specifies a list of source IP addresses (including CIDR, IP range and *).
	// +kubebuilder:validation:Optional
	SourceAddresses []*string `json:"sourceAddresses,omitempty" tf:"source_addresses,omitempty"`

	// Specifies a list of source IP groups.
	// +kubebuilder:validation:Optional
	SourceIPGroups []*string `json:"sourceIpGroups,omitempty" tf:"source_ip_groups,omitempty"`

	// Specifies the translated address.
	// +kubebuilder:validation:Optional
	TranslatedAddress *string `json:"translatedAddress,omitempty" tf:"translated_address,omitempty"`

	// Specifies the translated FQDN.
	// +kubebuilder:validation:Optional
	TranslatedFqdn *string `json:"translatedFqdn,omitempty" tf:"translated_fqdn,omitempty"`

	// Specifies the translated port.
	// +kubebuilder:validation:Optional
	TranslatedPort *float64 `json:"translatedPort" tf:"translated_port,omitempty"`
}

type NetworkRuleCollectionInitParameters struct {

	// The action to take for the network rules in this collection. Possible values are Allow and Deny.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// The name which should be used for this network rule collection.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The priority of the network rule collection. The range is 100 - 65000.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// One or more network_rule (network rule) blocks as defined below.
	Rule []NetworkRuleCollectionRuleInitParameters `json:"rule,omitempty" tf:"rule,omitempty"`
}

type NetworkRuleCollectionObservation struct {

	// The action to take for the network rules in this collection. Possible values are Allow and Deny.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// The name which should be used for this network rule collection.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The priority of the network rule collection. The range is 100 - 65000.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// One or more network_rule (network rule) blocks as defined below.
	Rule []NetworkRuleCollectionRuleObservation `json:"rule,omitempty" tf:"rule,omitempty"`
}

type NetworkRuleCollectionParameters struct {

	// The action to take for the network rules in this collection. Possible values are Allow and Deny.
	// +kubebuilder:validation:Optional
	Action *string `json:"action" tf:"action,omitempty"`

	// The name which should be used for this network rule collection.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The priority of the network rule collection. The range is 100 - 65000.
	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// One or more network_rule (network rule) blocks as defined below.
	// +kubebuilder:validation:Optional
	Rule []NetworkRuleCollectionRuleParameters `json:"rule" tf:"rule,omitempty"`
}

type NetworkRuleCollectionRuleInitParameters struct {

	// Specifies a list of destination IP addresses (including CIDR, IP range and *) or Service Tags.
	DestinationAddresses []*string `json:"destinationAddresses,omitempty" tf:"destination_addresses,omitempty"`

	// Specifies a list of destination FQDNs.
	DestinationFqdns []*string `json:"destinationFqdns,omitempty" tf:"destination_fqdns,omitempty"`

	// Specifies a list of destination IP groups.
	DestinationIPGroups []*string `json:"destinationIpGroups,omitempty" tf:"destination_ip_groups,omitempty"`

	// Specifies a list of destination ports.
	DestinationPorts []*string `json:"destinationPorts,omitempty" tf:"destination_ports,omitempty"`

	// The name which should be used for this network rule collection.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies a list of network protocols this rule applies to. Possible values are Any, TCP, UDP, ICMP.
	Protocols []*string `json:"protocols,omitempty" tf:"protocols,omitempty"`

	// Specifies a list of source IP addresses (including CIDR, IP range and *).
	SourceAddresses []*string `json:"sourceAddresses,omitempty" tf:"source_addresses,omitempty"`

	// Specifies a list of source IP groups.
	SourceIPGroups []*string `json:"sourceIpGroups,omitempty" tf:"source_ip_groups,omitempty"`
}

type NetworkRuleCollectionRuleObservation struct {

	// Specifies a list of destination IP addresses (including CIDR, IP range and *) or Service Tags.
	DestinationAddresses []*string `json:"destinationAddresses,omitempty" tf:"destination_addresses,omitempty"`

	// Specifies a list of destination FQDNs.
	DestinationFqdns []*string `json:"destinationFqdns,omitempty" tf:"destination_fqdns,omitempty"`

	// Specifies a list of destination IP groups.
	DestinationIPGroups []*string `json:"destinationIpGroups,omitempty" tf:"destination_ip_groups,omitempty"`

	// Specifies a list of destination ports.
	DestinationPorts []*string `json:"destinationPorts,omitempty" tf:"destination_ports,omitempty"`

	// The name which should be used for this network rule collection.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies a list of network protocols this rule applies to. Possible values are Any, TCP, UDP, ICMP.
	Protocols []*string `json:"protocols,omitempty" tf:"protocols,omitempty"`

	// Specifies a list of source IP addresses (including CIDR, IP range and *).
	SourceAddresses []*string `json:"sourceAddresses,omitempty" tf:"source_addresses,omitempty"`

	// Specifies a list of source IP groups.
	SourceIPGroups []*string `json:"sourceIpGroups,omitempty" tf:"source_ip_groups,omitempty"`
}

type NetworkRuleCollectionRuleParameters struct {

	// Specifies a list of destination IP addresses (including CIDR, IP range and *) or Service Tags.
	// +kubebuilder:validation:Optional
	DestinationAddresses []*string `json:"destinationAddresses,omitempty" tf:"destination_addresses,omitempty"`

	// Specifies a list of destination FQDNs.
	// +kubebuilder:validation:Optional
	DestinationFqdns []*string `json:"destinationFqdns,omitempty" tf:"destination_fqdns,omitempty"`

	// Specifies a list of destination IP groups.
	// +kubebuilder:validation:Optional
	DestinationIPGroups []*string `json:"destinationIpGroups,omitempty" tf:"destination_ip_groups,omitempty"`

	// Specifies a list of destination ports.
	// +kubebuilder:validation:Optional
	DestinationPorts []*string `json:"destinationPorts" tf:"destination_ports,omitempty"`

	// The name which should be used for this network rule collection.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies a list of network protocols this rule applies to. Possible values are Any, TCP, UDP, ICMP.
	// +kubebuilder:validation:Optional
	Protocols []*string `json:"protocols" tf:"protocols,omitempty"`

	// Specifies a list of source IP addresses (including CIDR, IP range and *).
	// +kubebuilder:validation:Optional
	SourceAddresses []*string `json:"sourceAddresses,omitempty" tf:"source_addresses,omitempty"`

	// Specifies a list of source IP groups.
	// +kubebuilder:validation:Optional
	SourceIPGroups []*string `json:"sourceIpGroups,omitempty" tf:"source_ip_groups,omitempty"`
}

type ProtocolsInitParameters struct {

	// Port number of the protocol. Range is 0-64000.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Protocol type. Possible values are Http and Https.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ProtocolsObservation struct {

	// Port number of the protocol. Range is 0-64000.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Protocol type. Possible values are Http and Https.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ProtocolsParameters struct {

	// Port number of the protocol. Range is 0-64000.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port" tf:"port,omitempty"`

	// Protocol type. Possible values are Http and Https.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

// FirewallPolicyRuleCollectionGroupSpec defines the desired state of FirewallPolicyRuleCollectionGroup
type FirewallPolicyRuleCollectionGroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     FirewallPolicyRuleCollectionGroupParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider FirewallPolicyRuleCollectionGroupInitParameters `json:"initProvider,omitempty"`
}

// FirewallPolicyRuleCollectionGroupStatus defines the observed state of FirewallPolicyRuleCollectionGroup.
type FirewallPolicyRuleCollectionGroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FirewallPolicyRuleCollectionGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// FirewallPolicyRuleCollectionGroup is the Schema for the FirewallPolicyRuleCollectionGroups API. Manages a Firewall Policy Rule Collection Group.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type FirewallPolicyRuleCollectionGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.priority) || (has(self.initProvider) && has(self.initProvider.priority))",message="spec.forProvider.priority is a required parameter"
	Spec   FirewallPolicyRuleCollectionGroupSpec   `json:"spec"`
	Status FirewallPolicyRuleCollectionGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FirewallPolicyRuleCollectionGroupList contains a list of FirewallPolicyRuleCollectionGroups
type FirewallPolicyRuleCollectionGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FirewallPolicyRuleCollectionGroup `json:"items"`
}

// Repository type metadata.
var (
	FirewallPolicyRuleCollectionGroup_Kind             = "FirewallPolicyRuleCollectionGroup"
	FirewallPolicyRuleCollectionGroup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: FirewallPolicyRuleCollectionGroup_Kind}.String()
	FirewallPolicyRuleCollectionGroup_KindAPIVersion   = FirewallPolicyRuleCollectionGroup_Kind + "." + CRDGroupVersion.String()
	FirewallPolicyRuleCollectionGroup_GroupVersionKind = CRDGroupVersion.WithKind(FirewallPolicyRuleCollectionGroup_Kind)
)

func init() {
	SchemeBuilder.Register(&FirewallPolicyRuleCollectionGroup{}, &FirewallPolicyRuleCollectionGroupList{})
}
