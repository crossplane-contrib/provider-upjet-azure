/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type LoadBalancerBackendAddressPoolObservation struct {

	// The Backend IP Configurations associated with this Backend Address Pool.
	BackendIPConfigurations []*string `json:"backendIpConfigurations,omitempty" tf:"backend_ip_configurations,omitempty"`

	// The ID of the Backend Address Pool.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// An array of the Load Balancing Inbound NAT Rules associated with this Backend Address Pool.
	InboundNATRules []*string `json:"inboundNatRules,omitempty" tf:"inbound_nat_rules,omitempty"`

	// The Load Balancing Rules associated with this Backend Address Pool.
	LoadBalancingRules []*string `json:"loadBalancingRules,omitempty" tf:"load_balancing_rules,omitempty"`

	// An array of the Load Balancing Outbound Rules associated with this Backend Address Pool.
	OutboundRules []*string `json:"outboundRules,omitempty" tf:"outbound_rules,omitempty"`
}

type LoadBalancerBackendAddressPoolParameters struct {

	// The ID of the Load Balancer in which to create the Backend Address Pool. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=LoadBalancer
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	LoadbalancerID *string `json:"loadbalancerId,omitempty" tf:"loadbalancer_id,omitempty"`

	// Reference to a LoadBalancer to populate loadbalancerId.
	// +kubebuilder:validation:Optional
	LoadbalancerIDRef *v1.Reference `json:"loadbalancerIdRef,omitempty" tf:"-"`

	// Selector for a LoadBalancer to populate loadbalancerId.
	// +kubebuilder:validation:Optional
	LoadbalancerIDSelector *v1.Selector `json:"loadbalancerIdSelector,omitempty" tf:"-"`

	// One or more tunnel_interface blocks as defined below.
	// +kubebuilder:validation:Optional
	TunnelInterface []TunnelInterfaceParameters `json:"tunnelInterface,omitempty" tf:"tunnel_interface,omitempty"`
}

type TunnelInterfaceObservation struct {
}

type TunnelInterfaceParameters struct {

	// The unique identifier of this Gateway Lodbalancer Tunnel Interface.
	// +kubebuilder:validation:Required
	Identifier *float64 `json:"identifier" tf:"identifier,omitempty"`

	// The port number that this Gateway Lodbalancer Tunnel Interface listens to.
	// +kubebuilder:validation:Required
	Port *float64 `json:"port" tf:"port,omitempty"`

	// The protocol used for this Gateway Lodbalancer Tunnel Interface. Possible values are None, Native and VXLAN.
	// +kubebuilder:validation:Required
	Protocol *string `json:"protocol" tf:"protocol,omitempty"`

	// The traffic type of this Gateway Lodbalancer Tunnel Interface. Possible values are None, Internal and External.
	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

// LoadBalancerBackendAddressPoolSpec defines the desired state of LoadBalancerBackendAddressPool
type LoadBalancerBackendAddressPoolSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     LoadBalancerBackendAddressPoolParameters `json:"forProvider"`
}

// LoadBalancerBackendAddressPoolStatus defines the observed state of LoadBalancerBackendAddressPool.
type LoadBalancerBackendAddressPoolStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        LoadBalancerBackendAddressPoolObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// LoadBalancerBackendAddressPool is the Schema for the LoadBalancerBackendAddressPools API. Manages a Load Balancer Backend Address Pool.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type LoadBalancerBackendAddressPool struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LoadBalancerBackendAddressPoolSpec   `json:"spec"`
	Status            LoadBalancerBackendAddressPoolStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LoadBalancerBackendAddressPoolList contains a list of LoadBalancerBackendAddressPools
type LoadBalancerBackendAddressPoolList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LoadBalancerBackendAddressPool `json:"items"`
}

// Repository type metadata.
var (
	LoadBalancerBackendAddressPool_Kind             = "LoadBalancerBackendAddressPool"
	LoadBalancerBackendAddressPool_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: LoadBalancerBackendAddressPool_Kind}.String()
	LoadBalancerBackendAddressPool_KindAPIVersion   = LoadBalancerBackendAddressPool_Kind + "." + CRDGroupVersion.String()
	LoadBalancerBackendAddressPool_GroupVersionKind = CRDGroupVersion.WithKind(LoadBalancerBackendAddressPool_Kind)
)

func init() {
	SchemeBuilder.Register(&LoadBalancerBackendAddressPool{}, &LoadBalancerBackendAddressPoolList{})
}
