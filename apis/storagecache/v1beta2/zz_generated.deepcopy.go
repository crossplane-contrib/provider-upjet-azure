//go:build (storagecache || all) && !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta2

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessRuleInitParameters) DeepCopyInto(out *AccessRuleInitParameters) {
	*out = *in
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = new(string)
		**out = **in
	}
	if in.AnonymousGID != nil {
		in, out := &in.AnonymousGID, &out.AnonymousGID
		*out = new(float64)
		**out = **in
	}
	if in.AnonymousUID != nil {
		in, out := &in.AnonymousUID, &out.AnonymousUID
		*out = new(float64)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.RootSquashEnabled != nil {
		in, out := &in.RootSquashEnabled, &out.RootSquashEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.SubmountAccessEnabled != nil {
		in, out := &in.SubmountAccessEnabled, &out.SubmountAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SuidEnabled != nil {
		in, out := &in.SuidEnabled, &out.SuidEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessRuleInitParameters.
func (in *AccessRuleInitParameters) DeepCopy() *AccessRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccessRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessRuleObservation) DeepCopyInto(out *AccessRuleObservation) {
	*out = *in
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = new(string)
		**out = **in
	}
	if in.AnonymousGID != nil {
		in, out := &in.AnonymousGID, &out.AnonymousGID
		*out = new(float64)
		**out = **in
	}
	if in.AnonymousUID != nil {
		in, out := &in.AnonymousUID, &out.AnonymousUID
		*out = new(float64)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.RootSquashEnabled != nil {
		in, out := &in.RootSquashEnabled, &out.RootSquashEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.SubmountAccessEnabled != nil {
		in, out := &in.SubmountAccessEnabled, &out.SubmountAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SuidEnabled != nil {
		in, out := &in.SuidEnabled, &out.SuidEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessRuleObservation.
func (in *AccessRuleObservation) DeepCopy() *AccessRuleObservation {
	if in == nil {
		return nil
	}
	out := new(AccessRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessRuleParameters) DeepCopyInto(out *AccessRuleParameters) {
	*out = *in
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = new(string)
		**out = **in
	}
	if in.AnonymousGID != nil {
		in, out := &in.AnonymousGID, &out.AnonymousGID
		*out = new(float64)
		**out = **in
	}
	if in.AnonymousUID != nil {
		in, out := &in.AnonymousUID, &out.AnonymousUID
		*out = new(float64)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.RootSquashEnabled != nil {
		in, out := &in.RootSquashEnabled, &out.RootSquashEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.SubmountAccessEnabled != nil {
		in, out := &in.SubmountAccessEnabled, &out.SubmountAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SuidEnabled != nil {
		in, out := &in.SuidEnabled, &out.SuidEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessRuleParameters.
func (in *AccessRuleParameters) DeepCopy() *AccessRuleParameters {
	if in == nil {
		return nil
	}
	out := new(AccessRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BindInitParameters) DeepCopyInto(out *BindInitParameters) {
	*out = *in
	if in.Dn != nil {
		in, out := &in.Dn, &out.Dn
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BindInitParameters.
func (in *BindInitParameters) DeepCopy() *BindInitParameters {
	if in == nil {
		return nil
	}
	out := new(BindInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BindObservation) DeepCopyInto(out *BindObservation) {
	*out = *in
	if in.Dn != nil {
		in, out := &in.Dn, &out.Dn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BindObservation.
func (in *BindObservation) DeepCopy() *BindObservation {
	if in == nil {
		return nil
	}
	out := new(BindObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BindParameters) DeepCopyInto(out *BindParameters) {
	*out = *in
	if in.Dn != nil {
		in, out := &in.Dn, &out.Dn
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BindParameters.
func (in *BindParameters) DeepCopy() *BindParameters {
	if in == nil {
		return nil
	}
	out := new(BindParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSInitParameters) DeepCopyInto(out *DNSInitParameters) {
	*out = *in
	if in.SearchDomain != nil {
		in, out := &in.SearchDomain, &out.SearchDomain
		*out = new(string)
		**out = **in
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSInitParameters.
func (in *DNSInitParameters) DeepCopy() *DNSInitParameters {
	if in == nil {
		return nil
	}
	out := new(DNSInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSObservation) DeepCopyInto(out *DNSObservation) {
	*out = *in
	if in.SearchDomain != nil {
		in, out := &in.SearchDomain, &out.SearchDomain
		*out = new(string)
		**out = **in
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSObservation.
func (in *DNSObservation) DeepCopy() *DNSObservation {
	if in == nil {
		return nil
	}
	out := new(DNSObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSParameters) DeepCopyInto(out *DNSParameters) {
	*out = *in
	if in.SearchDomain != nil {
		in, out := &in.SearchDomain, &out.SearchDomain
		*out = new(string)
		**out = **in
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSParameters.
func (in *DNSParameters) DeepCopy() *DNSParameters {
	if in == nil {
		return nil
	}
	out := new(DNSParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultAccessPolicyInitParameters) DeepCopyInto(out *DefaultAccessPolicyInitParameters) {
	*out = *in
	if in.AccessRule != nil {
		in, out := &in.AccessRule, &out.AccessRule
		*out = make([]AccessRuleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultAccessPolicyInitParameters.
func (in *DefaultAccessPolicyInitParameters) DeepCopy() *DefaultAccessPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultAccessPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultAccessPolicyObservation) DeepCopyInto(out *DefaultAccessPolicyObservation) {
	*out = *in
	if in.AccessRule != nil {
		in, out := &in.AccessRule, &out.AccessRule
		*out = make([]AccessRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultAccessPolicyObservation.
func (in *DefaultAccessPolicyObservation) DeepCopy() *DefaultAccessPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultAccessPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultAccessPolicyParameters) DeepCopyInto(out *DefaultAccessPolicyParameters) {
	*out = *in
	if in.AccessRule != nil {
		in, out := &in.AccessRule, &out.AccessRule
		*out = make([]AccessRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultAccessPolicyParameters.
func (in *DefaultAccessPolicyParameters) DeepCopy() *DefaultAccessPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultAccessPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryActiveDirectoryInitParameters) DeepCopyInto(out *DirectoryActiveDirectoryInitParameters) {
	*out = *in
	if in.CacheNetbiosName != nil {
		in, out := &in.CacheNetbiosName, &out.CacheNetbiosName
		*out = new(string)
		**out = **in
	}
	if in.DNSPrimaryIP != nil {
		in, out := &in.DNSPrimaryIP, &out.DNSPrimaryIP
		*out = new(string)
		**out = **in
	}
	if in.DNSSecondaryIP != nil {
		in, out := &in.DNSSecondaryIP, &out.DNSSecondaryIP
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainNetbiosName != nil {
		in, out := &in.DomainNetbiosName, &out.DomainNetbiosName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryActiveDirectoryInitParameters.
func (in *DirectoryActiveDirectoryInitParameters) DeepCopy() *DirectoryActiveDirectoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(DirectoryActiveDirectoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryActiveDirectoryObservation) DeepCopyInto(out *DirectoryActiveDirectoryObservation) {
	*out = *in
	if in.CacheNetbiosName != nil {
		in, out := &in.CacheNetbiosName, &out.CacheNetbiosName
		*out = new(string)
		**out = **in
	}
	if in.DNSPrimaryIP != nil {
		in, out := &in.DNSPrimaryIP, &out.DNSPrimaryIP
		*out = new(string)
		**out = **in
	}
	if in.DNSSecondaryIP != nil {
		in, out := &in.DNSSecondaryIP, &out.DNSSecondaryIP
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainNetbiosName != nil {
		in, out := &in.DomainNetbiosName, &out.DomainNetbiosName
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryActiveDirectoryObservation.
func (in *DirectoryActiveDirectoryObservation) DeepCopy() *DirectoryActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(DirectoryActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryActiveDirectoryParameters) DeepCopyInto(out *DirectoryActiveDirectoryParameters) {
	*out = *in
	if in.CacheNetbiosName != nil {
		in, out := &in.CacheNetbiosName, &out.CacheNetbiosName
		*out = new(string)
		**out = **in
	}
	if in.DNSPrimaryIP != nil {
		in, out := &in.DNSPrimaryIP, &out.DNSPrimaryIP
		*out = new(string)
		**out = **in
	}
	if in.DNSSecondaryIP != nil {
		in, out := &in.DNSSecondaryIP, &out.DNSSecondaryIP
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainNetbiosName != nil {
		in, out := &in.DomainNetbiosName, &out.DomainNetbiosName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryActiveDirectoryParameters.
func (in *DirectoryActiveDirectoryParameters) DeepCopy() *DirectoryActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(DirectoryActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryFlatFileInitParameters) DeepCopyInto(out *DirectoryFlatFileInitParameters) {
	*out = *in
	if in.GroupFileURI != nil {
		in, out := &in.GroupFileURI, &out.GroupFileURI
		*out = new(string)
		**out = **in
	}
	if in.PasswordFileURI != nil {
		in, out := &in.PasswordFileURI, &out.PasswordFileURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryFlatFileInitParameters.
func (in *DirectoryFlatFileInitParameters) DeepCopy() *DirectoryFlatFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(DirectoryFlatFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryFlatFileObservation) DeepCopyInto(out *DirectoryFlatFileObservation) {
	*out = *in
	if in.GroupFileURI != nil {
		in, out := &in.GroupFileURI, &out.GroupFileURI
		*out = new(string)
		**out = **in
	}
	if in.PasswordFileURI != nil {
		in, out := &in.PasswordFileURI, &out.PasswordFileURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryFlatFileObservation.
func (in *DirectoryFlatFileObservation) DeepCopy() *DirectoryFlatFileObservation {
	if in == nil {
		return nil
	}
	out := new(DirectoryFlatFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryFlatFileParameters) DeepCopyInto(out *DirectoryFlatFileParameters) {
	*out = *in
	if in.GroupFileURI != nil {
		in, out := &in.GroupFileURI, &out.GroupFileURI
		*out = new(string)
		**out = **in
	}
	if in.PasswordFileURI != nil {
		in, out := &in.PasswordFileURI, &out.PasswordFileURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryFlatFileParameters.
func (in *DirectoryFlatFileParameters) DeepCopy() *DirectoryFlatFileParameters {
	if in == nil {
		return nil
	}
	out := new(DirectoryFlatFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryLdapInitParameters) DeepCopyInto(out *DirectoryLdapInitParameters) {
	*out = *in
	if in.BaseDn != nil {
		in, out := &in.BaseDn, &out.BaseDn
		*out = new(string)
		**out = **in
	}
	if in.Bind != nil {
		in, out := &in.Bind, &out.Bind
		*out = new(BindInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CertificateValidationURI != nil {
		in, out := &in.CertificateValidationURI, &out.CertificateValidationURI
		*out = new(string)
		**out = **in
	}
	if in.DownloadCertificateAutomatically != nil {
		in, out := &in.DownloadCertificateAutomatically, &out.DownloadCertificateAutomatically
		*out = new(bool)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryLdapInitParameters.
func (in *DirectoryLdapInitParameters) DeepCopy() *DirectoryLdapInitParameters {
	if in == nil {
		return nil
	}
	out := new(DirectoryLdapInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryLdapObservation) DeepCopyInto(out *DirectoryLdapObservation) {
	*out = *in
	if in.BaseDn != nil {
		in, out := &in.BaseDn, &out.BaseDn
		*out = new(string)
		**out = **in
	}
	if in.Bind != nil {
		in, out := &in.Bind, &out.Bind
		*out = new(BindObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.CertificateValidationURI != nil {
		in, out := &in.CertificateValidationURI, &out.CertificateValidationURI
		*out = new(string)
		**out = **in
	}
	if in.DownloadCertificateAutomatically != nil {
		in, out := &in.DownloadCertificateAutomatically, &out.DownloadCertificateAutomatically
		*out = new(bool)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryLdapObservation.
func (in *DirectoryLdapObservation) DeepCopy() *DirectoryLdapObservation {
	if in == nil {
		return nil
	}
	out := new(DirectoryLdapObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryLdapParameters) DeepCopyInto(out *DirectoryLdapParameters) {
	*out = *in
	if in.BaseDn != nil {
		in, out := &in.BaseDn, &out.BaseDn
		*out = new(string)
		**out = **in
	}
	if in.Bind != nil {
		in, out := &in.Bind, &out.Bind
		*out = new(BindParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CertificateValidationURI != nil {
		in, out := &in.CertificateValidationURI, &out.CertificateValidationURI
		*out = new(string)
		**out = **in
	}
	if in.DownloadCertificateAutomatically != nil {
		in, out := &in.DownloadCertificateAutomatically, &out.DownloadCertificateAutomatically
		*out = new(bool)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryLdapParameters.
func (in *DirectoryLdapParameters) DeepCopy() *DirectoryLdapParameters {
	if in == nil {
		return nil
	}
	out := new(DirectoryLdapParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HPCCache) DeepCopyInto(out *HPCCache) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HPCCache.
func (in *HPCCache) DeepCopy() *HPCCache {
	if in == nil {
		return nil
	}
	out := new(HPCCache)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HPCCache) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HPCCacheInitParameters) DeepCopyInto(out *HPCCacheInitParameters) {
	*out = *in
	if in.AutomaticallyRotateKeyToLatestEnabled != nil {
		in, out := &in.AutomaticallyRotateKeyToLatestEnabled, &out.AutomaticallyRotateKeyToLatestEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CacheSizeInGb != nil {
		in, out := &in.CacheSizeInGb, &out.CacheSizeInGb
		*out = new(float64)
		**out = **in
	}
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = new(DNSInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultAccessPolicy != nil {
		in, out := &in.DefaultAccessPolicy, &out.DefaultAccessPolicy
		*out = new(DefaultAccessPolicyInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DirectoryActiveDirectory != nil {
		in, out := &in.DirectoryActiveDirectory, &out.DirectoryActiveDirectory
		*out = new(DirectoryActiveDirectoryInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DirectoryFlatFile != nil {
		in, out := &in.DirectoryFlatFile, &out.DirectoryFlatFile
		*out = new(DirectoryFlatFileInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DirectoryLdap != nil {
		in, out := &in.DirectoryLdap, &out.DirectoryLdap
		*out = new(DirectoryLdapInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(IdentityInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.NtpServer != nil {
		in, out := &in.NtpServer, &out.NtpServer
		*out = new(string)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HPCCacheInitParameters.
func (in *HPCCacheInitParameters) DeepCopy() *HPCCacheInitParameters {
	if in == nil {
		return nil
	}
	out := new(HPCCacheInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HPCCacheList) DeepCopyInto(out *HPCCacheList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HPCCache, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HPCCacheList.
func (in *HPCCacheList) DeepCopy() *HPCCacheList {
	if in == nil {
		return nil
	}
	out := new(HPCCacheList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HPCCacheList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HPCCacheObservation) DeepCopyInto(out *HPCCacheObservation) {
	*out = *in
	if in.AutomaticallyRotateKeyToLatestEnabled != nil {
		in, out := &in.AutomaticallyRotateKeyToLatestEnabled, &out.AutomaticallyRotateKeyToLatestEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CacheSizeInGb != nil {
		in, out := &in.CacheSizeInGb, &out.CacheSizeInGb
		*out = new(float64)
		**out = **in
	}
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = new(DNSObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultAccessPolicy != nil {
		in, out := &in.DefaultAccessPolicy, &out.DefaultAccessPolicy
		*out = new(DefaultAccessPolicyObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.DirectoryActiveDirectory != nil {
		in, out := &in.DirectoryActiveDirectory, &out.DirectoryActiveDirectory
		*out = new(DirectoryActiveDirectoryObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.DirectoryFlatFile != nil {
		in, out := &in.DirectoryFlatFile, &out.DirectoryFlatFile
		*out = new(DirectoryFlatFileObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.DirectoryLdap != nil {
		in, out := &in.DirectoryLdap, &out.DirectoryLdap
		*out = new(DirectoryLdapObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(IdentityObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MountAddresses != nil {
		in, out := &in.MountAddresses, &out.MountAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.NtpServer != nil {
		in, out := &in.NtpServer, &out.NtpServer
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HPCCacheObservation.
func (in *HPCCacheObservation) DeepCopy() *HPCCacheObservation {
	if in == nil {
		return nil
	}
	out := new(HPCCacheObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HPCCacheParameters) DeepCopyInto(out *HPCCacheParameters) {
	*out = *in
	if in.AutomaticallyRotateKeyToLatestEnabled != nil {
		in, out := &in.AutomaticallyRotateKeyToLatestEnabled, &out.AutomaticallyRotateKeyToLatestEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CacheSizeInGb != nil {
		in, out := &in.CacheSizeInGb, &out.CacheSizeInGb
		*out = new(float64)
		**out = **in
	}
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = new(DNSParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultAccessPolicy != nil {
		in, out := &in.DefaultAccessPolicy, &out.DefaultAccessPolicy
		*out = new(DefaultAccessPolicyParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DirectoryActiveDirectory != nil {
		in, out := &in.DirectoryActiveDirectory, &out.DirectoryActiveDirectory
		*out = new(DirectoryActiveDirectoryParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DirectoryFlatFile != nil {
		in, out := &in.DirectoryFlatFile, &out.DirectoryFlatFile
		*out = new(DirectoryFlatFileParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DirectoryLdap != nil {
		in, out := &in.DirectoryLdap, &out.DirectoryLdap
		*out = new(DirectoryLdapParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(IdentityParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.NtpServer != nil {
		in, out := &in.NtpServer, &out.NtpServer
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HPCCacheParameters.
func (in *HPCCacheParameters) DeepCopy() *HPCCacheParameters {
	if in == nil {
		return nil
	}
	out := new(HPCCacheParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HPCCacheSpec) DeepCopyInto(out *HPCCacheSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HPCCacheSpec.
func (in *HPCCacheSpec) DeepCopy() *HPCCacheSpec {
	if in == nil {
		return nil
	}
	out := new(HPCCacheSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HPCCacheStatus) DeepCopyInto(out *HPCCacheStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HPCCacheStatus.
func (in *HPCCacheStatus) DeepCopy() *HPCCacheStatus {
	if in == nil {
		return nil
	}
	out := new(HPCCacheStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityInitParameters) DeepCopyInto(out *IdentityInitParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityInitParameters.
func (in *IdentityInitParameters) DeepCopy() *IdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityObservation) DeepCopyInto(out *IdentityObservation) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityObservation.
func (in *IdentityObservation) DeepCopy() *IdentityObservation {
	if in == nil {
		return nil
	}
	out := new(IdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityParameters) DeepCopyInto(out *IdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityParameters.
func (in *IdentityParameters) DeepCopy() *IdentityParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityParameters)
	in.DeepCopyInto(out)
	return out
}
