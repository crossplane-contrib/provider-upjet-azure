//go:build (loadtestservice || all) && !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta2

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type EncryptionInitParameters struct {

	// An identity block as defined below. Changing this forces a new Load Test to be created.
	Identity *IdentityInitParameters `json:"identity,omitempty" tf:"identity,omitempty"`

	// The URI specifying the Key vault and key to be used to encrypt data in this resource. The URI should include the key version. Changing this forces a new Load Test to be created.
	KeyURL *string `json:"keyUrl,omitempty" tf:"key_url,omitempty"`
}

type EncryptionObservation struct {

	// An identity block as defined below. Changing this forces a new Load Test to be created.
	Identity *IdentityObservation `json:"identity,omitempty" tf:"identity,omitempty"`

	// The URI specifying the Key vault and key to be used to encrypt data in this resource. The URI should include the key version. Changing this forces a new Load Test to be created.
	KeyURL *string `json:"keyUrl,omitempty" tf:"key_url,omitempty"`
}

type EncryptionParameters struct {

	// An identity block as defined below. Changing this forces a new Load Test to be created.
	// +kubebuilder:validation:Optional
	Identity *IdentityParameters `json:"identity" tf:"identity,omitempty"`

	// The URI specifying the Key vault and key to be used to encrypt data in this resource. The URI should include the key version. Changing this forces a new Load Test to be created.
	// +kubebuilder:validation:Optional
	KeyURL *string `json:"keyUrl" tf:"key_url,omitempty"`
}

type IdentityInitParameters struct {

	// The User Assigned Identity ID that should be assigned to this Load Test Encryption. Changing this forces a new Load Test to be created.
	IdentityID *string `json:"identityId,omitempty" tf:"identity_id,omitempty"`

	// Specifies the type of Managed Identity that should be assigned to this Load Test. Possible values are SystemAssigned, SystemAssigned, UserAssigned and UserAssigned.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IdentityObservation struct {

	// The User Assigned Identity ID that should be assigned to this Load Test Encryption. Changing this forces a new Load Test to be created.
	IdentityID *string `json:"identityId,omitempty" tf:"identity_id,omitempty"`

	// Specifies the type of Managed Identity that should be assigned to this Load Test. Possible values are SystemAssigned, SystemAssigned, UserAssigned and UserAssigned.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IdentityParameters struct {

	// The User Assigned Identity ID that should be assigned to this Load Test Encryption. Changing this forces a new Load Test to be created.
	// +kubebuilder:validation:Optional
	IdentityID *string `json:"identityId" tf:"identity_id,omitempty"`

	// Specifies the type of Managed Identity that should be assigned to this Load Test. Possible values are SystemAssigned, SystemAssigned, UserAssigned and UserAssigned.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type LoadTestIdentityInitParameters struct {

	// A list of the User Assigned Identity IDs that should be assigned to this Load Test.
	// +listType=set
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// Specifies the type of Managed Identity that should be assigned to this Load Test. Possible values are SystemAssigned, SystemAssigned, UserAssigned and UserAssigned.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type LoadTestIdentityObservation struct {

	// A list of the User Assigned Identity IDs that should be assigned to this Load Test.
	// +listType=set
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// The Principal ID for the System-Assigned Managed Identity assigned to this Load Test.
	PrincipalID *string `json:"principalId,omitempty" tf:"principal_id,omitempty"`

	// The Tenant ID for the System-Assigned Managed Identity assigned to this Load Test.
	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`

	// Specifies the type of Managed Identity that should be assigned to this Load Test. Possible values are SystemAssigned, SystemAssigned, UserAssigned and UserAssigned.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type LoadTestIdentityParameters struct {

	// A list of the User Assigned Identity IDs that should be assigned to this Load Test.
	// +kubebuilder:validation:Optional
	// +listType=set
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// Specifies the type of Managed Identity that should be assigned to this Load Test. Possible values are SystemAssigned, SystemAssigned, UserAssigned and UserAssigned.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type LoadTestInitParameters struct {

	// Description of the resource. Changing this forces a new Load Test to be created.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// An encryption block as defined below. Changing this forces a new Load Test to be created.
	Encryption *EncryptionInitParameters `json:"encryption,omitempty" tf:"encryption,omitempty"`

	// An identity block as defined below. Specifies the Managed Identity which should be assigned to this Load Test.
	Identity *LoadTestIdentityInitParameters `json:"identity,omitempty" tf:"identity,omitempty"`

	// The Azure Region where the Load Test should exist. Changing this forces a new Load Test to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// A mapping of tags which should be assigned to the Load Test.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type LoadTestObservation struct {

	// Resource data plane URI.
	DataPlaneURI *string `json:"dataPlaneUri,omitempty" tf:"data_plane_uri,omitempty"`

	// Description of the resource. Changing this forces a new Load Test to be created.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// An encryption block as defined below. Changing this forces a new Load Test to be created.
	Encryption *EncryptionObservation `json:"encryption,omitempty" tf:"encryption,omitempty"`

	// The ID of the Load Test.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// An identity block as defined below. Specifies the Managed Identity which should be assigned to this Load Test.
	Identity *LoadTestIdentityObservation `json:"identity,omitempty" tf:"identity,omitempty"`

	// The Azure Region where the Load Test should exist. Changing this forces a new Load Test to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Specifies the name of the Resource Group within which this Load Test should exist. Changing this forces a new Load Test to be created.
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// A mapping of tags which should be assigned to the Load Test.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type LoadTestParameters struct {

	// Description of the resource. Changing this forces a new Load Test to be created.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// An encryption block as defined below. Changing this forces a new Load Test to be created.
	// +kubebuilder:validation:Optional
	Encryption *EncryptionParameters `json:"encryption,omitempty" tf:"encryption,omitempty"`

	// An identity block as defined below. Specifies the Managed Identity which should be assigned to this Load Test.
	// +kubebuilder:validation:Optional
	Identity *LoadTestIdentityParameters `json:"identity,omitempty" tf:"identity,omitempty"`

	// The Azure Region where the Load Test should exist. Changing this forces a new Load Test to be created.
	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Specifies the name of the Resource Group within which this Load Test should exist. Changing this forces a new Load Test to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// A mapping of tags which should be assigned to the Load Test.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// LoadTestSpec defines the desired state of LoadTest
type LoadTestSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     LoadTestParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider LoadTestInitParameters `json:"initProvider,omitempty"`
}

// LoadTestStatus defines the observed state of LoadTest.
type LoadTestStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        LoadTestObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status

// LoadTest is the Schema for the LoadTests API. Manages a Load Test.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type LoadTest struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	Spec   LoadTestSpec   `json:"spec"`
	Status LoadTestStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LoadTestList contains a list of LoadTests
type LoadTestList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LoadTest `json:"items"`
}

// Repository type metadata.
var (
	LoadTest_Kind             = "LoadTest"
	LoadTest_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: LoadTest_Kind}.String()
	LoadTest_KindAPIVersion   = LoadTest_Kind + "." + CRDGroupVersion.String()
	LoadTest_GroupVersionKind = CRDGroupVersion.WithKind(LoadTest_Kind)
)

func init() {
	SchemeBuilder.Register(&LoadTest{}, &LoadTestList{})
}
