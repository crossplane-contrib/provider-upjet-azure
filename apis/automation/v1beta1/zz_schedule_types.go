// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type MonthlyOccurrenceInitParameters struct {

	// Day of the occurrence. Must be one of Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday.
	Day *string `json:"day,omitempty" tf:"day,omitempty"`

	// Occurrence of the week within the month. Must be between 1 and 5. -1 for last week within the month.
	Occurrence *float64 `json:"occurrence,omitempty" tf:"occurrence,omitempty"`
}

type MonthlyOccurrenceObservation struct {

	// Day of the occurrence. Must be one of Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday.
	Day *string `json:"day,omitempty" tf:"day,omitempty"`

	// Occurrence of the week within the month. Must be between 1 and 5. -1 for last week within the month.
	Occurrence *float64 `json:"occurrence,omitempty" tf:"occurrence,omitempty"`
}

type MonthlyOccurrenceParameters struct {

	// Day of the occurrence. Must be one of Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday.
	// +kubebuilder:validation:Optional
	Day *string `json:"day" tf:"day,omitempty"`

	// Occurrence of the week within the month. Must be between 1 and 5. -1 for last week within the month.
	// +kubebuilder:validation:Optional
	Occurrence *float64 `json:"occurrence" tf:"occurrence,omitempty"`
}

type ScheduleInitParameters struct {

	// A description for this Schedule.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The end time of the schedule.
	ExpiryTime *string `json:"expiryTime,omitempty" tf:"expiry_time,omitempty"`

	// The frequency of the schedule. - can be either OneTime, Day, Hour, Week, or Month.
	Frequency *string `json:"frequency,omitempty" tf:"frequency,omitempty"`

	// The number of frequencys between runs. Only valid when frequency is Day, Hour, Week, or Month and defaults to 1.
	Interval *float64 `json:"interval,omitempty" tf:"interval,omitempty"`

	// List of days of the month that the job should execute on. Must be between 1 and 31. -1 for last day of the month. Only valid when frequency is Month.
	MonthDays []*float64 `json:"monthDays,omitempty" tf:"month_days,omitempty"`

	// List of monthly_occurrence blocks as defined below to specifies occurrences of days within a month. Only valid when frequency is Month. The monthly_occurrence block supports fields documented below.
	MonthlyOccurrence []MonthlyOccurrenceInitParameters `json:"monthlyOccurrence,omitempty" tf:"monthly_occurrence,omitempty"`

	// Start time of the schedule. Must be at least five minutes in the future. Defaults to seven minutes in the future from the time the resource is created.
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// The timezone of the start time. Defaults to Etc/UTC. For possible values see: https://docs.microsoft.com/en-us/rest/api/maps/timezone/gettimezoneenumwindows
	Timezone *string `json:"timezone,omitempty" tf:"timezone,omitempty"`

	// List of days of the week that the job should execute on. Only valid when frequency is Week. Possible values are Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday.
	WeekDays []*string `json:"weekDays,omitempty" tf:"week_days,omitempty"`
}

type ScheduleObservation struct {

	// The name of the automation account in which the Schedule is created. Changing this forces a new resource to be created.
	AutomationAccountName *string `json:"automationAccountName,omitempty" tf:"automation_account_name,omitempty"`

	// A description for this Schedule.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The end time of the schedule.
	ExpiryTime *string `json:"expiryTime,omitempty" tf:"expiry_time,omitempty"`

	// The frequency of the schedule. - can be either OneTime, Day, Hour, Week, or Month.
	Frequency *string `json:"frequency,omitempty" tf:"frequency,omitempty"`

	// The Automation Schedule ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The number of frequencys between runs. Only valid when frequency is Day, Hour, Week, or Month and defaults to 1.
	Interval *float64 `json:"interval,omitempty" tf:"interval,omitempty"`

	// List of days of the month that the job should execute on. Must be between 1 and 31. -1 for last day of the month. Only valid when frequency is Month.
	MonthDays []*float64 `json:"monthDays,omitempty" tf:"month_days,omitempty"`

	// List of monthly_occurrence blocks as defined below to specifies occurrences of days within a month. Only valid when frequency is Month. The monthly_occurrence block supports fields documented below.
	MonthlyOccurrence []MonthlyOccurrenceObservation `json:"monthlyOccurrence,omitempty" tf:"monthly_occurrence,omitempty"`

	// The name of the resource group in which the Schedule is created. Changing this forces a new resource to be created.
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Start time of the schedule. Must be at least five minutes in the future. Defaults to seven minutes in the future from the time the resource is created.
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// The timezone of the start time. Defaults to Etc/UTC. For possible values see: https://docs.microsoft.com/en-us/rest/api/maps/timezone/gettimezoneenumwindows
	Timezone *string `json:"timezone,omitempty" tf:"timezone,omitempty"`

	// List of days of the week that the job should execute on. Only valid when frequency is Week. Possible values are Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday.
	WeekDays []*string `json:"weekDays,omitempty" tf:"week_days,omitempty"`
}

type ScheduleParameters struct {

	// The name of the automation account in which the Schedule is created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/automation/v1beta1.Account
	// +kubebuilder:validation:Optional
	AutomationAccountName *string `json:"automationAccountName,omitempty" tf:"automation_account_name,omitempty"`

	// Reference to a Account in automation to populate automationAccountName.
	// +kubebuilder:validation:Optional
	AutomationAccountNameRef *v1.Reference `json:"automationAccountNameRef,omitempty" tf:"-"`

	// Selector for a Account in automation to populate automationAccountName.
	// +kubebuilder:validation:Optional
	AutomationAccountNameSelector *v1.Selector `json:"automationAccountNameSelector,omitempty" tf:"-"`

	// A description for this Schedule.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The end time of the schedule.
	// +kubebuilder:validation:Optional
	ExpiryTime *string `json:"expiryTime,omitempty" tf:"expiry_time,omitempty"`

	// The frequency of the schedule. - can be either OneTime, Day, Hour, Week, or Month.
	// +kubebuilder:validation:Optional
	Frequency *string `json:"frequency,omitempty" tf:"frequency,omitempty"`

	// The number of frequencys between runs. Only valid when frequency is Day, Hour, Week, or Month and defaults to 1.
	// +kubebuilder:validation:Optional
	Interval *float64 `json:"interval,omitempty" tf:"interval,omitempty"`

	// List of days of the month that the job should execute on. Must be between 1 and 31. -1 for last day of the month. Only valid when frequency is Month.
	// +kubebuilder:validation:Optional
	MonthDays []*float64 `json:"monthDays,omitempty" tf:"month_days,omitempty"`

	// List of monthly_occurrence blocks as defined below to specifies occurrences of days within a month. Only valid when frequency is Month. The monthly_occurrence block supports fields documented below.
	// +kubebuilder:validation:Optional
	MonthlyOccurrence []MonthlyOccurrenceParameters `json:"monthlyOccurrence,omitempty" tf:"monthly_occurrence,omitempty"`

	// The name of the resource group in which the Schedule is created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// Start time of the schedule. Must be at least five minutes in the future. Defaults to seven minutes in the future from the time the resource is created.
	// +kubebuilder:validation:Optional
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// The timezone of the start time. Defaults to Etc/UTC. For possible values see: https://docs.microsoft.com/en-us/rest/api/maps/timezone/gettimezoneenumwindows
	// +kubebuilder:validation:Optional
	Timezone *string `json:"timezone,omitempty" tf:"timezone,omitempty"`

	// List of days of the week that the job should execute on. Only valid when frequency is Week. Possible values are Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday.
	// +kubebuilder:validation:Optional
	WeekDays []*string `json:"weekDays,omitempty" tf:"week_days,omitempty"`
}

// ScheduleSpec defines the desired state of Schedule
type ScheduleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ScheduleParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ScheduleInitParameters `json:"initProvider,omitempty"`
}

// ScheduleStatus defines the observed state of Schedule.
type ScheduleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ScheduleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Schedule is the Schema for the Schedules API. Manages a Automation Schedule.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type Schedule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.frequency) || (has(self.initProvider) && has(self.initProvider.frequency))",message="spec.forProvider.frequency is a required parameter"
	Spec   ScheduleSpec   `json:"spec"`
	Status ScheduleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ScheduleList contains a list of Schedules
type ScheduleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Schedule `json:"items"`
}

// Repository type metadata.
var (
	Schedule_Kind             = "Schedule"
	Schedule_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Schedule_Kind}.String()
	Schedule_KindAPIVersion   = Schedule_Kind + "." + CRDGroupVersion.String()
	Schedule_GroupVersionKind = CRDGroupVersion.WithKind(Schedule_Kind)
)

func init() {
	SchemeBuilder.Register(&Schedule{}, &ScheduleList{})
}
