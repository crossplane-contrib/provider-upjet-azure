/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type LogAnalyticsLinkedStorageAccountObservation struct {

	// The ID of the Log Analytics Linked Storage Account.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type LogAnalyticsLinkedStorageAccountParameters struct {

	// The data source type which should be used for this Log Analytics Linked Storage Account. Possible values are CustomLogs, AzureWatson, Query, Ingestion and Alerts. Changing this forces a new Log Analytics Linked Storage Account to be created.
	// +kubebuilder:validation:Required
	DataSourceType *string `json:"dataSourceType" tf:"data_source_type,omitempty"`

	// The name of the Resource Group where the Log Analytics Linked Storage Account should exist. Changing this forces a new Log Analytics Linked Storage Account to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// The storage account resource ids to be linked.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	StorageAccountIds []*string `json:"storageAccountIds,omitempty" tf:"storage_account_ids,omitempty"`

	// References to Account in storage to populate storageAccountIds.
	// +kubebuilder:validation:Optional
	StorageAccountIdsRefs []v1.Reference `json:"storageAccountIdsRefs,omitempty" tf:"-"`

	// Selector for a list of Account in storage to populate storageAccountIds.
	// +kubebuilder:validation:Optional
	StorageAccountIdsSelector *v1.Selector `json:"storageAccountIdsSelector,omitempty" tf:"-"`

	// The resource ID of the Log Analytics Workspace. Changing this forces a new Log Analytics Linked Storage Account to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/operationalinsights/v1beta1.Workspace
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	WorkspaceResourceID *string `json:"workspaceResourceId,omitempty" tf:"workspace_resource_id,omitempty"`

	// Reference to a Workspace in operationalinsights to populate workspaceResourceId.
	// +kubebuilder:validation:Optional
	WorkspaceResourceIDRef *v1.Reference `json:"workspaceResourceIdRef,omitempty" tf:"-"`

	// Selector for a Workspace in operationalinsights to populate workspaceResourceId.
	// +kubebuilder:validation:Optional
	WorkspaceResourceIDSelector *v1.Selector `json:"workspaceResourceIdSelector,omitempty" tf:"-"`
}

// LogAnalyticsLinkedStorageAccountSpec defines the desired state of LogAnalyticsLinkedStorageAccount
type LogAnalyticsLinkedStorageAccountSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     LogAnalyticsLinkedStorageAccountParameters `json:"forProvider"`
}

// LogAnalyticsLinkedStorageAccountStatus defines the observed state of LogAnalyticsLinkedStorageAccount.
type LogAnalyticsLinkedStorageAccountStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        LogAnalyticsLinkedStorageAccountObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// LogAnalyticsLinkedStorageAccount is the Schema for the LogAnalyticsLinkedStorageAccounts API. Manages a Log Analytics Linked Storage Account.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type LogAnalyticsLinkedStorageAccount struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LogAnalyticsLinkedStorageAccountSpec   `json:"spec"`
	Status            LogAnalyticsLinkedStorageAccountStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LogAnalyticsLinkedStorageAccountList contains a list of LogAnalyticsLinkedStorageAccounts
type LogAnalyticsLinkedStorageAccountList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LogAnalyticsLinkedStorageAccount `json:"items"`
}

// Repository type metadata.
var (
	LogAnalyticsLinkedStorageAccount_Kind             = "LogAnalyticsLinkedStorageAccount"
	LogAnalyticsLinkedStorageAccount_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: LogAnalyticsLinkedStorageAccount_Kind}.String()
	LogAnalyticsLinkedStorageAccount_KindAPIVersion   = LogAnalyticsLinkedStorageAccount_Kind + "." + CRDGroupVersion.String()
	LogAnalyticsLinkedStorageAccount_GroupVersionKind = CRDGroupVersion.WithKind(LogAnalyticsLinkedStorageAccount_Kind)
)

func init() {
	SchemeBuilder.Register(&LogAnalyticsLinkedStorageAccount{}, &LogAnalyticsLinkedStorageAccountList{})
}
