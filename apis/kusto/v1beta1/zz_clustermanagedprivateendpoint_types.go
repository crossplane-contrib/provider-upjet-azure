/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ClusterManagedPrivateEndpointObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type ClusterManagedPrivateEndpointParameters struct {

	// The name of the Kusto Cluster. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/kusto/v1beta1.Cluster
	// +kubebuilder:validation:Optional
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// Reference to a Cluster in kusto to populate clusterName.
	// +kubebuilder:validation:Optional
	ClusterNameRef *v1.Reference `json:"clusterNameRef,omitempty" tf:"-"`

	// Selector for a Cluster in kusto to populate clusterName.
	// +kubebuilder:validation:Optional
	ClusterNameSelector *v1.Selector `json:"clusterNameSelector,omitempty" tf:"-"`

	// The group id in which the managed private endpoint is created. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	GroupID *string `json:"groupId" tf:"group_id,omitempty"`

	// The ARM resource ID of the resource for which the managed private endpoint is created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	PrivateLinkResourceID *string `json:"privateLinkResourceId,omitempty" tf:"private_link_resource_id,omitempty"`

	// Reference to a Account in storage to populate privateLinkResourceId.
	// +kubebuilder:validation:Optional
	PrivateLinkResourceIDRef *v1.Reference `json:"privateLinkResourceIdRef,omitempty" tf:"-"`

	// Selector for a Account in storage to populate privateLinkResourceId.
	// +kubebuilder:validation:Optional
	PrivateLinkResourceIDSelector *v1.Selector `json:"privateLinkResourceIdSelector,omitempty" tf:"-"`

	// The region of the resource to which the managed private endpoint is created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("location",false)
	// +kubebuilder:validation:Optional
	PrivateLinkResourceRegion *string `json:"privateLinkResourceRegion,omitempty" tf:"private_link_resource_region,omitempty"`

	// Reference to a Account in storage to populate privateLinkResourceRegion.
	// +kubebuilder:validation:Optional
	PrivateLinkResourceRegionRef *v1.Reference `json:"privateLinkResourceRegionRef,omitempty" tf:"-"`

	// Selector for a Account in storage to populate privateLinkResourceRegion.
	// +kubebuilder:validation:Optional
	PrivateLinkResourceRegionSelector *v1.Selector `json:"privateLinkResourceRegionSelector,omitempty" tf:"-"`

	// The user request message.
	// +kubebuilder:validation:Optional
	RequestMessage *string `json:"requestMessage,omitempty" tf:"request_message,omitempty"`

	// Specifies the Resource Group where the Kusto Cluster should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`
}

// ClusterManagedPrivateEndpointSpec defines the desired state of ClusterManagedPrivateEndpoint
type ClusterManagedPrivateEndpointSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ClusterManagedPrivateEndpointParameters `json:"forProvider"`
}

// ClusterManagedPrivateEndpointStatus defines the observed state of ClusterManagedPrivateEndpoint.
type ClusterManagedPrivateEndpointStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ClusterManagedPrivateEndpointObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ClusterManagedPrivateEndpoint is the Schema for the ClusterManagedPrivateEndpoints API. Manages a Managed Private Endpoint for a Kusto Cluster.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type ClusterManagedPrivateEndpoint struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ClusterManagedPrivateEndpointSpec   `json:"spec"`
	Status            ClusterManagedPrivateEndpointStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ClusterManagedPrivateEndpointList contains a list of ClusterManagedPrivateEndpoints
type ClusterManagedPrivateEndpointList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ClusterManagedPrivateEndpoint `json:"items"`
}

// Repository type metadata.
var (
	ClusterManagedPrivateEndpoint_Kind             = "ClusterManagedPrivateEndpoint"
	ClusterManagedPrivateEndpoint_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ClusterManagedPrivateEndpoint_Kind}.String()
	ClusterManagedPrivateEndpoint_KindAPIVersion   = ClusterManagedPrivateEndpoint_Kind + "." + CRDGroupVersion.String()
	ClusterManagedPrivateEndpoint_GroupVersionKind = CRDGroupVersion.WithKind(ClusterManagedPrivateEndpoint_Kind)
)

func init() {
	SchemeBuilder.Register(&ClusterManagedPrivateEndpoint{}, &ClusterManagedPrivateEndpointList{})
}
