//go:build (compute || all) && !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ErrorBlobManagedIdentityInitParameters struct {
}

type ErrorBlobManagedIdentityObservation struct {
}

type ErrorBlobManagedIdentityParameters struct {

	// The client ID of the managed identity.
	// +kubebuilder:validation:Optional
	ClientIDSecretRef *v1.SecretKeySelector `json:"clientIdSecretRef,omitempty" tf:"-"`

	// The object ID of the managed identity.
	// +kubebuilder:validation:Optional
	ObjectIDSecretRef *v1.SecretKeySelector `json:"objectIdSecretRef,omitempty" tf:"-"`
}

type InstanceViewInitParameters struct {
}

type InstanceViewObservation struct {
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	ErrorMessage *string `json:"errorMessage,omitempty" tf:"error_message,omitempty"`

	ExecutionMessage *string `json:"executionMessage,omitempty" tf:"execution_message,omitempty"`

	ExecutionState *string `json:"executionState,omitempty" tf:"execution_state,omitempty"`

	ExitCode *float64 `json:"exitCode,omitempty" tf:"exit_code,omitempty"`

	Output *string `json:"output,omitempty" tf:"output,omitempty"`

	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`
}

type InstanceViewParameters struct {
}

type OutputBlobManagedIdentityInitParameters struct {
}

type OutputBlobManagedIdentityObservation struct {
}

type OutputBlobManagedIdentityParameters struct {

	// The client ID of the managed identity.
	// +kubebuilder:validation:Optional
	ClientIDSecretRef *v1.SecretKeySelector `json:"clientIdSecretRef,omitempty" tf:"-"`

	// The object ID of the managed identity.
	// +kubebuilder:validation:Optional
	ObjectIDSecretRef *v1.SecretKeySelector `json:"objectIdSecretRef,omitempty" tf:"-"`
}

type ParameterInitParameters struct {

	// The run parameter name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The run parameter value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ParameterObservation struct {

	// The run parameter name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The run parameter value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ParameterParameters struct {

	// The run parameter name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The run parameter value.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ProtectedParameterInitParameters struct {
}

type ProtectedParameterObservation struct {
}

type ProtectedParameterParameters struct {

	// The run parameter name.
	// +kubebuilder:validation:Required
	NameSecretRef v1.SecretKeySelector `json:"nameSecretRef" tf:"-"`

	// The run parameter value.
	// +kubebuilder:validation:Required
	ValueSecretRef v1.SecretKeySelector `json:"valueSecretRef" tf:"-"`
}

type ScriptURIManagedIdentityInitParameters struct {
}

type ScriptURIManagedIdentityObservation struct {
}

type ScriptURIManagedIdentityParameters struct {

	// The client ID of the managed identity.
	// +kubebuilder:validation:Optional
	ClientIDSecretRef *v1.SecretKeySelector `json:"clientIdSecretRef,omitempty" tf:"-"`

	// The object ID of the managed identity.
	// +kubebuilder:validation:Optional
	ObjectIDSecretRef *v1.SecretKeySelector `json:"objectIdSecretRef,omitempty" tf:"-"`
}

type VirtualMachineRunCommandInitParameters struct {

	// An error_blob_managed_identity block as defined below. User-assigned managed Identity that has access to errorBlobUri storage blob.
	ErrorBlobManagedIdentity []ErrorBlobManagedIdentityInitParameters `json:"errorBlobManagedIdentity,omitempty" tf:"error_blob_managed_identity,omitempty"`

	// Specifies the Azure storage blob where script error stream will be uploaded.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Blob
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	ErrorBlobURI *string `json:"errorBlobUri,omitempty" tf:"error_blob_uri,omitempty"`

	// Reference to a Blob in storage to populate errorBlobUri.
	// +kubebuilder:validation:Optional
	ErrorBlobURIRef *v1.Reference `json:"errorBlobUriRef,omitempty" tf:"-"`

	// Selector for a Blob in storage to populate errorBlobUri.
	// +kubebuilder:validation:Optional
	ErrorBlobURISelector *v1.Selector `json:"errorBlobUriSelector,omitempty" tf:"-"`

	// The Azure Region where the Virtual Machine Run Command should exist. Changing this forces a new Virtual Machine Run Command to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// An output_blob_managed_identity block as defined below. User-assigned managed Identity that has access to outputBlobUri storage blob.
	OutputBlobManagedIdentity []OutputBlobManagedIdentityInitParameters `json:"outputBlobManagedIdentity,omitempty" tf:"output_blob_managed_identity,omitempty"`

	// Specifies the Azure storage blob where script output stream will be uploaded. It can be basic blob URI with SAS token.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Blob
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	OutputBlobURI *string `json:"outputBlobUri,omitempty" tf:"output_blob_uri,omitempty"`

	// Reference to a Blob in storage to populate outputBlobUri.
	// +kubebuilder:validation:Optional
	OutputBlobURIRef *v1.Reference `json:"outputBlobUriRef,omitempty" tf:"-"`

	// Selector for a Blob in storage to populate outputBlobUri.
	// +kubebuilder:validation:Optional
	OutputBlobURISelector *v1.Selector `json:"outputBlobUriSelector,omitempty" tf:"-"`

	// A list of parameter blocks as defined below. The parameters used by the script.
	Parameter []ParameterInitParameters `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// A list of protected_parameter blocks as defined below. The protected parameters used by the script.
	ProtectedParameter []ProtectedParameterInitParameters `json:"protectedParameter,omitempty" tf:"protected_parameter,omitempty"`

	// Specifies the user account on the VM when executing the Virtual Machine Run Command.
	RunAsUser *string `json:"runAsUser,omitempty" tf:"run_as_user,omitempty"`

	// A source block as defined below. The source of the run command script.
	Source []VirtualMachineRunCommandSourceInitParameters `json:"source,omitempty" tf:"source,omitempty"`

	// A mapping of tags which should be assigned to the Virtual Machine Run Command.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type VirtualMachineRunCommandObservation struct {

	// An error_blob_managed_identity block as defined below. User-assigned managed Identity that has access to errorBlobUri storage blob.
	ErrorBlobManagedIdentity []ErrorBlobManagedIdentityParameters `json:"errorBlobManagedIdentity,omitempty" tf:"error_blob_managed_identity,omitempty"`

	// Specifies the Azure storage blob where script error stream will be uploaded.
	ErrorBlobURI *string `json:"errorBlobUri,omitempty" tf:"error_blob_uri,omitempty"`

	// The ID of the Virtual Machine Run Command.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	InstanceView []InstanceViewObservation `json:"instanceView,omitempty" tf:"instance_view,omitempty"`

	// The Azure Region where the Virtual Machine Run Command should exist. Changing this forces a new Virtual Machine Run Command to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// An output_blob_managed_identity block as defined below. User-assigned managed Identity that has access to outputBlobUri storage blob.
	OutputBlobManagedIdentity []OutputBlobManagedIdentityParameters `json:"outputBlobManagedIdentity,omitempty" tf:"output_blob_managed_identity,omitempty"`

	// Specifies the Azure storage blob where script output stream will be uploaded. It can be basic blob URI with SAS token.
	OutputBlobURI *string `json:"outputBlobUri,omitempty" tf:"output_blob_uri,omitempty"`

	// A list of parameter blocks as defined below. The parameters used by the script.
	Parameter []ParameterObservation `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// A list of protected_parameter blocks as defined below. The protected parameters used by the script.
	ProtectedParameter []ProtectedParameterParameters `json:"protectedParameter,omitempty" tf:"protected_parameter,omitempty"`

	// Specifies the user account on the VM when executing the Virtual Machine Run Command.
	RunAsUser *string `json:"runAsUser,omitempty" tf:"run_as_user,omitempty"`

	// A source block as defined below. The source of the run command script.
	Source []VirtualMachineRunCommandSourceObservation `json:"source,omitempty" tf:"source,omitempty"`

	// A mapping of tags which should be assigned to the Virtual Machine Run Command.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the Virtual Machine ID within which this Virtual Machine Run Command should exist. Changing this forces a new Virtual Machine Run Command to be created.
	VirtualMachineID *string `json:"virtualMachineId,omitempty" tf:"virtual_machine_id,omitempty"`
}

type VirtualMachineRunCommandParameters struct {

	// An error_blob_managed_identity block as defined below. User-assigned managed Identity that has access to errorBlobUri storage blob.
	// +kubebuilder:validation:Optional
	ErrorBlobManagedIdentity []ErrorBlobManagedIdentityParameters `json:"errorBlobManagedIdentity,omitempty" tf:"error_blob_managed_identity,omitempty"`

	// Specifies the Azure storage blob where script error stream will be uploaded.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Blob
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ErrorBlobURI *string `json:"errorBlobUri,omitempty" tf:"error_blob_uri,omitempty"`

	// Reference to a Blob in storage to populate errorBlobUri.
	// +kubebuilder:validation:Optional
	ErrorBlobURIRef *v1.Reference `json:"errorBlobUriRef,omitempty" tf:"-"`

	// Selector for a Blob in storage to populate errorBlobUri.
	// +kubebuilder:validation:Optional
	ErrorBlobURISelector *v1.Selector `json:"errorBlobUriSelector,omitempty" tf:"-"`

	// The Azure Region where the Virtual Machine Run Command should exist. Changing this forces a new Virtual Machine Run Command to be created.
	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// An output_blob_managed_identity block as defined below. User-assigned managed Identity that has access to outputBlobUri storage blob.
	// +kubebuilder:validation:Optional
	OutputBlobManagedIdentity []OutputBlobManagedIdentityParameters `json:"outputBlobManagedIdentity,omitempty" tf:"output_blob_managed_identity,omitempty"`

	// Specifies the Azure storage blob where script output stream will be uploaded. It can be basic blob URI with SAS token.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Blob
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	OutputBlobURI *string `json:"outputBlobUri,omitempty" tf:"output_blob_uri,omitempty"`

	// Reference to a Blob in storage to populate outputBlobUri.
	// +kubebuilder:validation:Optional
	OutputBlobURIRef *v1.Reference `json:"outputBlobUriRef,omitempty" tf:"-"`

	// Selector for a Blob in storage to populate outputBlobUri.
	// +kubebuilder:validation:Optional
	OutputBlobURISelector *v1.Selector `json:"outputBlobUriSelector,omitempty" tf:"-"`

	// A list of parameter blocks as defined below. The parameters used by the script.
	// +kubebuilder:validation:Optional
	Parameter []ParameterParameters `json:"parameter,omitempty" tf:"parameter,omitempty"`

	// A list of protected_parameter blocks as defined below. The protected parameters used by the script.
	// +kubebuilder:validation:Optional
	ProtectedParameter []ProtectedParameterParameters `json:"protectedParameter,omitempty" tf:"protected_parameter,omitempty"`

	// Specifies the user account password on the VM when executing the Virtual Machine Run Command.
	// +kubebuilder:validation:Optional
	RunAsPasswordSecretRef *v1.SecretKeySelector `json:"runAsPasswordSecretRef,omitempty" tf:"-"`

	// Specifies the user account on the VM when executing the Virtual Machine Run Command.
	// +kubebuilder:validation:Optional
	RunAsUser *string `json:"runAsUser,omitempty" tf:"run_as_user,omitempty"`

	// A source block as defined below. The source of the run command script.
	// +kubebuilder:validation:Optional
	Source []VirtualMachineRunCommandSourceParameters `json:"source,omitempty" tf:"source,omitempty"`

	// A mapping of tags which should be assigned to the Virtual Machine Run Command.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the Virtual Machine ID within which this Virtual Machine Run Command should exist. Changing this forces a new Virtual Machine Run Command to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/compute/v1beta1.LinuxVirtualMachine
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	VirtualMachineID *string `json:"virtualMachineId,omitempty" tf:"virtual_machine_id,omitempty"`

	// Reference to a LinuxVirtualMachine in compute to populate virtualMachineId.
	// +kubebuilder:validation:Optional
	VirtualMachineIDRef *v1.Reference `json:"virtualMachineIdRef,omitempty" tf:"-"`

	// Selector for a LinuxVirtualMachine in compute to populate virtualMachineId.
	// +kubebuilder:validation:Optional
	VirtualMachineIDSelector *v1.Selector `json:"virtualMachineIdSelector,omitempty" tf:"-"`
}

type VirtualMachineRunCommandSourceInitParameters struct {
	CommandID *string `json:"commandId,omitempty" tf:"command_id,omitempty"`

	Script *string `json:"script,omitempty" tf:"script,omitempty"`

	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Blob
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	ScriptURI *string `json:"scriptUri,omitempty" tf:"script_uri,omitempty"`

	// A script_uri_managed_identity block as defined above.
	ScriptURIManagedIdentity []ScriptURIManagedIdentityInitParameters `json:"scriptUriManagedIdentity,omitempty" tf:"script_uri_managed_identity,omitempty"`

	// Reference to a Blob in storage to populate scriptUri.
	// +kubebuilder:validation:Optional
	ScriptURIRef *v1.Reference `json:"scriptUriRef,omitempty" tf:"-"`

	// Selector for a Blob in storage to populate scriptUri.
	// +kubebuilder:validation:Optional
	ScriptURISelector *v1.Selector `json:"scriptUriSelector,omitempty" tf:"-"`
}

type VirtualMachineRunCommandSourceObservation struct {
	CommandID *string `json:"commandId,omitempty" tf:"command_id,omitempty"`

	Script *string `json:"script,omitempty" tf:"script,omitempty"`

	ScriptURI *string `json:"scriptUri,omitempty" tf:"script_uri,omitempty"`

	// A script_uri_managed_identity block as defined above.
	ScriptURIManagedIdentity []ScriptURIManagedIdentityParameters `json:"scriptUriManagedIdentity,omitempty" tf:"script_uri_managed_identity,omitempty"`
}

type VirtualMachineRunCommandSourceParameters struct {

	// +kubebuilder:validation:Optional
	CommandID *string `json:"commandId,omitempty" tf:"command_id,omitempty"`

	// +kubebuilder:validation:Optional
	Script *string `json:"script,omitempty" tf:"script,omitempty"`

	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Blob
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ScriptURI *string `json:"scriptUri,omitempty" tf:"script_uri,omitempty"`

	// A script_uri_managed_identity block as defined above.
	// +kubebuilder:validation:Optional
	ScriptURIManagedIdentity []ScriptURIManagedIdentityParameters `json:"scriptUriManagedIdentity,omitempty" tf:"script_uri_managed_identity,omitempty"`

	// Reference to a Blob in storage to populate scriptUri.
	// +kubebuilder:validation:Optional
	ScriptURIRef *v1.Reference `json:"scriptUriRef,omitempty" tf:"-"`

	// Selector for a Blob in storage to populate scriptUri.
	// +kubebuilder:validation:Optional
	ScriptURISelector *v1.Selector `json:"scriptUriSelector,omitempty" tf:"-"`
}

// VirtualMachineRunCommandSpec defines the desired state of VirtualMachineRunCommand
type VirtualMachineRunCommandSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VirtualMachineRunCommandParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider VirtualMachineRunCommandInitParameters `json:"initProvider,omitempty"`
}

// VirtualMachineRunCommandStatus defines the observed state of VirtualMachineRunCommand.
type VirtualMachineRunCommandStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VirtualMachineRunCommandObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// VirtualMachineRunCommand is the Schema for the VirtualMachineRunCommands API. Manages a Virtual Machine Run Command.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type VirtualMachineRunCommand struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.source) || (has(self.initProvider) && has(self.initProvider.source))",message="spec.forProvider.source is a required parameter"
	Spec   VirtualMachineRunCommandSpec   `json:"spec"`
	Status VirtualMachineRunCommandStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VirtualMachineRunCommandList contains a list of VirtualMachineRunCommands
type VirtualMachineRunCommandList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VirtualMachineRunCommand `json:"items"`
}

// Repository type metadata.
var (
	VirtualMachineRunCommand_Kind             = "VirtualMachineRunCommand"
	VirtualMachineRunCommand_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VirtualMachineRunCommand_Kind}.String()
	VirtualMachineRunCommand_KindAPIVersion   = VirtualMachineRunCommand_Kind + "." + CRDGroupVersion.String()
	VirtualMachineRunCommand_GroupVersionKind = CRDGroupVersion.WithKind(VirtualMachineRunCommand_Kind)
)

func init() {
	SchemeBuilder.Register(&VirtualMachineRunCommand{}, &VirtualMachineRunCommandList{})
}
