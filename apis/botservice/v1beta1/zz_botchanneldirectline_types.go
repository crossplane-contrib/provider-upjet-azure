// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BotChannelDirectLineInitParameters struct {

	// The supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// A site represents a client application that you want to connect to your bot. Multiple site blocks may be defined as below
	Site []SiteInitParameters `json:"site,omitempty" tf:"site,omitempty"`
}

type BotChannelDirectLineObservation struct {

	// The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
	BotName *string `json:"botName,omitempty" tf:"bot_name,omitempty"`

	// The Bot Channel ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The name of the resource group in which to create the Bot Channel. Changing this forces a new resource to be created.
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// A site represents a client application that you want to connect to your bot. Multiple site blocks may be defined as below
	Site []SiteObservation `json:"site,omitempty" tf:"site,omitempty"`
}

type BotChannelDirectLineParameters struct {

	// The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/botservice/v1beta1.BotChannelsRegistration
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("name",false)
	// +kubebuilder:validation:Optional
	BotName *string `json:"botName,omitempty" tf:"bot_name,omitempty"`

	// Reference to a BotChannelsRegistration in botservice to populate botName.
	// +kubebuilder:validation:Optional
	BotNameRef *v1.Reference `json:"botNameRef,omitempty" tf:"-"`

	// Selector for a BotChannelsRegistration in botservice to populate botName.
	// +kubebuilder:validation:Optional
	BotNameSelector *v1.Selector `json:"botNameSelector,omitempty" tf:"-"`

	// The supported Azure location where the resource exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The name of the resource group in which to create the Bot Channel. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// A site represents a client application that you want to connect to your bot. Multiple site blocks may be defined as below
	// +kubebuilder:validation:Optional
	Site []SiteParameters `json:"site,omitempty" tf:"site,omitempty"`
}

type SiteInitParameters struct {

	// Enables/Disables this site. Enabled by default Defaults to true.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Enables additional security measures for this site, see Enhanced Directline Authentication Features. Disabled by default.
	EnhancedAuthenticationEnabled *bool `json:"enhancedAuthenticationEnabled,omitempty" tf:"enhanced_authentication_enabled,omitempty"`

	// The name of the site
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// This field is required when is_secure_site_enabled is enabled. Determines which origins can establish a Directline conversation for this site.
	TrustedOrigins []*string `json:"trustedOrigins,omitempty" tf:"trusted_origins,omitempty"`

	// Enables v1 of the Directline protocol for this site. Enabled by default Defaults to true.
	V1Allowed *bool `json:"v1Allowed,omitempty" tf:"v1_allowed,omitempty"`

	// Enables v3 of the Directline protocol for this site. Enabled by default Defaults to true.
	V3Allowed *bool `json:"v3Allowed,omitempty" tf:"v3_allowed,omitempty"`
}

type SiteObservation struct {

	// Enables/Disables this site. Enabled by default Defaults to true.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Enables additional security measures for this site, see Enhanced Directline Authentication Features. Disabled by default.
	EnhancedAuthenticationEnabled *bool `json:"enhancedAuthenticationEnabled,omitempty" tf:"enhanced_authentication_enabled,omitempty"`

	// Id for the site
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The name of the site
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// This field is required when is_secure_site_enabled is enabled. Determines which origins can establish a Directline conversation for this site.
	TrustedOrigins []*string `json:"trustedOrigins,omitempty" tf:"trusted_origins,omitempty"`

	// Enables v1 of the Directline protocol for this site. Enabled by default Defaults to true.
	V1Allowed *bool `json:"v1Allowed,omitempty" tf:"v1_allowed,omitempty"`

	// Enables v3 of the Directline protocol for this site. Enabled by default Defaults to true.
	V3Allowed *bool `json:"v3Allowed,omitempty" tf:"v3_allowed,omitempty"`
}

type SiteParameters struct {

	// Enables/Disables this site. Enabled by default Defaults to true.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Enables additional security measures for this site, see Enhanced Directline Authentication Features. Disabled by default.
	// +kubebuilder:validation:Optional
	EnhancedAuthenticationEnabled *bool `json:"enhancedAuthenticationEnabled,omitempty" tf:"enhanced_authentication_enabled,omitempty"`

	// The name of the site
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// This field is required when is_secure_site_enabled is enabled. Determines which origins can establish a Directline conversation for this site.
	// +kubebuilder:validation:Optional
	TrustedOrigins []*string `json:"trustedOrigins,omitempty" tf:"trusted_origins,omitempty"`

	// Enables v1 of the Directline protocol for this site. Enabled by default Defaults to true.
	// +kubebuilder:validation:Optional
	V1Allowed *bool `json:"v1Allowed,omitempty" tf:"v1_allowed,omitempty"`

	// Enables v3 of the Directline protocol for this site. Enabled by default Defaults to true.
	// +kubebuilder:validation:Optional
	V3Allowed *bool `json:"v3Allowed,omitempty" tf:"v3_allowed,omitempty"`
}

// BotChannelDirectLineSpec defines the desired state of BotChannelDirectLine
type BotChannelDirectLineSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BotChannelDirectLineParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BotChannelDirectLineInitParameters `json:"initProvider,omitempty"`
}

// BotChannelDirectLineStatus defines the observed state of BotChannelDirectLine.
type BotChannelDirectLineStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BotChannelDirectLineObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// BotChannelDirectLine is the Schema for the BotChannelDirectLines API. Manages an Directline integration for a Bot Channel
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type BotChannelDirectLine struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.site) || (has(self.initProvider) && has(self.initProvider.site))",message="spec.forProvider.site is a required parameter"
	Spec   BotChannelDirectLineSpec   `json:"spec"`
	Status BotChannelDirectLineStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BotChannelDirectLineList contains a list of BotChannelDirectLines
type BotChannelDirectLineList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BotChannelDirectLine `json:"items"`
}

// Repository type metadata.
var (
	BotChannelDirectLine_Kind             = "BotChannelDirectLine"
	BotChannelDirectLine_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BotChannelDirectLine_Kind}.String()
	BotChannelDirectLine_KindAPIVersion   = BotChannelDirectLine_Kind + "." + CRDGroupVersion.String()
	BotChannelDirectLine_GroupVersionKind = CRDGroupVersion.WithKind(BotChannelDirectLine_Kind)
)

func init() {
	SchemeBuilder.Register(&BotChannelDirectLine{}, &BotChannelDirectLineList{})
}
