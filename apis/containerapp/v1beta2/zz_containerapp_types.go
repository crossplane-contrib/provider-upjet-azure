//go:build (containerapp || all) && !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta2

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AuthenticationInitParameters struct {

	// The name of the secret that contains the value for this environment variable.
	SecretName *string `json:"secretName,omitempty" tf:"secret_name,omitempty"`

	// The Trigger Parameter name to use the supply the value retrieved from the secret_name.
	TriggerParameter *string `json:"triggerParameter,omitempty" tf:"trigger_parameter,omitempty"`
}

type AuthenticationObservation struct {

	// The name of the secret that contains the value for this environment variable.
	SecretName *string `json:"secretName,omitempty" tf:"secret_name,omitempty"`

	// The Trigger Parameter name to use the supply the value retrieved from the secret_name.
	TriggerParameter *string `json:"triggerParameter,omitempty" tf:"trigger_parameter,omitempty"`
}

type AuthenticationParameters struct {

	// The name of the secret that contains the value for this environment variable.
	// +kubebuilder:validation:Optional
	SecretName *string `json:"secretName" tf:"secret_name,omitempty"`

	// The Trigger Parameter name to use the supply the value retrieved from the secret_name.
	// +kubebuilder:validation:Optional
	TriggerParameter *string `json:"triggerParameter" tf:"trigger_parameter,omitempty"`
}

type AzureQueueScaleRuleInitParameters struct {

	// Zero or more authentication blocks as defined below.
	Authentication []AuthenticationInitParameters `json:"authentication,omitempty" tf:"authentication,omitempty"`

	// The name of the Volume to be mounted in the container.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The value of the length of the queue to trigger scaling actions.
	QueueLength *float64 `json:"queueLength,omitempty" tf:"queue_length,omitempty"`

	// The name of the Azure Queue
	QueueName *string `json:"queueName,omitempty" tf:"queue_name,omitempty"`
}

type AzureQueueScaleRuleObservation struct {

	// Zero or more authentication blocks as defined below.
	Authentication []AuthenticationObservation `json:"authentication,omitempty" tf:"authentication,omitempty"`

	// The name of the Volume to be mounted in the container.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The value of the length of the queue to trigger scaling actions.
	QueueLength *float64 `json:"queueLength,omitempty" tf:"queue_length,omitempty"`

	// The name of the Azure Queue
	QueueName *string `json:"queueName,omitempty" tf:"queue_name,omitempty"`
}

type AzureQueueScaleRuleParameters struct {

	// Zero or more authentication blocks as defined below.
	// +kubebuilder:validation:Optional
	Authentication []AuthenticationParameters `json:"authentication" tf:"authentication,omitempty"`

	// The name of the Volume to be mounted in the container.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The value of the length of the queue to trigger scaling actions.
	// +kubebuilder:validation:Optional
	QueueLength *float64 `json:"queueLength" tf:"queue_length,omitempty"`

	// The name of the Azure Queue
	// +kubebuilder:validation:Optional
	QueueName *string `json:"queueName" tf:"queue_name,omitempty"`
}

type ContainerAppInitParameters struct {

	// The ID of the Container App Environment within which this Container App should exist. Changing this forces a new resource to be created.
	// The ID of the Container App Environment to host this Container App.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/containerapp/v1beta1.Environment
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	ContainerAppEnvironmentID *string `json:"containerAppEnvironmentId,omitempty" tf:"container_app_environment_id,omitempty"`

	// Reference to a Environment in containerapp to populate containerAppEnvironmentId.
	// +kubebuilder:validation:Optional
	ContainerAppEnvironmentIDRef *v1.Reference `json:"containerAppEnvironmentIdRef,omitempty" tf:"-"`

	// Selector for a Environment in containerapp to populate containerAppEnvironmentId.
	// +kubebuilder:validation:Optional
	ContainerAppEnvironmentIDSelector *v1.Selector `json:"containerAppEnvironmentIdSelector,omitempty" tf:"-"`

	// A dapr block as detailed below.
	Dapr *DaprInitParameters `json:"dapr,omitempty" tf:"dapr,omitempty"`

	// An identity block as detailed below.
	Identity *IdentityInitParameters `json:"identity,omitempty" tf:"identity,omitempty"`

	// An ingress block as detailed below.
	Ingress *IngressInitParameters `json:"ingress,omitempty" tf:"ingress,omitempty"`

	// A registry block as detailed below.
	Registry []RegistryInitParameters `json:"registry,omitempty" tf:"registry,omitempty"`

	// The revisions operational mode for the Container App. Possible values include Single and Multiple. In Single mode, a single revision is in operation at any given time. In Multiple mode, more than one revision can be active at a time and can be configured with load distribution via the traffic_weight block in the ingress configuration.
	RevisionMode *string `json:"revisionMode,omitempty" tf:"revision_mode,omitempty"`

	// One or more secret block as detailed below.
	Secret []SecretInitParameters `json:"secret,omitempty" tf:"secret,omitempty"`

	// A mapping of tags to assign to the Container App.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// A template block as detailed below.
	Template *TemplateInitParameters `json:"template,omitempty" tf:"template,omitempty"`

	// The name of the Workload Profile in the Container App Environment to place this Container App.
	WorkloadProfileName *string `json:"workloadProfileName,omitempty" tf:"workload_profile_name,omitempty"`
}

type ContainerAppObservation struct {

	// The ID of the Container App Environment within which this Container App should exist. Changing this forces a new resource to be created.
	// The ID of the Container App Environment to host this Container App.
	ContainerAppEnvironmentID *string `json:"containerAppEnvironmentId,omitempty" tf:"container_app_environment_id,omitempty"`

	// A dapr block as detailed below.
	Dapr *DaprObservation `json:"dapr,omitempty" tf:"dapr,omitempty"`

	// The ID of the Container App.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// An identity block as detailed below.
	Identity *IdentityObservation `json:"identity,omitempty" tf:"identity,omitempty"`

	// An ingress block as detailed below.
	Ingress *IngressObservation `json:"ingress,omitempty" tf:"ingress,omitempty"`

	// The FQDN of the Latest Revision of the Container App.
	// The FQDN of the Latest Revision of the Container App.
	LatestRevisionFqdn *string `json:"latestRevisionFqdn,omitempty" tf:"latest_revision_fqdn,omitempty"`

	// The name of the latest Container Revision.
	// The name of the latest Container Revision.
	LatestRevisionName *string `json:"latestRevisionName,omitempty" tf:"latest_revision_name,omitempty"`

	// The location this Container App is deployed in. This is the same as the Environment in which it is deployed.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// A list of the Public IP Addresses which the Container App uses for outbound network access.
	OutboundIPAddresses []*string `json:"outboundIpAddresses,omitempty" tf:"outbound_ip_addresses,omitempty"`

	// A registry block as detailed below.
	Registry []RegistryObservation `json:"registry,omitempty" tf:"registry,omitempty"`

	// The name of the resource group in which the Container App Environment is to be created. Changing this forces a new resource to be created.
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// The revisions operational mode for the Container App. Possible values include Single and Multiple. In Single mode, a single revision is in operation at any given time. In Multiple mode, more than one revision can be active at a time and can be configured with load distribution via the traffic_weight block in the ingress configuration.
	RevisionMode *string `json:"revisionMode,omitempty" tf:"revision_mode,omitempty"`

	// One or more secret block as detailed below.
	Secret []SecretObservation `json:"secret,omitempty" tf:"secret,omitempty"`

	// A mapping of tags to assign to the Container App.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// A template block as detailed below.
	Template *TemplateObservation `json:"template,omitempty" tf:"template,omitempty"`

	// The name of the Workload Profile in the Container App Environment to place this Container App.
	WorkloadProfileName *string `json:"workloadProfileName,omitempty" tf:"workload_profile_name,omitempty"`
}

type ContainerAppParameters struct {

	// The ID of the Container App Environment within which this Container App should exist. Changing this forces a new resource to be created.
	// The ID of the Container App Environment to host this Container App.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/containerapp/v1beta1.Environment
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ContainerAppEnvironmentID *string `json:"containerAppEnvironmentId,omitempty" tf:"container_app_environment_id,omitempty"`

	// Reference to a Environment in containerapp to populate containerAppEnvironmentId.
	// +kubebuilder:validation:Optional
	ContainerAppEnvironmentIDRef *v1.Reference `json:"containerAppEnvironmentIdRef,omitempty" tf:"-"`

	// Selector for a Environment in containerapp to populate containerAppEnvironmentId.
	// +kubebuilder:validation:Optional
	ContainerAppEnvironmentIDSelector *v1.Selector `json:"containerAppEnvironmentIdSelector,omitempty" tf:"-"`

	// A dapr block as detailed below.
	// +kubebuilder:validation:Optional
	Dapr *DaprParameters `json:"dapr,omitempty" tf:"dapr,omitempty"`

	// An identity block as detailed below.
	// +kubebuilder:validation:Optional
	Identity *IdentityParameters `json:"identity,omitempty" tf:"identity,omitempty"`

	// An ingress block as detailed below.
	// +kubebuilder:validation:Optional
	Ingress *IngressParameters `json:"ingress,omitempty" tf:"ingress,omitempty"`

	// A registry block as detailed below.
	// +kubebuilder:validation:Optional
	Registry []RegistryParameters `json:"registry,omitempty" tf:"registry,omitempty"`

	// The name of the resource group in which the Container App Environment is to be created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// The revisions operational mode for the Container App. Possible values include Single and Multiple. In Single mode, a single revision is in operation at any given time. In Multiple mode, more than one revision can be active at a time and can be configured with load distribution via the traffic_weight block in the ingress configuration.
	// +kubebuilder:validation:Optional
	RevisionMode *string `json:"revisionMode,omitempty" tf:"revision_mode,omitempty"`

	// One or more secret block as detailed below.
	// +kubebuilder:validation:Optional
	Secret []SecretParameters `json:"secret,omitempty" tf:"secret,omitempty"`

	// A mapping of tags to assign to the Container App.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// A template block as detailed below.
	// +kubebuilder:validation:Optional
	Template *TemplateParameters `json:"template,omitempty" tf:"template,omitempty"`

	// The name of the Workload Profile in the Container App Environment to place this Container App.
	// +kubebuilder:validation:Optional
	WorkloadProfileName *string `json:"workloadProfileName,omitempty" tf:"workload_profile_name,omitempty"`
}

type ContainerInitParameters struct {

	// A list of extra arguments to pass to the container.
	// A list of args to pass to the container.
	Args []*string `json:"args,omitempty" tf:"args,omitempty"`

	// The amount of vCPU to allocate to the container. Possible values include 0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 1.75, and 2.0. When there's a workload profile specified, there's no such constraint.
	// The amount of vCPU to allocate to the container. Possible values include `0.25`, `0.5`, `0.75`, `1.0`, `1.25`, `1.5`, `1.75`, and `2.0`. **NOTE:** `cpu` and `memory` must be specified in `0.25'/'0.5Gi` combination increments. e.g. `1.0` / `2.0` or `0.5` / `1.0`. When there's a workload profile specified, there's no such constraint.
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// A command to pass to the container to override the default. This is provided as a list of command line elements without spaces.
	// A command to pass to the container to override the default. This is provided as a list of command line elements without spaces.
	Command []*string `json:"command,omitempty" tf:"command,omitempty"`

	// One or more env blocks as detailed below.
	Env []EnvInitParameters `json:"env,omitempty" tf:"env,omitempty"`

	// The image to use to create the container.
	// The image to use to create the container.
	Image *string `json:"image,omitempty" tf:"image,omitempty"`

	// A liveness_probe block as detailed below.
	LivenessProbe []LivenessProbeInitParameters `json:"livenessProbe,omitempty" tf:"liveness_probe,omitempty"`

	// The amount of memory to allocate to the container. Possible values are 0.5Gi, 1Gi, 1.5Gi, 2Gi, 2.5Gi, 3Gi, 3.5Gi and 4Gi. When there's a workload profile specified, there's no such constraint.
	// The amount of memory to allocate to the container. Possible values include `0.5Gi`, `1.0Gi`, `1.5Gi`, `2.0Gi`, `2.5Gi`, `3.0Gi`, `3.5Gi`, and `4.0Gi`. **NOTE:** `cpu` and `memory` must be specified in `0.25'/'0.5Gi` combination increments. e.g. `1.25` / `2.5Gi` or `0.75` / `1.5Gi`. When there's a workload profile specified, there's no such constraint.
	Memory *string `json:"memory,omitempty" tf:"memory,omitempty"`

	// The name of the Volume to be mounted in the container.
	// The name of the container.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// A readiness_probe block as detailed below.
	ReadinessProbe []ReadinessProbeInitParameters `json:"readinessProbe,omitempty" tf:"readiness_probe,omitempty"`

	// A startup_probe block as detailed below.
	StartupProbe []StartupProbeInitParameters `json:"startupProbe,omitempty" tf:"startup_probe,omitempty"`

	// A volume_mounts block as detailed below.
	VolumeMounts []VolumeMountsInitParameters `json:"volumeMounts,omitempty" tf:"volume_mounts,omitempty"`
}

type ContainerObservation struct {

	// A list of extra arguments to pass to the container.
	// A list of args to pass to the container.
	Args []*string `json:"args,omitempty" tf:"args,omitempty"`

	// The amount of vCPU to allocate to the container. Possible values include 0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 1.75, and 2.0. When there's a workload profile specified, there's no such constraint.
	// The amount of vCPU to allocate to the container. Possible values include `0.25`, `0.5`, `0.75`, `1.0`, `1.25`, `1.5`, `1.75`, and `2.0`. **NOTE:** `cpu` and `memory` must be specified in `0.25'/'0.5Gi` combination increments. e.g. `1.0` / `2.0` or `0.5` / `1.0`. When there's a workload profile specified, there's no such constraint.
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// A command to pass to the container to override the default. This is provided as a list of command line elements without spaces.
	// A command to pass to the container to override the default. This is provided as a list of command line elements without spaces.
	Command []*string `json:"command,omitempty" tf:"command,omitempty"`

	// One or more env blocks as detailed below.
	Env []EnvObservation `json:"env,omitempty" tf:"env,omitempty"`

	// The amount of ephemeral storage available to the Container App.
	// The amount of ephemeral storage available to the Container App.
	EphemeralStorage *string `json:"ephemeralStorage,omitempty" tf:"ephemeral_storage,omitempty"`

	// The image to use to create the container.
	// The image to use to create the container.
	Image *string `json:"image,omitempty" tf:"image,omitempty"`

	// A liveness_probe block as detailed below.
	LivenessProbe []LivenessProbeObservation `json:"livenessProbe,omitempty" tf:"liveness_probe,omitempty"`

	// The amount of memory to allocate to the container. Possible values are 0.5Gi, 1Gi, 1.5Gi, 2Gi, 2.5Gi, 3Gi, 3.5Gi and 4Gi. When there's a workload profile specified, there's no such constraint.
	// The amount of memory to allocate to the container. Possible values include `0.5Gi`, `1.0Gi`, `1.5Gi`, `2.0Gi`, `2.5Gi`, `3.0Gi`, `3.5Gi`, and `4.0Gi`. **NOTE:** `cpu` and `memory` must be specified in `0.25'/'0.5Gi` combination increments. e.g. `1.25` / `2.5Gi` or `0.75` / `1.5Gi`. When there's a workload profile specified, there's no such constraint.
	Memory *string `json:"memory,omitempty" tf:"memory,omitempty"`

	// The name of the Volume to be mounted in the container.
	// The name of the container.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// A readiness_probe block as detailed below.
	ReadinessProbe []ReadinessProbeObservation `json:"readinessProbe,omitempty" tf:"readiness_probe,omitempty"`

	// A startup_probe block as detailed below.
	StartupProbe []StartupProbeObservation `json:"startupProbe,omitempty" tf:"startup_probe,omitempty"`

	// A volume_mounts block as detailed below.
	VolumeMounts []VolumeMountsObservation `json:"volumeMounts,omitempty" tf:"volume_mounts,omitempty"`
}

type ContainerParameters struct {

	// A list of extra arguments to pass to the container.
	// A list of args to pass to the container.
	// +kubebuilder:validation:Optional
	Args []*string `json:"args,omitempty" tf:"args,omitempty"`

	// The amount of vCPU to allocate to the container. Possible values include 0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 1.75, and 2.0. When there's a workload profile specified, there's no such constraint.
	// The amount of vCPU to allocate to the container. Possible values include `0.25`, `0.5`, `0.75`, `1.0`, `1.25`, `1.5`, `1.75`, and `2.0`. **NOTE:** `cpu` and `memory` must be specified in `0.25'/'0.5Gi` combination increments. e.g. `1.0` / `2.0` or `0.5` / `1.0`. When there's a workload profile specified, there's no such constraint.
	// +kubebuilder:validation:Optional
	CPU *float64 `json:"cpu" tf:"cpu,omitempty"`

	// A command to pass to the container to override the default. This is provided as a list of command line elements without spaces.
	// A command to pass to the container to override the default. This is provided as a list of command line elements without spaces.
	// +kubebuilder:validation:Optional
	Command []*string `json:"command,omitempty" tf:"command,omitempty"`

	// One or more env blocks as detailed below.
	// +kubebuilder:validation:Optional
	Env []EnvParameters `json:"env,omitempty" tf:"env,omitempty"`

	// The image to use to create the container.
	// The image to use to create the container.
	// +kubebuilder:validation:Optional
	Image *string `json:"image" tf:"image,omitempty"`

	// A liveness_probe block as detailed below.
	// +kubebuilder:validation:Optional
	LivenessProbe []LivenessProbeParameters `json:"livenessProbe,omitempty" tf:"liveness_probe,omitempty"`

	// The amount of memory to allocate to the container. Possible values are 0.5Gi, 1Gi, 1.5Gi, 2Gi, 2.5Gi, 3Gi, 3.5Gi and 4Gi. When there's a workload profile specified, there's no such constraint.
	// The amount of memory to allocate to the container. Possible values include `0.5Gi`, `1.0Gi`, `1.5Gi`, `2.0Gi`, `2.5Gi`, `3.0Gi`, `3.5Gi`, and `4.0Gi`. **NOTE:** `cpu` and `memory` must be specified in `0.25'/'0.5Gi` combination increments. e.g. `1.25` / `2.5Gi` or `0.75` / `1.5Gi`. When there's a workload profile specified, there's no such constraint.
	// +kubebuilder:validation:Optional
	Memory *string `json:"memory" tf:"memory,omitempty"`

	// The name of the Volume to be mounted in the container.
	// The name of the container.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// A readiness_probe block as detailed below.
	// +kubebuilder:validation:Optional
	ReadinessProbe []ReadinessProbeParameters `json:"readinessProbe,omitempty" tf:"readiness_probe,omitempty"`

	// A startup_probe block as detailed below.
	// +kubebuilder:validation:Optional
	StartupProbe []StartupProbeParameters `json:"startupProbe,omitempty" tf:"startup_probe,omitempty"`

	// A volume_mounts block as detailed below.
	// +kubebuilder:validation:Optional
	VolumeMounts []VolumeMountsParameters `json:"volumeMounts,omitempty" tf:"volume_mounts,omitempty"`
}

type CustomDomainInitParameters struct {

	// The Binding type. Possible values include Disabled and SniEnabled. Defaults to Disabled.
	// The Binding type. Possible values include `Disabled` and `SniEnabled`. Defaults to `Disabled`
	CertificateBindingType *string `json:"certificateBindingType,omitempty" tf:"certificate_binding_type,omitempty"`

	// The ID of the Container App Environment Certificate.
	CertificateID *string `json:"certificateId,omitempty" tf:"certificate_id,omitempty"`

	// The name of the Volume to be mounted in the container.
	// The hostname of the Certificate. Must be the CN or a named SAN in the certificate.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type CustomDomainObservation struct {

	// The Binding type. Possible values include Disabled and SniEnabled. Defaults to Disabled.
	// The Binding type. Possible values include `Disabled` and `SniEnabled`. Defaults to `Disabled`
	CertificateBindingType *string `json:"certificateBindingType,omitempty" tf:"certificate_binding_type,omitempty"`

	// The ID of the Container App Environment Certificate.
	CertificateID *string `json:"certificateId,omitempty" tf:"certificate_id,omitempty"`

	// The name of the Volume to be mounted in the container.
	// The hostname of the Certificate. Must be the CN or a named SAN in the certificate.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type CustomDomainParameters struct {

	// The Binding type. Possible values include Disabled and SniEnabled. Defaults to Disabled.
	// The Binding type. Possible values include `Disabled` and `SniEnabled`. Defaults to `Disabled`
	// +kubebuilder:validation:Optional
	CertificateBindingType *string `json:"certificateBindingType,omitempty" tf:"certificate_binding_type,omitempty"`

	// The ID of the Container App Environment Certificate.
	// +kubebuilder:validation:Optional
	CertificateID *string `json:"certificateId" tf:"certificate_id,omitempty"`

	// The name of the Volume to be mounted in the container.
	// The hostname of the Certificate. Must be the CN or a named SAN in the certificate.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type CustomScaleRuleAuthenticationInitParameters struct {

	// The name of the secret that contains the value for this environment variable.
	SecretName *string `json:"secretName,omitempty" tf:"secret_name,omitempty"`

	// The Trigger Parameter name to use the supply the value retrieved from the secret_name.
	TriggerParameter *string `json:"triggerParameter,omitempty" tf:"trigger_parameter,omitempty"`
}

type CustomScaleRuleAuthenticationObservation struct {

	// The name of the secret that contains the value for this environment variable.
	SecretName *string `json:"secretName,omitempty" tf:"secret_name,omitempty"`

	// The Trigger Parameter name to use the supply the value retrieved from the secret_name.
	TriggerParameter *string `json:"triggerParameter,omitempty" tf:"trigger_parameter,omitempty"`
}

type CustomScaleRuleAuthenticationParameters struct {

	// The name of the secret that contains the value for this environment variable.
	// +kubebuilder:validation:Optional
	SecretName *string `json:"secretName" tf:"secret_name,omitempty"`

	// The Trigger Parameter name to use the supply the value retrieved from the secret_name.
	// +kubebuilder:validation:Optional
	TriggerParameter *string `json:"triggerParameter" tf:"trigger_parameter,omitempty"`
}

type CustomScaleRuleInitParameters struct {

	// Zero or more authentication blocks as defined below.
	Authentication []CustomScaleRuleAuthenticationInitParameters `json:"authentication,omitempty" tf:"authentication,omitempty"`

	// The Custom rule type. Possible values include: activemq, artemis-queue, kafka, pulsar, aws-cloudwatch, aws-dynamodb, aws-dynamodb-streams, aws-kinesis-stream, aws-sqs-queue, azure-app-insights, azure-blob, azure-data-explorer, azure-eventhub, azure-log-analytics, azure-monitor, azure-pipelines, azure-servicebus, azure-queue, cassandra, cpu, cron, datadog, elasticsearch, external, external-push, gcp-stackdriver, gcp-storage, gcp-pubsub, graphite, http, huawei-cloudeye, ibmmq, influxdb, kubernetes-workload, liiklus, memory, metrics-api, mongodb, mssql, mysql, nats-jetstream, stan, tcp, new-relic, openstack-metric, openstack-swift, postgresql, predictkube, prometheus, rabbitmq, redis, redis-cluster, redis-sentinel, redis-streams, redis-cluster-streams, redis-sentinel-streams, selenium-grid,solace-event-queue, and github-runner.
	CustomRuleType *string `json:"customRuleType,omitempty" tf:"custom_rule_type,omitempty"`

	// - A map of string key-value pairs to configure the Custom Scale Rule.
	// +mapType=granular
	Metadata map[string]*string `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// The name of the Volume to be mounted in the container.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type CustomScaleRuleObservation struct {

	// Zero or more authentication blocks as defined below.
	Authentication []CustomScaleRuleAuthenticationObservation `json:"authentication,omitempty" tf:"authentication,omitempty"`

	// The Custom rule type. Possible values include: activemq, artemis-queue, kafka, pulsar, aws-cloudwatch, aws-dynamodb, aws-dynamodb-streams, aws-kinesis-stream, aws-sqs-queue, azure-app-insights, azure-blob, azure-data-explorer, azure-eventhub, azure-log-analytics, azure-monitor, azure-pipelines, azure-servicebus, azure-queue, cassandra, cpu, cron, datadog, elasticsearch, external, external-push, gcp-stackdriver, gcp-storage, gcp-pubsub, graphite, http, huawei-cloudeye, ibmmq, influxdb, kubernetes-workload, liiklus, memory, metrics-api, mongodb, mssql, mysql, nats-jetstream, stan, tcp, new-relic, openstack-metric, openstack-swift, postgresql, predictkube, prometheus, rabbitmq, redis, redis-cluster, redis-sentinel, redis-streams, redis-cluster-streams, redis-sentinel-streams, selenium-grid,solace-event-queue, and github-runner.
	CustomRuleType *string `json:"customRuleType,omitempty" tf:"custom_rule_type,omitempty"`

	// - A map of string key-value pairs to configure the Custom Scale Rule.
	// +mapType=granular
	Metadata map[string]*string `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// The name of the Volume to be mounted in the container.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type CustomScaleRuleParameters struct {

	// Zero or more authentication blocks as defined below.
	// +kubebuilder:validation:Optional
	Authentication []CustomScaleRuleAuthenticationParameters `json:"authentication,omitempty" tf:"authentication,omitempty"`

	// The Custom rule type. Possible values include: activemq, artemis-queue, kafka, pulsar, aws-cloudwatch, aws-dynamodb, aws-dynamodb-streams, aws-kinesis-stream, aws-sqs-queue, azure-app-insights, azure-blob, azure-data-explorer, azure-eventhub, azure-log-analytics, azure-monitor, azure-pipelines, azure-servicebus, azure-queue, cassandra, cpu, cron, datadog, elasticsearch, external, external-push, gcp-stackdriver, gcp-storage, gcp-pubsub, graphite, http, huawei-cloudeye, ibmmq, influxdb, kubernetes-workload, liiklus, memory, metrics-api, mongodb, mssql, mysql, nats-jetstream, stan, tcp, new-relic, openstack-metric, openstack-swift, postgresql, predictkube, prometheus, rabbitmq, redis, redis-cluster, redis-sentinel, redis-streams, redis-cluster-streams, redis-sentinel-streams, selenium-grid,solace-event-queue, and github-runner.
	// +kubebuilder:validation:Optional
	CustomRuleType *string `json:"customRuleType" tf:"custom_rule_type,omitempty"`

	// - A map of string key-value pairs to configure the Custom Scale Rule.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Metadata map[string]*string `json:"metadata" tf:"metadata,omitempty"`

	// The name of the Volume to be mounted in the container.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type DaprInitParameters struct {

	// The Dapr Application Identifier.
	// The Dapr Application Identifier.
	AppID *string `json:"appId,omitempty" tf:"app_id,omitempty"`

	// The port which the application is listening on. This is the same as the ingress port.
	// The port which the application is listening on. This is the same as the `ingress` port.
	AppPort *float64 `json:"appPort,omitempty" tf:"app_port,omitempty"`

	// The protocol for the app. Possible values include http and grpc. Defaults to http.
	// The protocol for the app. Possible values include `http` and `grpc`. Defaults to `http`.
	AppProtocol *string `json:"appProtocol,omitempty" tf:"app_protocol,omitempty"`
}

type DaprObservation struct {

	// The Dapr Application Identifier.
	// The Dapr Application Identifier.
	AppID *string `json:"appId,omitempty" tf:"app_id,omitempty"`

	// The port which the application is listening on. This is the same as the ingress port.
	// The port which the application is listening on. This is the same as the `ingress` port.
	AppPort *float64 `json:"appPort,omitempty" tf:"app_port,omitempty"`

	// The protocol for the app. Possible values include http and grpc. Defaults to http.
	// The protocol for the app. Possible values include `http` and `grpc`. Defaults to `http`.
	AppProtocol *string `json:"appProtocol,omitempty" tf:"app_protocol,omitempty"`
}

type DaprParameters struct {

	// The Dapr Application Identifier.
	// The Dapr Application Identifier.
	// +kubebuilder:validation:Optional
	AppID *string `json:"appId" tf:"app_id,omitempty"`

	// The port which the application is listening on. This is the same as the ingress port.
	// The port which the application is listening on. This is the same as the `ingress` port.
	// +kubebuilder:validation:Optional
	AppPort *float64 `json:"appPort,omitempty" tf:"app_port,omitempty"`

	// The protocol for the app. Possible values include http and grpc. Defaults to http.
	// The protocol for the app. Possible values include `http` and `grpc`. Defaults to `http`.
	// +kubebuilder:validation:Optional
	AppProtocol *string `json:"appProtocol,omitempty" tf:"app_protocol,omitempty"`
}

type EnvInitParameters struct {

	// The name of the Volume to be mounted in the container.
	// The name of the environment variable for the container.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The name of the secret that contains the value for this environment variable.
	// The name of the secret that contains the value for this environment variable.
	SecretName *string `json:"secretName,omitempty" tf:"secret_name,omitempty"`

	// The value for this secret.
	// The value for this environment variable. **NOTE:** This value is ignored if `secret_name` is used
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type EnvObservation struct {

	// The name of the Volume to be mounted in the container.
	// The name of the environment variable for the container.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The name of the secret that contains the value for this environment variable.
	// The name of the secret that contains the value for this environment variable.
	SecretName *string `json:"secretName,omitempty" tf:"secret_name,omitempty"`

	// The value for this secret.
	// The value for this environment variable. **NOTE:** This value is ignored if `secret_name` is used
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type EnvParameters struct {

	// The name of the Volume to be mounted in the container.
	// The name of the environment variable for the container.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The name of the secret that contains the value for this environment variable.
	// The name of the secret that contains the value for this environment variable.
	// +kubebuilder:validation:Optional
	SecretName *string `json:"secretName,omitempty" tf:"secret_name,omitempty"`

	// The value for this secret.
	// The value for this environment variable. **NOTE:** This value is ignored if `secret_name` is used
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPScaleRuleAuthenticationInitParameters struct {

	// The name of the secret that contains the value for this environment variable.
	SecretName *string `json:"secretName,omitempty" tf:"secret_name,omitempty"`

	// The Trigger Parameter name to use the supply the value retrieved from the secret_name.
	TriggerParameter *string `json:"triggerParameter,omitempty" tf:"trigger_parameter,omitempty"`
}

type HTTPScaleRuleAuthenticationObservation struct {

	// The name of the secret that contains the value for this environment variable.
	SecretName *string `json:"secretName,omitempty" tf:"secret_name,omitempty"`

	// The Trigger Parameter name to use the supply the value retrieved from the secret_name.
	TriggerParameter *string `json:"triggerParameter,omitempty" tf:"trigger_parameter,omitempty"`
}

type HTTPScaleRuleAuthenticationParameters struct {

	// The name of the secret that contains the value for this environment variable.
	// +kubebuilder:validation:Optional
	SecretName *string `json:"secretName" tf:"secret_name,omitempty"`

	// The Trigger Parameter name to use the supply the value retrieved from the secret_name.
	// +kubebuilder:validation:Optional
	TriggerParameter *string `json:"triggerParameter,omitempty" tf:"trigger_parameter,omitempty"`
}

type HTTPScaleRuleInitParameters struct {

	// Zero or more authentication blocks as defined below.
	Authentication []HTTPScaleRuleAuthenticationInitParameters `json:"authentication,omitempty" tf:"authentication,omitempty"`

	// - The number of concurrent requests to trigger scaling.
	ConcurrentRequests *string `json:"concurrentRequests,omitempty" tf:"concurrent_requests,omitempty"`

	// The name of the Volume to be mounted in the container.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type HTTPScaleRuleObservation struct {

	// Zero or more authentication blocks as defined below.
	Authentication []HTTPScaleRuleAuthenticationObservation `json:"authentication,omitempty" tf:"authentication,omitempty"`

	// - The number of concurrent requests to trigger scaling.
	ConcurrentRequests *string `json:"concurrentRequests,omitempty" tf:"concurrent_requests,omitempty"`

	// The name of the Volume to be mounted in the container.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type HTTPScaleRuleParameters struct {

	// Zero or more authentication blocks as defined below.
	// +kubebuilder:validation:Optional
	Authentication []HTTPScaleRuleAuthenticationParameters `json:"authentication,omitempty" tf:"authentication,omitempty"`

	// - The number of concurrent requests to trigger scaling.
	// +kubebuilder:validation:Optional
	ConcurrentRequests *string `json:"concurrentRequests" tf:"concurrent_requests,omitempty"`

	// The name of the Volume to be mounted in the container.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type HeaderInitParameters struct {

	// The name of the Volume to be mounted in the container.
	// The HTTP Header Name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The value for this secret.
	// The HTTP Header value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HeaderObservation struct {

	// The name of the Volume to be mounted in the container.
	// The HTTP Header Name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The value for this secret.
	// The HTTP Header value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HeaderParameters struct {

	// The name of the Volume to be mounted in the container.
	// The HTTP Header Name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The value for this secret.
	// The HTTP Header value.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type IPSecurityRestrictionInitParameters struct {

	// The IP-filter action. Allow or Deny.
	// The action. Allow or Deny.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// Describe the IP restriction rule that is being sent to the container-app.
	// Describe the IP restriction rule that is being sent to the container-app.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The incoming IP address or range of IP addresses (in CIDR notation).
	// The incoming IP address or range of IP addresses (in CIDR notation).
	IPAddressRange *string `json:"ipAddressRange,omitempty" tf:"ip_address_range,omitempty"`

	// The name of the Volume to be mounted in the container.
	// Name for the IP restriction rule.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type IPSecurityRestrictionObservation struct {

	// The IP-filter action. Allow or Deny.
	// The action. Allow or Deny.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// Describe the IP restriction rule that is being sent to the container-app.
	// Describe the IP restriction rule that is being sent to the container-app.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The incoming IP address or range of IP addresses (in CIDR notation).
	// The incoming IP address or range of IP addresses (in CIDR notation).
	IPAddressRange *string `json:"ipAddressRange,omitempty" tf:"ip_address_range,omitempty"`

	// The name of the Volume to be mounted in the container.
	// Name for the IP restriction rule.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type IPSecurityRestrictionParameters struct {

	// The IP-filter action. Allow or Deny.
	// The action. Allow or Deny.
	// +kubebuilder:validation:Optional
	Action *string `json:"action" tf:"action,omitempty"`

	// Describe the IP restriction rule that is being sent to the container-app.
	// Describe the IP restriction rule that is being sent to the container-app.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The incoming IP address or range of IP addresses (in CIDR notation).
	// The incoming IP address or range of IP addresses (in CIDR notation).
	// +kubebuilder:validation:Optional
	IPAddressRange *string `json:"ipAddressRange" tf:"ip_address_range,omitempty"`

	// The name of the Volume to be mounted in the container.
	// Name for the IP restriction rule.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type IdentityInitParameters struct {

	// - A list of one or more Resource IDs for User Assigned Managed identities to assign. Required when type is set to UserAssigned or SystemAssigned, UserAssigned.
	// +listType=set
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// The type of managed identity to assign. Possible values are SystemAssigned, UserAssigned, and SystemAssigned, UserAssigned (to enable both).
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IdentityObservation struct {

	// - A list of one or more Resource IDs for User Assigned Managed identities to assign. Required when type is set to UserAssigned or SystemAssigned, UserAssigned.
	// +listType=set
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// The ID of the Container App.
	PrincipalID *string `json:"principalId,omitempty" tf:"principal_id,omitempty"`

	// The ID of the Container App.
	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`

	// The type of managed identity to assign. Possible values are SystemAssigned, UserAssigned, and SystemAssigned, UserAssigned (to enable both).
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IdentityParameters struct {

	// - A list of one or more Resource IDs for User Assigned Managed identities to assign. Required when type is set to UserAssigned or SystemAssigned, UserAssigned.
	// +kubebuilder:validation:Optional
	// +listType=set
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// The type of managed identity to assign. Possible values are SystemAssigned, UserAssigned, and SystemAssigned, UserAssigned (to enable both).
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type IngressInitParameters struct {

	// Should this ingress allow insecure connections?
	// Should this ingress allow insecure connections?
	AllowInsecureConnections *bool `json:"allowInsecureConnections,omitempty" tf:"allow_insecure_connections,omitempty"`

	// One or more custom_domain block as detailed below.
	CustomDomain *CustomDomainInitParameters `json:"customDomain,omitempty" tf:"custom_domain,omitempty"`

	// The exposed port on the container for the Ingress traffic.
	// The exposed port on the container for the Ingress traffic.
	ExposedPort *float64 `json:"exposedPort,omitempty" tf:"exposed_port,omitempty"`

	// Are connections to this Ingress from outside the Container App Environment enabled? Defaults to false.
	// Is this an external Ingress.
	ExternalEnabled *bool `json:"externalEnabled,omitempty" tf:"external_enabled,omitempty"`

	// One or more ip_security_restriction blocks for IP-filtering rules as defined below.
	IPSecurityRestriction []IPSecurityRestrictionInitParameters `json:"ipSecurityRestriction,omitempty" tf:"ip_security_restriction,omitempty"`

	// The target port on the container for the Ingress traffic.
	// The target port on the container for the Ingress traffic.
	TargetPort *float64 `json:"targetPort,omitempty" tf:"target_port,omitempty"`

	// One or more traffic_weight blocks as detailed below.
	TrafficWeight []TrafficWeightInitParameters `json:"trafficWeight,omitempty" tf:"traffic_weight,omitempty"`

	// The transport method for the Ingress. Possible values are auto, http, http2 and tcp. Defaults to auto.
	// The transport method for the Ingress. Possible values include `auto`, `http`, and `http2`, `tcp`. Defaults to `auto`
	Transport *string `json:"transport,omitempty" tf:"transport,omitempty"`
}

type IngressObservation struct {

	// Should this ingress allow insecure connections?
	// Should this ingress allow insecure connections?
	AllowInsecureConnections *bool `json:"allowInsecureConnections,omitempty" tf:"allow_insecure_connections,omitempty"`

	// One or more custom_domain block as detailed below.
	CustomDomain *CustomDomainObservation `json:"customDomain,omitempty" tf:"custom_domain,omitempty"`

	// The exposed port on the container for the Ingress traffic.
	// The exposed port on the container for the Ingress traffic.
	ExposedPort *float64 `json:"exposedPort,omitempty" tf:"exposed_port,omitempty"`

	// Are connections to this Ingress from outside the Container App Environment enabled? Defaults to false.
	// Is this an external Ingress.
	ExternalEnabled *bool `json:"externalEnabled,omitempty" tf:"external_enabled,omitempty"`

	// The FQDN of the ingress.
	// The FQDN of the ingress.
	Fqdn *string `json:"fqdn,omitempty" tf:"fqdn,omitempty"`

	// One or more ip_security_restriction blocks for IP-filtering rules as defined below.
	IPSecurityRestriction []IPSecurityRestrictionObservation `json:"ipSecurityRestriction,omitempty" tf:"ip_security_restriction,omitempty"`

	// The target port on the container for the Ingress traffic.
	// The target port on the container for the Ingress traffic.
	TargetPort *float64 `json:"targetPort,omitempty" tf:"target_port,omitempty"`

	// One or more traffic_weight blocks as detailed below.
	TrafficWeight []TrafficWeightObservation `json:"trafficWeight,omitempty" tf:"traffic_weight,omitempty"`

	// The transport method for the Ingress. Possible values are auto, http, http2 and tcp. Defaults to auto.
	// The transport method for the Ingress. Possible values include `auto`, `http`, and `http2`, `tcp`. Defaults to `auto`
	Transport *string `json:"transport,omitempty" tf:"transport,omitempty"`
}

type IngressParameters struct {

	// Should this ingress allow insecure connections?
	// Should this ingress allow insecure connections?
	// +kubebuilder:validation:Optional
	AllowInsecureConnections *bool `json:"allowInsecureConnections,omitempty" tf:"allow_insecure_connections,omitempty"`

	// One or more custom_domain block as detailed below.
	// +kubebuilder:validation:Optional
	CustomDomain *CustomDomainParameters `json:"customDomain,omitempty" tf:"custom_domain,omitempty"`

	// The exposed port on the container for the Ingress traffic.
	// The exposed port on the container for the Ingress traffic.
	// +kubebuilder:validation:Optional
	ExposedPort *float64 `json:"exposedPort,omitempty" tf:"exposed_port,omitempty"`

	// Are connections to this Ingress from outside the Container App Environment enabled? Defaults to false.
	// Is this an external Ingress.
	// +kubebuilder:validation:Optional
	ExternalEnabled *bool `json:"externalEnabled,omitempty" tf:"external_enabled,omitempty"`

	// One or more ip_security_restriction blocks for IP-filtering rules as defined below.
	// +kubebuilder:validation:Optional
	IPSecurityRestriction []IPSecurityRestrictionParameters `json:"ipSecurityRestriction,omitempty" tf:"ip_security_restriction,omitempty"`

	// The target port on the container for the Ingress traffic.
	// The target port on the container for the Ingress traffic.
	// +kubebuilder:validation:Optional
	TargetPort *float64 `json:"targetPort" tf:"target_port,omitempty"`

	// One or more traffic_weight blocks as detailed below.
	// +kubebuilder:validation:Optional
	TrafficWeight []TrafficWeightParameters `json:"trafficWeight" tf:"traffic_weight,omitempty"`

	// The transport method for the Ingress. Possible values are auto, http, http2 and tcp. Defaults to auto.
	// The transport method for the Ingress. Possible values include `auto`, `http`, and `http2`, `tcp`. Defaults to `auto`
	// +kubebuilder:validation:Optional
	Transport *string `json:"transport,omitempty" tf:"transport,omitempty"`
}

type InitContainerEnvInitParameters struct {

	// The name of the Volume to be mounted in the container.
	// The name of the environment variable for the container.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The name of the secret that contains the value for this environment variable.
	// The name of the secret that contains the value for this environment variable.
	SecretName *string `json:"secretName,omitempty" tf:"secret_name,omitempty"`

	// The value for this secret.
	// The value for this environment variable. **NOTE:** This value is ignored if `secret_name` is used
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type InitContainerEnvObservation struct {

	// The name of the Volume to be mounted in the container.
	// The name of the environment variable for the container.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The name of the secret that contains the value for this environment variable.
	// The name of the secret that contains the value for this environment variable.
	SecretName *string `json:"secretName,omitempty" tf:"secret_name,omitempty"`

	// The value for this secret.
	// The value for this environment variable. **NOTE:** This value is ignored if `secret_name` is used
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type InitContainerEnvParameters struct {

	// The name of the Volume to be mounted in the container.
	// The name of the environment variable for the container.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The name of the secret that contains the value for this environment variable.
	// The name of the secret that contains the value for this environment variable.
	// +kubebuilder:validation:Optional
	SecretName *string `json:"secretName,omitempty" tf:"secret_name,omitempty"`

	// The value for this secret.
	// The value for this environment variable. **NOTE:** This value is ignored if `secret_name` is used
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type InitContainerInitParameters struct {

	// A list of extra arguments to pass to the container.
	// A list of args to pass to the container.
	Args []*string `json:"args,omitempty" tf:"args,omitempty"`

	// The amount of vCPU to allocate to the container. Possible values include 0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 1.75, and 2.0. When there's a workload profile specified, there's no such constraint.
	// The amount of vCPU to allocate to the container. Possible values include `0.25`, `0.5`, `0.75`, `1.0`, `1.25`, `1.5`, `1.75`, and `2.0`. **NOTE:** `cpu` and `memory` must be specified in `0.25'/'0.5Gi` combination increments. e.g. `1.0` / `2.0` or `0.5` / `1.0`. When there's a workload profile specified, there's no such constraint.
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// A command to pass to the container to override the default. This is provided as a list of command line elements without spaces.
	// A command to pass to the container to override the default. This is provided as a list of command line elements without spaces.
	Command []*string `json:"command,omitempty" tf:"command,omitempty"`

	// One or more env blocks as detailed below.
	Env []InitContainerEnvInitParameters `json:"env,omitempty" tf:"env,omitempty"`

	// The image to use to create the container.
	// The image to use to create the container.
	Image *string `json:"image,omitempty" tf:"image,omitempty"`

	// The amount of memory to allocate to the container. Possible values are 0.5Gi, 1Gi, 1.5Gi, 2Gi, 2.5Gi, 3Gi, 3.5Gi and 4Gi. When there's a workload profile specified, there's no such constraint.
	// The amount of memory to allocate to the container. Possible values include `0.5Gi`, `1.0Gi`, `1.5Gi`, `2.0Gi`, `2.5Gi`, `3.0Gi`, `3.5Gi`, and `4.0Gi`. **NOTE:** `cpu` and `memory` must be specified in `0.25'/'0.5Gi` combination increments. e.g. `1.25` / `2.5Gi` or `0.75` / `1.5Gi`. When there's a workload profile specified, there's no such constraint.
	Memory *string `json:"memory,omitempty" tf:"memory,omitempty"`

	// The name of the Volume to be mounted in the container.
	// The name of the container.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// A volume_mounts block as detailed below.
	VolumeMounts []InitContainerVolumeMountsInitParameters `json:"volumeMounts,omitempty" tf:"volume_mounts,omitempty"`
}

type InitContainerObservation struct {

	// A list of extra arguments to pass to the container.
	// A list of args to pass to the container.
	Args []*string `json:"args,omitempty" tf:"args,omitempty"`

	// The amount of vCPU to allocate to the container. Possible values include 0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 1.75, and 2.0. When there's a workload profile specified, there's no such constraint.
	// The amount of vCPU to allocate to the container. Possible values include `0.25`, `0.5`, `0.75`, `1.0`, `1.25`, `1.5`, `1.75`, and `2.0`. **NOTE:** `cpu` and `memory` must be specified in `0.25'/'0.5Gi` combination increments. e.g. `1.0` / `2.0` or `0.5` / `1.0`. When there's a workload profile specified, there's no such constraint.
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// A command to pass to the container to override the default. This is provided as a list of command line elements without spaces.
	// A command to pass to the container to override the default. This is provided as a list of command line elements without spaces.
	Command []*string `json:"command,omitempty" tf:"command,omitempty"`

	// One or more env blocks as detailed below.
	Env []InitContainerEnvObservation `json:"env,omitempty" tf:"env,omitempty"`

	// The amount of ephemeral storage available to the Container App.
	// The amount of ephemeral storage available to the Container App.
	EphemeralStorage *string `json:"ephemeralStorage,omitempty" tf:"ephemeral_storage,omitempty"`

	// The image to use to create the container.
	// The image to use to create the container.
	Image *string `json:"image,omitempty" tf:"image,omitempty"`

	// The amount of memory to allocate to the container. Possible values are 0.5Gi, 1Gi, 1.5Gi, 2Gi, 2.5Gi, 3Gi, 3.5Gi and 4Gi. When there's a workload profile specified, there's no such constraint.
	// The amount of memory to allocate to the container. Possible values include `0.5Gi`, `1.0Gi`, `1.5Gi`, `2.0Gi`, `2.5Gi`, `3.0Gi`, `3.5Gi`, and `4.0Gi`. **NOTE:** `cpu` and `memory` must be specified in `0.25'/'0.5Gi` combination increments. e.g. `1.25` / `2.5Gi` or `0.75` / `1.5Gi`. When there's a workload profile specified, there's no such constraint.
	Memory *string `json:"memory,omitempty" tf:"memory,omitempty"`

	// The name of the Volume to be mounted in the container.
	// The name of the container.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// A volume_mounts block as detailed below.
	VolumeMounts []InitContainerVolumeMountsObservation `json:"volumeMounts,omitempty" tf:"volume_mounts,omitempty"`
}

type InitContainerParameters struct {

	// A list of extra arguments to pass to the container.
	// A list of args to pass to the container.
	// +kubebuilder:validation:Optional
	Args []*string `json:"args,omitempty" tf:"args,omitempty"`

	// The amount of vCPU to allocate to the container. Possible values include 0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 1.75, and 2.0. When there's a workload profile specified, there's no such constraint.
	// The amount of vCPU to allocate to the container. Possible values include `0.25`, `0.5`, `0.75`, `1.0`, `1.25`, `1.5`, `1.75`, and `2.0`. **NOTE:** `cpu` and `memory` must be specified in `0.25'/'0.5Gi` combination increments. e.g. `1.0` / `2.0` or `0.5` / `1.0`. When there's a workload profile specified, there's no such constraint.
	// +kubebuilder:validation:Optional
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// A command to pass to the container to override the default. This is provided as a list of command line elements without spaces.
	// A command to pass to the container to override the default. This is provided as a list of command line elements without spaces.
	// +kubebuilder:validation:Optional
	Command []*string `json:"command,omitempty" tf:"command,omitempty"`

	// One or more env blocks as detailed below.
	// +kubebuilder:validation:Optional
	Env []InitContainerEnvParameters `json:"env,omitempty" tf:"env,omitempty"`

	// The image to use to create the container.
	// The image to use to create the container.
	// +kubebuilder:validation:Optional
	Image *string `json:"image" tf:"image,omitempty"`

	// The amount of memory to allocate to the container. Possible values are 0.5Gi, 1Gi, 1.5Gi, 2Gi, 2.5Gi, 3Gi, 3.5Gi and 4Gi. When there's a workload profile specified, there's no such constraint.
	// The amount of memory to allocate to the container. Possible values include `0.5Gi`, `1.0Gi`, `1.5Gi`, `2.0Gi`, `2.5Gi`, `3.0Gi`, `3.5Gi`, and `4.0Gi`. **NOTE:** `cpu` and `memory` must be specified in `0.25'/'0.5Gi` combination increments. e.g. `1.25` / `2.5Gi` or `0.75` / `1.5Gi`. When there's a workload profile specified, there's no such constraint.
	// +kubebuilder:validation:Optional
	Memory *string `json:"memory,omitempty" tf:"memory,omitempty"`

	// The name of the Volume to be mounted in the container.
	// The name of the container.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// A volume_mounts block as detailed below.
	// +kubebuilder:validation:Optional
	VolumeMounts []InitContainerVolumeMountsParameters `json:"volumeMounts,omitempty" tf:"volume_mounts,omitempty"`
}

type InitContainerVolumeMountsInitParameters struct {

	// The name of the Volume to be mounted in the container.
	// The name of the Volume to be mounted in the container.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The path in the container at which to mount this volume.
	// The path in the container at which to mount this volume.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`
}

type InitContainerVolumeMountsObservation struct {

	// The name of the Volume to be mounted in the container.
	// The name of the Volume to be mounted in the container.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The path in the container at which to mount this volume.
	// The path in the container at which to mount this volume.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`
}

type InitContainerVolumeMountsParameters struct {

	// The name of the Volume to be mounted in the container.
	// The name of the Volume to be mounted in the container.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The path in the container at which to mount this volume.
	// The path in the container at which to mount this volume.
	// +kubebuilder:validation:Optional
	Path *string `json:"path" tf:"path,omitempty"`
}

type LivenessProbeInitParameters struct {

	// The number of consecutive failures required to consider this probe as failed. Possible values are between 1 and 10. Defaults to 3.
	// The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
	FailureCountThreshold *float64 `json:"failureCountThreshold,omitempty" tf:"failure_count_threshold,omitempty"`

	// A header block as detailed below.
	Header []HeaderInitParameters `json:"header,omitempty" tf:"header,omitempty"`

	// The value for the host header which should be sent with this probe. If unspecified, the IP Address of the Pod is used as the host header. Setting a value for Host in headers can be used to override this for HTTP and HTTPS type probes.
	// The probe hostname. Defaults to the pod IP address. Setting a value for `Host` in `headers` can be used to override this for `http` and `https` type probes.
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// The time in seconds to wait after the container has started before the probe is started.
	// The time in seconds to wait after the container has started before the probe is started.
	InitialDelay *float64 `json:"initialDelay,omitempty" tf:"initial_delay,omitempty"`

	// How often, in seconds, the probe should run. Possible values are between 1 and 240. Defaults to 10
	// How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
	IntervalSeconds *float64 `json:"intervalSeconds,omitempty" tf:"interval_seconds,omitempty"`

	// The path in the container at which to mount this volume.
	// The URI to use with the `host` for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The port number on which to connect. Possible values are between 1 and 65535.
	// The port number on which to connect. Possible values are between `1` and `65535`.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Time in seconds after which the probe times out. Possible values are in the range 1 - 240. Defaults to 1.
	// Time in seconds after which the probe times out. Possible values are between `1` an `240`. Defaults to `1`.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Type of probe. Possible values are TCP, HTTP, and HTTPS.
	// Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
	Transport *string `json:"transport,omitempty" tf:"transport,omitempty"`
}

type LivenessProbeObservation struct {

	// The number of consecutive failures required to consider this probe as failed. Possible values are between 1 and 10. Defaults to 3.
	// The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
	FailureCountThreshold *float64 `json:"failureCountThreshold,omitempty" tf:"failure_count_threshold,omitempty"`

	// A header block as detailed below.
	Header []HeaderObservation `json:"header,omitempty" tf:"header,omitempty"`

	// The value for the host header which should be sent with this probe. If unspecified, the IP Address of the Pod is used as the host header. Setting a value for Host in headers can be used to override this for HTTP and HTTPS type probes.
	// The probe hostname. Defaults to the pod IP address. Setting a value for `Host` in `headers` can be used to override this for `http` and `https` type probes.
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// The time in seconds to wait after the container has started before the probe is started.
	// The time in seconds to wait after the container has started before the probe is started.
	InitialDelay *float64 `json:"initialDelay,omitempty" tf:"initial_delay,omitempty"`

	// How often, in seconds, the probe should run. Possible values are between 1 and 240. Defaults to 10
	// How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
	IntervalSeconds *float64 `json:"intervalSeconds,omitempty" tf:"interval_seconds,omitempty"`

	// The path in the container at which to mount this volume.
	// The URI to use with the `host` for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The port number on which to connect. Possible values are between 1 and 65535.
	// The port number on which to connect. Possible values are between `1` and `65535`.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The time in seconds after the container is sent the termination signal before the process if forcibly killed.
	// The time in seconds after the container is sent the termination signal before the process if forcibly killed.
	TerminationGracePeriodSeconds *float64 `json:"terminationGracePeriodSeconds,omitempty" tf:"termination_grace_period_seconds,omitempty"`

	// Time in seconds after which the probe times out. Possible values are in the range 1 - 240. Defaults to 1.
	// Time in seconds after which the probe times out. Possible values are between `1` an `240`. Defaults to `1`.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Type of probe. Possible values are TCP, HTTP, and HTTPS.
	// Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
	Transport *string `json:"transport,omitempty" tf:"transport,omitempty"`
}

type LivenessProbeParameters struct {

	// The number of consecutive failures required to consider this probe as failed. Possible values are between 1 and 10. Defaults to 3.
	// The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
	// +kubebuilder:validation:Optional
	FailureCountThreshold *float64 `json:"failureCountThreshold,omitempty" tf:"failure_count_threshold,omitempty"`

	// A header block as detailed below.
	// +kubebuilder:validation:Optional
	Header []HeaderParameters `json:"header,omitempty" tf:"header,omitempty"`

	// The value for the host header which should be sent with this probe. If unspecified, the IP Address of the Pod is used as the host header. Setting a value for Host in headers can be used to override this for HTTP and HTTPS type probes.
	// The probe hostname. Defaults to the pod IP address. Setting a value for `Host` in `headers` can be used to override this for `http` and `https` type probes.
	// +kubebuilder:validation:Optional
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// The time in seconds to wait after the container has started before the probe is started.
	// The time in seconds to wait after the container has started before the probe is started.
	// +kubebuilder:validation:Optional
	InitialDelay *float64 `json:"initialDelay,omitempty" tf:"initial_delay,omitempty"`

	// How often, in seconds, the probe should run. Possible values are between 1 and 240. Defaults to 10
	// How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
	// +kubebuilder:validation:Optional
	IntervalSeconds *float64 `json:"intervalSeconds,omitempty" tf:"interval_seconds,omitempty"`

	// The path in the container at which to mount this volume.
	// The URI to use with the `host` for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The port number on which to connect. Possible values are between 1 and 65535.
	// The port number on which to connect. Possible values are between `1` and `65535`.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port" tf:"port,omitempty"`

	// Time in seconds after which the probe times out. Possible values are in the range 1 - 240. Defaults to 1.
	// Time in seconds after which the probe times out. Possible values are between `1` an `240`. Defaults to `1`.
	// +kubebuilder:validation:Optional
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Type of probe. Possible values are TCP, HTTP, and HTTPS.
	// Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
	// +kubebuilder:validation:Optional
	Transport *string `json:"transport" tf:"transport,omitempty"`
}

type ReadinessProbeHeaderInitParameters struct {

	// The name of the Volume to be mounted in the container.
	// The HTTP Header Name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The value for this secret.
	// The HTTP Header value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ReadinessProbeHeaderObservation struct {

	// The name of the Volume to be mounted in the container.
	// The HTTP Header Name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The value for this secret.
	// The HTTP Header value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ReadinessProbeHeaderParameters struct {

	// The name of the Volume to be mounted in the container.
	// The HTTP Header Name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The value for this secret.
	// The HTTP Header value.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ReadinessProbeInitParameters struct {

	// The number of consecutive failures required to consider this probe as failed. Possible values are between 1 and 10. Defaults to 3.
	// The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
	FailureCountThreshold *float64 `json:"failureCountThreshold,omitempty" tf:"failure_count_threshold,omitempty"`

	// A header block as detailed below.
	Header []ReadinessProbeHeaderInitParameters `json:"header,omitempty" tf:"header,omitempty"`

	// The value for the host header which should be sent with this probe. If unspecified, the IP Address of the Pod is used as the host header. Setting a value for Host in headers can be used to override this for HTTP and HTTPS type probes.
	// The probe hostname. Defaults to the pod IP address. Setting a value for `Host` in `headers` can be used to override this for `http` and `https` type probes.
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// How often, in seconds, the probe should run. Possible values are between 1 and 240. Defaults to 10
	// How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
	IntervalSeconds *float64 `json:"intervalSeconds,omitempty" tf:"interval_seconds,omitempty"`

	// The path in the container at which to mount this volume.
	// The URI to use for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The port number on which to connect. Possible values are between 1 and 65535.
	// The port number on which to connect. Possible values are between `1` and `65535`.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The number of consecutive successful responses required to consider this probe as successful. Possible values are between 1 and 10. Defaults to 3.
	// The number of consecutive successful responses required to consider this probe as successful. Possible values are between `1` and `10`. Defaults to `3`.
	SuccessCountThreshold *float64 `json:"successCountThreshold,omitempty" tf:"success_count_threshold,omitempty"`

	// Time in seconds after which the probe times out. Possible values are in the range 1 - 240. Defaults to 1.
	// Time in seconds after which the probe times out. Possible values are between `1` an `240`. Defaults to `1`.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Type of probe. Possible values are TCP, HTTP, and HTTPS.
	// Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
	Transport *string `json:"transport,omitempty" tf:"transport,omitempty"`
}

type ReadinessProbeObservation struct {

	// The number of consecutive failures required to consider this probe as failed. Possible values are between 1 and 10. Defaults to 3.
	// The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
	FailureCountThreshold *float64 `json:"failureCountThreshold,omitempty" tf:"failure_count_threshold,omitempty"`

	// A header block as detailed below.
	Header []ReadinessProbeHeaderObservation `json:"header,omitempty" tf:"header,omitempty"`

	// The value for the host header which should be sent with this probe. If unspecified, the IP Address of the Pod is used as the host header. Setting a value for Host in headers can be used to override this for HTTP and HTTPS type probes.
	// The probe hostname. Defaults to the pod IP address. Setting a value for `Host` in `headers` can be used to override this for `http` and `https` type probes.
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// How often, in seconds, the probe should run. Possible values are between 1 and 240. Defaults to 10
	// How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
	IntervalSeconds *float64 `json:"intervalSeconds,omitempty" tf:"interval_seconds,omitempty"`

	// The path in the container at which to mount this volume.
	// The URI to use for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The port number on which to connect. Possible values are between 1 and 65535.
	// The port number on which to connect. Possible values are between `1` and `65535`.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The number of consecutive successful responses required to consider this probe as successful. Possible values are between 1 and 10. Defaults to 3.
	// The number of consecutive successful responses required to consider this probe as successful. Possible values are between `1` and `10`. Defaults to `3`.
	SuccessCountThreshold *float64 `json:"successCountThreshold,omitempty" tf:"success_count_threshold,omitempty"`

	// Time in seconds after which the probe times out. Possible values are in the range 1 - 240. Defaults to 1.
	// Time in seconds after which the probe times out. Possible values are between `1` an `240`. Defaults to `1`.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Type of probe. Possible values are TCP, HTTP, and HTTPS.
	// Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
	Transport *string `json:"transport,omitempty" tf:"transport,omitempty"`
}

type ReadinessProbeParameters struct {

	// The number of consecutive failures required to consider this probe as failed. Possible values are between 1 and 10. Defaults to 3.
	// The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
	// +kubebuilder:validation:Optional
	FailureCountThreshold *float64 `json:"failureCountThreshold,omitempty" tf:"failure_count_threshold,omitempty"`

	// A header block as detailed below.
	// +kubebuilder:validation:Optional
	Header []ReadinessProbeHeaderParameters `json:"header,omitempty" tf:"header,omitempty"`

	// The value for the host header which should be sent with this probe. If unspecified, the IP Address of the Pod is used as the host header. Setting a value for Host in headers can be used to override this for HTTP and HTTPS type probes.
	// The probe hostname. Defaults to the pod IP address. Setting a value for `Host` in `headers` can be used to override this for `http` and `https` type probes.
	// +kubebuilder:validation:Optional
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// How often, in seconds, the probe should run. Possible values are between 1 and 240. Defaults to 10
	// How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
	// +kubebuilder:validation:Optional
	IntervalSeconds *float64 `json:"intervalSeconds,omitempty" tf:"interval_seconds,omitempty"`

	// The path in the container at which to mount this volume.
	// The URI to use for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The port number on which to connect. Possible values are between 1 and 65535.
	// The port number on which to connect. Possible values are between `1` and `65535`.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port" tf:"port,omitempty"`

	// The number of consecutive successful responses required to consider this probe as successful. Possible values are between 1 and 10. Defaults to 3.
	// The number of consecutive successful responses required to consider this probe as successful. Possible values are between `1` and `10`. Defaults to `3`.
	// +kubebuilder:validation:Optional
	SuccessCountThreshold *float64 `json:"successCountThreshold,omitempty" tf:"success_count_threshold,omitempty"`

	// Time in seconds after which the probe times out. Possible values are in the range 1 - 240. Defaults to 1.
	// Time in seconds after which the probe times out. Possible values are between `1` an `240`. Defaults to `1`.
	// +kubebuilder:validation:Optional
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Type of probe. Possible values are TCP, HTTP, and HTTPS.
	// Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
	// +kubebuilder:validation:Optional
	Transport *string `json:"transport" tf:"transport,omitempty"`
}

type RegistryInitParameters struct {

	// Resource ID for the User Assigned Managed identity to use when pulling from the Container Registry.
	// ID of the System or User Managed Identity used to pull images from the Container Registry
	Identity *string `json:"identity,omitempty" tf:"identity,omitempty"`

	// The name of the Secret Reference containing the password value for this user on the Container Registry, username must also be supplied.
	// The name of the Secret Reference containing the password value for this user on the Container Registry.
	PasswordSecretName *string `json:"passwordSecretName,omitempty" tf:"password_secret_name,omitempty"`

	// The hostname for the Container Registry.
	// The hostname for the Container Registry.
	Server *string `json:"server,omitempty" tf:"server,omitempty"`

	// The username to use for this Container Registry, password_secret_name must also be supplied..
	// The username to use for this Container Registry.
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type RegistryObservation struct {

	// Resource ID for the User Assigned Managed identity to use when pulling from the Container Registry.
	// ID of the System or User Managed Identity used to pull images from the Container Registry
	Identity *string `json:"identity,omitempty" tf:"identity,omitempty"`

	// The name of the Secret Reference containing the password value for this user on the Container Registry, username must also be supplied.
	// The name of the Secret Reference containing the password value for this user on the Container Registry.
	PasswordSecretName *string `json:"passwordSecretName,omitempty" tf:"password_secret_name,omitempty"`

	// The hostname for the Container Registry.
	// The hostname for the Container Registry.
	Server *string `json:"server,omitempty" tf:"server,omitempty"`

	// The username to use for this Container Registry, password_secret_name must also be supplied..
	// The username to use for this Container Registry.
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type RegistryParameters struct {

	// Resource ID for the User Assigned Managed identity to use when pulling from the Container Registry.
	// ID of the System or User Managed Identity used to pull images from the Container Registry
	// +kubebuilder:validation:Optional
	Identity *string `json:"identity,omitempty" tf:"identity,omitempty"`

	// The name of the Secret Reference containing the password value for this user on the Container Registry, username must also be supplied.
	// The name of the Secret Reference containing the password value for this user on the Container Registry.
	// +kubebuilder:validation:Optional
	PasswordSecretName *string `json:"passwordSecretName,omitempty" tf:"password_secret_name,omitempty"`

	// The hostname for the Container Registry.
	// The hostname for the Container Registry.
	// +kubebuilder:validation:Optional
	Server *string `json:"server" tf:"server,omitempty"`

	// The username to use for this Container Registry, password_secret_name must also be supplied..
	// The username to use for this Container Registry.
	// +kubebuilder:validation:Optional
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type SecretInitParameters struct {

	// The identity to use for accessing the Key Vault secret reference. This can either be the Resource ID of a User Assigned Identity, or System for the System Assigned Identity.
	// The identity to use for accessing key vault reference.
	Identity *string `json:"identity,omitempty" tf:"identity,omitempty"`

	// The ID of a Key Vault secret. This can be a versioned or version-less ID.
	// The Key Vault Secret ID. Could be either one of `id` or `versionless_id`.
	KeyVaultSecretID *string `json:"keyVaultSecretId,omitempty" tf:"key_vault_secret_id,omitempty"`

	// The secret name.
	// The secret name.
	NameSecretRef v1.SecretKeySelector `json:"nameSecretRef" tf:"-"`

	// The value for this secret.
	// The value for this secret.
	ValueSecretRef *v1.SecretKeySelector `json:"valueSecretRef,omitempty" tf:"-"`
}

type SecretObservation struct {

	// The identity to use for accessing the Key Vault secret reference. This can either be the Resource ID of a User Assigned Identity, or System for the System Assigned Identity.
	// The identity to use for accessing key vault reference.
	Identity *string `json:"identity,omitempty" tf:"identity,omitempty"`

	// The ID of a Key Vault secret. This can be a versioned or version-less ID.
	// The Key Vault Secret ID. Could be either one of `id` or `versionless_id`.
	KeyVaultSecretID *string `json:"keyVaultSecretId,omitempty" tf:"key_vault_secret_id,omitempty"`
}

type SecretParameters struct {

	// The identity to use for accessing the Key Vault secret reference. This can either be the Resource ID of a User Assigned Identity, or System for the System Assigned Identity.
	// The identity to use for accessing key vault reference.
	// +kubebuilder:validation:Optional
	Identity *string `json:"identity,omitempty" tf:"identity,omitempty"`

	// The ID of a Key Vault secret. This can be a versioned or version-less ID.
	// The Key Vault Secret ID. Could be either one of `id` or `versionless_id`.
	// +kubebuilder:validation:Optional
	KeyVaultSecretID *string `json:"keyVaultSecretId,omitempty" tf:"key_vault_secret_id,omitempty"`

	// The secret name.
	// The secret name.
	// +kubebuilder:validation:Optional
	NameSecretRef v1.SecretKeySelector `json:"nameSecretRef" tf:"-"`

	// The value for this secret.
	// The value for this secret.
	// +kubebuilder:validation:Optional
	ValueSecretRef *v1.SecretKeySelector `json:"valueSecretRef,omitempty" tf:"-"`
}

type StartupProbeHeaderInitParameters struct {

	// The name of the Volume to be mounted in the container.
	// The HTTP Header Name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The value for this secret.
	// The HTTP Header value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type StartupProbeHeaderObservation struct {

	// The name of the Volume to be mounted in the container.
	// The HTTP Header Name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The value for this secret.
	// The HTTP Header value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type StartupProbeHeaderParameters struct {

	// The name of the Volume to be mounted in the container.
	// The HTTP Header Name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The value for this secret.
	// The HTTP Header value.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type StartupProbeInitParameters struct {

	// The number of consecutive failures required to consider this probe as failed. Possible values are between 1 and 10. Defaults to 3.
	// The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
	FailureCountThreshold *float64 `json:"failureCountThreshold,omitempty" tf:"failure_count_threshold,omitempty"`

	// A header block as detailed below.
	Header []StartupProbeHeaderInitParameters `json:"header,omitempty" tf:"header,omitempty"`

	// The value for the host header which should be sent with this probe. If unspecified, the IP Address of the Pod is used as the host header. Setting a value for Host in headers can be used to override this for HTTP and HTTPS type probes.
	// The probe hostname. Defaults to the pod IP address. Setting a value for `Host` in `headers` can be used to override this for `http` and `https` type probes.
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// How often, in seconds, the probe should run. Possible values are between 1 and 240. Defaults to 10
	// How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
	IntervalSeconds *float64 `json:"intervalSeconds,omitempty" tf:"interval_seconds,omitempty"`

	// The path in the container at which to mount this volume.
	// The URI to use with the `host` for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The port number on which to connect. Possible values are between 1 and 65535.
	// The port number on which to connect. Possible values are between `1` and `65535`.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Time in seconds after which the probe times out. Possible values are in the range 1 - 240. Defaults to 1.
	// Time in seconds after which the probe times out. Possible values are between `1` an `240`. Defaults to `1`.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Type of probe. Possible values are TCP, HTTP, and HTTPS.
	// Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
	Transport *string `json:"transport,omitempty" tf:"transport,omitempty"`
}

type StartupProbeObservation struct {

	// The number of consecutive failures required to consider this probe as failed. Possible values are between 1 and 10. Defaults to 3.
	// The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
	FailureCountThreshold *float64 `json:"failureCountThreshold,omitempty" tf:"failure_count_threshold,omitempty"`

	// A header block as detailed below.
	Header []StartupProbeHeaderObservation `json:"header,omitempty" tf:"header,omitempty"`

	// The value for the host header which should be sent with this probe. If unspecified, the IP Address of the Pod is used as the host header. Setting a value for Host in headers can be used to override this for HTTP and HTTPS type probes.
	// The probe hostname. Defaults to the pod IP address. Setting a value for `Host` in `headers` can be used to override this for `http` and `https` type probes.
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// How often, in seconds, the probe should run. Possible values are between 1 and 240. Defaults to 10
	// How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
	IntervalSeconds *float64 `json:"intervalSeconds,omitempty" tf:"interval_seconds,omitempty"`

	// The path in the container at which to mount this volume.
	// The URI to use with the `host` for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The port number on which to connect. Possible values are between 1 and 65535.
	// The port number on which to connect. Possible values are between `1` and `65535`.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The time in seconds after the container is sent the termination signal before the process if forcibly killed.
	// The time in seconds after the container is sent the termination signal before the process if forcibly killed.
	TerminationGracePeriodSeconds *float64 `json:"terminationGracePeriodSeconds,omitempty" tf:"termination_grace_period_seconds,omitempty"`

	// Time in seconds after which the probe times out. Possible values are in the range 1 - 240. Defaults to 1.
	// Time in seconds after which the probe times out. Possible values are between `1` an `240`. Defaults to `1`.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Type of probe. Possible values are TCP, HTTP, and HTTPS.
	// Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
	Transport *string `json:"transport,omitempty" tf:"transport,omitempty"`
}

type StartupProbeParameters struct {

	// The number of consecutive failures required to consider this probe as failed. Possible values are between 1 and 10. Defaults to 3.
	// The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
	// +kubebuilder:validation:Optional
	FailureCountThreshold *float64 `json:"failureCountThreshold,omitempty" tf:"failure_count_threshold,omitempty"`

	// A header block as detailed below.
	// +kubebuilder:validation:Optional
	Header []StartupProbeHeaderParameters `json:"header,omitempty" tf:"header,omitempty"`

	// The value for the host header which should be sent with this probe. If unspecified, the IP Address of the Pod is used as the host header. Setting a value for Host in headers can be used to override this for HTTP and HTTPS type probes.
	// The probe hostname. Defaults to the pod IP address. Setting a value for `Host` in `headers` can be used to override this for `http` and `https` type probes.
	// +kubebuilder:validation:Optional
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// How often, in seconds, the probe should run. Possible values are between 1 and 240. Defaults to 10
	// How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
	// +kubebuilder:validation:Optional
	IntervalSeconds *float64 `json:"intervalSeconds,omitempty" tf:"interval_seconds,omitempty"`

	// The path in the container at which to mount this volume.
	// The URI to use with the `host` for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The port number on which to connect. Possible values are between 1 and 65535.
	// The port number on which to connect. Possible values are between `1` and `65535`.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port" tf:"port,omitempty"`

	// Time in seconds after which the probe times out. Possible values are in the range 1 - 240. Defaults to 1.
	// Time in seconds after which the probe times out. Possible values are between `1` an `240`. Defaults to `1`.
	// +kubebuilder:validation:Optional
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Type of probe. Possible values are TCP, HTTP, and HTTPS.
	// Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
	// +kubebuilder:validation:Optional
	Transport *string `json:"transport" tf:"transport,omitempty"`
}

type TCPScaleRuleAuthenticationInitParameters struct {

	// The name of the secret that contains the value for this environment variable.
	SecretName *string `json:"secretName,omitempty" tf:"secret_name,omitempty"`

	// The Trigger Parameter name to use the supply the value retrieved from the secret_name.
	TriggerParameter *string `json:"triggerParameter,omitempty" tf:"trigger_parameter,omitempty"`
}

type TCPScaleRuleAuthenticationObservation struct {

	// The name of the secret that contains the value for this environment variable.
	SecretName *string `json:"secretName,omitempty" tf:"secret_name,omitempty"`

	// The Trigger Parameter name to use the supply the value retrieved from the secret_name.
	TriggerParameter *string `json:"triggerParameter,omitempty" tf:"trigger_parameter,omitempty"`
}

type TCPScaleRuleAuthenticationParameters struct {

	// The name of the secret that contains the value for this environment variable.
	// +kubebuilder:validation:Optional
	SecretName *string `json:"secretName" tf:"secret_name,omitempty"`

	// The Trigger Parameter name to use the supply the value retrieved from the secret_name.
	// +kubebuilder:validation:Optional
	TriggerParameter *string `json:"triggerParameter,omitempty" tf:"trigger_parameter,omitempty"`
}

type TCPScaleRuleInitParameters struct {

	// Zero or more authentication blocks as defined below.
	Authentication []TCPScaleRuleAuthenticationInitParameters `json:"authentication,omitempty" tf:"authentication,omitempty"`

	// - The number of concurrent requests to trigger scaling.
	ConcurrentRequests *string `json:"concurrentRequests,omitempty" tf:"concurrent_requests,omitempty"`

	// The name of the Volume to be mounted in the container.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type TCPScaleRuleObservation struct {

	// Zero or more authentication blocks as defined below.
	Authentication []TCPScaleRuleAuthenticationObservation `json:"authentication,omitempty" tf:"authentication,omitempty"`

	// - The number of concurrent requests to trigger scaling.
	ConcurrentRequests *string `json:"concurrentRequests,omitempty" tf:"concurrent_requests,omitempty"`

	// The name of the Volume to be mounted in the container.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type TCPScaleRuleParameters struct {

	// Zero or more authentication blocks as defined below.
	// +kubebuilder:validation:Optional
	Authentication []TCPScaleRuleAuthenticationParameters `json:"authentication,omitempty" tf:"authentication,omitempty"`

	// - The number of concurrent requests to trigger scaling.
	// +kubebuilder:validation:Optional
	ConcurrentRequests *string `json:"concurrentRequests" tf:"concurrent_requests,omitempty"`

	// The name of the Volume to be mounted in the container.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type TemplateInitParameters struct {

	// One or more azure_queue_scale_rule blocks as defined below.
	AzureQueueScaleRule []AzureQueueScaleRuleInitParameters `json:"azureQueueScaleRule,omitempty" tf:"azure_queue_scale_rule,omitempty"`

	// One or more container blocks as detailed below.
	Container []ContainerInitParameters `json:"container,omitempty" tf:"container,omitempty"`

	// One or more custom_scale_rule blocks as defined below.
	CustomScaleRule []CustomScaleRuleInitParameters `json:"customScaleRule,omitempty" tf:"custom_scale_rule,omitempty"`

	// One or more http_scale_rule blocks as defined below.
	HTTPScaleRule []HTTPScaleRuleInitParameters `json:"httpScaleRule,omitempty" tf:"http_scale_rule,omitempty"`

	// The definition of an init container that is part of the group as documented in the init_container block below.
	InitContainer []InitContainerInitParameters `json:"initContainer,omitempty" tf:"init_container,omitempty"`

	// The maximum number of replicas for this container.
	// The maximum number of replicas for this container.
	MaxReplicas *float64 `json:"maxReplicas,omitempty" tf:"max_replicas,omitempty"`

	// The minimum number of replicas for this container.
	// The minimum number of replicas for this container.
	MinReplicas *float64 `json:"minReplicas,omitempty" tf:"min_replicas,omitempty"`

	// The suffix for the revision. This value must be unique for the lifetime of the Resource. If omitted the service will use a hash function to create one.
	// The suffix for the revision. This value must be unique for the lifetime of the Resource. If omitted the service will use a hash function to create one.
	RevisionSuffix *string `json:"revisionSuffix,omitempty" tf:"revision_suffix,omitempty"`

	// One or more tcp_scale_rule blocks as defined below.
	TCPScaleRule []TCPScaleRuleInitParameters `json:"tcpScaleRule,omitempty" tf:"tcp_scale_rule,omitempty"`

	// A volume block as detailed below.
	Volume []VolumeInitParameters `json:"volume,omitempty" tf:"volume,omitempty"`
}

type TemplateObservation struct {

	// One or more azure_queue_scale_rule blocks as defined below.
	AzureQueueScaleRule []AzureQueueScaleRuleObservation `json:"azureQueueScaleRule,omitempty" tf:"azure_queue_scale_rule,omitempty"`

	// One or more container blocks as detailed below.
	Container []ContainerObservation `json:"container,omitempty" tf:"container,omitempty"`

	// One or more custom_scale_rule blocks as defined below.
	CustomScaleRule []CustomScaleRuleObservation `json:"customScaleRule,omitempty" tf:"custom_scale_rule,omitempty"`

	// One or more http_scale_rule blocks as defined below.
	HTTPScaleRule []HTTPScaleRuleObservation `json:"httpScaleRule,omitempty" tf:"http_scale_rule,omitempty"`

	// The definition of an init container that is part of the group as documented in the init_container block below.
	InitContainer []InitContainerObservation `json:"initContainer,omitempty" tf:"init_container,omitempty"`

	// The maximum number of replicas for this container.
	// The maximum number of replicas for this container.
	MaxReplicas *float64 `json:"maxReplicas,omitempty" tf:"max_replicas,omitempty"`

	// The minimum number of replicas for this container.
	// The minimum number of replicas for this container.
	MinReplicas *float64 `json:"minReplicas,omitempty" tf:"min_replicas,omitempty"`

	// The suffix for the revision. This value must be unique for the lifetime of the Resource. If omitted the service will use a hash function to create one.
	// The suffix for the revision. This value must be unique for the lifetime of the Resource. If omitted the service will use a hash function to create one.
	RevisionSuffix *string `json:"revisionSuffix,omitempty" tf:"revision_suffix,omitempty"`

	// One or more tcp_scale_rule blocks as defined below.
	TCPScaleRule []TCPScaleRuleObservation `json:"tcpScaleRule,omitempty" tf:"tcp_scale_rule,omitempty"`

	// A volume block as detailed below.
	Volume []VolumeObservation `json:"volume,omitempty" tf:"volume,omitempty"`
}

type TemplateParameters struct {

	// One or more azure_queue_scale_rule blocks as defined below.
	// +kubebuilder:validation:Optional
	AzureQueueScaleRule []AzureQueueScaleRuleParameters `json:"azureQueueScaleRule,omitempty" tf:"azure_queue_scale_rule,omitempty"`

	// One or more container blocks as detailed below.
	// +kubebuilder:validation:Optional
	Container []ContainerParameters `json:"container" tf:"container,omitempty"`

	// One or more custom_scale_rule blocks as defined below.
	// +kubebuilder:validation:Optional
	CustomScaleRule []CustomScaleRuleParameters `json:"customScaleRule,omitempty" tf:"custom_scale_rule,omitempty"`

	// One or more http_scale_rule blocks as defined below.
	// +kubebuilder:validation:Optional
	HTTPScaleRule []HTTPScaleRuleParameters `json:"httpScaleRule,omitempty" tf:"http_scale_rule,omitempty"`

	// The definition of an init container that is part of the group as documented in the init_container block below.
	// +kubebuilder:validation:Optional
	InitContainer []InitContainerParameters `json:"initContainer,omitempty" tf:"init_container,omitempty"`

	// The maximum number of replicas for this container.
	// The maximum number of replicas for this container.
	// +kubebuilder:validation:Optional
	MaxReplicas *float64 `json:"maxReplicas,omitempty" tf:"max_replicas,omitempty"`

	// The minimum number of replicas for this container.
	// The minimum number of replicas for this container.
	// +kubebuilder:validation:Optional
	MinReplicas *float64 `json:"minReplicas,omitempty" tf:"min_replicas,omitempty"`

	// The suffix for the revision. This value must be unique for the lifetime of the Resource. If omitted the service will use a hash function to create one.
	// The suffix for the revision. This value must be unique for the lifetime of the Resource. If omitted the service will use a hash function to create one.
	// +kubebuilder:validation:Optional
	RevisionSuffix *string `json:"revisionSuffix,omitempty" tf:"revision_suffix,omitempty"`

	// One or more tcp_scale_rule blocks as defined below.
	// +kubebuilder:validation:Optional
	TCPScaleRule []TCPScaleRuleParameters `json:"tcpScaleRule,omitempty" tf:"tcp_scale_rule,omitempty"`

	// A volume block as detailed below.
	// +kubebuilder:validation:Optional
	Volume []VolumeParameters `json:"volume,omitempty" tf:"volume,omitempty"`
}

type TrafficWeightInitParameters struct {

	// The label to apply to the revision as a name prefix for routing traffic.
	// The label to apply to the revision as a name prefix for routing traffic.
	Label *string `json:"label,omitempty" tf:"label,omitempty"`

	// This traffic Weight applies to the latest stable Container Revision. At most only one traffic_weight block can have the latest_revision set to true.
	// This traffic Weight relates to the latest stable Container Revision.
	LatestRevision *bool `json:"latestRevision,omitempty" tf:"latest_revision,omitempty"`

	// The percentage of traffic which should be sent this revision.
	// The percentage of traffic to send to this revision.
	Percentage *float64 `json:"percentage,omitempty" tf:"percentage,omitempty"`

	// The suffix for the revision. This value must be unique for the lifetime of the Resource. If omitted the service will use a hash function to create one.
	// The suffix string to append to the revision. This must be unique for the Container App's lifetime. A default hash created by the service will be used if this value is omitted.
	RevisionSuffix *string `json:"revisionSuffix,omitempty" tf:"revision_suffix,omitempty"`
}

type TrafficWeightObservation struct {

	// The label to apply to the revision as a name prefix for routing traffic.
	// The label to apply to the revision as a name prefix for routing traffic.
	Label *string `json:"label,omitempty" tf:"label,omitempty"`

	// This traffic Weight applies to the latest stable Container Revision. At most only one traffic_weight block can have the latest_revision set to true.
	// This traffic Weight relates to the latest stable Container Revision.
	LatestRevision *bool `json:"latestRevision,omitempty" tf:"latest_revision,omitempty"`

	// The percentage of traffic which should be sent this revision.
	// The percentage of traffic to send to this revision.
	Percentage *float64 `json:"percentage,omitempty" tf:"percentage,omitempty"`

	// The suffix for the revision. This value must be unique for the lifetime of the Resource. If omitted the service will use a hash function to create one.
	// The suffix string to append to the revision. This must be unique for the Container App's lifetime. A default hash created by the service will be used if this value is omitted.
	RevisionSuffix *string `json:"revisionSuffix,omitempty" tf:"revision_suffix,omitempty"`
}

type TrafficWeightParameters struct {

	// The label to apply to the revision as a name prefix for routing traffic.
	// The label to apply to the revision as a name prefix for routing traffic.
	// +kubebuilder:validation:Optional
	Label *string `json:"label,omitempty" tf:"label,omitempty"`

	// This traffic Weight applies to the latest stable Container Revision. At most only one traffic_weight block can have the latest_revision set to true.
	// This traffic Weight relates to the latest stable Container Revision.
	// +kubebuilder:validation:Optional
	LatestRevision *bool `json:"latestRevision,omitempty" tf:"latest_revision,omitempty"`

	// The percentage of traffic which should be sent this revision.
	// The percentage of traffic to send to this revision.
	// +kubebuilder:validation:Optional
	Percentage *float64 `json:"percentage" tf:"percentage,omitempty"`

	// The suffix for the revision. This value must be unique for the lifetime of the Resource. If omitted the service will use a hash function to create one.
	// The suffix string to append to the revision. This must be unique for the Container App's lifetime. A default hash created by the service will be used if this value is omitted.
	// +kubebuilder:validation:Optional
	RevisionSuffix *string `json:"revisionSuffix,omitempty" tf:"revision_suffix,omitempty"`
}

type VolumeInitParameters struct {

	// The name of the Volume to be mounted in the container.
	// The name of the volume.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The name of the AzureFile storage.
	// The name of the `AzureFile` storage. Required when `storage_type` is `AzureFile`
	StorageName *string `json:"storageName,omitempty" tf:"storage_name,omitempty"`

	// The type of storage volume. Possible values are AzureFile, EmptyDir and Secret. Defaults to EmptyDir.
	// The type of storage volume. Possible values include `AzureFile` and `EmptyDir`. Defaults to `EmptyDir`.
	StorageType *string `json:"storageType,omitempty" tf:"storage_type,omitempty"`
}

type VolumeMountsInitParameters struct {

	// The name of the Volume to be mounted in the container.
	// The name of the Volume to be mounted in the container.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The path in the container at which to mount this volume.
	// The path in the container at which to mount this volume.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`
}

type VolumeMountsObservation struct {

	// The name of the Volume to be mounted in the container.
	// The name of the Volume to be mounted in the container.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The path in the container at which to mount this volume.
	// The path in the container at which to mount this volume.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`
}

type VolumeMountsParameters struct {

	// The name of the Volume to be mounted in the container.
	// The name of the Volume to be mounted in the container.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The path in the container at which to mount this volume.
	// The path in the container at which to mount this volume.
	// +kubebuilder:validation:Optional
	Path *string `json:"path" tf:"path,omitempty"`
}

type VolumeObservation struct {

	// The name of the Volume to be mounted in the container.
	// The name of the volume.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The name of the AzureFile storage.
	// The name of the `AzureFile` storage. Required when `storage_type` is `AzureFile`
	StorageName *string `json:"storageName,omitempty" tf:"storage_name,omitempty"`

	// The type of storage volume. Possible values are AzureFile, EmptyDir and Secret. Defaults to EmptyDir.
	// The type of storage volume. Possible values include `AzureFile` and `EmptyDir`. Defaults to `EmptyDir`.
	StorageType *string `json:"storageType,omitempty" tf:"storage_type,omitempty"`
}

type VolumeParameters struct {

	// The name of the Volume to be mounted in the container.
	// The name of the volume.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The name of the AzureFile storage.
	// The name of the `AzureFile` storage. Required when `storage_type` is `AzureFile`
	// +kubebuilder:validation:Optional
	StorageName *string `json:"storageName,omitempty" tf:"storage_name,omitempty"`

	// The type of storage volume. Possible values are AzureFile, EmptyDir and Secret. Defaults to EmptyDir.
	// The type of storage volume. Possible values include `AzureFile` and `EmptyDir`. Defaults to `EmptyDir`.
	// +kubebuilder:validation:Optional
	StorageType *string `json:"storageType,omitempty" tf:"storage_type,omitempty"`
}

// ContainerAppSpec defines the desired state of ContainerApp
type ContainerAppSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ContainerAppParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ContainerAppInitParameters `json:"initProvider,omitempty"`
}

// ContainerAppStatus defines the observed state of ContainerApp.
type ContainerAppStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ContainerAppObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status

// ContainerApp is the Schema for the ContainerApps API. Manages a Container App.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type ContainerApp struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.revisionMode) || (has(self.initProvider) && has(self.initProvider.revisionMode))",message="spec.forProvider.revisionMode is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.template) || (has(self.initProvider) && has(self.initProvider.template))",message="spec.forProvider.template is a required parameter"
	Spec   ContainerAppSpec   `json:"spec"`
	Status ContainerAppStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ContainerAppList contains a list of ContainerApps
type ContainerAppList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ContainerApp `json:"items"`
}

// Repository type metadata.
var (
	ContainerApp_Kind             = "ContainerApp"
	ContainerApp_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ContainerApp_Kind}.String()
	ContainerApp_KindAPIVersion   = ContainerApp_Kind + "." + CRDGroupVersion.String()
	ContainerApp_GroupVersionKind = CRDGroupVersion.WithKind(ContainerApp_Kind)
)

func init() {
	SchemeBuilder.Register(&ContainerApp{}, &ContainerAppList{})
}
