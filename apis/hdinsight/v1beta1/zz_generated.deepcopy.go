//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmbariInitParameters) DeepCopyInto(out *AmbariInitParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmbariInitParameters.
func (in *AmbariInitParameters) DeepCopy() *AmbariInitParameters {
	if in == nil {
		return nil
	}
	out := new(AmbariInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmbariObservation) DeepCopyInto(out *AmbariObservation) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmbariObservation.
func (in *AmbariObservation) DeepCopy() *AmbariObservation {
	if in == nil {
		return nil
	}
	out := new(AmbariObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmbariParameters) DeepCopyInto(out *AmbariParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmbariParameters.
func (in *AmbariParameters) DeepCopy() *AmbariParameters {
	if in == nil {
		return nil
	}
	out := new(AmbariParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleCapacityInitParameters) DeepCopyInto(out *AutoscaleCapacityInitParameters) {
	*out = *in
	if in.MaxInstanceCount != nil {
		in, out := &in.MaxInstanceCount, &out.MaxInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.MinInstanceCount != nil {
		in, out := &in.MinInstanceCount, &out.MinInstanceCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleCapacityInitParameters.
func (in *AutoscaleCapacityInitParameters) DeepCopy() *AutoscaleCapacityInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleCapacityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleCapacityObservation) DeepCopyInto(out *AutoscaleCapacityObservation) {
	*out = *in
	if in.MaxInstanceCount != nil {
		in, out := &in.MaxInstanceCount, &out.MaxInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.MinInstanceCount != nil {
		in, out := &in.MinInstanceCount, &out.MinInstanceCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleCapacityObservation.
func (in *AutoscaleCapacityObservation) DeepCopy() *AutoscaleCapacityObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscaleCapacityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleCapacityParameters) DeepCopyInto(out *AutoscaleCapacityParameters) {
	*out = *in
	if in.MaxInstanceCount != nil {
		in, out := &in.MaxInstanceCount, &out.MaxInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.MinInstanceCount != nil {
		in, out := &in.MinInstanceCount, &out.MinInstanceCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleCapacityParameters.
func (in *AutoscaleCapacityParameters) DeepCopy() *AutoscaleCapacityParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleCapacityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleInitParameters) DeepCopyInto(out *AutoscaleInitParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = make([]CapacityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = make([]RecurrenceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleInitParameters.
func (in *AutoscaleInitParameters) DeepCopy() *AutoscaleInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleObservation) DeepCopyInto(out *AutoscaleObservation) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = make([]CapacityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = make([]RecurrenceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleObservation.
func (in *AutoscaleObservation) DeepCopy() *AutoscaleObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscaleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleParameters) DeepCopyInto(out *AutoscaleParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = make([]CapacityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = make([]RecurrenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleParameters.
func (in *AutoscaleParameters) DeepCopy() *AutoscaleParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleRecurrenceInitParameters) DeepCopyInto(out *AutoscaleRecurrenceInitParameters) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]RecurrenceScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleRecurrenceInitParameters.
func (in *AutoscaleRecurrenceInitParameters) DeepCopy() *AutoscaleRecurrenceInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleRecurrenceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleRecurrenceObservation) DeepCopyInto(out *AutoscaleRecurrenceObservation) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]RecurrenceScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleRecurrenceObservation.
func (in *AutoscaleRecurrenceObservation) DeepCopy() *AutoscaleRecurrenceObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscaleRecurrenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleRecurrenceParameters) DeepCopyInto(out *AutoscaleRecurrenceParameters) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]RecurrenceScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleRecurrenceParameters.
func (in *AutoscaleRecurrenceParameters) DeepCopy() *AutoscaleRecurrenceParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleRecurrenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleRecurrenceScheduleInitParameters) DeepCopyInto(out *AutoscaleRecurrenceScheduleInitParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleRecurrenceScheduleInitParameters.
func (in *AutoscaleRecurrenceScheduleInitParameters) DeepCopy() *AutoscaleRecurrenceScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleRecurrenceScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleRecurrenceScheduleObservation) DeepCopyInto(out *AutoscaleRecurrenceScheduleObservation) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleRecurrenceScheduleObservation.
func (in *AutoscaleRecurrenceScheduleObservation) DeepCopy() *AutoscaleRecurrenceScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscaleRecurrenceScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleRecurrenceScheduleParameters) DeepCopyInto(out *AutoscaleRecurrenceScheduleParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleRecurrenceScheduleParameters.
func (in *AutoscaleRecurrenceScheduleParameters) DeepCopy() *AutoscaleRecurrenceScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleRecurrenceScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityInitParameters) DeepCopyInto(out *CapacityInitParameters) {
	*out = *in
	if in.MaxInstanceCount != nil {
		in, out := &in.MaxInstanceCount, &out.MaxInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.MinInstanceCount != nil {
		in, out := &in.MinInstanceCount, &out.MinInstanceCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityInitParameters.
func (in *CapacityInitParameters) DeepCopy() *CapacityInitParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityObservation) DeepCopyInto(out *CapacityObservation) {
	*out = *in
	if in.MaxInstanceCount != nil {
		in, out := &in.MaxInstanceCount, &out.MaxInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.MinInstanceCount != nil {
		in, out := &in.MinInstanceCount, &out.MinInstanceCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityObservation.
func (in *CapacityObservation) DeepCopy() *CapacityObservation {
	if in == nil {
		return nil
	}
	out := new(CapacityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityParameters) DeepCopyInto(out *CapacityParameters) {
	*out = *in
	if in.MaxInstanceCount != nil {
		in, out := &in.MaxInstanceCount, &out.MaxInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.MinInstanceCount != nil {
		in, out := &in.MinInstanceCount, &out.MinInstanceCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityParameters.
func (in *CapacityParameters) DeepCopy() *CapacityParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentVersionInitParameters) DeepCopyInto(out *ComponentVersionInitParameters) {
	*out = *in
	if in.Hadoop != nil {
		in, out := &in.Hadoop, &out.Hadoop
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentVersionInitParameters.
func (in *ComponentVersionInitParameters) DeepCopy() *ComponentVersionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ComponentVersionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentVersionObservation) DeepCopyInto(out *ComponentVersionObservation) {
	*out = *in
	if in.Hadoop != nil {
		in, out := &in.Hadoop, &out.Hadoop
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentVersionObservation.
func (in *ComponentVersionObservation) DeepCopy() *ComponentVersionObservation {
	if in == nil {
		return nil
	}
	out := new(ComponentVersionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentVersionParameters) DeepCopyInto(out *ComponentVersionParameters) {
	*out = *in
	if in.Hadoop != nil {
		in, out := &in.Hadoop, &out.Hadoop
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentVersionParameters.
func (in *ComponentVersionParameters) DeepCopy() *ComponentVersionParameters {
	if in == nil {
		return nil
	}
	out := new(ComponentVersionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeIsolationInitParameters) DeepCopyInto(out *ComputeIsolationInitParameters) {
	*out = *in
	if in.ComputeIsolationEnabled != nil {
		in, out := &in.ComputeIsolationEnabled, &out.ComputeIsolationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HostSku != nil {
		in, out := &in.HostSku, &out.HostSku
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeIsolationInitParameters.
func (in *ComputeIsolationInitParameters) DeepCopy() *ComputeIsolationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ComputeIsolationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeIsolationObservation) DeepCopyInto(out *ComputeIsolationObservation) {
	*out = *in
	if in.ComputeIsolationEnabled != nil {
		in, out := &in.ComputeIsolationEnabled, &out.ComputeIsolationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HostSku != nil {
		in, out := &in.HostSku, &out.HostSku
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeIsolationObservation.
func (in *ComputeIsolationObservation) DeepCopy() *ComputeIsolationObservation {
	if in == nil {
		return nil
	}
	out := new(ComputeIsolationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeIsolationParameters) DeepCopyInto(out *ComputeIsolationParameters) {
	*out = *in
	if in.ComputeIsolationEnabled != nil {
		in, out := &in.ComputeIsolationEnabled, &out.ComputeIsolationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HostSku != nil {
		in, out := &in.HostSku, &out.HostSku
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeIsolationParameters.
func (in *ComputeIsolationParameters) DeepCopy() *ComputeIsolationParameters {
	if in == nil {
		return nil
	}
	out := new(ComputeIsolationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskEncryptionInitParameters) DeepCopyInto(out *DiskEncryptionInitParameters) {
	*out = *in
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.EncryptionAtHostEnabled != nil {
		in, out := &in.EncryptionAtHostEnabled, &out.EncryptionAtHostEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultManagedIdentityID != nil {
		in, out := &in.KeyVaultManagedIdentityID, &out.KeyVaultManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskEncryptionInitParameters.
func (in *DiskEncryptionInitParameters) DeepCopy() *DiskEncryptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiskEncryptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskEncryptionObservation) DeepCopyInto(out *DiskEncryptionObservation) {
	*out = *in
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.EncryptionAtHostEnabled != nil {
		in, out := &in.EncryptionAtHostEnabled, &out.EncryptionAtHostEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultManagedIdentityID != nil {
		in, out := &in.KeyVaultManagedIdentityID, &out.KeyVaultManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskEncryptionObservation.
func (in *DiskEncryptionObservation) DeepCopy() *DiskEncryptionObservation {
	if in == nil {
		return nil
	}
	out := new(DiskEncryptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskEncryptionParameters) DeepCopyInto(out *DiskEncryptionParameters) {
	*out = *in
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.EncryptionAtHostEnabled != nil {
		in, out := &in.EncryptionAtHostEnabled, &out.EncryptionAtHostEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultManagedIdentityID != nil {
		in, out := &in.KeyVaultManagedIdentityID, &out.KeyVaultManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskEncryptionParameters.
func (in *DiskEncryptionParameters) DeepCopy() *DiskEncryptionParameters {
	if in == nil {
		return nil
	}
	out := new(DiskEncryptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNodeInitParameters) DeepCopyInto(out *EdgeNodeInitParameters) {
	*out = *in
	if in.HTTPSEndpoints != nil {
		in, out := &in.HTTPSEndpoints, &out.HTTPSEndpoints
		*out = make([]HTTPSEndpointsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstallScriptAction != nil {
		in, out := &in.InstallScriptAction, &out.InstallScriptAction
		*out = make([]InstallScriptActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.UninstallScriptActions != nil {
		in, out := &in.UninstallScriptActions, &out.UninstallScriptActions
		*out = make([]UninstallScriptActionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNodeInitParameters.
func (in *EdgeNodeInitParameters) DeepCopy() *EdgeNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNodeObservation) DeepCopyInto(out *EdgeNodeObservation) {
	*out = *in
	if in.HTTPSEndpoints != nil {
		in, out := &in.HTTPSEndpoints, &out.HTTPSEndpoints
		*out = make([]HTTPSEndpointsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstallScriptAction != nil {
		in, out := &in.InstallScriptAction, &out.InstallScriptAction
		*out = make([]InstallScriptActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.UninstallScriptActions != nil {
		in, out := &in.UninstallScriptActions, &out.UninstallScriptActions
		*out = make([]UninstallScriptActionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNodeObservation.
func (in *EdgeNodeObservation) DeepCopy() *EdgeNodeObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNodeParameters) DeepCopyInto(out *EdgeNodeParameters) {
	*out = *in
	if in.HTTPSEndpoints != nil {
		in, out := &in.HTTPSEndpoints, &out.HTTPSEndpoints
		*out = make([]HTTPSEndpointsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstallScriptAction != nil {
		in, out := &in.InstallScriptAction, &out.InstallScriptAction
		*out = make([]InstallScriptActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.UninstallScriptActions != nil {
		in, out := &in.UninstallScriptActions, &out.UninstallScriptActions
		*out = make([]UninstallScriptActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNodeParameters.
func (in *EdgeNodeParameters) DeepCopy() *EdgeNodeParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionInitParameters) DeepCopyInto(out *ExtensionInitParameters) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionInitParameters.
func (in *ExtensionInitParameters) DeepCopy() *ExtensionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExtensionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionObservation) DeepCopyInto(out *ExtensionObservation) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionObservation.
func (in *ExtensionObservation) DeepCopy() *ExtensionObservation {
	if in == nil {
		return nil
	}
	out := new(ExtensionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionParameters) DeepCopyInto(out *ExtensionParameters) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
	out.PrimaryKeySecretRef = in.PrimaryKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionParameters.
func (in *ExtensionParameters) DeepCopy() *ExtensionParameters {
	if in == nil {
		return nil
	}
	out := new(ExtensionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayInitParameters) DeepCopyInto(out *GatewayInitParameters) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayInitParameters.
func (in *GatewayInitParameters) DeepCopy() *GatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(GatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayObservation) DeepCopyInto(out *GatewayObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayObservation.
func (in *GatewayObservation) DeepCopy() *GatewayObservation {
	if in == nil {
		return nil
	}
	out := new(GatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayParameters) DeepCopyInto(out *GatewayParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayParameters.
func (in *GatewayParameters) DeepCopy() *GatewayParameters {
	if in == nil {
		return nil
	}
	out := new(GatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseCluster) DeepCopyInto(out *HBaseCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseCluster.
func (in *HBaseCluster) DeepCopy() *HBaseCluster {
	if in == nil {
		return nil
	}
	out := new(HBaseCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HBaseCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterComponentVersionInitParameters) DeepCopyInto(out *HBaseClusterComponentVersionInitParameters) {
	*out = *in
	if in.HBase != nil {
		in, out := &in.HBase, &out.HBase
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterComponentVersionInitParameters.
func (in *HBaseClusterComponentVersionInitParameters) DeepCopy() *HBaseClusterComponentVersionInitParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterComponentVersionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterComponentVersionObservation) DeepCopyInto(out *HBaseClusterComponentVersionObservation) {
	*out = *in
	if in.HBase != nil {
		in, out := &in.HBase, &out.HBase
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterComponentVersionObservation.
func (in *HBaseClusterComponentVersionObservation) DeepCopy() *HBaseClusterComponentVersionObservation {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterComponentVersionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterComponentVersionParameters) DeepCopyInto(out *HBaseClusterComponentVersionParameters) {
	*out = *in
	if in.HBase != nil {
		in, out := &in.HBase, &out.HBase
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterComponentVersionParameters.
func (in *HBaseClusterComponentVersionParameters) DeepCopy() *HBaseClusterComponentVersionParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterComponentVersionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterComputeIsolationInitParameters) DeepCopyInto(out *HBaseClusterComputeIsolationInitParameters) {
	*out = *in
	if in.ComputeIsolationEnabled != nil {
		in, out := &in.ComputeIsolationEnabled, &out.ComputeIsolationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HostSku != nil {
		in, out := &in.HostSku, &out.HostSku
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterComputeIsolationInitParameters.
func (in *HBaseClusterComputeIsolationInitParameters) DeepCopy() *HBaseClusterComputeIsolationInitParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterComputeIsolationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterComputeIsolationObservation) DeepCopyInto(out *HBaseClusterComputeIsolationObservation) {
	*out = *in
	if in.ComputeIsolationEnabled != nil {
		in, out := &in.ComputeIsolationEnabled, &out.ComputeIsolationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HostSku != nil {
		in, out := &in.HostSku, &out.HostSku
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterComputeIsolationObservation.
func (in *HBaseClusterComputeIsolationObservation) DeepCopy() *HBaseClusterComputeIsolationObservation {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterComputeIsolationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterComputeIsolationParameters) DeepCopyInto(out *HBaseClusterComputeIsolationParameters) {
	*out = *in
	if in.ComputeIsolationEnabled != nil {
		in, out := &in.ComputeIsolationEnabled, &out.ComputeIsolationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HostSku != nil {
		in, out := &in.HostSku, &out.HostSku
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterComputeIsolationParameters.
func (in *HBaseClusterComputeIsolationParameters) DeepCopy() *HBaseClusterComputeIsolationParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterComputeIsolationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterDiskEncryptionInitParameters) DeepCopyInto(out *HBaseClusterDiskEncryptionInitParameters) {
	*out = *in
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.EncryptionAtHostEnabled != nil {
		in, out := &in.EncryptionAtHostEnabled, &out.EncryptionAtHostEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultManagedIdentityID != nil {
		in, out := &in.KeyVaultManagedIdentityID, &out.KeyVaultManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterDiskEncryptionInitParameters.
func (in *HBaseClusterDiskEncryptionInitParameters) DeepCopy() *HBaseClusterDiskEncryptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterDiskEncryptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterDiskEncryptionObservation) DeepCopyInto(out *HBaseClusterDiskEncryptionObservation) {
	*out = *in
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.EncryptionAtHostEnabled != nil {
		in, out := &in.EncryptionAtHostEnabled, &out.EncryptionAtHostEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultManagedIdentityID != nil {
		in, out := &in.KeyVaultManagedIdentityID, &out.KeyVaultManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterDiskEncryptionObservation.
func (in *HBaseClusterDiskEncryptionObservation) DeepCopy() *HBaseClusterDiskEncryptionObservation {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterDiskEncryptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterDiskEncryptionParameters) DeepCopyInto(out *HBaseClusterDiskEncryptionParameters) {
	*out = *in
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.EncryptionAtHostEnabled != nil {
		in, out := &in.EncryptionAtHostEnabled, &out.EncryptionAtHostEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultManagedIdentityID != nil {
		in, out := &in.KeyVaultManagedIdentityID, &out.KeyVaultManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterDiskEncryptionParameters.
func (in *HBaseClusterDiskEncryptionParameters) DeepCopy() *HBaseClusterDiskEncryptionParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterDiskEncryptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterExtensionInitParameters) DeepCopyInto(out *HBaseClusterExtensionInitParameters) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterExtensionInitParameters.
func (in *HBaseClusterExtensionInitParameters) DeepCopy() *HBaseClusterExtensionInitParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterExtensionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterExtensionObservation) DeepCopyInto(out *HBaseClusterExtensionObservation) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterExtensionObservation.
func (in *HBaseClusterExtensionObservation) DeepCopy() *HBaseClusterExtensionObservation {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterExtensionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterExtensionParameters) DeepCopyInto(out *HBaseClusterExtensionParameters) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
	out.PrimaryKeySecretRef = in.PrimaryKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterExtensionParameters.
func (in *HBaseClusterExtensionParameters) DeepCopy() *HBaseClusterExtensionParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterExtensionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterGatewayInitParameters) DeepCopyInto(out *HBaseClusterGatewayInitParameters) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterGatewayInitParameters.
func (in *HBaseClusterGatewayInitParameters) DeepCopy() *HBaseClusterGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterGatewayObservation) DeepCopyInto(out *HBaseClusterGatewayObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterGatewayObservation.
func (in *HBaseClusterGatewayObservation) DeepCopy() *HBaseClusterGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterGatewayParameters) DeepCopyInto(out *HBaseClusterGatewayParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterGatewayParameters.
func (in *HBaseClusterGatewayParameters) DeepCopy() *HBaseClusterGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterInitParameters) DeepCopyInto(out *HBaseClusterInitParameters) {
	*out = *in
	if in.ClusterVersion != nil {
		in, out := &in.ClusterVersion, &out.ClusterVersion
		*out = new(string)
		**out = **in
	}
	if in.ComponentVersion != nil {
		in, out := &in.ComponentVersion, &out.ComponentVersion
		*out = make([]HBaseClusterComponentVersionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ComputeIsolation != nil {
		in, out := &in.ComputeIsolation, &out.ComputeIsolation
		*out = make([]HBaseClusterComputeIsolationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryption != nil {
		in, out := &in.DiskEncryption, &out.DiskEncryption
		*out = make([]HBaseClusterDiskEncryptionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Extension != nil {
		in, out := &in.Extension, &out.Extension
		*out = make([]HBaseClusterExtensionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = make([]HBaseClusterGatewayInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Metastores != nil {
		in, out := &in.Metastores, &out.Metastores
		*out = make([]HBaseClusterMetastoresInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitor != nil {
		in, out := &in.Monitor, &out.Monitor
		*out = make([]HBaseClusterMonitorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]HBaseClusterNetworkInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]HBaseClusterRolesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityProfile != nil {
		in, out := &in.SecurityProfile, &out.SecurityProfile
		*out = make([]HBaseClusterSecurityProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]HBaseClusterStorageAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountGen2 != nil {
		in, out := &in.StorageAccountGen2, &out.StorageAccountGen2
		*out = make([]HBaseClusterStorageAccountGen2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMinVersion != nil {
		in, out := &in.TLSMinVersion, &out.TLSMinVersion
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterInitParameters.
func (in *HBaseClusterInitParameters) DeepCopy() *HBaseClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterList) DeepCopyInto(out *HBaseClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HBaseCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterList.
func (in *HBaseClusterList) DeepCopy() *HBaseClusterList {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HBaseClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterMetastoresInitParameters) DeepCopyInto(out *HBaseClusterMetastoresInitParameters) {
	*out = *in
	if in.Ambari != nil {
		in, out := &in.Ambari, &out.Ambari
		*out = make([]MetastoresAmbariInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hive != nil {
		in, out := &in.Hive, &out.Hive
		*out = make([]MetastoresHiveInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Oozie != nil {
		in, out := &in.Oozie, &out.Oozie
		*out = make([]MetastoresOozieInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterMetastoresInitParameters.
func (in *HBaseClusterMetastoresInitParameters) DeepCopy() *HBaseClusterMetastoresInitParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterMetastoresInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterMetastoresObservation) DeepCopyInto(out *HBaseClusterMetastoresObservation) {
	*out = *in
	if in.Ambari != nil {
		in, out := &in.Ambari, &out.Ambari
		*out = make([]MetastoresAmbariObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hive != nil {
		in, out := &in.Hive, &out.Hive
		*out = make([]MetastoresHiveObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Oozie != nil {
		in, out := &in.Oozie, &out.Oozie
		*out = make([]MetastoresOozieObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterMetastoresObservation.
func (in *HBaseClusterMetastoresObservation) DeepCopy() *HBaseClusterMetastoresObservation {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterMetastoresObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterMetastoresParameters) DeepCopyInto(out *HBaseClusterMetastoresParameters) {
	*out = *in
	if in.Ambari != nil {
		in, out := &in.Ambari, &out.Ambari
		*out = make([]MetastoresAmbariParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hive != nil {
		in, out := &in.Hive, &out.Hive
		*out = make([]MetastoresHiveParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Oozie != nil {
		in, out := &in.Oozie, &out.Oozie
		*out = make([]MetastoresOozieParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterMetastoresParameters.
func (in *HBaseClusterMetastoresParameters) DeepCopy() *HBaseClusterMetastoresParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterMetastoresParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterMonitorInitParameters) DeepCopyInto(out *HBaseClusterMonitorInitParameters) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterMonitorInitParameters.
func (in *HBaseClusterMonitorInitParameters) DeepCopy() *HBaseClusterMonitorInitParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterMonitorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterMonitorObservation) DeepCopyInto(out *HBaseClusterMonitorObservation) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterMonitorObservation.
func (in *HBaseClusterMonitorObservation) DeepCopy() *HBaseClusterMonitorObservation {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterMonitorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterMonitorParameters) DeepCopyInto(out *HBaseClusterMonitorParameters) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
	out.PrimaryKeySecretRef = in.PrimaryKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterMonitorParameters.
func (in *HBaseClusterMonitorParameters) DeepCopy() *HBaseClusterMonitorParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterMonitorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterNetworkInitParameters) DeepCopyInto(out *HBaseClusterNetworkInitParameters) {
	*out = *in
	if in.ConnectionDirection != nil {
		in, out := &in.ConnectionDirection, &out.ConnectionDirection
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkEnabled != nil {
		in, out := &in.PrivateLinkEnabled, &out.PrivateLinkEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterNetworkInitParameters.
func (in *HBaseClusterNetworkInitParameters) DeepCopy() *HBaseClusterNetworkInitParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterNetworkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterNetworkObservation) DeepCopyInto(out *HBaseClusterNetworkObservation) {
	*out = *in
	if in.ConnectionDirection != nil {
		in, out := &in.ConnectionDirection, &out.ConnectionDirection
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkEnabled != nil {
		in, out := &in.PrivateLinkEnabled, &out.PrivateLinkEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterNetworkObservation.
func (in *HBaseClusterNetworkObservation) DeepCopy() *HBaseClusterNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterNetworkParameters) DeepCopyInto(out *HBaseClusterNetworkParameters) {
	*out = *in
	if in.ConnectionDirection != nil {
		in, out := &in.ConnectionDirection, &out.ConnectionDirection
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkEnabled != nil {
		in, out := &in.PrivateLinkEnabled, &out.PrivateLinkEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterNetworkParameters.
func (in *HBaseClusterNetworkParameters) DeepCopy() *HBaseClusterNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterObservation) DeepCopyInto(out *HBaseClusterObservation) {
	*out = *in
	if in.ClusterVersion != nil {
		in, out := &in.ClusterVersion, &out.ClusterVersion
		*out = new(string)
		**out = **in
	}
	if in.ComponentVersion != nil {
		in, out := &in.ComponentVersion, &out.ComponentVersion
		*out = make([]HBaseClusterComponentVersionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ComputeIsolation != nil {
		in, out := &in.ComputeIsolation, &out.ComputeIsolation
		*out = make([]HBaseClusterComputeIsolationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryption != nil {
		in, out := &in.DiskEncryption, &out.DiskEncryption
		*out = make([]HBaseClusterDiskEncryptionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Extension != nil {
		in, out := &in.Extension, &out.Extension
		*out = make([]HBaseClusterExtensionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = make([]HBaseClusterGatewayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPSEndpoint != nil {
		in, out := &in.HTTPSEndpoint, &out.HTTPSEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Metastores != nil {
		in, out := &in.Metastores, &out.Metastores
		*out = make([]HBaseClusterMetastoresObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitor != nil {
		in, out := &in.Monitor, &out.Monitor
		*out = make([]HBaseClusterMonitorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]HBaseClusterNetworkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]HBaseClusterRolesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHEndpoint != nil {
		in, out := &in.SSHEndpoint, &out.SSHEndpoint
		*out = new(string)
		**out = **in
	}
	if in.SecurityProfile != nil {
		in, out := &in.SecurityProfile, &out.SecurityProfile
		*out = make([]HBaseClusterSecurityProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]HBaseClusterStorageAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountGen2 != nil {
		in, out := &in.StorageAccountGen2, &out.StorageAccountGen2
		*out = make([]HBaseClusterStorageAccountGen2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMinVersion != nil {
		in, out := &in.TLSMinVersion, &out.TLSMinVersion
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterObservation.
func (in *HBaseClusterObservation) DeepCopy() *HBaseClusterObservation {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterParameters) DeepCopyInto(out *HBaseClusterParameters) {
	*out = *in
	if in.ClusterVersion != nil {
		in, out := &in.ClusterVersion, &out.ClusterVersion
		*out = new(string)
		**out = **in
	}
	if in.ComponentVersion != nil {
		in, out := &in.ComponentVersion, &out.ComponentVersion
		*out = make([]HBaseClusterComponentVersionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ComputeIsolation != nil {
		in, out := &in.ComputeIsolation, &out.ComputeIsolation
		*out = make([]HBaseClusterComputeIsolationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryption != nil {
		in, out := &in.DiskEncryption, &out.DiskEncryption
		*out = make([]HBaseClusterDiskEncryptionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Extension != nil {
		in, out := &in.Extension, &out.Extension
		*out = make([]HBaseClusterExtensionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = make([]HBaseClusterGatewayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Metastores != nil {
		in, out := &in.Metastores, &out.Metastores
		*out = make([]HBaseClusterMetastoresParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitor != nil {
		in, out := &in.Monitor, &out.Monitor
		*out = make([]HBaseClusterMonitorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]HBaseClusterNetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]HBaseClusterRolesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityProfile != nil {
		in, out := &in.SecurityProfile, &out.SecurityProfile
		*out = make([]HBaseClusterSecurityProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]HBaseClusterStorageAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountGen2 != nil {
		in, out := &in.StorageAccountGen2, &out.StorageAccountGen2
		*out = make([]HBaseClusterStorageAccountGen2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMinVersion != nil {
		in, out := &in.TLSMinVersion, &out.TLSMinVersion
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterParameters.
func (in *HBaseClusterParameters) DeepCopy() *HBaseClusterParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterRolesInitParameters) DeepCopyInto(out *HBaseClusterRolesInitParameters) {
	*out = *in
	if in.HeadNode != nil {
		in, out := &in.HeadNode, &out.HeadNode
		*out = make([]RolesHeadNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNode != nil {
		in, out := &in.WorkerNode, &out.WorkerNode
		*out = make([]RolesWorkerNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZookeeperNode != nil {
		in, out := &in.ZookeeperNode, &out.ZookeeperNode
		*out = make([]RolesZookeeperNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterRolesInitParameters.
func (in *HBaseClusterRolesInitParameters) DeepCopy() *HBaseClusterRolesInitParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterRolesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterRolesObservation) DeepCopyInto(out *HBaseClusterRolesObservation) {
	*out = *in
	if in.HeadNode != nil {
		in, out := &in.HeadNode, &out.HeadNode
		*out = make([]RolesHeadNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNode != nil {
		in, out := &in.WorkerNode, &out.WorkerNode
		*out = make([]RolesWorkerNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZookeeperNode != nil {
		in, out := &in.ZookeeperNode, &out.ZookeeperNode
		*out = make([]RolesZookeeperNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterRolesObservation.
func (in *HBaseClusterRolesObservation) DeepCopy() *HBaseClusterRolesObservation {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterRolesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterRolesParameters) DeepCopyInto(out *HBaseClusterRolesParameters) {
	*out = *in
	if in.HeadNode != nil {
		in, out := &in.HeadNode, &out.HeadNode
		*out = make([]RolesHeadNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNode != nil {
		in, out := &in.WorkerNode, &out.WorkerNode
		*out = make([]RolesWorkerNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZookeeperNode != nil {
		in, out := &in.ZookeeperNode, &out.ZookeeperNode
		*out = make([]RolesZookeeperNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterRolesParameters.
func (in *HBaseClusterRolesParameters) DeepCopy() *HBaseClusterRolesParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterRolesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterSecurityProfileInitParameters) DeepCopyInto(out *HBaseClusterSecurityProfileInitParameters) {
	*out = *in
	if in.AaddsResourceID != nil {
		in, out := &in.AaddsResourceID, &out.AaddsResourceID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUsersGroupDNS != nil {
		in, out := &in.ClusterUsersGroupDNS, &out.ClusterUsersGroupDNS
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainUsername != nil {
		in, out := &in.DomainUsername, &out.DomainUsername
		*out = new(string)
		**out = **in
	}
	if in.LdapsUrls != nil {
		in, out := &in.LdapsUrls, &out.LdapsUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MsiResourceID != nil {
		in, out := &in.MsiResourceID, &out.MsiResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterSecurityProfileInitParameters.
func (in *HBaseClusterSecurityProfileInitParameters) DeepCopy() *HBaseClusterSecurityProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterSecurityProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterSecurityProfileObservation) DeepCopyInto(out *HBaseClusterSecurityProfileObservation) {
	*out = *in
	if in.AaddsResourceID != nil {
		in, out := &in.AaddsResourceID, &out.AaddsResourceID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUsersGroupDNS != nil {
		in, out := &in.ClusterUsersGroupDNS, &out.ClusterUsersGroupDNS
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainUsername != nil {
		in, out := &in.DomainUsername, &out.DomainUsername
		*out = new(string)
		**out = **in
	}
	if in.LdapsUrls != nil {
		in, out := &in.LdapsUrls, &out.LdapsUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MsiResourceID != nil {
		in, out := &in.MsiResourceID, &out.MsiResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterSecurityProfileObservation.
func (in *HBaseClusterSecurityProfileObservation) DeepCopy() *HBaseClusterSecurityProfileObservation {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterSecurityProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterSecurityProfileParameters) DeepCopyInto(out *HBaseClusterSecurityProfileParameters) {
	*out = *in
	if in.AaddsResourceID != nil {
		in, out := &in.AaddsResourceID, &out.AaddsResourceID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUsersGroupDNS != nil {
		in, out := &in.ClusterUsersGroupDNS, &out.ClusterUsersGroupDNS
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	out.DomainUserPasswordSecretRef = in.DomainUserPasswordSecretRef
	if in.DomainUsername != nil {
		in, out := &in.DomainUsername, &out.DomainUsername
		*out = new(string)
		**out = **in
	}
	if in.LdapsUrls != nil {
		in, out := &in.LdapsUrls, &out.LdapsUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MsiResourceID != nil {
		in, out := &in.MsiResourceID, &out.MsiResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterSecurityProfileParameters.
func (in *HBaseClusterSecurityProfileParameters) DeepCopy() *HBaseClusterSecurityProfileParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterSecurityProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterSpec) DeepCopyInto(out *HBaseClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterSpec.
func (in *HBaseClusterSpec) DeepCopy() *HBaseClusterSpec {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterStatus) DeepCopyInto(out *HBaseClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterStatus.
func (in *HBaseClusterStatus) DeepCopy() *HBaseClusterStatus {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterStorageAccountGen2InitParameters) DeepCopyInto(out *HBaseClusterStorageAccountGen2InitParameters) {
	*out = *in
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.ManagedIdentityResourceID != nil {
		in, out := &in.ManagedIdentityResourceID, &out.ManagedIdentityResourceID
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterStorageAccountGen2InitParameters.
func (in *HBaseClusterStorageAccountGen2InitParameters) DeepCopy() *HBaseClusterStorageAccountGen2InitParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterStorageAccountGen2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterStorageAccountGen2Observation) DeepCopyInto(out *HBaseClusterStorageAccountGen2Observation) {
	*out = *in
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.ManagedIdentityResourceID != nil {
		in, out := &in.ManagedIdentityResourceID, &out.ManagedIdentityResourceID
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterStorageAccountGen2Observation.
func (in *HBaseClusterStorageAccountGen2Observation) DeepCopy() *HBaseClusterStorageAccountGen2Observation {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterStorageAccountGen2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterStorageAccountGen2Parameters) DeepCopyInto(out *HBaseClusterStorageAccountGen2Parameters) {
	*out = *in
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.ManagedIdentityResourceID != nil {
		in, out := &in.ManagedIdentityResourceID, &out.ManagedIdentityResourceID
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterStorageAccountGen2Parameters.
func (in *HBaseClusterStorageAccountGen2Parameters) DeepCopy() *HBaseClusterStorageAccountGen2Parameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterStorageAccountGen2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterStorageAccountInitParameters) DeepCopyInto(out *HBaseClusterStorageAccountInitParameters) {
	*out = *in
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterStorageAccountInitParameters.
func (in *HBaseClusterStorageAccountInitParameters) DeepCopy() *HBaseClusterStorageAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterStorageAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterStorageAccountObservation) DeepCopyInto(out *HBaseClusterStorageAccountObservation) {
	*out = *in
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.StorageContainerID != nil {
		in, out := &in.StorageContainerID, &out.StorageContainerID
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterStorageAccountObservation.
func (in *HBaseClusterStorageAccountObservation) DeepCopy() *HBaseClusterStorageAccountObservation {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterStorageAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HBaseClusterStorageAccountParameters) DeepCopyInto(out *HBaseClusterStorageAccountParameters) {
	*out = *in
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	out.StorageAccountKeySecretRef = in.StorageAccountKeySecretRef
	if in.StorageContainerID != nil {
		in, out := &in.StorageContainerID, &out.StorageContainerID
		*out = new(string)
		**out = **in
	}
	if in.StorageContainerIDRef != nil {
		in, out := &in.StorageContainerIDRef, &out.StorageContainerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageContainerIDSelector != nil {
		in, out := &in.StorageContainerIDSelector, &out.StorageContainerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HBaseClusterStorageAccountParameters.
func (in *HBaseClusterStorageAccountParameters) DeepCopy() *HBaseClusterStorageAccountParameters {
	if in == nil {
		return nil
	}
	out := new(HBaseClusterStorageAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSEndpointsInitParameters) DeepCopyInto(out *HTTPSEndpointsInitParameters) {
	*out = *in
	if in.AccessModes != nil {
		in, out := &in.AccessModes, &out.AccessModes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestinationPort != nil {
		in, out := &in.DestinationPort, &out.DestinationPort
		*out = new(float64)
		**out = **in
	}
	if in.DisableGatewayAuth != nil {
		in, out := &in.DisableGatewayAuth, &out.DisableGatewayAuth
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.SubDomainSuffix != nil {
		in, out := &in.SubDomainSuffix, &out.SubDomainSuffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSEndpointsInitParameters.
func (in *HTTPSEndpointsInitParameters) DeepCopy() *HTTPSEndpointsInitParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPSEndpointsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSEndpointsObservation) DeepCopyInto(out *HTTPSEndpointsObservation) {
	*out = *in
	if in.AccessModes != nil {
		in, out := &in.AccessModes, &out.AccessModes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestinationPort != nil {
		in, out := &in.DestinationPort, &out.DestinationPort
		*out = new(float64)
		**out = **in
	}
	if in.DisableGatewayAuth != nil {
		in, out := &in.DisableGatewayAuth, &out.DisableGatewayAuth
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.SubDomainSuffix != nil {
		in, out := &in.SubDomainSuffix, &out.SubDomainSuffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSEndpointsObservation.
func (in *HTTPSEndpointsObservation) DeepCopy() *HTTPSEndpointsObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPSEndpointsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSEndpointsParameters) DeepCopyInto(out *HTTPSEndpointsParameters) {
	*out = *in
	if in.AccessModes != nil {
		in, out := &in.AccessModes, &out.AccessModes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestinationPort != nil {
		in, out := &in.DestinationPort, &out.DestinationPort
		*out = new(float64)
		**out = **in
	}
	if in.DisableGatewayAuth != nil {
		in, out := &in.DisableGatewayAuth, &out.DisableGatewayAuth
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.SubDomainSuffix != nil {
		in, out := &in.SubDomainSuffix, &out.SubDomainSuffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSEndpointsParameters.
func (in *HTTPSEndpointsParameters) DeepCopy() *HTTPSEndpointsParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPSEndpointsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HadoopCluster) DeepCopyInto(out *HadoopCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HadoopCluster.
func (in *HadoopCluster) DeepCopy() *HadoopCluster {
	if in == nil {
		return nil
	}
	out := new(HadoopCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HadoopCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HadoopClusterInitParameters) DeepCopyInto(out *HadoopClusterInitParameters) {
	*out = *in
	if in.ClusterVersion != nil {
		in, out := &in.ClusterVersion, &out.ClusterVersion
		*out = new(string)
		**out = **in
	}
	if in.ComponentVersion != nil {
		in, out := &in.ComponentVersion, &out.ComponentVersion
		*out = make([]ComponentVersionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ComputeIsolation != nil {
		in, out := &in.ComputeIsolation, &out.ComputeIsolation
		*out = make([]ComputeIsolationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryption != nil {
		in, out := &in.DiskEncryption, &out.DiskEncryption
		*out = make([]DiskEncryptionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Extension != nil {
		in, out := &in.Extension, &out.Extension
		*out = make([]ExtensionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = make([]GatewayInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Metastores != nil {
		in, out := &in.Metastores, &out.Metastores
		*out = make([]MetastoresInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitor != nil {
		in, out := &in.Monitor, &out.Monitor
		*out = make([]MonitorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]RolesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityProfile != nil {
		in, out := &in.SecurityProfile, &out.SecurityProfile
		*out = make([]SecurityProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]StorageAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountGen2 != nil {
		in, out := &in.StorageAccountGen2, &out.StorageAccountGen2
		*out = make([]StorageAccountGen2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMinVersion != nil {
		in, out := &in.TLSMinVersion, &out.TLSMinVersion
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HadoopClusterInitParameters.
func (in *HadoopClusterInitParameters) DeepCopy() *HadoopClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(HadoopClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HadoopClusterList) DeepCopyInto(out *HadoopClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HadoopCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HadoopClusterList.
func (in *HadoopClusterList) DeepCopy() *HadoopClusterList {
	if in == nil {
		return nil
	}
	out := new(HadoopClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HadoopClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HadoopClusterObservation) DeepCopyInto(out *HadoopClusterObservation) {
	*out = *in
	if in.ClusterVersion != nil {
		in, out := &in.ClusterVersion, &out.ClusterVersion
		*out = new(string)
		**out = **in
	}
	if in.ComponentVersion != nil {
		in, out := &in.ComponentVersion, &out.ComponentVersion
		*out = make([]ComponentVersionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ComputeIsolation != nil {
		in, out := &in.ComputeIsolation, &out.ComputeIsolation
		*out = make([]ComputeIsolationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryption != nil {
		in, out := &in.DiskEncryption, &out.DiskEncryption
		*out = make([]DiskEncryptionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Extension != nil {
		in, out := &in.Extension, &out.Extension
		*out = make([]ExtensionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = make([]GatewayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPSEndpoint != nil {
		in, out := &in.HTTPSEndpoint, &out.HTTPSEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Metastores != nil {
		in, out := &in.Metastores, &out.Metastores
		*out = make([]MetastoresObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitor != nil {
		in, out := &in.Monitor, &out.Monitor
		*out = make([]MonitorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]RolesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHEndpoint != nil {
		in, out := &in.SSHEndpoint, &out.SSHEndpoint
		*out = new(string)
		**out = **in
	}
	if in.SecurityProfile != nil {
		in, out := &in.SecurityProfile, &out.SecurityProfile
		*out = make([]SecurityProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]StorageAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountGen2 != nil {
		in, out := &in.StorageAccountGen2, &out.StorageAccountGen2
		*out = make([]StorageAccountGen2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMinVersion != nil {
		in, out := &in.TLSMinVersion, &out.TLSMinVersion
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HadoopClusterObservation.
func (in *HadoopClusterObservation) DeepCopy() *HadoopClusterObservation {
	if in == nil {
		return nil
	}
	out := new(HadoopClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HadoopClusterParameters) DeepCopyInto(out *HadoopClusterParameters) {
	*out = *in
	if in.ClusterVersion != nil {
		in, out := &in.ClusterVersion, &out.ClusterVersion
		*out = new(string)
		**out = **in
	}
	if in.ComponentVersion != nil {
		in, out := &in.ComponentVersion, &out.ComponentVersion
		*out = make([]ComponentVersionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ComputeIsolation != nil {
		in, out := &in.ComputeIsolation, &out.ComputeIsolation
		*out = make([]ComputeIsolationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryption != nil {
		in, out := &in.DiskEncryption, &out.DiskEncryption
		*out = make([]DiskEncryptionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Extension != nil {
		in, out := &in.Extension, &out.Extension
		*out = make([]ExtensionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = make([]GatewayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Metastores != nil {
		in, out := &in.Metastores, &out.Metastores
		*out = make([]MetastoresParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitor != nil {
		in, out := &in.Monitor, &out.Monitor
		*out = make([]MonitorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]RolesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityProfile != nil {
		in, out := &in.SecurityProfile, &out.SecurityProfile
		*out = make([]SecurityProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]StorageAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountGen2 != nil {
		in, out := &in.StorageAccountGen2, &out.StorageAccountGen2
		*out = make([]StorageAccountGen2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMinVersion != nil {
		in, out := &in.TLSMinVersion, &out.TLSMinVersion
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HadoopClusterParameters.
func (in *HadoopClusterParameters) DeepCopy() *HadoopClusterParameters {
	if in == nil {
		return nil
	}
	out := new(HadoopClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HadoopClusterSpec) DeepCopyInto(out *HadoopClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HadoopClusterSpec.
func (in *HadoopClusterSpec) DeepCopy() *HadoopClusterSpec {
	if in == nil {
		return nil
	}
	out := new(HadoopClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HadoopClusterStatus) DeepCopyInto(out *HadoopClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HadoopClusterStatus.
func (in *HadoopClusterStatus) DeepCopy() *HadoopClusterStatus {
	if in == nil {
		return nil
	}
	out := new(HadoopClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadNodeInitParameters) DeepCopyInto(out *HeadNodeInitParameters) {
	*out = *in
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]ScriptActionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadNodeInitParameters.
func (in *HeadNodeInitParameters) DeepCopy() *HeadNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(HeadNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadNodeObservation) DeepCopyInto(out *HeadNodeObservation) {
	*out = *in
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]ScriptActionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadNodeObservation.
func (in *HeadNodeObservation) DeepCopy() *HeadNodeObservation {
	if in == nil {
		return nil
	}
	out := new(HeadNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadNodeParameters) DeepCopyInto(out *HeadNodeParameters) {
	*out = *in
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]ScriptActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadNodeParameters.
func (in *HeadNodeParameters) DeepCopy() *HeadNodeParameters {
	if in == nil {
		return nil
	}
	out := new(HeadNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadNodeScriptActionsInitParameters) DeepCopyInto(out *HeadNodeScriptActionsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadNodeScriptActionsInitParameters.
func (in *HeadNodeScriptActionsInitParameters) DeepCopy() *HeadNodeScriptActionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(HeadNodeScriptActionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadNodeScriptActionsObservation) DeepCopyInto(out *HeadNodeScriptActionsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadNodeScriptActionsObservation.
func (in *HeadNodeScriptActionsObservation) DeepCopy() *HeadNodeScriptActionsObservation {
	if in == nil {
		return nil
	}
	out := new(HeadNodeScriptActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadNodeScriptActionsParameters) DeepCopyInto(out *HeadNodeScriptActionsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadNodeScriptActionsParameters.
func (in *HeadNodeScriptActionsParameters) DeepCopy() *HeadNodeScriptActionsParameters {
	if in == nil {
		return nil
	}
	out := new(HeadNodeScriptActionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HiveInitParameters) DeepCopyInto(out *HiveInitParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HiveInitParameters.
func (in *HiveInitParameters) DeepCopy() *HiveInitParameters {
	if in == nil {
		return nil
	}
	out := new(HiveInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HiveObservation) DeepCopyInto(out *HiveObservation) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HiveObservation.
func (in *HiveObservation) DeepCopy() *HiveObservation {
	if in == nil {
		return nil
	}
	out := new(HiveObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HiveParameters) DeepCopyInto(out *HiveParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HiveParameters.
func (in *HiveParameters) DeepCopy() *HiveParameters {
	if in == nil {
		return nil
	}
	out := new(HiveParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstallScriptActionInitParameters) DeepCopyInto(out *InstallScriptActionInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstallScriptActionInitParameters.
func (in *InstallScriptActionInitParameters) DeepCopy() *InstallScriptActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstallScriptActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstallScriptActionObservation) DeepCopyInto(out *InstallScriptActionObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstallScriptActionObservation.
func (in *InstallScriptActionObservation) DeepCopy() *InstallScriptActionObservation {
	if in == nil {
		return nil
	}
	out := new(InstallScriptActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstallScriptActionParameters) DeepCopyInto(out *InstallScriptActionParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstallScriptActionParameters.
func (in *InstallScriptActionParameters) DeepCopy() *InstallScriptActionParameters {
	if in == nil {
		return nil
	}
	out := new(InstallScriptActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryCluster) DeepCopyInto(out *InteractiveQueryCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryCluster.
func (in *InteractiveQueryCluster) DeepCopy() *InteractiveQueryCluster {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InteractiveQueryCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterComponentVersionInitParameters) DeepCopyInto(out *InteractiveQueryClusterComponentVersionInitParameters) {
	*out = *in
	if in.InteractiveHive != nil {
		in, out := &in.InteractiveHive, &out.InteractiveHive
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterComponentVersionInitParameters.
func (in *InteractiveQueryClusterComponentVersionInitParameters) DeepCopy() *InteractiveQueryClusterComponentVersionInitParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterComponentVersionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterComponentVersionObservation) DeepCopyInto(out *InteractiveQueryClusterComponentVersionObservation) {
	*out = *in
	if in.InteractiveHive != nil {
		in, out := &in.InteractiveHive, &out.InteractiveHive
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterComponentVersionObservation.
func (in *InteractiveQueryClusterComponentVersionObservation) DeepCopy() *InteractiveQueryClusterComponentVersionObservation {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterComponentVersionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterComponentVersionParameters) DeepCopyInto(out *InteractiveQueryClusterComponentVersionParameters) {
	*out = *in
	if in.InteractiveHive != nil {
		in, out := &in.InteractiveHive, &out.InteractiveHive
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterComponentVersionParameters.
func (in *InteractiveQueryClusterComponentVersionParameters) DeepCopy() *InteractiveQueryClusterComponentVersionParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterComponentVersionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterComputeIsolationInitParameters) DeepCopyInto(out *InteractiveQueryClusterComputeIsolationInitParameters) {
	*out = *in
	if in.ComputeIsolationEnabled != nil {
		in, out := &in.ComputeIsolationEnabled, &out.ComputeIsolationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HostSku != nil {
		in, out := &in.HostSku, &out.HostSku
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterComputeIsolationInitParameters.
func (in *InteractiveQueryClusterComputeIsolationInitParameters) DeepCopy() *InteractiveQueryClusterComputeIsolationInitParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterComputeIsolationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterComputeIsolationObservation) DeepCopyInto(out *InteractiveQueryClusterComputeIsolationObservation) {
	*out = *in
	if in.ComputeIsolationEnabled != nil {
		in, out := &in.ComputeIsolationEnabled, &out.ComputeIsolationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HostSku != nil {
		in, out := &in.HostSku, &out.HostSku
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterComputeIsolationObservation.
func (in *InteractiveQueryClusterComputeIsolationObservation) DeepCopy() *InteractiveQueryClusterComputeIsolationObservation {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterComputeIsolationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterComputeIsolationParameters) DeepCopyInto(out *InteractiveQueryClusterComputeIsolationParameters) {
	*out = *in
	if in.ComputeIsolationEnabled != nil {
		in, out := &in.ComputeIsolationEnabled, &out.ComputeIsolationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HostSku != nil {
		in, out := &in.HostSku, &out.HostSku
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterComputeIsolationParameters.
func (in *InteractiveQueryClusterComputeIsolationParameters) DeepCopy() *InteractiveQueryClusterComputeIsolationParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterComputeIsolationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterDiskEncryptionInitParameters) DeepCopyInto(out *InteractiveQueryClusterDiskEncryptionInitParameters) {
	*out = *in
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.EncryptionAtHostEnabled != nil {
		in, out := &in.EncryptionAtHostEnabled, &out.EncryptionAtHostEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultManagedIdentityID != nil {
		in, out := &in.KeyVaultManagedIdentityID, &out.KeyVaultManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterDiskEncryptionInitParameters.
func (in *InteractiveQueryClusterDiskEncryptionInitParameters) DeepCopy() *InteractiveQueryClusterDiskEncryptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterDiskEncryptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterDiskEncryptionObservation) DeepCopyInto(out *InteractiveQueryClusterDiskEncryptionObservation) {
	*out = *in
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.EncryptionAtHostEnabled != nil {
		in, out := &in.EncryptionAtHostEnabled, &out.EncryptionAtHostEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultManagedIdentityID != nil {
		in, out := &in.KeyVaultManagedIdentityID, &out.KeyVaultManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterDiskEncryptionObservation.
func (in *InteractiveQueryClusterDiskEncryptionObservation) DeepCopy() *InteractiveQueryClusterDiskEncryptionObservation {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterDiskEncryptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterDiskEncryptionParameters) DeepCopyInto(out *InteractiveQueryClusterDiskEncryptionParameters) {
	*out = *in
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.EncryptionAtHostEnabled != nil {
		in, out := &in.EncryptionAtHostEnabled, &out.EncryptionAtHostEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultManagedIdentityID != nil {
		in, out := &in.KeyVaultManagedIdentityID, &out.KeyVaultManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterDiskEncryptionParameters.
func (in *InteractiveQueryClusterDiskEncryptionParameters) DeepCopy() *InteractiveQueryClusterDiskEncryptionParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterDiskEncryptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterExtensionInitParameters) DeepCopyInto(out *InteractiveQueryClusterExtensionInitParameters) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterExtensionInitParameters.
func (in *InteractiveQueryClusterExtensionInitParameters) DeepCopy() *InteractiveQueryClusterExtensionInitParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterExtensionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterExtensionObservation) DeepCopyInto(out *InteractiveQueryClusterExtensionObservation) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterExtensionObservation.
func (in *InteractiveQueryClusterExtensionObservation) DeepCopy() *InteractiveQueryClusterExtensionObservation {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterExtensionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterExtensionParameters) DeepCopyInto(out *InteractiveQueryClusterExtensionParameters) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
	out.PrimaryKeySecretRef = in.PrimaryKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterExtensionParameters.
func (in *InteractiveQueryClusterExtensionParameters) DeepCopy() *InteractiveQueryClusterExtensionParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterExtensionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterGatewayInitParameters) DeepCopyInto(out *InteractiveQueryClusterGatewayInitParameters) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterGatewayInitParameters.
func (in *InteractiveQueryClusterGatewayInitParameters) DeepCopy() *InteractiveQueryClusterGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterGatewayObservation) DeepCopyInto(out *InteractiveQueryClusterGatewayObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterGatewayObservation.
func (in *InteractiveQueryClusterGatewayObservation) DeepCopy() *InteractiveQueryClusterGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterGatewayParameters) DeepCopyInto(out *InteractiveQueryClusterGatewayParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterGatewayParameters.
func (in *InteractiveQueryClusterGatewayParameters) DeepCopy() *InteractiveQueryClusterGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterInitParameters) DeepCopyInto(out *InteractiveQueryClusterInitParameters) {
	*out = *in
	if in.ClusterVersion != nil {
		in, out := &in.ClusterVersion, &out.ClusterVersion
		*out = new(string)
		**out = **in
	}
	if in.ComponentVersion != nil {
		in, out := &in.ComponentVersion, &out.ComponentVersion
		*out = make([]InteractiveQueryClusterComponentVersionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ComputeIsolation != nil {
		in, out := &in.ComputeIsolation, &out.ComputeIsolation
		*out = make([]InteractiveQueryClusterComputeIsolationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryption != nil {
		in, out := &in.DiskEncryption, &out.DiskEncryption
		*out = make([]InteractiveQueryClusterDiskEncryptionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionInTransitEnabled != nil {
		in, out := &in.EncryptionInTransitEnabled, &out.EncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Extension != nil {
		in, out := &in.Extension, &out.Extension
		*out = make([]InteractiveQueryClusterExtensionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = make([]InteractiveQueryClusterGatewayInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Metastores != nil {
		in, out := &in.Metastores, &out.Metastores
		*out = make([]InteractiveQueryClusterMetastoresInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitor != nil {
		in, out := &in.Monitor, &out.Monitor
		*out = make([]InteractiveQueryClusterMonitorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]InteractiveQueryClusterNetworkInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]InteractiveQueryClusterRolesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityProfile != nil {
		in, out := &in.SecurityProfile, &out.SecurityProfile
		*out = make([]InteractiveQueryClusterSecurityProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]InteractiveQueryClusterStorageAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountGen2 != nil {
		in, out := &in.StorageAccountGen2, &out.StorageAccountGen2
		*out = make([]InteractiveQueryClusterStorageAccountGen2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMinVersion != nil {
		in, out := &in.TLSMinVersion, &out.TLSMinVersion
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterInitParameters.
func (in *InteractiveQueryClusterInitParameters) DeepCopy() *InteractiveQueryClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterList) DeepCopyInto(out *InteractiveQueryClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InteractiveQueryCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterList.
func (in *InteractiveQueryClusterList) DeepCopy() *InteractiveQueryClusterList {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InteractiveQueryClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterMetastoresAmbariInitParameters) DeepCopyInto(out *InteractiveQueryClusterMetastoresAmbariInitParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterMetastoresAmbariInitParameters.
func (in *InteractiveQueryClusterMetastoresAmbariInitParameters) DeepCopy() *InteractiveQueryClusterMetastoresAmbariInitParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterMetastoresAmbariInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterMetastoresAmbariObservation) DeepCopyInto(out *InteractiveQueryClusterMetastoresAmbariObservation) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterMetastoresAmbariObservation.
func (in *InteractiveQueryClusterMetastoresAmbariObservation) DeepCopy() *InteractiveQueryClusterMetastoresAmbariObservation {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterMetastoresAmbariObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterMetastoresAmbariParameters) DeepCopyInto(out *InteractiveQueryClusterMetastoresAmbariParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterMetastoresAmbariParameters.
func (in *InteractiveQueryClusterMetastoresAmbariParameters) DeepCopy() *InteractiveQueryClusterMetastoresAmbariParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterMetastoresAmbariParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterMetastoresHiveInitParameters) DeepCopyInto(out *InteractiveQueryClusterMetastoresHiveInitParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterMetastoresHiveInitParameters.
func (in *InteractiveQueryClusterMetastoresHiveInitParameters) DeepCopy() *InteractiveQueryClusterMetastoresHiveInitParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterMetastoresHiveInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterMetastoresHiveObservation) DeepCopyInto(out *InteractiveQueryClusterMetastoresHiveObservation) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterMetastoresHiveObservation.
func (in *InteractiveQueryClusterMetastoresHiveObservation) DeepCopy() *InteractiveQueryClusterMetastoresHiveObservation {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterMetastoresHiveObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterMetastoresHiveParameters) DeepCopyInto(out *InteractiveQueryClusterMetastoresHiveParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterMetastoresHiveParameters.
func (in *InteractiveQueryClusterMetastoresHiveParameters) DeepCopy() *InteractiveQueryClusterMetastoresHiveParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterMetastoresHiveParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterMetastoresInitParameters) DeepCopyInto(out *InteractiveQueryClusterMetastoresInitParameters) {
	*out = *in
	if in.Ambari != nil {
		in, out := &in.Ambari, &out.Ambari
		*out = make([]InteractiveQueryClusterMetastoresAmbariInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hive != nil {
		in, out := &in.Hive, &out.Hive
		*out = make([]InteractiveQueryClusterMetastoresHiveInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Oozie != nil {
		in, out := &in.Oozie, &out.Oozie
		*out = make([]InteractiveQueryClusterMetastoresOozieInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterMetastoresInitParameters.
func (in *InteractiveQueryClusterMetastoresInitParameters) DeepCopy() *InteractiveQueryClusterMetastoresInitParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterMetastoresInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterMetastoresObservation) DeepCopyInto(out *InteractiveQueryClusterMetastoresObservation) {
	*out = *in
	if in.Ambari != nil {
		in, out := &in.Ambari, &out.Ambari
		*out = make([]InteractiveQueryClusterMetastoresAmbariObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hive != nil {
		in, out := &in.Hive, &out.Hive
		*out = make([]InteractiveQueryClusterMetastoresHiveObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Oozie != nil {
		in, out := &in.Oozie, &out.Oozie
		*out = make([]InteractiveQueryClusterMetastoresOozieObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterMetastoresObservation.
func (in *InteractiveQueryClusterMetastoresObservation) DeepCopy() *InteractiveQueryClusterMetastoresObservation {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterMetastoresObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterMetastoresOozieInitParameters) DeepCopyInto(out *InteractiveQueryClusterMetastoresOozieInitParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterMetastoresOozieInitParameters.
func (in *InteractiveQueryClusterMetastoresOozieInitParameters) DeepCopy() *InteractiveQueryClusterMetastoresOozieInitParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterMetastoresOozieInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterMetastoresOozieObservation) DeepCopyInto(out *InteractiveQueryClusterMetastoresOozieObservation) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterMetastoresOozieObservation.
func (in *InteractiveQueryClusterMetastoresOozieObservation) DeepCopy() *InteractiveQueryClusterMetastoresOozieObservation {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterMetastoresOozieObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterMetastoresOozieParameters) DeepCopyInto(out *InteractiveQueryClusterMetastoresOozieParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterMetastoresOozieParameters.
func (in *InteractiveQueryClusterMetastoresOozieParameters) DeepCopy() *InteractiveQueryClusterMetastoresOozieParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterMetastoresOozieParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterMetastoresParameters) DeepCopyInto(out *InteractiveQueryClusterMetastoresParameters) {
	*out = *in
	if in.Ambari != nil {
		in, out := &in.Ambari, &out.Ambari
		*out = make([]InteractiveQueryClusterMetastoresAmbariParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hive != nil {
		in, out := &in.Hive, &out.Hive
		*out = make([]InteractiveQueryClusterMetastoresHiveParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Oozie != nil {
		in, out := &in.Oozie, &out.Oozie
		*out = make([]InteractiveQueryClusterMetastoresOozieParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterMetastoresParameters.
func (in *InteractiveQueryClusterMetastoresParameters) DeepCopy() *InteractiveQueryClusterMetastoresParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterMetastoresParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterMonitorInitParameters) DeepCopyInto(out *InteractiveQueryClusterMonitorInitParameters) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterMonitorInitParameters.
func (in *InteractiveQueryClusterMonitorInitParameters) DeepCopy() *InteractiveQueryClusterMonitorInitParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterMonitorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterMonitorObservation) DeepCopyInto(out *InteractiveQueryClusterMonitorObservation) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterMonitorObservation.
func (in *InteractiveQueryClusterMonitorObservation) DeepCopy() *InteractiveQueryClusterMonitorObservation {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterMonitorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterMonitorParameters) DeepCopyInto(out *InteractiveQueryClusterMonitorParameters) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
	out.PrimaryKeySecretRef = in.PrimaryKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterMonitorParameters.
func (in *InteractiveQueryClusterMonitorParameters) DeepCopy() *InteractiveQueryClusterMonitorParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterMonitorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterNetworkInitParameters) DeepCopyInto(out *InteractiveQueryClusterNetworkInitParameters) {
	*out = *in
	if in.ConnectionDirection != nil {
		in, out := &in.ConnectionDirection, &out.ConnectionDirection
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkEnabled != nil {
		in, out := &in.PrivateLinkEnabled, &out.PrivateLinkEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterNetworkInitParameters.
func (in *InteractiveQueryClusterNetworkInitParameters) DeepCopy() *InteractiveQueryClusterNetworkInitParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterNetworkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterNetworkObservation) DeepCopyInto(out *InteractiveQueryClusterNetworkObservation) {
	*out = *in
	if in.ConnectionDirection != nil {
		in, out := &in.ConnectionDirection, &out.ConnectionDirection
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkEnabled != nil {
		in, out := &in.PrivateLinkEnabled, &out.PrivateLinkEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterNetworkObservation.
func (in *InteractiveQueryClusterNetworkObservation) DeepCopy() *InteractiveQueryClusterNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterNetworkParameters) DeepCopyInto(out *InteractiveQueryClusterNetworkParameters) {
	*out = *in
	if in.ConnectionDirection != nil {
		in, out := &in.ConnectionDirection, &out.ConnectionDirection
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkEnabled != nil {
		in, out := &in.PrivateLinkEnabled, &out.PrivateLinkEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterNetworkParameters.
func (in *InteractiveQueryClusterNetworkParameters) DeepCopy() *InteractiveQueryClusterNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterObservation) DeepCopyInto(out *InteractiveQueryClusterObservation) {
	*out = *in
	if in.ClusterVersion != nil {
		in, out := &in.ClusterVersion, &out.ClusterVersion
		*out = new(string)
		**out = **in
	}
	if in.ComponentVersion != nil {
		in, out := &in.ComponentVersion, &out.ComponentVersion
		*out = make([]InteractiveQueryClusterComponentVersionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ComputeIsolation != nil {
		in, out := &in.ComputeIsolation, &out.ComputeIsolation
		*out = make([]InteractiveQueryClusterComputeIsolationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryption != nil {
		in, out := &in.DiskEncryption, &out.DiskEncryption
		*out = make([]InteractiveQueryClusterDiskEncryptionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionInTransitEnabled != nil {
		in, out := &in.EncryptionInTransitEnabled, &out.EncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Extension != nil {
		in, out := &in.Extension, &out.Extension
		*out = make([]InteractiveQueryClusterExtensionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = make([]InteractiveQueryClusterGatewayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPSEndpoint != nil {
		in, out := &in.HTTPSEndpoint, &out.HTTPSEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Metastores != nil {
		in, out := &in.Metastores, &out.Metastores
		*out = make([]InteractiveQueryClusterMetastoresObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitor != nil {
		in, out := &in.Monitor, &out.Monitor
		*out = make([]InteractiveQueryClusterMonitorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]InteractiveQueryClusterNetworkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]InteractiveQueryClusterRolesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHEndpoint != nil {
		in, out := &in.SSHEndpoint, &out.SSHEndpoint
		*out = new(string)
		**out = **in
	}
	if in.SecurityProfile != nil {
		in, out := &in.SecurityProfile, &out.SecurityProfile
		*out = make([]InteractiveQueryClusterSecurityProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]InteractiveQueryClusterStorageAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountGen2 != nil {
		in, out := &in.StorageAccountGen2, &out.StorageAccountGen2
		*out = make([]InteractiveQueryClusterStorageAccountGen2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMinVersion != nil {
		in, out := &in.TLSMinVersion, &out.TLSMinVersion
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterObservation.
func (in *InteractiveQueryClusterObservation) DeepCopy() *InteractiveQueryClusterObservation {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterParameters) DeepCopyInto(out *InteractiveQueryClusterParameters) {
	*out = *in
	if in.ClusterVersion != nil {
		in, out := &in.ClusterVersion, &out.ClusterVersion
		*out = new(string)
		**out = **in
	}
	if in.ComponentVersion != nil {
		in, out := &in.ComponentVersion, &out.ComponentVersion
		*out = make([]InteractiveQueryClusterComponentVersionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ComputeIsolation != nil {
		in, out := &in.ComputeIsolation, &out.ComputeIsolation
		*out = make([]InteractiveQueryClusterComputeIsolationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryption != nil {
		in, out := &in.DiskEncryption, &out.DiskEncryption
		*out = make([]InteractiveQueryClusterDiskEncryptionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionInTransitEnabled != nil {
		in, out := &in.EncryptionInTransitEnabled, &out.EncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Extension != nil {
		in, out := &in.Extension, &out.Extension
		*out = make([]InteractiveQueryClusterExtensionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = make([]InteractiveQueryClusterGatewayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Metastores != nil {
		in, out := &in.Metastores, &out.Metastores
		*out = make([]InteractiveQueryClusterMetastoresParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitor != nil {
		in, out := &in.Monitor, &out.Monitor
		*out = make([]InteractiveQueryClusterMonitorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]InteractiveQueryClusterNetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]InteractiveQueryClusterRolesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityProfile != nil {
		in, out := &in.SecurityProfile, &out.SecurityProfile
		*out = make([]InteractiveQueryClusterSecurityProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]InteractiveQueryClusterStorageAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountGen2 != nil {
		in, out := &in.StorageAccountGen2, &out.StorageAccountGen2
		*out = make([]InteractiveQueryClusterStorageAccountGen2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMinVersion != nil {
		in, out := &in.TLSMinVersion, &out.TLSMinVersion
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterParameters.
func (in *InteractiveQueryClusterParameters) DeepCopy() *InteractiveQueryClusterParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterRolesHeadNodeInitParameters) DeepCopyInto(out *InteractiveQueryClusterRolesHeadNodeInitParameters) {
	*out = *in
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]RolesHeadNodeScriptActionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterRolesHeadNodeInitParameters.
func (in *InteractiveQueryClusterRolesHeadNodeInitParameters) DeepCopy() *InteractiveQueryClusterRolesHeadNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterRolesHeadNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterRolesHeadNodeObservation) DeepCopyInto(out *InteractiveQueryClusterRolesHeadNodeObservation) {
	*out = *in
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]RolesHeadNodeScriptActionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterRolesHeadNodeObservation.
func (in *InteractiveQueryClusterRolesHeadNodeObservation) DeepCopy() *InteractiveQueryClusterRolesHeadNodeObservation {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterRolesHeadNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterRolesHeadNodeParameters) DeepCopyInto(out *InteractiveQueryClusterRolesHeadNodeParameters) {
	*out = *in
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]RolesHeadNodeScriptActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterRolesHeadNodeParameters.
func (in *InteractiveQueryClusterRolesHeadNodeParameters) DeepCopy() *InteractiveQueryClusterRolesHeadNodeParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterRolesHeadNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterRolesInitParameters) DeepCopyInto(out *InteractiveQueryClusterRolesInitParameters) {
	*out = *in
	if in.HeadNode != nil {
		in, out := &in.HeadNode, &out.HeadNode
		*out = make([]InteractiveQueryClusterRolesHeadNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNode != nil {
		in, out := &in.WorkerNode, &out.WorkerNode
		*out = make([]InteractiveQueryClusterRolesWorkerNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZookeeperNode != nil {
		in, out := &in.ZookeeperNode, &out.ZookeeperNode
		*out = make([]InteractiveQueryClusterRolesZookeeperNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterRolesInitParameters.
func (in *InteractiveQueryClusterRolesInitParameters) DeepCopy() *InteractiveQueryClusterRolesInitParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterRolesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterRolesObservation) DeepCopyInto(out *InteractiveQueryClusterRolesObservation) {
	*out = *in
	if in.HeadNode != nil {
		in, out := &in.HeadNode, &out.HeadNode
		*out = make([]InteractiveQueryClusterRolesHeadNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNode != nil {
		in, out := &in.WorkerNode, &out.WorkerNode
		*out = make([]InteractiveQueryClusterRolesWorkerNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZookeeperNode != nil {
		in, out := &in.ZookeeperNode, &out.ZookeeperNode
		*out = make([]InteractiveQueryClusterRolesZookeeperNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterRolesObservation.
func (in *InteractiveQueryClusterRolesObservation) DeepCopy() *InteractiveQueryClusterRolesObservation {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterRolesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterRolesParameters) DeepCopyInto(out *InteractiveQueryClusterRolesParameters) {
	*out = *in
	if in.HeadNode != nil {
		in, out := &in.HeadNode, &out.HeadNode
		*out = make([]InteractiveQueryClusterRolesHeadNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNode != nil {
		in, out := &in.WorkerNode, &out.WorkerNode
		*out = make([]InteractiveQueryClusterRolesWorkerNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZookeeperNode != nil {
		in, out := &in.ZookeeperNode, &out.ZookeeperNode
		*out = make([]InteractiveQueryClusterRolesZookeeperNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterRolesParameters.
func (in *InteractiveQueryClusterRolesParameters) DeepCopy() *InteractiveQueryClusterRolesParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterRolesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterRolesWorkerNodeInitParameters) DeepCopyInto(out *InteractiveQueryClusterRolesWorkerNodeInitParameters) {
	*out = *in
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]RolesWorkerNodeAutoscaleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]InteractiveQueryClusterRolesWorkerNodeScriptActionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterRolesWorkerNodeInitParameters.
func (in *InteractiveQueryClusterRolesWorkerNodeInitParameters) DeepCopy() *InteractiveQueryClusterRolesWorkerNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterRolesWorkerNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterRolesWorkerNodeObservation) DeepCopyInto(out *InteractiveQueryClusterRolesWorkerNodeObservation) {
	*out = *in
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]RolesWorkerNodeAutoscaleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]InteractiveQueryClusterRolesWorkerNodeScriptActionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterRolesWorkerNodeObservation.
func (in *InteractiveQueryClusterRolesWorkerNodeObservation) DeepCopy() *InteractiveQueryClusterRolesWorkerNodeObservation {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterRolesWorkerNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterRolesWorkerNodeParameters) DeepCopyInto(out *InteractiveQueryClusterRolesWorkerNodeParameters) {
	*out = *in
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]RolesWorkerNodeAutoscaleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]InteractiveQueryClusterRolesWorkerNodeScriptActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterRolesWorkerNodeParameters.
func (in *InteractiveQueryClusterRolesWorkerNodeParameters) DeepCopy() *InteractiveQueryClusterRolesWorkerNodeParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterRolesWorkerNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterRolesWorkerNodeScriptActionsInitParameters) DeepCopyInto(out *InteractiveQueryClusterRolesWorkerNodeScriptActionsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterRolesWorkerNodeScriptActionsInitParameters.
func (in *InteractiveQueryClusterRolesWorkerNodeScriptActionsInitParameters) DeepCopy() *InteractiveQueryClusterRolesWorkerNodeScriptActionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterRolesWorkerNodeScriptActionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterRolesWorkerNodeScriptActionsObservation) DeepCopyInto(out *InteractiveQueryClusterRolesWorkerNodeScriptActionsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterRolesWorkerNodeScriptActionsObservation.
func (in *InteractiveQueryClusterRolesWorkerNodeScriptActionsObservation) DeepCopy() *InteractiveQueryClusterRolesWorkerNodeScriptActionsObservation {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterRolesWorkerNodeScriptActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterRolesWorkerNodeScriptActionsParameters) DeepCopyInto(out *InteractiveQueryClusterRolesWorkerNodeScriptActionsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterRolesWorkerNodeScriptActionsParameters.
func (in *InteractiveQueryClusterRolesWorkerNodeScriptActionsParameters) DeepCopy() *InteractiveQueryClusterRolesWorkerNodeScriptActionsParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterRolesWorkerNodeScriptActionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterRolesZookeeperNodeInitParameters) DeepCopyInto(out *InteractiveQueryClusterRolesZookeeperNodeInitParameters) {
	*out = *in
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]InteractiveQueryClusterRolesZookeeperNodeScriptActionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterRolesZookeeperNodeInitParameters.
func (in *InteractiveQueryClusterRolesZookeeperNodeInitParameters) DeepCopy() *InteractiveQueryClusterRolesZookeeperNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterRolesZookeeperNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterRolesZookeeperNodeObservation) DeepCopyInto(out *InteractiveQueryClusterRolesZookeeperNodeObservation) {
	*out = *in
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]InteractiveQueryClusterRolesZookeeperNodeScriptActionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterRolesZookeeperNodeObservation.
func (in *InteractiveQueryClusterRolesZookeeperNodeObservation) DeepCopy() *InteractiveQueryClusterRolesZookeeperNodeObservation {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterRolesZookeeperNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterRolesZookeeperNodeParameters) DeepCopyInto(out *InteractiveQueryClusterRolesZookeeperNodeParameters) {
	*out = *in
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]InteractiveQueryClusterRolesZookeeperNodeScriptActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterRolesZookeeperNodeParameters.
func (in *InteractiveQueryClusterRolesZookeeperNodeParameters) DeepCopy() *InteractiveQueryClusterRolesZookeeperNodeParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterRolesZookeeperNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterRolesZookeeperNodeScriptActionsInitParameters) DeepCopyInto(out *InteractiveQueryClusterRolesZookeeperNodeScriptActionsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterRolesZookeeperNodeScriptActionsInitParameters.
func (in *InteractiveQueryClusterRolesZookeeperNodeScriptActionsInitParameters) DeepCopy() *InteractiveQueryClusterRolesZookeeperNodeScriptActionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterRolesZookeeperNodeScriptActionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterRolesZookeeperNodeScriptActionsObservation) DeepCopyInto(out *InteractiveQueryClusterRolesZookeeperNodeScriptActionsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterRolesZookeeperNodeScriptActionsObservation.
func (in *InteractiveQueryClusterRolesZookeeperNodeScriptActionsObservation) DeepCopy() *InteractiveQueryClusterRolesZookeeperNodeScriptActionsObservation {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterRolesZookeeperNodeScriptActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterRolesZookeeperNodeScriptActionsParameters) DeepCopyInto(out *InteractiveQueryClusterRolesZookeeperNodeScriptActionsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterRolesZookeeperNodeScriptActionsParameters.
func (in *InteractiveQueryClusterRolesZookeeperNodeScriptActionsParameters) DeepCopy() *InteractiveQueryClusterRolesZookeeperNodeScriptActionsParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterRolesZookeeperNodeScriptActionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterSecurityProfileInitParameters) DeepCopyInto(out *InteractiveQueryClusterSecurityProfileInitParameters) {
	*out = *in
	if in.AaddsResourceID != nil {
		in, out := &in.AaddsResourceID, &out.AaddsResourceID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUsersGroupDNS != nil {
		in, out := &in.ClusterUsersGroupDNS, &out.ClusterUsersGroupDNS
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainUsername != nil {
		in, out := &in.DomainUsername, &out.DomainUsername
		*out = new(string)
		**out = **in
	}
	if in.LdapsUrls != nil {
		in, out := &in.LdapsUrls, &out.LdapsUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MsiResourceID != nil {
		in, out := &in.MsiResourceID, &out.MsiResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterSecurityProfileInitParameters.
func (in *InteractiveQueryClusterSecurityProfileInitParameters) DeepCopy() *InteractiveQueryClusterSecurityProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterSecurityProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterSecurityProfileObservation) DeepCopyInto(out *InteractiveQueryClusterSecurityProfileObservation) {
	*out = *in
	if in.AaddsResourceID != nil {
		in, out := &in.AaddsResourceID, &out.AaddsResourceID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUsersGroupDNS != nil {
		in, out := &in.ClusterUsersGroupDNS, &out.ClusterUsersGroupDNS
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainUsername != nil {
		in, out := &in.DomainUsername, &out.DomainUsername
		*out = new(string)
		**out = **in
	}
	if in.LdapsUrls != nil {
		in, out := &in.LdapsUrls, &out.LdapsUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MsiResourceID != nil {
		in, out := &in.MsiResourceID, &out.MsiResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterSecurityProfileObservation.
func (in *InteractiveQueryClusterSecurityProfileObservation) DeepCopy() *InteractiveQueryClusterSecurityProfileObservation {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterSecurityProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterSecurityProfileParameters) DeepCopyInto(out *InteractiveQueryClusterSecurityProfileParameters) {
	*out = *in
	if in.AaddsResourceID != nil {
		in, out := &in.AaddsResourceID, &out.AaddsResourceID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUsersGroupDNS != nil {
		in, out := &in.ClusterUsersGroupDNS, &out.ClusterUsersGroupDNS
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	out.DomainUserPasswordSecretRef = in.DomainUserPasswordSecretRef
	if in.DomainUsername != nil {
		in, out := &in.DomainUsername, &out.DomainUsername
		*out = new(string)
		**out = **in
	}
	if in.LdapsUrls != nil {
		in, out := &in.LdapsUrls, &out.LdapsUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MsiResourceID != nil {
		in, out := &in.MsiResourceID, &out.MsiResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterSecurityProfileParameters.
func (in *InteractiveQueryClusterSecurityProfileParameters) DeepCopy() *InteractiveQueryClusterSecurityProfileParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterSecurityProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterSpec) DeepCopyInto(out *InteractiveQueryClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterSpec.
func (in *InteractiveQueryClusterSpec) DeepCopy() *InteractiveQueryClusterSpec {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterStatus) DeepCopyInto(out *InteractiveQueryClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterStatus.
func (in *InteractiveQueryClusterStatus) DeepCopy() *InteractiveQueryClusterStatus {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterStorageAccountGen2InitParameters) DeepCopyInto(out *InteractiveQueryClusterStorageAccountGen2InitParameters) {
	*out = *in
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.ManagedIdentityResourceID != nil {
		in, out := &in.ManagedIdentityResourceID, &out.ManagedIdentityResourceID
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterStorageAccountGen2InitParameters.
func (in *InteractiveQueryClusterStorageAccountGen2InitParameters) DeepCopy() *InteractiveQueryClusterStorageAccountGen2InitParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterStorageAccountGen2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterStorageAccountGen2Observation) DeepCopyInto(out *InteractiveQueryClusterStorageAccountGen2Observation) {
	*out = *in
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.ManagedIdentityResourceID != nil {
		in, out := &in.ManagedIdentityResourceID, &out.ManagedIdentityResourceID
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterStorageAccountGen2Observation.
func (in *InteractiveQueryClusterStorageAccountGen2Observation) DeepCopy() *InteractiveQueryClusterStorageAccountGen2Observation {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterStorageAccountGen2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterStorageAccountGen2Parameters) DeepCopyInto(out *InteractiveQueryClusterStorageAccountGen2Parameters) {
	*out = *in
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.ManagedIdentityResourceID != nil {
		in, out := &in.ManagedIdentityResourceID, &out.ManagedIdentityResourceID
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterStorageAccountGen2Parameters.
func (in *InteractiveQueryClusterStorageAccountGen2Parameters) DeepCopy() *InteractiveQueryClusterStorageAccountGen2Parameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterStorageAccountGen2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterStorageAccountInitParameters) DeepCopyInto(out *InteractiveQueryClusterStorageAccountInitParameters) {
	*out = *in
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterStorageAccountInitParameters.
func (in *InteractiveQueryClusterStorageAccountInitParameters) DeepCopy() *InteractiveQueryClusterStorageAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterStorageAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterStorageAccountObservation) DeepCopyInto(out *InteractiveQueryClusterStorageAccountObservation) {
	*out = *in
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.StorageContainerID != nil {
		in, out := &in.StorageContainerID, &out.StorageContainerID
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterStorageAccountObservation.
func (in *InteractiveQueryClusterStorageAccountObservation) DeepCopy() *InteractiveQueryClusterStorageAccountObservation {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterStorageAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InteractiveQueryClusterStorageAccountParameters) DeepCopyInto(out *InteractiveQueryClusterStorageAccountParameters) {
	*out = *in
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	out.StorageAccountKeySecretRef = in.StorageAccountKeySecretRef
	if in.StorageContainerID != nil {
		in, out := &in.StorageContainerID, &out.StorageContainerID
		*out = new(string)
		**out = **in
	}
	if in.StorageContainerIDRef != nil {
		in, out := &in.StorageContainerIDRef, &out.StorageContainerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageContainerIDSelector != nil {
		in, out := &in.StorageContainerIDSelector, &out.StorageContainerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InteractiveQueryClusterStorageAccountParameters.
func (in *InteractiveQueryClusterStorageAccountParameters) DeepCopy() *InteractiveQueryClusterStorageAccountParameters {
	if in == nil {
		return nil
	}
	out := new(InteractiveQueryClusterStorageAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaCluster) DeepCopyInto(out *KafkaCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaCluster.
func (in *KafkaCluster) DeepCopy() *KafkaCluster {
	if in == nil {
		return nil
	}
	out := new(KafkaCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KafkaCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterComponentVersionInitParameters) DeepCopyInto(out *KafkaClusterComponentVersionInitParameters) {
	*out = *in
	if in.Kafka != nil {
		in, out := &in.Kafka, &out.Kafka
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterComponentVersionInitParameters.
func (in *KafkaClusterComponentVersionInitParameters) DeepCopy() *KafkaClusterComponentVersionInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterComponentVersionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterComponentVersionObservation) DeepCopyInto(out *KafkaClusterComponentVersionObservation) {
	*out = *in
	if in.Kafka != nil {
		in, out := &in.Kafka, &out.Kafka
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterComponentVersionObservation.
func (in *KafkaClusterComponentVersionObservation) DeepCopy() *KafkaClusterComponentVersionObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterComponentVersionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterComponentVersionParameters) DeepCopyInto(out *KafkaClusterComponentVersionParameters) {
	*out = *in
	if in.Kafka != nil {
		in, out := &in.Kafka, &out.Kafka
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterComponentVersionParameters.
func (in *KafkaClusterComponentVersionParameters) DeepCopy() *KafkaClusterComponentVersionParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterComponentVersionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterComputeIsolationInitParameters) DeepCopyInto(out *KafkaClusterComputeIsolationInitParameters) {
	*out = *in
	if in.ComputeIsolationEnabled != nil {
		in, out := &in.ComputeIsolationEnabled, &out.ComputeIsolationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HostSku != nil {
		in, out := &in.HostSku, &out.HostSku
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterComputeIsolationInitParameters.
func (in *KafkaClusterComputeIsolationInitParameters) DeepCopy() *KafkaClusterComputeIsolationInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterComputeIsolationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterComputeIsolationObservation) DeepCopyInto(out *KafkaClusterComputeIsolationObservation) {
	*out = *in
	if in.ComputeIsolationEnabled != nil {
		in, out := &in.ComputeIsolationEnabled, &out.ComputeIsolationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HostSku != nil {
		in, out := &in.HostSku, &out.HostSku
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterComputeIsolationObservation.
func (in *KafkaClusterComputeIsolationObservation) DeepCopy() *KafkaClusterComputeIsolationObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterComputeIsolationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterComputeIsolationParameters) DeepCopyInto(out *KafkaClusterComputeIsolationParameters) {
	*out = *in
	if in.ComputeIsolationEnabled != nil {
		in, out := &in.ComputeIsolationEnabled, &out.ComputeIsolationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HostSku != nil {
		in, out := &in.HostSku, &out.HostSku
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterComputeIsolationParameters.
func (in *KafkaClusterComputeIsolationParameters) DeepCopy() *KafkaClusterComputeIsolationParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterComputeIsolationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterDiskEncryptionInitParameters) DeepCopyInto(out *KafkaClusterDiskEncryptionInitParameters) {
	*out = *in
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.EncryptionAtHostEnabled != nil {
		in, out := &in.EncryptionAtHostEnabled, &out.EncryptionAtHostEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultManagedIdentityID != nil {
		in, out := &in.KeyVaultManagedIdentityID, &out.KeyVaultManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterDiskEncryptionInitParameters.
func (in *KafkaClusterDiskEncryptionInitParameters) DeepCopy() *KafkaClusterDiskEncryptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterDiskEncryptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterDiskEncryptionObservation) DeepCopyInto(out *KafkaClusterDiskEncryptionObservation) {
	*out = *in
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.EncryptionAtHostEnabled != nil {
		in, out := &in.EncryptionAtHostEnabled, &out.EncryptionAtHostEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultManagedIdentityID != nil {
		in, out := &in.KeyVaultManagedIdentityID, &out.KeyVaultManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterDiskEncryptionObservation.
func (in *KafkaClusterDiskEncryptionObservation) DeepCopy() *KafkaClusterDiskEncryptionObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterDiskEncryptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterDiskEncryptionParameters) DeepCopyInto(out *KafkaClusterDiskEncryptionParameters) {
	*out = *in
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.EncryptionAtHostEnabled != nil {
		in, out := &in.EncryptionAtHostEnabled, &out.EncryptionAtHostEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultManagedIdentityID != nil {
		in, out := &in.KeyVaultManagedIdentityID, &out.KeyVaultManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterDiskEncryptionParameters.
func (in *KafkaClusterDiskEncryptionParameters) DeepCopy() *KafkaClusterDiskEncryptionParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterDiskEncryptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterExtensionInitParameters) DeepCopyInto(out *KafkaClusterExtensionInitParameters) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterExtensionInitParameters.
func (in *KafkaClusterExtensionInitParameters) DeepCopy() *KafkaClusterExtensionInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterExtensionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterExtensionObservation) DeepCopyInto(out *KafkaClusterExtensionObservation) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterExtensionObservation.
func (in *KafkaClusterExtensionObservation) DeepCopy() *KafkaClusterExtensionObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterExtensionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterExtensionParameters) DeepCopyInto(out *KafkaClusterExtensionParameters) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
	out.PrimaryKeySecretRef = in.PrimaryKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterExtensionParameters.
func (in *KafkaClusterExtensionParameters) DeepCopy() *KafkaClusterExtensionParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterExtensionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterGatewayInitParameters) DeepCopyInto(out *KafkaClusterGatewayInitParameters) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterGatewayInitParameters.
func (in *KafkaClusterGatewayInitParameters) DeepCopy() *KafkaClusterGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterGatewayObservation) DeepCopyInto(out *KafkaClusterGatewayObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterGatewayObservation.
func (in *KafkaClusterGatewayObservation) DeepCopy() *KafkaClusterGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterGatewayParameters) DeepCopyInto(out *KafkaClusterGatewayParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterGatewayParameters.
func (in *KafkaClusterGatewayParameters) DeepCopy() *KafkaClusterGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterInitParameters) DeepCopyInto(out *KafkaClusterInitParameters) {
	*out = *in
	if in.ClusterVersion != nil {
		in, out := &in.ClusterVersion, &out.ClusterVersion
		*out = new(string)
		**out = **in
	}
	if in.ComponentVersion != nil {
		in, out := &in.ComponentVersion, &out.ComponentVersion
		*out = make([]KafkaClusterComponentVersionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ComputeIsolation != nil {
		in, out := &in.ComputeIsolation, &out.ComputeIsolation
		*out = make([]KafkaClusterComputeIsolationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryption != nil {
		in, out := &in.DiskEncryption, &out.DiskEncryption
		*out = make([]KafkaClusterDiskEncryptionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionInTransitEnabled != nil {
		in, out := &in.EncryptionInTransitEnabled, &out.EncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Extension != nil {
		in, out := &in.Extension, &out.Extension
		*out = make([]KafkaClusterExtensionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = make([]KafkaClusterGatewayInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Metastores != nil {
		in, out := &in.Metastores, &out.Metastores
		*out = make([]KafkaClusterMetastoresInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitor != nil {
		in, out := &in.Monitor, &out.Monitor
		*out = make([]KafkaClusterMonitorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]KafkaClusterNetworkInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestProxy != nil {
		in, out := &in.RestProxy, &out.RestProxy
		*out = make([]RestProxyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]KafkaClusterRolesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityProfile != nil {
		in, out := &in.SecurityProfile, &out.SecurityProfile
		*out = make([]KafkaClusterSecurityProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]KafkaClusterStorageAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountGen2 != nil {
		in, out := &in.StorageAccountGen2, &out.StorageAccountGen2
		*out = make([]KafkaClusterStorageAccountGen2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMinVersion != nil {
		in, out := &in.TLSMinVersion, &out.TLSMinVersion
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterInitParameters.
func (in *KafkaClusterInitParameters) DeepCopy() *KafkaClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterList) DeepCopyInto(out *KafkaClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KafkaCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterList.
func (in *KafkaClusterList) DeepCopy() *KafkaClusterList {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KafkaClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterMetastoresAmbariInitParameters) DeepCopyInto(out *KafkaClusterMetastoresAmbariInitParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterMetastoresAmbariInitParameters.
func (in *KafkaClusterMetastoresAmbariInitParameters) DeepCopy() *KafkaClusterMetastoresAmbariInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterMetastoresAmbariInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterMetastoresAmbariObservation) DeepCopyInto(out *KafkaClusterMetastoresAmbariObservation) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterMetastoresAmbariObservation.
func (in *KafkaClusterMetastoresAmbariObservation) DeepCopy() *KafkaClusterMetastoresAmbariObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterMetastoresAmbariObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterMetastoresAmbariParameters) DeepCopyInto(out *KafkaClusterMetastoresAmbariParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterMetastoresAmbariParameters.
func (in *KafkaClusterMetastoresAmbariParameters) DeepCopy() *KafkaClusterMetastoresAmbariParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterMetastoresAmbariParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterMetastoresHiveInitParameters) DeepCopyInto(out *KafkaClusterMetastoresHiveInitParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterMetastoresHiveInitParameters.
func (in *KafkaClusterMetastoresHiveInitParameters) DeepCopy() *KafkaClusterMetastoresHiveInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterMetastoresHiveInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterMetastoresHiveObservation) DeepCopyInto(out *KafkaClusterMetastoresHiveObservation) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterMetastoresHiveObservation.
func (in *KafkaClusterMetastoresHiveObservation) DeepCopy() *KafkaClusterMetastoresHiveObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterMetastoresHiveObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterMetastoresHiveParameters) DeepCopyInto(out *KafkaClusterMetastoresHiveParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterMetastoresHiveParameters.
func (in *KafkaClusterMetastoresHiveParameters) DeepCopy() *KafkaClusterMetastoresHiveParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterMetastoresHiveParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterMetastoresInitParameters) DeepCopyInto(out *KafkaClusterMetastoresInitParameters) {
	*out = *in
	if in.Ambari != nil {
		in, out := &in.Ambari, &out.Ambari
		*out = make([]KafkaClusterMetastoresAmbariInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hive != nil {
		in, out := &in.Hive, &out.Hive
		*out = make([]KafkaClusterMetastoresHiveInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Oozie != nil {
		in, out := &in.Oozie, &out.Oozie
		*out = make([]KafkaClusterMetastoresOozieInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterMetastoresInitParameters.
func (in *KafkaClusterMetastoresInitParameters) DeepCopy() *KafkaClusterMetastoresInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterMetastoresInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterMetastoresObservation) DeepCopyInto(out *KafkaClusterMetastoresObservation) {
	*out = *in
	if in.Ambari != nil {
		in, out := &in.Ambari, &out.Ambari
		*out = make([]KafkaClusterMetastoresAmbariObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hive != nil {
		in, out := &in.Hive, &out.Hive
		*out = make([]KafkaClusterMetastoresHiveObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Oozie != nil {
		in, out := &in.Oozie, &out.Oozie
		*out = make([]KafkaClusterMetastoresOozieObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterMetastoresObservation.
func (in *KafkaClusterMetastoresObservation) DeepCopy() *KafkaClusterMetastoresObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterMetastoresObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterMetastoresOozieInitParameters) DeepCopyInto(out *KafkaClusterMetastoresOozieInitParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterMetastoresOozieInitParameters.
func (in *KafkaClusterMetastoresOozieInitParameters) DeepCopy() *KafkaClusterMetastoresOozieInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterMetastoresOozieInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterMetastoresOozieObservation) DeepCopyInto(out *KafkaClusterMetastoresOozieObservation) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterMetastoresOozieObservation.
func (in *KafkaClusterMetastoresOozieObservation) DeepCopy() *KafkaClusterMetastoresOozieObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterMetastoresOozieObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterMetastoresOozieParameters) DeepCopyInto(out *KafkaClusterMetastoresOozieParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterMetastoresOozieParameters.
func (in *KafkaClusterMetastoresOozieParameters) DeepCopy() *KafkaClusterMetastoresOozieParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterMetastoresOozieParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterMetastoresParameters) DeepCopyInto(out *KafkaClusterMetastoresParameters) {
	*out = *in
	if in.Ambari != nil {
		in, out := &in.Ambari, &out.Ambari
		*out = make([]KafkaClusterMetastoresAmbariParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hive != nil {
		in, out := &in.Hive, &out.Hive
		*out = make([]KafkaClusterMetastoresHiveParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Oozie != nil {
		in, out := &in.Oozie, &out.Oozie
		*out = make([]KafkaClusterMetastoresOozieParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterMetastoresParameters.
func (in *KafkaClusterMetastoresParameters) DeepCopy() *KafkaClusterMetastoresParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterMetastoresParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterMonitorInitParameters) DeepCopyInto(out *KafkaClusterMonitorInitParameters) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterMonitorInitParameters.
func (in *KafkaClusterMonitorInitParameters) DeepCopy() *KafkaClusterMonitorInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterMonitorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterMonitorObservation) DeepCopyInto(out *KafkaClusterMonitorObservation) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterMonitorObservation.
func (in *KafkaClusterMonitorObservation) DeepCopy() *KafkaClusterMonitorObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterMonitorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterMonitorParameters) DeepCopyInto(out *KafkaClusterMonitorParameters) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
	out.PrimaryKeySecretRef = in.PrimaryKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterMonitorParameters.
func (in *KafkaClusterMonitorParameters) DeepCopy() *KafkaClusterMonitorParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterMonitorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterNetworkInitParameters) DeepCopyInto(out *KafkaClusterNetworkInitParameters) {
	*out = *in
	if in.ConnectionDirection != nil {
		in, out := &in.ConnectionDirection, &out.ConnectionDirection
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkEnabled != nil {
		in, out := &in.PrivateLinkEnabled, &out.PrivateLinkEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterNetworkInitParameters.
func (in *KafkaClusterNetworkInitParameters) DeepCopy() *KafkaClusterNetworkInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterNetworkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterNetworkObservation) DeepCopyInto(out *KafkaClusterNetworkObservation) {
	*out = *in
	if in.ConnectionDirection != nil {
		in, out := &in.ConnectionDirection, &out.ConnectionDirection
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkEnabled != nil {
		in, out := &in.PrivateLinkEnabled, &out.PrivateLinkEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterNetworkObservation.
func (in *KafkaClusterNetworkObservation) DeepCopy() *KafkaClusterNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterNetworkParameters) DeepCopyInto(out *KafkaClusterNetworkParameters) {
	*out = *in
	if in.ConnectionDirection != nil {
		in, out := &in.ConnectionDirection, &out.ConnectionDirection
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkEnabled != nil {
		in, out := &in.PrivateLinkEnabled, &out.PrivateLinkEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterNetworkParameters.
func (in *KafkaClusterNetworkParameters) DeepCopy() *KafkaClusterNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterObservation) DeepCopyInto(out *KafkaClusterObservation) {
	*out = *in
	if in.ClusterVersion != nil {
		in, out := &in.ClusterVersion, &out.ClusterVersion
		*out = new(string)
		**out = **in
	}
	if in.ComponentVersion != nil {
		in, out := &in.ComponentVersion, &out.ComponentVersion
		*out = make([]KafkaClusterComponentVersionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ComputeIsolation != nil {
		in, out := &in.ComputeIsolation, &out.ComputeIsolation
		*out = make([]KafkaClusterComputeIsolationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryption != nil {
		in, out := &in.DiskEncryption, &out.DiskEncryption
		*out = make([]KafkaClusterDiskEncryptionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionInTransitEnabled != nil {
		in, out := &in.EncryptionInTransitEnabled, &out.EncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Extension != nil {
		in, out := &in.Extension, &out.Extension
		*out = make([]KafkaClusterExtensionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = make([]KafkaClusterGatewayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPSEndpoint != nil {
		in, out := &in.HTTPSEndpoint, &out.HTTPSEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KafkaRestProxyEndpoint != nil {
		in, out := &in.KafkaRestProxyEndpoint, &out.KafkaRestProxyEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Metastores != nil {
		in, out := &in.Metastores, &out.Metastores
		*out = make([]KafkaClusterMetastoresObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitor != nil {
		in, out := &in.Monitor, &out.Monitor
		*out = make([]KafkaClusterMonitorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]KafkaClusterNetworkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.RestProxy != nil {
		in, out := &in.RestProxy, &out.RestProxy
		*out = make([]RestProxyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]KafkaClusterRolesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHEndpoint != nil {
		in, out := &in.SSHEndpoint, &out.SSHEndpoint
		*out = new(string)
		**out = **in
	}
	if in.SecurityProfile != nil {
		in, out := &in.SecurityProfile, &out.SecurityProfile
		*out = make([]KafkaClusterSecurityProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]KafkaClusterStorageAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountGen2 != nil {
		in, out := &in.StorageAccountGen2, &out.StorageAccountGen2
		*out = make([]KafkaClusterStorageAccountGen2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMinVersion != nil {
		in, out := &in.TLSMinVersion, &out.TLSMinVersion
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterObservation.
func (in *KafkaClusterObservation) DeepCopy() *KafkaClusterObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterParameters) DeepCopyInto(out *KafkaClusterParameters) {
	*out = *in
	if in.ClusterVersion != nil {
		in, out := &in.ClusterVersion, &out.ClusterVersion
		*out = new(string)
		**out = **in
	}
	if in.ComponentVersion != nil {
		in, out := &in.ComponentVersion, &out.ComponentVersion
		*out = make([]KafkaClusterComponentVersionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ComputeIsolation != nil {
		in, out := &in.ComputeIsolation, &out.ComputeIsolation
		*out = make([]KafkaClusterComputeIsolationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryption != nil {
		in, out := &in.DiskEncryption, &out.DiskEncryption
		*out = make([]KafkaClusterDiskEncryptionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionInTransitEnabled != nil {
		in, out := &in.EncryptionInTransitEnabled, &out.EncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Extension != nil {
		in, out := &in.Extension, &out.Extension
		*out = make([]KafkaClusterExtensionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = make([]KafkaClusterGatewayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Metastores != nil {
		in, out := &in.Metastores, &out.Metastores
		*out = make([]KafkaClusterMetastoresParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitor != nil {
		in, out := &in.Monitor, &out.Monitor
		*out = make([]KafkaClusterMonitorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]KafkaClusterNetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RestProxy != nil {
		in, out := &in.RestProxy, &out.RestProxy
		*out = make([]RestProxyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]KafkaClusterRolesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityProfile != nil {
		in, out := &in.SecurityProfile, &out.SecurityProfile
		*out = make([]KafkaClusterSecurityProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]KafkaClusterStorageAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountGen2 != nil {
		in, out := &in.StorageAccountGen2, &out.StorageAccountGen2
		*out = make([]KafkaClusterStorageAccountGen2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMinVersion != nil {
		in, out := &in.TLSMinVersion, &out.TLSMinVersion
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterParameters.
func (in *KafkaClusterParameters) DeepCopy() *KafkaClusterParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterRolesHeadNodeInitParameters) DeepCopyInto(out *KafkaClusterRolesHeadNodeInitParameters) {
	*out = *in
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]KafkaClusterRolesHeadNodeScriptActionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterRolesHeadNodeInitParameters.
func (in *KafkaClusterRolesHeadNodeInitParameters) DeepCopy() *KafkaClusterRolesHeadNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterRolesHeadNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterRolesHeadNodeObservation) DeepCopyInto(out *KafkaClusterRolesHeadNodeObservation) {
	*out = *in
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]KafkaClusterRolesHeadNodeScriptActionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterRolesHeadNodeObservation.
func (in *KafkaClusterRolesHeadNodeObservation) DeepCopy() *KafkaClusterRolesHeadNodeObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterRolesHeadNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterRolesHeadNodeParameters) DeepCopyInto(out *KafkaClusterRolesHeadNodeParameters) {
	*out = *in
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]KafkaClusterRolesHeadNodeScriptActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterRolesHeadNodeParameters.
func (in *KafkaClusterRolesHeadNodeParameters) DeepCopy() *KafkaClusterRolesHeadNodeParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterRolesHeadNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterRolesHeadNodeScriptActionsInitParameters) DeepCopyInto(out *KafkaClusterRolesHeadNodeScriptActionsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterRolesHeadNodeScriptActionsInitParameters.
func (in *KafkaClusterRolesHeadNodeScriptActionsInitParameters) DeepCopy() *KafkaClusterRolesHeadNodeScriptActionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterRolesHeadNodeScriptActionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterRolesHeadNodeScriptActionsObservation) DeepCopyInto(out *KafkaClusterRolesHeadNodeScriptActionsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterRolesHeadNodeScriptActionsObservation.
func (in *KafkaClusterRolesHeadNodeScriptActionsObservation) DeepCopy() *KafkaClusterRolesHeadNodeScriptActionsObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterRolesHeadNodeScriptActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterRolesHeadNodeScriptActionsParameters) DeepCopyInto(out *KafkaClusterRolesHeadNodeScriptActionsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterRolesHeadNodeScriptActionsParameters.
func (in *KafkaClusterRolesHeadNodeScriptActionsParameters) DeepCopy() *KafkaClusterRolesHeadNodeScriptActionsParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterRolesHeadNodeScriptActionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterRolesInitParameters) DeepCopyInto(out *KafkaClusterRolesInitParameters) {
	*out = *in
	if in.HeadNode != nil {
		in, out := &in.HeadNode, &out.HeadNode
		*out = make([]KafkaClusterRolesHeadNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaManagementNode != nil {
		in, out := &in.KafkaManagementNode, &out.KafkaManagementNode
		*out = make([]KafkaManagementNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNode != nil {
		in, out := &in.WorkerNode, &out.WorkerNode
		*out = make([]KafkaClusterRolesWorkerNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZookeeperNode != nil {
		in, out := &in.ZookeeperNode, &out.ZookeeperNode
		*out = make([]KafkaClusterRolesZookeeperNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterRolesInitParameters.
func (in *KafkaClusterRolesInitParameters) DeepCopy() *KafkaClusterRolesInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterRolesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterRolesObservation) DeepCopyInto(out *KafkaClusterRolesObservation) {
	*out = *in
	if in.HeadNode != nil {
		in, out := &in.HeadNode, &out.HeadNode
		*out = make([]KafkaClusterRolesHeadNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaManagementNode != nil {
		in, out := &in.KafkaManagementNode, &out.KafkaManagementNode
		*out = make([]KafkaManagementNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNode != nil {
		in, out := &in.WorkerNode, &out.WorkerNode
		*out = make([]KafkaClusterRolesWorkerNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZookeeperNode != nil {
		in, out := &in.ZookeeperNode, &out.ZookeeperNode
		*out = make([]KafkaClusterRolesZookeeperNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterRolesObservation.
func (in *KafkaClusterRolesObservation) DeepCopy() *KafkaClusterRolesObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterRolesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterRolesParameters) DeepCopyInto(out *KafkaClusterRolesParameters) {
	*out = *in
	if in.HeadNode != nil {
		in, out := &in.HeadNode, &out.HeadNode
		*out = make([]KafkaClusterRolesHeadNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaManagementNode != nil {
		in, out := &in.KafkaManagementNode, &out.KafkaManagementNode
		*out = make([]KafkaManagementNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNode != nil {
		in, out := &in.WorkerNode, &out.WorkerNode
		*out = make([]KafkaClusterRolesWorkerNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZookeeperNode != nil {
		in, out := &in.ZookeeperNode, &out.ZookeeperNode
		*out = make([]KafkaClusterRolesZookeeperNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterRolesParameters.
func (in *KafkaClusterRolesParameters) DeepCopy() *KafkaClusterRolesParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterRolesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterRolesWorkerNodeInitParameters) DeepCopyInto(out *KafkaClusterRolesWorkerNodeInitParameters) {
	*out = *in
	if in.NumberOfDisksPerNode != nil {
		in, out := &in.NumberOfDisksPerNode, &out.NumberOfDisksPerNode
		*out = new(float64)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]KafkaClusterRolesWorkerNodeScriptActionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterRolesWorkerNodeInitParameters.
func (in *KafkaClusterRolesWorkerNodeInitParameters) DeepCopy() *KafkaClusterRolesWorkerNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterRolesWorkerNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterRolesWorkerNodeObservation) DeepCopyInto(out *KafkaClusterRolesWorkerNodeObservation) {
	*out = *in
	if in.NumberOfDisksPerNode != nil {
		in, out := &in.NumberOfDisksPerNode, &out.NumberOfDisksPerNode
		*out = new(float64)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]KafkaClusterRolesWorkerNodeScriptActionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterRolesWorkerNodeObservation.
func (in *KafkaClusterRolesWorkerNodeObservation) DeepCopy() *KafkaClusterRolesWorkerNodeObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterRolesWorkerNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterRolesWorkerNodeParameters) DeepCopyInto(out *KafkaClusterRolesWorkerNodeParameters) {
	*out = *in
	if in.NumberOfDisksPerNode != nil {
		in, out := &in.NumberOfDisksPerNode, &out.NumberOfDisksPerNode
		*out = new(float64)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]KafkaClusterRolesWorkerNodeScriptActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterRolesWorkerNodeParameters.
func (in *KafkaClusterRolesWorkerNodeParameters) DeepCopy() *KafkaClusterRolesWorkerNodeParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterRolesWorkerNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterRolesWorkerNodeScriptActionsInitParameters) DeepCopyInto(out *KafkaClusterRolesWorkerNodeScriptActionsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterRolesWorkerNodeScriptActionsInitParameters.
func (in *KafkaClusterRolesWorkerNodeScriptActionsInitParameters) DeepCopy() *KafkaClusterRolesWorkerNodeScriptActionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterRolesWorkerNodeScriptActionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterRolesWorkerNodeScriptActionsObservation) DeepCopyInto(out *KafkaClusterRolesWorkerNodeScriptActionsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterRolesWorkerNodeScriptActionsObservation.
func (in *KafkaClusterRolesWorkerNodeScriptActionsObservation) DeepCopy() *KafkaClusterRolesWorkerNodeScriptActionsObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterRolesWorkerNodeScriptActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterRolesWorkerNodeScriptActionsParameters) DeepCopyInto(out *KafkaClusterRolesWorkerNodeScriptActionsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterRolesWorkerNodeScriptActionsParameters.
func (in *KafkaClusterRolesWorkerNodeScriptActionsParameters) DeepCopy() *KafkaClusterRolesWorkerNodeScriptActionsParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterRolesWorkerNodeScriptActionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterRolesZookeeperNodeInitParameters) DeepCopyInto(out *KafkaClusterRolesZookeeperNodeInitParameters) {
	*out = *in
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]KafkaClusterRolesZookeeperNodeScriptActionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterRolesZookeeperNodeInitParameters.
func (in *KafkaClusterRolesZookeeperNodeInitParameters) DeepCopy() *KafkaClusterRolesZookeeperNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterRolesZookeeperNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterRolesZookeeperNodeObservation) DeepCopyInto(out *KafkaClusterRolesZookeeperNodeObservation) {
	*out = *in
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]KafkaClusterRolesZookeeperNodeScriptActionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterRolesZookeeperNodeObservation.
func (in *KafkaClusterRolesZookeeperNodeObservation) DeepCopy() *KafkaClusterRolesZookeeperNodeObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterRolesZookeeperNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterRolesZookeeperNodeParameters) DeepCopyInto(out *KafkaClusterRolesZookeeperNodeParameters) {
	*out = *in
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]KafkaClusterRolesZookeeperNodeScriptActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterRolesZookeeperNodeParameters.
func (in *KafkaClusterRolesZookeeperNodeParameters) DeepCopy() *KafkaClusterRolesZookeeperNodeParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterRolesZookeeperNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterRolesZookeeperNodeScriptActionsInitParameters) DeepCopyInto(out *KafkaClusterRolesZookeeperNodeScriptActionsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterRolesZookeeperNodeScriptActionsInitParameters.
func (in *KafkaClusterRolesZookeeperNodeScriptActionsInitParameters) DeepCopy() *KafkaClusterRolesZookeeperNodeScriptActionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterRolesZookeeperNodeScriptActionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterRolesZookeeperNodeScriptActionsObservation) DeepCopyInto(out *KafkaClusterRolesZookeeperNodeScriptActionsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterRolesZookeeperNodeScriptActionsObservation.
func (in *KafkaClusterRolesZookeeperNodeScriptActionsObservation) DeepCopy() *KafkaClusterRolesZookeeperNodeScriptActionsObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterRolesZookeeperNodeScriptActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterRolesZookeeperNodeScriptActionsParameters) DeepCopyInto(out *KafkaClusterRolesZookeeperNodeScriptActionsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterRolesZookeeperNodeScriptActionsParameters.
func (in *KafkaClusterRolesZookeeperNodeScriptActionsParameters) DeepCopy() *KafkaClusterRolesZookeeperNodeScriptActionsParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterRolesZookeeperNodeScriptActionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterSecurityProfileInitParameters) DeepCopyInto(out *KafkaClusterSecurityProfileInitParameters) {
	*out = *in
	if in.AaddsResourceID != nil {
		in, out := &in.AaddsResourceID, &out.AaddsResourceID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUsersGroupDNS != nil {
		in, out := &in.ClusterUsersGroupDNS, &out.ClusterUsersGroupDNS
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainUsername != nil {
		in, out := &in.DomainUsername, &out.DomainUsername
		*out = new(string)
		**out = **in
	}
	if in.LdapsUrls != nil {
		in, out := &in.LdapsUrls, &out.LdapsUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MsiResourceID != nil {
		in, out := &in.MsiResourceID, &out.MsiResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterSecurityProfileInitParameters.
func (in *KafkaClusterSecurityProfileInitParameters) DeepCopy() *KafkaClusterSecurityProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterSecurityProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterSecurityProfileObservation) DeepCopyInto(out *KafkaClusterSecurityProfileObservation) {
	*out = *in
	if in.AaddsResourceID != nil {
		in, out := &in.AaddsResourceID, &out.AaddsResourceID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUsersGroupDNS != nil {
		in, out := &in.ClusterUsersGroupDNS, &out.ClusterUsersGroupDNS
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainUsername != nil {
		in, out := &in.DomainUsername, &out.DomainUsername
		*out = new(string)
		**out = **in
	}
	if in.LdapsUrls != nil {
		in, out := &in.LdapsUrls, &out.LdapsUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MsiResourceID != nil {
		in, out := &in.MsiResourceID, &out.MsiResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterSecurityProfileObservation.
func (in *KafkaClusterSecurityProfileObservation) DeepCopy() *KafkaClusterSecurityProfileObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterSecurityProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterSecurityProfileParameters) DeepCopyInto(out *KafkaClusterSecurityProfileParameters) {
	*out = *in
	if in.AaddsResourceID != nil {
		in, out := &in.AaddsResourceID, &out.AaddsResourceID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUsersGroupDNS != nil {
		in, out := &in.ClusterUsersGroupDNS, &out.ClusterUsersGroupDNS
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	out.DomainUserPasswordSecretRef = in.DomainUserPasswordSecretRef
	if in.DomainUsername != nil {
		in, out := &in.DomainUsername, &out.DomainUsername
		*out = new(string)
		**out = **in
	}
	if in.LdapsUrls != nil {
		in, out := &in.LdapsUrls, &out.LdapsUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MsiResourceID != nil {
		in, out := &in.MsiResourceID, &out.MsiResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterSecurityProfileParameters.
func (in *KafkaClusterSecurityProfileParameters) DeepCopy() *KafkaClusterSecurityProfileParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterSecurityProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterSpec) DeepCopyInto(out *KafkaClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterSpec.
func (in *KafkaClusterSpec) DeepCopy() *KafkaClusterSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterStatus) DeepCopyInto(out *KafkaClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterStatus.
func (in *KafkaClusterStatus) DeepCopy() *KafkaClusterStatus {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterStorageAccountGen2InitParameters) DeepCopyInto(out *KafkaClusterStorageAccountGen2InitParameters) {
	*out = *in
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.ManagedIdentityResourceID != nil {
		in, out := &in.ManagedIdentityResourceID, &out.ManagedIdentityResourceID
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterStorageAccountGen2InitParameters.
func (in *KafkaClusterStorageAccountGen2InitParameters) DeepCopy() *KafkaClusterStorageAccountGen2InitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterStorageAccountGen2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterStorageAccountGen2Observation) DeepCopyInto(out *KafkaClusterStorageAccountGen2Observation) {
	*out = *in
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.ManagedIdentityResourceID != nil {
		in, out := &in.ManagedIdentityResourceID, &out.ManagedIdentityResourceID
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterStorageAccountGen2Observation.
func (in *KafkaClusterStorageAccountGen2Observation) DeepCopy() *KafkaClusterStorageAccountGen2Observation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterStorageAccountGen2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterStorageAccountGen2Parameters) DeepCopyInto(out *KafkaClusterStorageAccountGen2Parameters) {
	*out = *in
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.ManagedIdentityResourceID != nil {
		in, out := &in.ManagedIdentityResourceID, &out.ManagedIdentityResourceID
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterStorageAccountGen2Parameters.
func (in *KafkaClusterStorageAccountGen2Parameters) DeepCopy() *KafkaClusterStorageAccountGen2Parameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterStorageAccountGen2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterStorageAccountInitParameters) DeepCopyInto(out *KafkaClusterStorageAccountInitParameters) {
	*out = *in
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterStorageAccountInitParameters.
func (in *KafkaClusterStorageAccountInitParameters) DeepCopy() *KafkaClusterStorageAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterStorageAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterStorageAccountObservation) DeepCopyInto(out *KafkaClusterStorageAccountObservation) {
	*out = *in
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.StorageContainerID != nil {
		in, out := &in.StorageContainerID, &out.StorageContainerID
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterStorageAccountObservation.
func (in *KafkaClusterStorageAccountObservation) DeepCopy() *KafkaClusterStorageAccountObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterStorageAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterStorageAccountParameters) DeepCopyInto(out *KafkaClusterStorageAccountParameters) {
	*out = *in
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	out.StorageAccountKeySecretRef = in.StorageAccountKeySecretRef
	if in.StorageContainerID != nil {
		in, out := &in.StorageContainerID, &out.StorageContainerID
		*out = new(string)
		**out = **in
	}
	if in.StorageContainerIDRef != nil {
		in, out := &in.StorageContainerIDRef, &out.StorageContainerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageContainerIDSelector != nil {
		in, out := &in.StorageContainerIDSelector, &out.StorageContainerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterStorageAccountParameters.
func (in *KafkaClusterStorageAccountParameters) DeepCopy() *KafkaClusterStorageAccountParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterStorageAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaManagementNodeInitParameters) DeepCopyInto(out *KafkaManagementNodeInitParameters) {
	*out = *in
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]KafkaManagementNodeScriptActionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaManagementNodeInitParameters.
func (in *KafkaManagementNodeInitParameters) DeepCopy() *KafkaManagementNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaManagementNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaManagementNodeObservation) DeepCopyInto(out *KafkaManagementNodeObservation) {
	*out = *in
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]KafkaManagementNodeScriptActionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaManagementNodeObservation.
func (in *KafkaManagementNodeObservation) DeepCopy() *KafkaManagementNodeObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaManagementNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaManagementNodeParameters) DeepCopyInto(out *KafkaManagementNodeParameters) {
	*out = *in
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]KafkaManagementNodeScriptActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaManagementNodeParameters.
func (in *KafkaManagementNodeParameters) DeepCopy() *KafkaManagementNodeParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaManagementNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaManagementNodeScriptActionsInitParameters) DeepCopyInto(out *KafkaManagementNodeScriptActionsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaManagementNodeScriptActionsInitParameters.
func (in *KafkaManagementNodeScriptActionsInitParameters) DeepCopy() *KafkaManagementNodeScriptActionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaManagementNodeScriptActionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaManagementNodeScriptActionsObservation) DeepCopyInto(out *KafkaManagementNodeScriptActionsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaManagementNodeScriptActionsObservation.
func (in *KafkaManagementNodeScriptActionsObservation) DeepCopy() *KafkaManagementNodeScriptActionsObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaManagementNodeScriptActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaManagementNodeScriptActionsParameters) DeepCopyInto(out *KafkaManagementNodeScriptActionsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaManagementNodeScriptActionsParameters.
func (in *KafkaManagementNodeScriptActionsParameters) DeepCopy() *KafkaManagementNodeScriptActionsParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaManagementNodeScriptActionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoresAmbariInitParameters) DeepCopyInto(out *MetastoresAmbariInitParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoresAmbariInitParameters.
func (in *MetastoresAmbariInitParameters) DeepCopy() *MetastoresAmbariInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoresAmbariInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoresAmbariObservation) DeepCopyInto(out *MetastoresAmbariObservation) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoresAmbariObservation.
func (in *MetastoresAmbariObservation) DeepCopy() *MetastoresAmbariObservation {
	if in == nil {
		return nil
	}
	out := new(MetastoresAmbariObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoresAmbariParameters) DeepCopyInto(out *MetastoresAmbariParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoresAmbariParameters.
func (in *MetastoresAmbariParameters) DeepCopy() *MetastoresAmbariParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoresAmbariParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoresHiveInitParameters) DeepCopyInto(out *MetastoresHiveInitParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoresHiveInitParameters.
func (in *MetastoresHiveInitParameters) DeepCopy() *MetastoresHiveInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoresHiveInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoresHiveObservation) DeepCopyInto(out *MetastoresHiveObservation) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoresHiveObservation.
func (in *MetastoresHiveObservation) DeepCopy() *MetastoresHiveObservation {
	if in == nil {
		return nil
	}
	out := new(MetastoresHiveObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoresHiveParameters) DeepCopyInto(out *MetastoresHiveParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoresHiveParameters.
func (in *MetastoresHiveParameters) DeepCopy() *MetastoresHiveParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoresHiveParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoresInitParameters) DeepCopyInto(out *MetastoresInitParameters) {
	*out = *in
	if in.Ambari != nil {
		in, out := &in.Ambari, &out.Ambari
		*out = make([]AmbariInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hive != nil {
		in, out := &in.Hive, &out.Hive
		*out = make([]HiveInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Oozie != nil {
		in, out := &in.Oozie, &out.Oozie
		*out = make([]OozieInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoresInitParameters.
func (in *MetastoresInitParameters) DeepCopy() *MetastoresInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoresInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoresObservation) DeepCopyInto(out *MetastoresObservation) {
	*out = *in
	if in.Ambari != nil {
		in, out := &in.Ambari, &out.Ambari
		*out = make([]AmbariObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hive != nil {
		in, out := &in.Hive, &out.Hive
		*out = make([]HiveObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Oozie != nil {
		in, out := &in.Oozie, &out.Oozie
		*out = make([]OozieObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoresObservation.
func (in *MetastoresObservation) DeepCopy() *MetastoresObservation {
	if in == nil {
		return nil
	}
	out := new(MetastoresObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoresOozieInitParameters) DeepCopyInto(out *MetastoresOozieInitParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoresOozieInitParameters.
func (in *MetastoresOozieInitParameters) DeepCopy() *MetastoresOozieInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoresOozieInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoresOozieObservation) DeepCopyInto(out *MetastoresOozieObservation) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoresOozieObservation.
func (in *MetastoresOozieObservation) DeepCopy() *MetastoresOozieObservation {
	if in == nil {
		return nil
	}
	out := new(MetastoresOozieObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoresOozieParameters) DeepCopyInto(out *MetastoresOozieParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoresOozieParameters.
func (in *MetastoresOozieParameters) DeepCopy() *MetastoresOozieParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoresOozieParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoresParameters) DeepCopyInto(out *MetastoresParameters) {
	*out = *in
	if in.Ambari != nil {
		in, out := &in.Ambari, &out.Ambari
		*out = make([]AmbariParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hive != nil {
		in, out := &in.Hive, &out.Hive
		*out = make([]HiveParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Oozie != nil {
		in, out := &in.Oozie, &out.Oozie
		*out = make([]OozieParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoresParameters.
func (in *MetastoresParameters) DeepCopy() *MetastoresParameters {
	if in == nil {
		return nil
	}
	out := new(MetastoresParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorInitParameters) DeepCopyInto(out *MonitorInitParameters) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorInitParameters.
func (in *MonitorInitParameters) DeepCopy() *MonitorInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorObservation) DeepCopyInto(out *MonitorObservation) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorObservation.
func (in *MonitorObservation) DeepCopy() *MonitorObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorParameters) DeepCopyInto(out *MonitorParameters) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
	out.PrimaryKeySecretRef = in.PrimaryKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorParameters.
func (in *MonitorParameters) DeepCopy() *MonitorParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInitParameters) DeepCopyInto(out *NetworkInitParameters) {
	*out = *in
	if in.ConnectionDirection != nil {
		in, out := &in.ConnectionDirection, &out.ConnectionDirection
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkEnabled != nil {
		in, out := &in.PrivateLinkEnabled, &out.PrivateLinkEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInitParameters.
func (in *NetworkInitParameters) DeepCopy() *NetworkInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkObservation) DeepCopyInto(out *NetworkObservation) {
	*out = *in
	if in.ConnectionDirection != nil {
		in, out := &in.ConnectionDirection, &out.ConnectionDirection
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkEnabled != nil {
		in, out := &in.PrivateLinkEnabled, &out.PrivateLinkEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkObservation.
func (in *NetworkObservation) DeepCopy() *NetworkObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkParameters) DeepCopyInto(out *NetworkParameters) {
	*out = *in
	if in.ConnectionDirection != nil {
		in, out := &in.ConnectionDirection, &out.ConnectionDirection
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkEnabled != nil {
		in, out := &in.PrivateLinkEnabled, &out.PrivateLinkEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkParameters.
func (in *NetworkParameters) DeepCopy() *NetworkParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OozieInitParameters) DeepCopyInto(out *OozieInitParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OozieInitParameters.
func (in *OozieInitParameters) DeepCopy() *OozieInitParameters {
	if in == nil {
		return nil
	}
	out := new(OozieInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OozieObservation) DeepCopyInto(out *OozieObservation) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OozieObservation.
func (in *OozieObservation) DeepCopy() *OozieObservation {
	if in == nil {
		return nil
	}
	out := new(OozieObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OozieParameters) DeepCopyInto(out *OozieParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OozieParameters.
func (in *OozieParameters) DeepCopy() *OozieParameters {
	if in == nil {
		return nil
	}
	out := new(OozieParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecurrenceInitParameters) DeepCopyInto(out *RecurrenceInitParameters) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecurrenceInitParameters.
func (in *RecurrenceInitParameters) DeepCopy() *RecurrenceInitParameters {
	if in == nil {
		return nil
	}
	out := new(RecurrenceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecurrenceObservation) DeepCopyInto(out *RecurrenceObservation) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecurrenceObservation.
func (in *RecurrenceObservation) DeepCopy() *RecurrenceObservation {
	if in == nil {
		return nil
	}
	out := new(RecurrenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecurrenceParameters) DeepCopyInto(out *RecurrenceParameters) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecurrenceParameters.
func (in *RecurrenceParameters) DeepCopy() *RecurrenceParameters {
	if in == nil {
		return nil
	}
	out := new(RecurrenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecurrenceScheduleInitParameters) DeepCopyInto(out *RecurrenceScheduleInitParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecurrenceScheduleInitParameters.
func (in *RecurrenceScheduleInitParameters) DeepCopy() *RecurrenceScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(RecurrenceScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecurrenceScheduleObservation) DeepCopyInto(out *RecurrenceScheduleObservation) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecurrenceScheduleObservation.
func (in *RecurrenceScheduleObservation) DeepCopy() *RecurrenceScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(RecurrenceScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecurrenceScheduleParameters) DeepCopyInto(out *RecurrenceScheduleParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecurrenceScheduleParameters.
func (in *RecurrenceScheduleParameters) DeepCopy() *RecurrenceScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(RecurrenceScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestProxyInitParameters) DeepCopyInto(out *RestProxyInitParameters) {
	*out = *in
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupName != nil {
		in, out := &in.SecurityGroupName, &out.SecurityGroupName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestProxyInitParameters.
func (in *RestProxyInitParameters) DeepCopy() *RestProxyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RestProxyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestProxyObservation) DeepCopyInto(out *RestProxyObservation) {
	*out = *in
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupName != nil {
		in, out := &in.SecurityGroupName, &out.SecurityGroupName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestProxyObservation.
func (in *RestProxyObservation) DeepCopy() *RestProxyObservation {
	if in == nil {
		return nil
	}
	out := new(RestProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestProxyParameters) DeepCopyInto(out *RestProxyParameters) {
	*out = *in
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupName != nil {
		in, out := &in.SecurityGroupName, &out.SecurityGroupName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestProxyParameters.
func (in *RestProxyParameters) DeepCopy() *RestProxyParameters {
	if in == nil {
		return nil
	}
	out := new(RestProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesHeadNodeInitParameters) DeepCopyInto(out *RolesHeadNodeInitParameters) {
	*out = *in
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]HeadNodeScriptActionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesHeadNodeInitParameters.
func (in *RolesHeadNodeInitParameters) DeepCopy() *RolesHeadNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(RolesHeadNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesHeadNodeObservation) DeepCopyInto(out *RolesHeadNodeObservation) {
	*out = *in
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]HeadNodeScriptActionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesHeadNodeObservation.
func (in *RolesHeadNodeObservation) DeepCopy() *RolesHeadNodeObservation {
	if in == nil {
		return nil
	}
	out := new(RolesHeadNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesHeadNodeParameters) DeepCopyInto(out *RolesHeadNodeParameters) {
	*out = *in
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]HeadNodeScriptActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesHeadNodeParameters.
func (in *RolesHeadNodeParameters) DeepCopy() *RolesHeadNodeParameters {
	if in == nil {
		return nil
	}
	out := new(RolesHeadNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesHeadNodeScriptActionsInitParameters) DeepCopyInto(out *RolesHeadNodeScriptActionsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesHeadNodeScriptActionsInitParameters.
func (in *RolesHeadNodeScriptActionsInitParameters) DeepCopy() *RolesHeadNodeScriptActionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RolesHeadNodeScriptActionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesHeadNodeScriptActionsObservation) DeepCopyInto(out *RolesHeadNodeScriptActionsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesHeadNodeScriptActionsObservation.
func (in *RolesHeadNodeScriptActionsObservation) DeepCopy() *RolesHeadNodeScriptActionsObservation {
	if in == nil {
		return nil
	}
	out := new(RolesHeadNodeScriptActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesHeadNodeScriptActionsParameters) DeepCopyInto(out *RolesHeadNodeScriptActionsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesHeadNodeScriptActionsParameters.
func (in *RolesHeadNodeScriptActionsParameters) DeepCopy() *RolesHeadNodeScriptActionsParameters {
	if in == nil {
		return nil
	}
	out := new(RolesHeadNodeScriptActionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesInitParameters) DeepCopyInto(out *RolesInitParameters) {
	*out = *in
	if in.EdgeNode != nil {
		in, out := &in.EdgeNode, &out.EdgeNode
		*out = make([]EdgeNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HeadNode != nil {
		in, out := &in.HeadNode, &out.HeadNode
		*out = make([]HeadNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNode != nil {
		in, out := &in.WorkerNode, &out.WorkerNode
		*out = make([]WorkerNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZookeeperNode != nil {
		in, out := &in.ZookeeperNode, &out.ZookeeperNode
		*out = make([]ZookeeperNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesInitParameters.
func (in *RolesInitParameters) DeepCopy() *RolesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RolesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesObservation) DeepCopyInto(out *RolesObservation) {
	*out = *in
	if in.EdgeNode != nil {
		in, out := &in.EdgeNode, &out.EdgeNode
		*out = make([]EdgeNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HeadNode != nil {
		in, out := &in.HeadNode, &out.HeadNode
		*out = make([]HeadNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNode != nil {
		in, out := &in.WorkerNode, &out.WorkerNode
		*out = make([]WorkerNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZookeeperNode != nil {
		in, out := &in.ZookeeperNode, &out.ZookeeperNode
		*out = make([]ZookeeperNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesObservation.
func (in *RolesObservation) DeepCopy() *RolesObservation {
	if in == nil {
		return nil
	}
	out := new(RolesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesParameters) DeepCopyInto(out *RolesParameters) {
	*out = *in
	if in.EdgeNode != nil {
		in, out := &in.EdgeNode, &out.EdgeNode
		*out = make([]EdgeNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HeadNode != nil {
		in, out := &in.HeadNode, &out.HeadNode
		*out = make([]HeadNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNode != nil {
		in, out := &in.WorkerNode, &out.WorkerNode
		*out = make([]WorkerNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZookeeperNode != nil {
		in, out := &in.ZookeeperNode, &out.ZookeeperNode
		*out = make([]ZookeeperNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesParameters.
func (in *RolesParameters) DeepCopy() *RolesParameters {
	if in == nil {
		return nil
	}
	out := new(RolesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesWorkerNodeAutoscaleInitParameters) DeepCopyInto(out *RolesWorkerNodeAutoscaleInitParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = make([]AutoscaleCapacityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = make([]WorkerNodeAutoscaleRecurrenceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesWorkerNodeAutoscaleInitParameters.
func (in *RolesWorkerNodeAutoscaleInitParameters) DeepCopy() *RolesWorkerNodeAutoscaleInitParameters {
	if in == nil {
		return nil
	}
	out := new(RolesWorkerNodeAutoscaleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesWorkerNodeAutoscaleObservation) DeepCopyInto(out *RolesWorkerNodeAutoscaleObservation) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = make([]AutoscaleCapacityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = make([]WorkerNodeAutoscaleRecurrenceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesWorkerNodeAutoscaleObservation.
func (in *RolesWorkerNodeAutoscaleObservation) DeepCopy() *RolesWorkerNodeAutoscaleObservation {
	if in == nil {
		return nil
	}
	out := new(RolesWorkerNodeAutoscaleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesWorkerNodeAutoscaleParameters) DeepCopyInto(out *RolesWorkerNodeAutoscaleParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = make([]AutoscaleCapacityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = make([]WorkerNodeAutoscaleRecurrenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesWorkerNodeAutoscaleParameters.
func (in *RolesWorkerNodeAutoscaleParameters) DeepCopy() *RolesWorkerNodeAutoscaleParameters {
	if in == nil {
		return nil
	}
	out := new(RolesWorkerNodeAutoscaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesWorkerNodeAutoscaleRecurrenceInitParameters) DeepCopyInto(out *RolesWorkerNodeAutoscaleRecurrenceInitParameters) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]WorkerNodeAutoscaleRecurrenceScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesWorkerNodeAutoscaleRecurrenceInitParameters.
func (in *RolesWorkerNodeAutoscaleRecurrenceInitParameters) DeepCopy() *RolesWorkerNodeAutoscaleRecurrenceInitParameters {
	if in == nil {
		return nil
	}
	out := new(RolesWorkerNodeAutoscaleRecurrenceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesWorkerNodeAutoscaleRecurrenceObservation) DeepCopyInto(out *RolesWorkerNodeAutoscaleRecurrenceObservation) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]WorkerNodeAutoscaleRecurrenceScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesWorkerNodeAutoscaleRecurrenceObservation.
func (in *RolesWorkerNodeAutoscaleRecurrenceObservation) DeepCopy() *RolesWorkerNodeAutoscaleRecurrenceObservation {
	if in == nil {
		return nil
	}
	out := new(RolesWorkerNodeAutoscaleRecurrenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesWorkerNodeAutoscaleRecurrenceParameters) DeepCopyInto(out *RolesWorkerNodeAutoscaleRecurrenceParameters) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]WorkerNodeAutoscaleRecurrenceScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesWorkerNodeAutoscaleRecurrenceParameters.
func (in *RolesWorkerNodeAutoscaleRecurrenceParameters) DeepCopy() *RolesWorkerNodeAutoscaleRecurrenceParameters {
	if in == nil {
		return nil
	}
	out := new(RolesWorkerNodeAutoscaleRecurrenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesWorkerNodeInitParameters) DeepCopyInto(out *RolesWorkerNodeInitParameters) {
	*out = *in
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]WorkerNodeAutoscaleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]RolesWorkerNodeScriptActionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesWorkerNodeInitParameters.
func (in *RolesWorkerNodeInitParameters) DeepCopy() *RolesWorkerNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(RolesWorkerNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesWorkerNodeObservation) DeepCopyInto(out *RolesWorkerNodeObservation) {
	*out = *in
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]WorkerNodeAutoscaleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]RolesWorkerNodeScriptActionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesWorkerNodeObservation.
func (in *RolesWorkerNodeObservation) DeepCopy() *RolesWorkerNodeObservation {
	if in == nil {
		return nil
	}
	out := new(RolesWorkerNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesWorkerNodeParameters) DeepCopyInto(out *RolesWorkerNodeParameters) {
	*out = *in
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]WorkerNodeAutoscaleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]RolesWorkerNodeScriptActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesWorkerNodeParameters.
func (in *RolesWorkerNodeParameters) DeepCopy() *RolesWorkerNodeParameters {
	if in == nil {
		return nil
	}
	out := new(RolesWorkerNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesWorkerNodeScriptActionsInitParameters) DeepCopyInto(out *RolesWorkerNodeScriptActionsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesWorkerNodeScriptActionsInitParameters.
func (in *RolesWorkerNodeScriptActionsInitParameters) DeepCopy() *RolesWorkerNodeScriptActionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RolesWorkerNodeScriptActionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesWorkerNodeScriptActionsObservation) DeepCopyInto(out *RolesWorkerNodeScriptActionsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesWorkerNodeScriptActionsObservation.
func (in *RolesWorkerNodeScriptActionsObservation) DeepCopy() *RolesWorkerNodeScriptActionsObservation {
	if in == nil {
		return nil
	}
	out := new(RolesWorkerNodeScriptActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesWorkerNodeScriptActionsParameters) DeepCopyInto(out *RolesWorkerNodeScriptActionsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesWorkerNodeScriptActionsParameters.
func (in *RolesWorkerNodeScriptActionsParameters) DeepCopy() *RolesWorkerNodeScriptActionsParameters {
	if in == nil {
		return nil
	}
	out := new(RolesWorkerNodeScriptActionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesZookeeperNodeInitParameters) DeepCopyInto(out *RolesZookeeperNodeInitParameters) {
	*out = *in
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]RolesZookeeperNodeScriptActionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesZookeeperNodeInitParameters.
func (in *RolesZookeeperNodeInitParameters) DeepCopy() *RolesZookeeperNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(RolesZookeeperNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesZookeeperNodeObservation) DeepCopyInto(out *RolesZookeeperNodeObservation) {
	*out = *in
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]RolesZookeeperNodeScriptActionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesZookeeperNodeObservation.
func (in *RolesZookeeperNodeObservation) DeepCopy() *RolesZookeeperNodeObservation {
	if in == nil {
		return nil
	}
	out := new(RolesZookeeperNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesZookeeperNodeParameters) DeepCopyInto(out *RolesZookeeperNodeParameters) {
	*out = *in
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]RolesZookeeperNodeScriptActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesZookeeperNodeParameters.
func (in *RolesZookeeperNodeParameters) DeepCopy() *RolesZookeeperNodeParameters {
	if in == nil {
		return nil
	}
	out := new(RolesZookeeperNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesZookeeperNodeScriptActionsInitParameters) DeepCopyInto(out *RolesZookeeperNodeScriptActionsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesZookeeperNodeScriptActionsInitParameters.
func (in *RolesZookeeperNodeScriptActionsInitParameters) DeepCopy() *RolesZookeeperNodeScriptActionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RolesZookeeperNodeScriptActionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesZookeeperNodeScriptActionsObservation) DeepCopyInto(out *RolesZookeeperNodeScriptActionsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesZookeeperNodeScriptActionsObservation.
func (in *RolesZookeeperNodeScriptActionsObservation) DeepCopy() *RolesZookeeperNodeScriptActionsObservation {
	if in == nil {
		return nil
	}
	out := new(RolesZookeeperNodeScriptActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolesZookeeperNodeScriptActionsParameters) DeepCopyInto(out *RolesZookeeperNodeScriptActionsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolesZookeeperNodeScriptActionsParameters.
func (in *RolesZookeeperNodeScriptActionsParameters) DeepCopy() *RolesZookeeperNodeScriptActionsParameters {
	if in == nil {
		return nil
	}
	out := new(RolesZookeeperNodeScriptActionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleInitParameters) DeepCopyInto(out *ScheduleInitParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleInitParameters.
func (in *ScheduleInitParameters) DeepCopy() *ScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleObservation) DeepCopyInto(out *ScheduleObservation) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleObservation.
func (in *ScheduleObservation) DeepCopy() *ScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleParameters) DeepCopyInto(out *ScheduleParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleParameters.
func (in *ScheduleParameters) DeepCopy() *ScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptActionsInitParameters) DeepCopyInto(out *ScriptActionsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptActionsInitParameters.
func (in *ScriptActionsInitParameters) DeepCopy() *ScriptActionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScriptActionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptActionsObservation) DeepCopyInto(out *ScriptActionsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptActionsObservation.
func (in *ScriptActionsObservation) DeepCopy() *ScriptActionsObservation {
	if in == nil {
		return nil
	}
	out := new(ScriptActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptActionsParameters) DeepCopyInto(out *ScriptActionsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptActionsParameters.
func (in *ScriptActionsParameters) DeepCopy() *ScriptActionsParameters {
	if in == nil {
		return nil
	}
	out := new(ScriptActionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityProfileInitParameters) DeepCopyInto(out *SecurityProfileInitParameters) {
	*out = *in
	if in.AaddsResourceID != nil {
		in, out := &in.AaddsResourceID, &out.AaddsResourceID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUsersGroupDNS != nil {
		in, out := &in.ClusterUsersGroupDNS, &out.ClusterUsersGroupDNS
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainUsername != nil {
		in, out := &in.DomainUsername, &out.DomainUsername
		*out = new(string)
		**out = **in
	}
	if in.LdapsUrls != nil {
		in, out := &in.LdapsUrls, &out.LdapsUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MsiResourceID != nil {
		in, out := &in.MsiResourceID, &out.MsiResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityProfileInitParameters.
func (in *SecurityProfileInitParameters) DeepCopy() *SecurityProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityProfileObservation) DeepCopyInto(out *SecurityProfileObservation) {
	*out = *in
	if in.AaddsResourceID != nil {
		in, out := &in.AaddsResourceID, &out.AaddsResourceID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUsersGroupDNS != nil {
		in, out := &in.ClusterUsersGroupDNS, &out.ClusterUsersGroupDNS
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainUsername != nil {
		in, out := &in.DomainUsername, &out.DomainUsername
		*out = new(string)
		**out = **in
	}
	if in.LdapsUrls != nil {
		in, out := &in.LdapsUrls, &out.LdapsUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MsiResourceID != nil {
		in, out := &in.MsiResourceID, &out.MsiResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityProfileObservation.
func (in *SecurityProfileObservation) DeepCopy() *SecurityProfileObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityProfileParameters) DeepCopyInto(out *SecurityProfileParameters) {
	*out = *in
	if in.AaddsResourceID != nil {
		in, out := &in.AaddsResourceID, &out.AaddsResourceID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUsersGroupDNS != nil {
		in, out := &in.ClusterUsersGroupDNS, &out.ClusterUsersGroupDNS
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	out.DomainUserPasswordSecretRef = in.DomainUserPasswordSecretRef
	if in.DomainUsername != nil {
		in, out := &in.DomainUsername, &out.DomainUsername
		*out = new(string)
		**out = **in
	}
	if in.LdapsUrls != nil {
		in, out := &in.LdapsUrls, &out.LdapsUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MsiResourceID != nil {
		in, out := &in.MsiResourceID, &out.MsiResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityProfileParameters.
func (in *SecurityProfileParameters) DeepCopy() *SecurityProfileParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkCluster) DeepCopyInto(out *SparkCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkCluster.
func (in *SparkCluster) DeepCopy() *SparkCluster {
	if in == nil {
		return nil
	}
	out := new(SparkCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SparkCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterComponentVersionInitParameters) DeepCopyInto(out *SparkClusterComponentVersionInitParameters) {
	*out = *in
	if in.Spark != nil {
		in, out := &in.Spark, &out.Spark
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterComponentVersionInitParameters.
func (in *SparkClusterComponentVersionInitParameters) DeepCopy() *SparkClusterComponentVersionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterComponentVersionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterComponentVersionObservation) DeepCopyInto(out *SparkClusterComponentVersionObservation) {
	*out = *in
	if in.Spark != nil {
		in, out := &in.Spark, &out.Spark
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterComponentVersionObservation.
func (in *SparkClusterComponentVersionObservation) DeepCopy() *SparkClusterComponentVersionObservation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterComponentVersionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterComponentVersionParameters) DeepCopyInto(out *SparkClusterComponentVersionParameters) {
	*out = *in
	if in.Spark != nil {
		in, out := &in.Spark, &out.Spark
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterComponentVersionParameters.
func (in *SparkClusterComponentVersionParameters) DeepCopy() *SparkClusterComponentVersionParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterComponentVersionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterComputeIsolationInitParameters) DeepCopyInto(out *SparkClusterComputeIsolationInitParameters) {
	*out = *in
	if in.ComputeIsolationEnabled != nil {
		in, out := &in.ComputeIsolationEnabled, &out.ComputeIsolationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HostSku != nil {
		in, out := &in.HostSku, &out.HostSku
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterComputeIsolationInitParameters.
func (in *SparkClusterComputeIsolationInitParameters) DeepCopy() *SparkClusterComputeIsolationInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterComputeIsolationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterComputeIsolationObservation) DeepCopyInto(out *SparkClusterComputeIsolationObservation) {
	*out = *in
	if in.ComputeIsolationEnabled != nil {
		in, out := &in.ComputeIsolationEnabled, &out.ComputeIsolationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HostSku != nil {
		in, out := &in.HostSku, &out.HostSku
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterComputeIsolationObservation.
func (in *SparkClusterComputeIsolationObservation) DeepCopy() *SparkClusterComputeIsolationObservation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterComputeIsolationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterComputeIsolationParameters) DeepCopyInto(out *SparkClusterComputeIsolationParameters) {
	*out = *in
	if in.ComputeIsolationEnabled != nil {
		in, out := &in.ComputeIsolationEnabled, &out.ComputeIsolationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HostSku != nil {
		in, out := &in.HostSku, &out.HostSku
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterComputeIsolationParameters.
func (in *SparkClusterComputeIsolationParameters) DeepCopy() *SparkClusterComputeIsolationParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterComputeIsolationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterDiskEncryptionInitParameters) DeepCopyInto(out *SparkClusterDiskEncryptionInitParameters) {
	*out = *in
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.EncryptionAtHostEnabled != nil {
		in, out := &in.EncryptionAtHostEnabled, &out.EncryptionAtHostEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultManagedIdentityID != nil {
		in, out := &in.KeyVaultManagedIdentityID, &out.KeyVaultManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterDiskEncryptionInitParameters.
func (in *SparkClusterDiskEncryptionInitParameters) DeepCopy() *SparkClusterDiskEncryptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterDiskEncryptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterDiskEncryptionObservation) DeepCopyInto(out *SparkClusterDiskEncryptionObservation) {
	*out = *in
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.EncryptionAtHostEnabled != nil {
		in, out := &in.EncryptionAtHostEnabled, &out.EncryptionAtHostEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultManagedIdentityID != nil {
		in, out := &in.KeyVaultManagedIdentityID, &out.KeyVaultManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterDiskEncryptionObservation.
func (in *SparkClusterDiskEncryptionObservation) DeepCopy() *SparkClusterDiskEncryptionObservation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterDiskEncryptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterDiskEncryptionParameters) DeepCopyInto(out *SparkClusterDiskEncryptionParameters) {
	*out = *in
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.EncryptionAtHostEnabled != nil {
		in, out := &in.EncryptionAtHostEnabled, &out.EncryptionAtHostEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultManagedIdentityID != nil {
		in, out := &in.KeyVaultManagedIdentityID, &out.KeyVaultManagedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterDiskEncryptionParameters.
func (in *SparkClusterDiskEncryptionParameters) DeepCopy() *SparkClusterDiskEncryptionParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterDiskEncryptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterExtensionInitParameters) DeepCopyInto(out *SparkClusterExtensionInitParameters) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterExtensionInitParameters.
func (in *SparkClusterExtensionInitParameters) DeepCopy() *SparkClusterExtensionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterExtensionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterExtensionObservation) DeepCopyInto(out *SparkClusterExtensionObservation) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterExtensionObservation.
func (in *SparkClusterExtensionObservation) DeepCopy() *SparkClusterExtensionObservation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterExtensionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterExtensionParameters) DeepCopyInto(out *SparkClusterExtensionParameters) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
	out.PrimaryKeySecretRef = in.PrimaryKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterExtensionParameters.
func (in *SparkClusterExtensionParameters) DeepCopy() *SparkClusterExtensionParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterExtensionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterGatewayInitParameters) DeepCopyInto(out *SparkClusterGatewayInitParameters) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterGatewayInitParameters.
func (in *SparkClusterGatewayInitParameters) DeepCopy() *SparkClusterGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterGatewayObservation) DeepCopyInto(out *SparkClusterGatewayObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterGatewayObservation.
func (in *SparkClusterGatewayObservation) DeepCopy() *SparkClusterGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterGatewayParameters) DeepCopyInto(out *SparkClusterGatewayParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterGatewayParameters.
func (in *SparkClusterGatewayParameters) DeepCopy() *SparkClusterGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterInitParameters) DeepCopyInto(out *SparkClusterInitParameters) {
	*out = *in
	if in.ClusterVersion != nil {
		in, out := &in.ClusterVersion, &out.ClusterVersion
		*out = new(string)
		**out = **in
	}
	if in.ComponentVersion != nil {
		in, out := &in.ComponentVersion, &out.ComponentVersion
		*out = make([]SparkClusterComponentVersionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ComputeIsolation != nil {
		in, out := &in.ComputeIsolation, &out.ComputeIsolation
		*out = make([]SparkClusterComputeIsolationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryption != nil {
		in, out := &in.DiskEncryption, &out.DiskEncryption
		*out = make([]SparkClusterDiskEncryptionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionInTransitEnabled != nil {
		in, out := &in.EncryptionInTransitEnabled, &out.EncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Extension != nil {
		in, out := &in.Extension, &out.Extension
		*out = make([]SparkClusterExtensionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = make([]SparkClusterGatewayInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Metastores != nil {
		in, out := &in.Metastores, &out.Metastores
		*out = make([]SparkClusterMetastoresInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitor != nil {
		in, out := &in.Monitor, &out.Monitor
		*out = make([]SparkClusterMonitorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]SparkClusterNetworkInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]SparkClusterRolesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityProfile != nil {
		in, out := &in.SecurityProfile, &out.SecurityProfile
		*out = make([]SparkClusterSecurityProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]SparkClusterStorageAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountGen2 != nil {
		in, out := &in.StorageAccountGen2, &out.StorageAccountGen2
		*out = make([]SparkClusterStorageAccountGen2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMinVersion != nil {
		in, out := &in.TLSMinVersion, &out.TLSMinVersion
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterInitParameters.
func (in *SparkClusterInitParameters) DeepCopy() *SparkClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterList) DeepCopyInto(out *SparkClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SparkCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterList.
func (in *SparkClusterList) DeepCopy() *SparkClusterList {
	if in == nil {
		return nil
	}
	out := new(SparkClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SparkClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterMetastoresAmbariInitParameters) DeepCopyInto(out *SparkClusterMetastoresAmbariInitParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterMetastoresAmbariInitParameters.
func (in *SparkClusterMetastoresAmbariInitParameters) DeepCopy() *SparkClusterMetastoresAmbariInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterMetastoresAmbariInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterMetastoresAmbariObservation) DeepCopyInto(out *SparkClusterMetastoresAmbariObservation) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterMetastoresAmbariObservation.
func (in *SparkClusterMetastoresAmbariObservation) DeepCopy() *SparkClusterMetastoresAmbariObservation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterMetastoresAmbariObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterMetastoresAmbariParameters) DeepCopyInto(out *SparkClusterMetastoresAmbariParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterMetastoresAmbariParameters.
func (in *SparkClusterMetastoresAmbariParameters) DeepCopy() *SparkClusterMetastoresAmbariParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterMetastoresAmbariParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterMetastoresHiveInitParameters) DeepCopyInto(out *SparkClusterMetastoresHiveInitParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterMetastoresHiveInitParameters.
func (in *SparkClusterMetastoresHiveInitParameters) DeepCopy() *SparkClusterMetastoresHiveInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterMetastoresHiveInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterMetastoresHiveObservation) DeepCopyInto(out *SparkClusterMetastoresHiveObservation) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterMetastoresHiveObservation.
func (in *SparkClusterMetastoresHiveObservation) DeepCopy() *SparkClusterMetastoresHiveObservation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterMetastoresHiveObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterMetastoresHiveParameters) DeepCopyInto(out *SparkClusterMetastoresHiveParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterMetastoresHiveParameters.
func (in *SparkClusterMetastoresHiveParameters) DeepCopy() *SparkClusterMetastoresHiveParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterMetastoresHiveParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterMetastoresInitParameters) DeepCopyInto(out *SparkClusterMetastoresInitParameters) {
	*out = *in
	if in.Ambari != nil {
		in, out := &in.Ambari, &out.Ambari
		*out = make([]SparkClusterMetastoresAmbariInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hive != nil {
		in, out := &in.Hive, &out.Hive
		*out = make([]SparkClusterMetastoresHiveInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Oozie != nil {
		in, out := &in.Oozie, &out.Oozie
		*out = make([]SparkClusterMetastoresOozieInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterMetastoresInitParameters.
func (in *SparkClusterMetastoresInitParameters) DeepCopy() *SparkClusterMetastoresInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterMetastoresInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterMetastoresObservation) DeepCopyInto(out *SparkClusterMetastoresObservation) {
	*out = *in
	if in.Ambari != nil {
		in, out := &in.Ambari, &out.Ambari
		*out = make([]SparkClusterMetastoresAmbariObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hive != nil {
		in, out := &in.Hive, &out.Hive
		*out = make([]SparkClusterMetastoresHiveObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Oozie != nil {
		in, out := &in.Oozie, &out.Oozie
		*out = make([]SparkClusterMetastoresOozieObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterMetastoresObservation.
func (in *SparkClusterMetastoresObservation) DeepCopy() *SparkClusterMetastoresObservation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterMetastoresObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterMetastoresOozieInitParameters) DeepCopyInto(out *SparkClusterMetastoresOozieInitParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterMetastoresOozieInitParameters.
func (in *SparkClusterMetastoresOozieInitParameters) DeepCopy() *SparkClusterMetastoresOozieInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterMetastoresOozieInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterMetastoresOozieObservation) DeepCopyInto(out *SparkClusterMetastoresOozieObservation) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterMetastoresOozieObservation.
func (in *SparkClusterMetastoresOozieObservation) DeepCopy() *SparkClusterMetastoresOozieObservation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterMetastoresOozieObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterMetastoresOozieParameters) DeepCopyInto(out *SparkClusterMetastoresOozieParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterMetastoresOozieParameters.
func (in *SparkClusterMetastoresOozieParameters) DeepCopy() *SparkClusterMetastoresOozieParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterMetastoresOozieParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterMetastoresParameters) DeepCopyInto(out *SparkClusterMetastoresParameters) {
	*out = *in
	if in.Ambari != nil {
		in, out := &in.Ambari, &out.Ambari
		*out = make([]SparkClusterMetastoresAmbariParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hive != nil {
		in, out := &in.Hive, &out.Hive
		*out = make([]SparkClusterMetastoresHiveParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Oozie != nil {
		in, out := &in.Oozie, &out.Oozie
		*out = make([]SparkClusterMetastoresOozieParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterMetastoresParameters.
func (in *SparkClusterMetastoresParameters) DeepCopy() *SparkClusterMetastoresParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterMetastoresParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterMonitorInitParameters) DeepCopyInto(out *SparkClusterMonitorInitParameters) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterMonitorInitParameters.
func (in *SparkClusterMonitorInitParameters) DeepCopy() *SparkClusterMonitorInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterMonitorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterMonitorObservation) DeepCopyInto(out *SparkClusterMonitorObservation) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterMonitorObservation.
func (in *SparkClusterMonitorObservation) DeepCopy() *SparkClusterMonitorObservation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterMonitorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterMonitorParameters) DeepCopyInto(out *SparkClusterMonitorParameters) {
	*out = *in
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
	out.PrimaryKeySecretRef = in.PrimaryKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterMonitorParameters.
func (in *SparkClusterMonitorParameters) DeepCopy() *SparkClusterMonitorParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterMonitorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterNetworkInitParameters) DeepCopyInto(out *SparkClusterNetworkInitParameters) {
	*out = *in
	if in.ConnectionDirection != nil {
		in, out := &in.ConnectionDirection, &out.ConnectionDirection
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkEnabled != nil {
		in, out := &in.PrivateLinkEnabled, &out.PrivateLinkEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterNetworkInitParameters.
func (in *SparkClusterNetworkInitParameters) DeepCopy() *SparkClusterNetworkInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterNetworkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterNetworkObservation) DeepCopyInto(out *SparkClusterNetworkObservation) {
	*out = *in
	if in.ConnectionDirection != nil {
		in, out := &in.ConnectionDirection, &out.ConnectionDirection
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkEnabled != nil {
		in, out := &in.PrivateLinkEnabled, &out.PrivateLinkEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterNetworkObservation.
func (in *SparkClusterNetworkObservation) DeepCopy() *SparkClusterNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterNetworkParameters) DeepCopyInto(out *SparkClusterNetworkParameters) {
	*out = *in
	if in.ConnectionDirection != nil {
		in, out := &in.ConnectionDirection, &out.ConnectionDirection
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkEnabled != nil {
		in, out := &in.PrivateLinkEnabled, &out.PrivateLinkEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterNetworkParameters.
func (in *SparkClusterNetworkParameters) DeepCopy() *SparkClusterNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterObservation) DeepCopyInto(out *SparkClusterObservation) {
	*out = *in
	if in.ClusterVersion != nil {
		in, out := &in.ClusterVersion, &out.ClusterVersion
		*out = new(string)
		**out = **in
	}
	if in.ComponentVersion != nil {
		in, out := &in.ComponentVersion, &out.ComponentVersion
		*out = make([]SparkClusterComponentVersionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ComputeIsolation != nil {
		in, out := &in.ComputeIsolation, &out.ComputeIsolation
		*out = make([]SparkClusterComputeIsolationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryption != nil {
		in, out := &in.DiskEncryption, &out.DiskEncryption
		*out = make([]SparkClusterDiskEncryptionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionInTransitEnabled != nil {
		in, out := &in.EncryptionInTransitEnabled, &out.EncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Extension != nil {
		in, out := &in.Extension, &out.Extension
		*out = make([]SparkClusterExtensionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = make([]SparkClusterGatewayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPSEndpoint != nil {
		in, out := &in.HTTPSEndpoint, &out.HTTPSEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Metastores != nil {
		in, out := &in.Metastores, &out.Metastores
		*out = make([]SparkClusterMetastoresObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitor != nil {
		in, out := &in.Monitor, &out.Monitor
		*out = make([]SparkClusterMonitorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]SparkClusterNetworkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]SparkClusterRolesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHEndpoint != nil {
		in, out := &in.SSHEndpoint, &out.SSHEndpoint
		*out = new(string)
		**out = **in
	}
	if in.SecurityProfile != nil {
		in, out := &in.SecurityProfile, &out.SecurityProfile
		*out = make([]SparkClusterSecurityProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]SparkClusterStorageAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountGen2 != nil {
		in, out := &in.StorageAccountGen2, &out.StorageAccountGen2
		*out = make([]SparkClusterStorageAccountGen2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMinVersion != nil {
		in, out := &in.TLSMinVersion, &out.TLSMinVersion
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterObservation.
func (in *SparkClusterObservation) DeepCopy() *SparkClusterObservation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterParameters) DeepCopyInto(out *SparkClusterParameters) {
	*out = *in
	if in.ClusterVersion != nil {
		in, out := &in.ClusterVersion, &out.ClusterVersion
		*out = new(string)
		**out = **in
	}
	if in.ComponentVersion != nil {
		in, out := &in.ComponentVersion, &out.ComponentVersion
		*out = make([]SparkClusterComponentVersionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ComputeIsolation != nil {
		in, out := &in.ComputeIsolation, &out.ComputeIsolation
		*out = make([]SparkClusterComputeIsolationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryption != nil {
		in, out := &in.DiskEncryption, &out.DiskEncryption
		*out = make([]SparkClusterDiskEncryptionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionInTransitEnabled != nil {
		in, out := &in.EncryptionInTransitEnabled, &out.EncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Extension != nil {
		in, out := &in.Extension, &out.Extension
		*out = make([]SparkClusterExtensionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = make([]SparkClusterGatewayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Metastores != nil {
		in, out := &in.Metastores, &out.Metastores
		*out = make([]SparkClusterMetastoresParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitor != nil {
		in, out := &in.Monitor, &out.Monitor
		*out = make([]SparkClusterMonitorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]SparkClusterNetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]SparkClusterRolesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityProfile != nil {
		in, out := &in.SecurityProfile, &out.SecurityProfile
		*out = make([]SparkClusterSecurityProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = make([]SparkClusterStorageAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountGen2 != nil {
		in, out := &in.StorageAccountGen2, &out.StorageAccountGen2
		*out = make([]SparkClusterStorageAccountGen2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMinVersion != nil {
		in, out := &in.TLSMinVersion, &out.TLSMinVersion
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterParameters.
func (in *SparkClusterParameters) DeepCopy() *SparkClusterParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesHeadNodeInitParameters) DeepCopyInto(out *SparkClusterRolesHeadNodeInitParameters) {
	*out = *in
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]SparkClusterRolesHeadNodeScriptActionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesHeadNodeInitParameters.
func (in *SparkClusterRolesHeadNodeInitParameters) DeepCopy() *SparkClusterRolesHeadNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesHeadNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesHeadNodeObservation) DeepCopyInto(out *SparkClusterRolesHeadNodeObservation) {
	*out = *in
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]SparkClusterRolesHeadNodeScriptActionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesHeadNodeObservation.
func (in *SparkClusterRolesHeadNodeObservation) DeepCopy() *SparkClusterRolesHeadNodeObservation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesHeadNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesHeadNodeParameters) DeepCopyInto(out *SparkClusterRolesHeadNodeParameters) {
	*out = *in
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]SparkClusterRolesHeadNodeScriptActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesHeadNodeParameters.
func (in *SparkClusterRolesHeadNodeParameters) DeepCopy() *SparkClusterRolesHeadNodeParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesHeadNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesHeadNodeScriptActionsInitParameters) DeepCopyInto(out *SparkClusterRolesHeadNodeScriptActionsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesHeadNodeScriptActionsInitParameters.
func (in *SparkClusterRolesHeadNodeScriptActionsInitParameters) DeepCopy() *SparkClusterRolesHeadNodeScriptActionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesHeadNodeScriptActionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesHeadNodeScriptActionsObservation) DeepCopyInto(out *SparkClusterRolesHeadNodeScriptActionsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesHeadNodeScriptActionsObservation.
func (in *SparkClusterRolesHeadNodeScriptActionsObservation) DeepCopy() *SparkClusterRolesHeadNodeScriptActionsObservation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesHeadNodeScriptActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesHeadNodeScriptActionsParameters) DeepCopyInto(out *SparkClusterRolesHeadNodeScriptActionsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesHeadNodeScriptActionsParameters.
func (in *SparkClusterRolesHeadNodeScriptActionsParameters) DeepCopy() *SparkClusterRolesHeadNodeScriptActionsParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesHeadNodeScriptActionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesInitParameters) DeepCopyInto(out *SparkClusterRolesInitParameters) {
	*out = *in
	if in.HeadNode != nil {
		in, out := &in.HeadNode, &out.HeadNode
		*out = make([]SparkClusterRolesHeadNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNode != nil {
		in, out := &in.WorkerNode, &out.WorkerNode
		*out = make([]SparkClusterRolesWorkerNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZookeeperNode != nil {
		in, out := &in.ZookeeperNode, &out.ZookeeperNode
		*out = make([]SparkClusterRolesZookeeperNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesInitParameters.
func (in *SparkClusterRolesInitParameters) DeepCopy() *SparkClusterRolesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesObservation) DeepCopyInto(out *SparkClusterRolesObservation) {
	*out = *in
	if in.HeadNode != nil {
		in, out := &in.HeadNode, &out.HeadNode
		*out = make([]SparkClusterRolesHeadNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNode != nil {
		in, out := &in.WorkerNode, &out.WorkerNode
		*out = make([]SparkClusterRolesWorkerNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZookeeperNode != nil {
		in, out := &in.ZookeeperNode, &out.ZookeeperNode
		*out = make([]SparkClusterRolesZookeeperNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesObservation.
func (in *SparkClusterRolesObservation) DeepCopy() *SparkClusterRolesObservation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesParameters) DeepCopyInto(out *SparkClusterRolesParameters) {
	*out = *in
	if in.HeadNode != nil {
		in, out := &in.HeadNode, &out.HeadNode
		*out = make([]SparkClusterRolesHeadNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNode != nil {
		in, out := &in.WorkerNode, &out.WorkerNode
		*out = make([]SparkClusterRolesWorkerNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZookeeperNode != nil {
		in, out := &in.ZookeeperNode, &out.ZookeeperNode
		*out = make([]SparkClusterRolesZookeeperNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesParameters.
func (in *SparkClusterRolesParameters) DeepCopy() *SparkClusterRolesParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesWorkerNodeAutoscaleInitParameters) DeepCopyInto(out *SparkClusterRolesWorkerNodeAutoscaleInitParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = make([]WorkerNodeAutoscaleCapacityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = make([]RolesWorkerNodeAutoscaleRecurrenceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesWorkerNodeAutoscaleInitParameters.
func (in *SparkClusterRolesWorkerNodeAutoscaleInitParameters) DeepCopy() *SparkClusterRolesWorkerNodeAutoscaleInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesWorkerNodeAutoscaleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesWorkerNodeAutoscaleObservation) DeepCopyInto(out *SparkClusterRolesWorkerNodeAutoscaleObservation) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = make([]WorkerNodeAutoscaleCapacityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = make([]RolesWorkerNodeAutoscaleRecurrenceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesWorkerNodeAutoscaleObservation.
func (in *SparkClusterRolesWorkerNodeAutoscaleObservation) DeepCopy() *SparkClusterRolesWorkerNodeAutoscaleObservation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesWorkerNodeAutoscaleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesWorkerNodeAutoscaleParameters) DeepCopyInto(out *SparkClusterRolesWorkerNodeAutoscaleParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = make([]WorkerNodeAutoscaleCapacityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = make([]RolesWorkerNodeAutoscaleRecurrenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesWorkerNodeAutoscaleParameters.
func (in *SparkClusterRolesWorkerNodeAutoscaleParameters) DeepCopy() *SparkClusterRolesWorkerNodeAutoscaleParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesWorkerNodeAutoscaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesWorkerNodeInitParameters) DeepCopyInto(out *SparkClusterRolesWorkerNodeInitParameters) {
	*out = *in
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]SparkClusterRolesWorkerNodeAutoscaleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]SparkClusterRolesWorkerNodeScriptActionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesWorkerNodeInitParameters.
func (in *SparkClusterRolesWorkerNodeInitParameters) DeepCopy() *SparkClusterRolesWorkerNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesWorkerNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesWorkerNodeObservation) DeepCopyInto(out *SparkClusterRolesWorkerNodeObservation) {
	*out = *in
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]SparkClusterRolesWorkerNodeAutoscaleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]SparkClusterRolesWorkerNodeScriptActionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesWorkerNodeObservation.
func (in *SparkClusterRolesWorkerNodeObservation) DeepCopy() *SparkClusterRolesWorkerNodeObservation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesWorkerNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesWorkerNodeParameters) DeepCopyInto(out *SparkClusterRolesWorkerNodeParameters) {
	*out = *in
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]SparkClusterRolesWorkerNodeAutoscaleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]SparkClusterRolesWorkerNodeScriptActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesWorkerNodeParameters.
func (in *SparkClusterRolesWorkerNodeParameters) DeepCopy() *SparkClusterRolesWorkerNodeParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesWorkerNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesWorkerNodeScriptActionsInitParameters) DeepCopyInto(out *SparkClusterRolesWorkerNodeScriptActionsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesWorkerNodeScriptActionsInitParameters.
func (in *SparkClusterRolesWorkerNodeScriptActionsInitParameters) DeepCopy() *SparkClusterRolesWorkerNodeScriptActionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesWorkerNodeScriptActionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesWorkerNodeScriptActionsObservation) DeepCopyInto(out *SparkClusterRolesWorkerNodeScriptActionsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesWorkerNodeScriptActionsObservation.
func (in *SparkClusterRolesWorkerNodeScriptActionsObservation) DeepCopy() *SparkClusterRolesWorkerNodeScriptActionsObservation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesWorkerNodeScriptActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesWorkerNodeScriptActionsParameters) DeepCopyInto(out *SparkClusterRolesWorkerNodeScriptActionsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesWorkerNodeScriptActionsParameters.
func (in *SparkClusterRolesWorkerNodeScriptActionsParameters) DeepCopy() *SparkClusterRolesWorkerNodeScriptActionsParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesWorkerNodeScriptActionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesZookeeperNodeInitParameters) DeepCopyInto(out *SparkClusterRolesZookeeperNodeInitParameters) {
	*out = *in
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]SparkClusterRolesZookeeperNodeScriptActionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesZookeeperNodeInitParameters.
func (in *SparkClusterRolesZookeeperNodeInitParameters) DeepCopy() *SparkClusterRolesZookeeperNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesZookeeperNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesZookeeperNodeObservation) DeepCopyInto(out *SparkClusterRolesZookeeperNodeObservation) {
	*out = *in
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]SparkClusterRolesZookeeperNodeScriptActionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesZookeeperNodeObservation.
func (in *SparkClusterRolesZookeeperNodeObservation) DeepCopy() *SparkClusterRolesZookeeperNodeObservation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesZookeeperNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesZookeeperNodeParameters) DeepCopyInto(out *SparkClusterRolesZookeeperNodeParameters) {
	*out = *in
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]SparkClusterRolesZookeeperNodeScriptActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesZookeeperNodeParameters.
func (in *SparkClusterRolesZookeeperNodeParameters) DeepCopy() *SparkClusterRolesZookeeperNodeParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesZookeeperNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesZookeeperNodeScriptActionsInitParameters) DeepCopyInto(out *SparkClusterRolesZookeeperNodeScriptActionsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesZookeeperNodeScriptActionsInitParameters.
func (in *SparkClusterRolesZookeeperNodeScriptActionsInitParameters) DeepCopy() *SparkClusterRolesZookeeperNodeScriptActionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesZookeeperNodeScriptActionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesZookeeperNodeScriptActionsObservation) DeepCopyInto(out *SparkClusterRolesZookeeperNodeScriptActionsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesZookeeperNodeScriptActionsObservation.
func (in *SparkClusterRolesZookeeperNodeScriptActionsObservation) DeepCopy() *SparkClusterRolesZookeeperNodeScriptActionsObservation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesZookeeperNodeScriptActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterRolesZookeeperNodeScriptActionsParameters) DeepCopyInto(out *SparkClusterRolesZookeeperNodeScriptActionsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterRolesZookeeperNodeScriptActionsParameters.
func (in *SparkClusterRolesZookeeperNodeScriptActionsParameters) DeepCopy() *SparkClusterRolesZookeeperNodeScriptActionsParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterRolesZookeeperNodeScriptActionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterSecurityProfileInitParameters) DeepCopyInto(out *SparkClusterSecurityProfileInitParameters) {
	*out = *in
	if in.AaddsResourceID != nil {
		in, out := &in.AaddsResourceID, &out.AaddsResourceID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUsersGroupDNS != nil {
		in, out := &in.ClusterUsersGroupDNS, &out.ClusterUsersGroupDNS
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainUsername != nil {
		in, out := &in.DomainUsername, &out.DomainUsername
		*out = new(string)
		**out = **in
	}
	if in.LdapsUrls != nil {
		in, out := &in.LdapsUrls, &out.LdapsUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MsiResourceID != nil {
		in, out := &in.MsiResourceID, &out.MsiResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterSecurityProfileInitParameters.
func (in *SparkClusterSecurityProfileInitParameters) DeepCopy() *SparkClusterSecurityProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterSecurityProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterSecurityProfileObservation) DeepCopyInto(out *SparkClusterSecurityProfileObservation) {
	*out = *in
	if in.AaddsResourceID != nil {
		in, out := &in.AaddsResourceID, &out.AaddsResourceID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUsersGroupDNS != nil {
		in, out := &in.ClusterUsersGroupDNS, &out.ClusterUsersGroupDNS
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainUsername != nil {
		in, out := &in.DomainUsername, &out.DomainUsername
		*out = new(string)
		**out = **in
	}
	if in.LdapsUrls != nil {
		in, out := &in.LdapsUrls, &out.LdapsUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MsiResourceID != nil {
		in, out := &in.MsiResourceID, &out.MsiResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterSecurityProfileObservation.
func (in *SparkClusterSecurityProfileObservation) DeepCopy() *SparkClusterSecurityProfileObservation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterSecurityProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterSecurityProfileParameters) DeepCopyInto(out *SparkClusterSecurityProfileParameters) {
	*out = *in
	if in.AaddsResourceID != nil {
		in, out := &in.AaddsResourceID, &out.AaddsResourceID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUsersGroupDNS != nil {
		in, out := &in.ClusterUsersGroupDNS, &out.ClusterUsersGroupDNS
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	out.DomainUserPasswordSecretRef = in.DomainUserPasswordSecretRef
	if in.DomainUsername != nil {
		in, out := &in.DomainUsername, &out.DomainUsername
		*out = new(string)
		**out = **in
	}
	if in.LdapsUrls != nil {
		in, out := &in.LdapsUrls, &out.LdapsUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MsiResourceID != nil {
		in, out := &in.MsiResourceID, &out.MsiResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterSecurityProfileParameters.
func (in *SparkClusterSecurityProfileParameters) DeepCopy() *SparkClusterSecurityProfileParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterSecurityProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterSpec) DeepCopyInto(out *SparkClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterSpec.
func (in *SparkClusterSpec) DeepCopy() *SparkClusterSpec {
	if in == nil {
		return nil
	}
	out := new(SparkClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterStatus) DeepCopyInto(out *SparkClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterStatus.
func (in *SparkClusterStatus) DeepCopy() *SparkClusterStatus {
	if in == nil {
		return nil
	}
	out := new(SparkClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterStorageAccountGen2InitParameters) DeepCopyInto(out *SparkClusterStorageAccountGen2InitParameters) {
	*out = *in
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.ManagedIdentityResourceID != nil {
		in, out := &in.ManagedIdentityResourceID, &out.ManagedIdentityResourceID
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterStorageAccountGen2InitParameters.
func (in *SparkClusterStorageAccountGen2InitParameters) DeepCopy() *SparkClusterStorageAccountGen2InitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterStorageAccountGen2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterStorageAccountGen2Observation) DeepCopyInto(out *SparkClusterStorageAccountGen2Observation) {
	*out = *in
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.ManagedIdentityResourceID != nil {
		in, out := &in.ManagedIdentityResourceID, &out.ManagedIdentityResourceID
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterStorageAccountGen2Observation.
func (in *SparkClusterStorageAccountGen2Observation) DeepCopy() *SparkClusterStorageAccountGen2Observation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterStorageAccountGen2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterStorageAccountGen2Parameters) DeepCopyInto(out *SparkClusterStorageAccountGen2Parameters) {
	*out = *in
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.ManagedIdentityResourceID != nil {
		in, out := &in.ManagedIdentityResourceID, &out.ManagedIdentityResourceID
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterStorageAccountGen2Parameters.
func (in *SparkClusterStorageAccountGen2Parameters) DeepCopy() *SparkClusterStorageAccountGen2Parameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterStorageAccountGen2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterStorageAccountInitParameters) DeepCopyInto(out *SparkClusterStorageAccountInitParameters) {
	*out = *in
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterStorageAccountInitParameters.
func (in *SparkClusterStorageAccountInitParameters) DeepCopy() *SparkClusterStorageAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterStorageAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterStorageAccountObservation) DeepCopyInto(out *SparkClusterStorageAccountObservation) {
	*out = *in
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.StorageContainerID != nil {
		in, out := &in.StorageContainerID, &out.StorageContainerID
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterStorageAccountObservation.
func (in *SparkClusterStorageAccountObservation) DeepCopy() *SparkClusterStorageAccountObservation {
	if in == nil {
		return nil
	}
	out := new(SparkClusterStorageAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkClusterStorageAccountParameters) DeepCopyInto(out *SparkClusterStorageAccountParameters) {
	*out = *in
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	out.StorageAccountKeySecretRef = in.StorageAccountKeySecretRef
	if in.StorageContainerID != nil {
		in, out := &in.StorageContainerID, &out.StorageContainerID
		*out = new(string)
		**out = **in
	}
	if in.StorageContainerIDRef != nil {
		in, out := &in.StorageContainerIDRef, &out.StorageContainerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageContainerIDSelector != nil {
		in, out := &in.StorageContainerIDSelector, &out.StorageContainerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkClusterStorageAccountParameters.
func (in *SparkClusterStorageAccountParameters) DeepCopy() *SparkClusterStorageAccountParameters {
	if in == nil {
		return nil
	}
	out := new(SparkClusterStorageAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountGen2InitParameters) DeepCopyInto(out *StorageAccountGen2InitParameters) {
	*out = *in
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.ManagedIdentityResourceID != nil {
		in, out := &in.ManagedIdentityResourceID, &out.ManagedIdentityResourceID
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountGen2InitParameters.
func (in *StorageAccountGen2InitParameters) DeepCopy() *StorageAccountGen2InitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageAccountGen2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountGen2Observation) DeepCopyInto(out *StorageAccountGen2Observation) {
	*out = *in
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.ManagedIdentityResourceID != nil {
		in, out := &in.ManagedIdentityResourceID, &out.ManagedIdentityResourceID
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountGen2Observation.
func (in *StorageAccountGen2Observation) DeepCopy() *StorageAccountGen2Observation {
	if in == nil {
		return nil
	}
	out := new(StorageAccountGen2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountGen2Parameters) DeepCopyInto(out *StorageAccountGen2Parameters) {
	*out = *in
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.ManagedIdentityResourceID != nil {
		in, out := &in.ManagedIdentityResourceID, &out.ManagedIdentityResourceID
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountGen2Parameters.
func (in *StorageAccountGen2Parameters) DeepCopy() *StorageAccountGen2Parameters {
	if in == nil {
		return nil
	}
	out := new(StorageAccountGen2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountInitParameters) DeepCopyInto(out *StorageAccountInitParameters) {
	*out = *in
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountInitParameters.
func (in *StorageAccountInitParameters) DeepCopy() *StorageAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountObservation) DeepCopyInto(out *StorageAccountObservation) {
	*out = *in
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.StorageContainerID != nil {
		in, out := &in.StorageContainerID, &out.StorageContainerID
		*out = new(string)
		**out = **in
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountObservation.
func (in *StorageAccountObservation) DeepCopy() *StorageAccountObservation {
	if in == nil {
		return nil
	}
	out := new(StorageAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountParameters) DeepCopyInto(out *StorageAccountParameters) {
	*out = *in
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	out.StorageAccountKeySecretRef = in.StorageAccountKeySecretRef
	if in.StorageContainerID != nil {
		in, out := &in.StorageContainerID, &out.StorageContainerID
		*out = new(string)
		**out = **in
	}
	if in.StorageContainerIDRef != nil {
		in, out := &in.StorageContainerIDRef, &out.StorageContainerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageContainerIDSelector != nil {
		in, out := &in.StorageContainerIDSelector, &out.StorageContainerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageResourceID != nil {
		in, out := &in.StorageResourceID, &out.StorageResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountParameters.
func (in *StorageAccountParameters) DeepCopy() *StorageAccountParameters {
	if in == nil {
		return nil
	}
	out := new(StorageAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UninstallScriptActionsInitParameters) DeepCopyInto(out *UninstallScriptActionsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UninstallScriptActionsInitParameters.
func (in *UninstallScriptActionsInitParameters) DeepCopy() *UninstallScriptActionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(UninstallScriptActionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UninstallScriptActionsObservation) DeepCopyInto(out *UninstallScriptActionsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UninstallScriptActionsObservation.
func (in *UninstallScriptActionsObservation) DeepCopy() *UninstallScriptActionsObservation {
	if in == nil {
		return nil
	}
	out := new(UninstallScriptActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UninstallScriptActionsParameters) DeepCopyInto(out *UninstallScriptActionsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UninstallScriptActionsParameters.
func (in *UninstallScriptActionsParameters) DeepCopy() *UninstallScriptActionsParameters {
	if in == nil {
		return nil
	}
	out := new(UninstallScriptActionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeAutoscaleCapacityInitParameters) DeepCopyInto(out *WorkerNodeAutoscaleCapacityInitParameters) {
	*out = *in
	if in.MaxInstanceCount != nil {
		in, out := &in.MaxInstanceCount, &out.MaxInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.MinInstanceCount != nil {
		in, out := &in.MinInstanceCount, &out.MinInstanceCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeAutoscaleCapacityInitParameters.
func (in *WorkerNodeAutoscaleCapacityInitParameters) DeepCopy() *WorkerNodeAutoscaleCapacityInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeAutoscaleCapacityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeAutoscaleCapacityObservation) DeepCopyInto(out *WorkerNodeAutoscaleCapacityObservation) {
	*out = *in
	if in.MaxInstanceCount != nil {
		in, out := &in.MaxInstanceCount, &out.MaxInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.MinInstanceCount != nil {
		in, out := &in.MinInstanceCount, &out.MinInstanceCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeAutoscaleCapacityObservation.
func (in *WorkerNodeAutoscaleCapacityObservation) DeepCopy() *WorkerNodeAutoscaleCapacityObservation {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeAutoscaleCapacityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeAutoscaleCapacityParameters) DeepCopyInto(out *WorkerNodeAutoscaleCapacityParameters) {
	*out = *in
	if in.MaxInstanceCount != nil {
		in, out := &in.MaxInstanceCount, &out.MaxInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.MinInstanceCount != nil {
		in, out := &in.MinInstanceCount, &out.MinInstanceCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeAutoscaleCapacityParameters.
func (in *WorkerNodeAutoscaleCapacityParameters) DeepCopy() *WorkerNodeAutoscaleCapacityParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeAutoscaleCapacityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeAutoscaleInitParameters) DeepCopyInto(out *WorkerNodeAutoscaleInitParameters) {
	*out = *in
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = make([]AutoscaleRecurrenceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeAutoscaleInitParameters.
func (in *WorkerNodeAutoscaleInitParameters) DeepCopy() *WorkerNodeAutoscaleInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeAutoscaleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeAutoscaleObservation) DeepCopyInto(out *WorkerNodeAutoscaleObservation) {
	*out = *in
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = make([]AutoscaleRecurrenceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeAutoscaleObservation.
func (in *WorkerNodeAutoscaleObservation) DeepCopy() *WorkerNodeAutoscaleObservation {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeAutoscaleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeAutoscaleParameters) DeepCopyInto(out *WorkerNodeAutoscaleParameters) {
	*out = *in
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = make([]AutoscaleRecurrenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeAutoscaleParameters.
func (in *WorkerNodeAutoscaleParameters) DeepCopy() *WorkerNodeAutoscaleParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeAutoscaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeAutoscaleRecurrenceInitParameters) DeepCopyInto(out *WorkerNodeAutoscaleRecurrenceInitParameters) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]AutoscaleRecurrenceScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeAutoscaleRecurrenceInitParameters.
func (in *WorkerNodeAutoscaleRecurrenceInitParameters) DeepCopy() *WorkerNodeAutoscaleRecurrenceInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeAutoscaleRecurrenceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeAutoscaleRecurrenceObservation) DeepCopyInto(out *WorkerNodeAutoscaleRecurrenceObservation) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]AutoscaleRecurrenceScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeAutoscaleRecurrenceObservation.
func (in *WorkerNodeAutoscaleRecurrenceObservation) DeepCopy() *WorkerNodeAutoscaleRecurrenceObservation {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeAutoscaleRecurrenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeAutoscaleRecurrenceParameters) DeepCopyInto(out *WorkerNodeAutoscaleRecurrenceParameters) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]AutoscaleRecurrenceScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeAutoscaleRecurrenceParameters.
func (in *WorkerNodeAutoscaleRecurrenceParameters) DeepCopy() *WorkerNodeAutoscaleRecurrenceParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeAutoscaleRecurrenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeAutoscaleRecurrenceScheduleInitParameters) DeepCopyInto(out *WorkerNodeAutoscaleRecurrenceScheduleInitParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeAutoscaleRecurrenceScheduleInitParameters.
func (in *WorkerNodeAutoscaleRecurrenceScheduleInitParameters) DeepCopy() *WorkerNodeAutoscaleRecurrenceScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeAutoscaleRecurrenceScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeAutoscaleRecurrenceScheduleObservation) DeepCopyInto(out *WorkerNodeAutoscaleRecurrenceScheduleObservation) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeAutoscaleRecurrenceScheduleObservation.
func (in *WorkerNodeAutoscaleRecurrenceScheduleObservation) DeepCopy() *WorkerNodeAutoscaleRecurrenceScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeAutoscaleRecurrenceScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeAutoscaleRecurrenceScheduleParameters) DeepCopyInto(out *WorkerNodeAutoscaleRecurrenceScheduleParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeAutoscaleRecurrenceScheduleParameters.
func (in *WorkerNodeAutoscaleRecurrenceScheduleParameters) DeepCopy() *WorkerNodeAutoscaleRecurrenceScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeAutoscaleRecurrenceScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeInitParameters) DeepCopyInto(out *WorkerNodeInitParameters) {
	*out = *in
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]AutoscaleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]WorkerNodeScriptActionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeInitParameters.
func (in *WorkerNodeInitParameters) DeepCopy() *WorkerNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeObservation) DeepCopyInto(out *WorkerNodeObservation) {
	*out = *in
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]AutoscaleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]WorkerNodeScriptActionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeObservation.
func (in *WorkerNodeObservation) DeepCopy() *WorkerNodeObservation {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeParameters) DeepCopyInto(out *WorkerNodeParameters) {
	*out = *in
	if in.Autoscale != nil {
		in, out := &in.Autoscale, &out.Autoscale
		*out = make([]AutoscaleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]WorkerNodeScriptActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetInstanceCount != nil {
		in, out := &in.TargetInstanceCount, &out.TargetInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeParameters.
func (in *WorkerNodeParameters) DeepCopy() *WorkerNodeParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeScriptActionsInitParameters) DeepCopyInto(out *WorkerNodeScriptActionsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeScriptActionsInitParameters.
func (in *WorkerNodeScriptActionsInitParameters) DeepCopy() *WorkerNodeScriptActionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeScriptActionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeScriptActionsObservation) DeepCopyInto(out *WorkerNodeScriptActionsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeScriptActionsObservation.
func (in *WorkerNodeScriptActionsObservation) DeepCopy() *WorkerNodeScriptActionsObservation {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeScriptActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeScriptActionsParameters) DeepCopyInto(out *WorkerNodeScriptActionsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeScriptActionsParameters.
func (in *WorkerNodeScriptActionsParameters) DeepCopy() *WorkerNodeScriptActionsParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeScriptActionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZookeeperNodeInitParameters) DeepCopyInto(out *ZookeeperNodeInitParameters) {
	*out = *in
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]ZookeeperNodeScriptActionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZookeeperNodeInitParameters.
func (in *ZookeeperNodeInitParameters) DeepCopy() *ZookeeperNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(ZookeeperNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZookeeperNodeObservation) DeepCopyInto(out *ZookeeperNodeObservation) {
	*out = *in
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]ZookeeperNodeScriptActionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZookeeperNodeObservation.
func (in *ZookeeperNodeObservation) DeepCopy() *ZookeeperNodeObservation {
	if in == nil {
		return nil
	}
	out := new(ZookeeperNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZookeeperNodeParameters) DeepCopyInto(out *ZookeeperNodeParameters) {
	*out = *in
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScriptActions != nil {
		in, out := &in.ScriptActions, &out.ScriptActions
		*out = make([]ZookeeperNodeScriptActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZookeeperNodeParameters.
func (in *ZookeeperNodeParameters) DeepCopy() *ZookeeperNodeParameters {
	if in == nil {
		return nil
	}
	out := new(ZookeeperNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZookeeperNodeScriptActionsInitParameters) DeepCopyInto(out *ZookeeperNodeScriptActionsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZookeeperNodeScriptActionsInitParameters.
func (in *ZookeeperNodeScriptActionsInitParameters) DeepCopy() *ZookeeperNodeScriptActionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ZookeeperNodeScriptActionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZookeeperNodeScriptActionsObservation) DeepCopyInto(out *ZookeeperNodeScriptActionsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZookeeperNodeScriptActionsObservation.
func (in *ZookeeperNodeScriptActionsObservation) DeepCopy() *ZookeeperNodeScriptActionsObservation {
	if in == nil {
		return nil
	}
	out := new(ZookeeperNodeScriptActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZookeeperNodeScriptActionsParameters) DeepCopyInto(out *ZookeeperNodeScriptActionsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZookeeperNodeScriptActionsParameters.
func (in *ZookeeperNodeScriptActionsParameters) DeepCopy() *ZookeeperNodeScriptActionsParameters {
	if in == nil {
		return nil
	}
	out := new(ZookeeperNodeScriptActionsParameters)
	in.DeepCopyInto(out)
	return out
}
