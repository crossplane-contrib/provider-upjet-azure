//go:build (cognitiveservices || all) && !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta2

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DeploymentInitParameters struct {

	// A model block as defined below. Changing this forces a new resource to be created.
	Model *ModelInitParameters `json:"model,omitempty" tf:"model,omitempty"`

	// The name of RAI policy.
	RaiPolicyName *string `json:"raiPolicyName,omitempty" tf:"rai_policy_name,omitempty"`

	// A scale block as defined below.
	Scale *ScaleInitParameters `json:"scale,omitempty" tf:"scale,omitempty"`

	// Deployment model version upgrade option. Possible values are OnceNewDefaultVersionAvailable, OnceCurrentVersionExpired, and NoAutoUpgrade. Defaults to OnceNewDefaultVersionAvailable.
	VersionUpgradeOption *string `json:"versionUpgradeOption,omitempty" tf:"version_upgrade_option,omitempty"`
}

type DeploymentObservation struct {

	// The ID of the Cognitive Services Account. Changing this forces a new resource to be created.
	CognitiveAccountID *string `json:"cognitiveAccountId,omitempty" tf:"cognitive_account_id,omitempty"`

	// The ID of the Deployment for Azure Cognitive Services Account.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A model block as defined below. Changing this forces a new resource to be created.
	Model *ModelObservation `json:"model,omitempty" tf:"model,omitempty"`

	// The name of RAI policy.
	RaiPolicyName *string `json:"raiPolicyName,omitempty" tf:"rai_policy_name,omitempty"`

	// A scale block as defined below.
	Scale *ScaleObservation `json:"scale,omitempty" tf:"scale,omitempty"`

	// Deployment model version upgrade option. Possible values are OnceNewDefaultVersionAvailable, OnceCurrentVersionExpired, and NoAutoUpgrade. Defaults to OnceNewDefaultVersionAvailable.
	VersionUpgradeOption *string `json:"versionUpgradeOption,omitempty" tf:"version_upgrade_option,omitempty"`
}

type DeploymentParameters struct {

	// The ID of the Cognitive Services Account. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/cognitiveservices/v1beta2.Account
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	CognitiveAccountID *string `json:"cognitiveAccountId,omitempty" tf:"cognitive_account_id,omitempty"`

	// Reference to a Account in cognitiveservices to populate cognitiveAccountId.
	// +kubebuilder:validation:Optional
	CognitiveAccountIDRef *v1.Reference `json:"cognitiveAccountIdRef,omitempty" tf:"-"`

	// Selector for a Account in cognitiveservices to populate cognitiveAccountId.
	// +kubebuilder:validation:Optional
	CognitiveAccountIDSelector *v1.Selector `json:"cognitiveAccountIdSelector,omitempty" tf:"-"`

	// A model block as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	Model *ModelParameters `json:"model,omitempty" tf:"model,omitempty"`

	// The name of RAI policy.
	// +kubebuilder:validation:Optional
	RaiPolicyName *string `json:"raiPolicyName,omitempty" tf:"rai_policy_name,omitempty"`

	// A scale block as defined below.
	// +kubebuilder:validation:Optional
	Scale *ScaleParameters `json:"scale,omitempty" tf:"scale,omitempty"`

	// Deployment model version upgrade option. Possible values are OnceNewDefaultVersionAvailable, OnceCurrentVersionExpired, and NoAutoUpgrade. Defaults to OnceNewDefaultVersionAvailable.
	// +kubebuilder:validation:Optional
	VersionUpgradeOption *string `json:"versionUpgradeOption,omitempty" tf:"version_upgrade_option,omitempty"`
}

type ModelInitParameters struct {

	// The format of the Cognitive Services Account Deployment model. Changing this forces a new resource to be created. Possible value is OpenAI.
	Format *string `json:"format,omitempty" tf:"format,omitempty"`

	// The name of the Cognitive Services Account Deployment model. Changing this forces a new resource to be created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The version of Cognitive Services Account Deployment model. If version is not specified, the default version of the model at the time will be assigned.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type ModelObservation struct {

	// The format of the Cognitive Services Account Deployment model. Changing this forces a new resource to be created. Possible value is OpenAI.
	Format *string `json:"format,omitempty" tf:"format,omitempty"`

	// The name of the Cognitive Services Account Deployment model. Changing this forces a new resource to be created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The version of Cognitive Services Account Deployment model. If version is not specified, the default version of the model at the time will be assigned.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type ModelParameters struct {

	// The format of the Cognitive Services Account Deployment model. Changing this forces a new resource to be created. Possible value is OpenAI.
	// +kubebuilder:validation:Optional
	Format *string `json:"format" tf:"format,omitempty"`

	// The name of the Cognitive Services Account Deployment model. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The version of Cognitive Services Account Deployment model. If version is not specified, the default version of the model at the time will be assigned.
	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type ScaleInitParameters struct {

	// Tokens-per-Minute (TPM). The unit of measure for this field is in the thousands of Tokens-per-Minute. Defaults to 1 which means that the limitation is 1000 tokens per minute. If the resources SKU supports scale in/out then the capacity field should be included in the resources' configuration. If the scale in/out is not supported by the resources SKU then this field can be safely omitted. For more information about TPM please see the product documentation.
	Capacity *float64 `json:"capacity,omitempty" tf:"capacity,omitempty"`

	// If the service has different generations of hardware, for the same SKU, then that can be captured here. Changing this forces a new resource to be created.
	Family *string `json:"family,omitempty" tf:"family,omitempty"`

	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. Changing this forces a new resource to be created.
	Size *string `json:"size,omitempty" tf:"size,omitempty"`

	// Possible values are Free, Basic, Standard, Premium, Enterprise. Changing this forces a new resource to be created.
	Tier *string `json:"tier,omitempty" tf:"tier,omitempty"`

	// The name of the SKU. Ex - Standard or P3. It is typically a letter+number code. Changing this forces a new resource to be created.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ScaleObservation struct {

	// Tokens-per-Minute (TPM). The unit of measure for this field is in the thousands of Tokens-per-Minute. Defaults to 1 which means that the limitation is 1000 tokens per minute. If the resources SKU supports scale in/out then the capacity field should be included in the resources' configuration. If the scale in/out is not supported by the resources SKU then this field can be safely omitted. For more information about TPM please see the product documentation.
	Capacity *float64 `json:"capacity,omitempty" tf:"capacity,omitempty"`

	// If the service has different generations of hardware, for the same SKU, then that can be captured here. Changing this forces a new resource to be created.
	Family *string `json:"family,omitempty" tf:"family,omitempty"`

	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. Changing this forces a new resource to be created.
	Size *string `json:"size,omitempty" tf:"size,omitempty"`

	// Possible values are Free, Basic, Standard, Premium, Enterprise. Changing this forces a new resource to be created.
	Tier *string `json:"tier,omitempty" tf:"tier,omitempty"`

	// The name of the SKU. Ex - Standard or P3. It is typically a letter+number code. Changing this forces a new resource to be created.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ScaleParameters struct {

	// Tokens-per-Minute (TPM). The unit of measure for this field is in the thousands of Tokens-per-Minute. Defaults to 1 which means that the limitation is 1000 tokens per minute. If the resources SKU supports scale in/out then the capacity field should be included in the resources' configuration. If the scale in/out is not supported by the resources SKU then this field can be safely omitted. For more information about TPM please see the product documentation.
	// +kubebuilder:validation:Optional
	Capacity *float64 `json:"capacity,omitempty" tf:"capacity,omitempty"`

	// If the service has different generations of hardware, for the same SKU, then that can be captured here. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	Family *string `json:"family,omitempty" tf:"family,omitempty"`

	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	Size *string `json:"size,omitempty" tf:"size,omitempty"`

	// Possible values are Free, Basic, Standard, Premium, Enterprise. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	Tier *string `json:"tier,omitempty" tf:"tier,omitempty"`

	// The name of the SKU. Ex - Standard or P3. It is typically a letter+number code. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

// DeploymentSpec defines the desired state of Deployment
type DeploymentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DeploymentParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider DeploymentInitParameters `json:"initProvider,omitempty"`
}

// DeploymentStatus defines the observed state of Deployment.
type DeploymentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DeploymentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status

// Deployment is the Schema for the Deployments API. Manages a Cognitive Services Account Deployment.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type Deployment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.model) || (has(self.initProvider) && has(self.initProvider.model))",message="spec.forProvider.model is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.scale) || (has(self.initProvider) && has(self.initProvider.scale))",message="spec.forProvider.scale is a required parameter"
	Spec   DeploymentSpec   `json:"spec"`
	Status DeploymentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DeploymentList contains a list of Deployments
type DeploymentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Deployment `json:"items"`
}

// Repository type metadata.
var (
	Deployment_Kind             = "Deployment"
	Deployment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Deployment_Kind}.String()
	Deployment_KindAPIVersion   = Deployment_Kind + "." + CRDGroupVersion.String()
	Deployment_GroupVersionKind = CRDGroupVersion.WithKind(Deployment_Kind)
)

func init() {
	SchemeBuilder.Register(&Deployment{}, &DeploymentList{})
}
