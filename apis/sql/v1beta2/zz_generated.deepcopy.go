//go:build (sql || all) && !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta2

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureadAdministratorInitParameters) DeepCopyInto(out *AzureadAdministratorInitParameters) {
	*out = *in
	if in.AzureadAuthenticationOnly != nil {
		in, out := &in.AzureadAuthenticationOnly, &out.AzureadAuthenticationOnly
		*out = new(bool)
		**out = **in
	}
	if in.LoginUsername != nil {
		in, out := &in.LoginUsername, &out.LoginUsername
		*out = new(string)
		**out = **in
	}
	if in.LoginUsernameRef != nil {
		in, out := &in.LoginUsernameRef, &out.LoginUsernameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LoginUsernameSelector != nil {
		in, out := &in.LoginUsernameSelector, &out.LoginUsernameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(string)
		**out = **in
	}
	if in.ObjectIDRef != nil {
		in, out := &in.ObjectIDRef, &out.ObjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ObjectIDSelector != nil {
		in, out := &in.ObjectIDSelector, &out.ObjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureadAdministratorInitParameters.
func (in *AzureadAdministratorInitParameters) DeepCopy() *AzureadAdministratorInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureadAdministratorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureadAdministratorObservation) DeepCopyInto(out *AzureadAdministratorObservation) {
	*out = *in
	if in.AzureadAuthenticationOnly != nil {
		in, out := &in.AzureadAuthenticationOnly, &out.AzureadAuthenticationOnly
		*out = new(bool)
		**out = **in
	}
	if in.LoginUsername != nil {
		in, out := &in.LoginUsername, &out.LoginUsername
		*out = new(string)
		**out = **in
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureadAdministratorObservation.
func (in *AzureadAdministratorObservation) DeepCopy() *AzureadAdministratorObservation {
	if in == nil {
		return nil
	}
	out := new(AzureadAdministratorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureadAdministratorParameters) DeepCopyInto(out *AzureadAdministratorParameters) {
	*out = *in
	if in.AzureadAuthenticationOnly != nil {
		in, out := &in.AzureadAuthenticationOnly, &out.AzureadAuthenticationOnly
		*out = new(bool)
		**out = **in
	}
	if in.LoginUsername != nil {
		in, out := &in.LoginUsername, &out.LoginUsername
		*out = new(string)
		**out = **in
	}
	if in.LoginUsernameRef != nil {
		in, out := &in.LoginUsernameRef, &out.LoginUsernameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LoginUsernameSelector != nil {
		in, out := &in.LoginUsernameSelector, &out.LoginUsernameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(string)
		**out = **in
	}
	if in.ObjectIDRef != nil {
		in, out := &in.ObjectIDRef, &out.ObjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ObjectIDSelector != nil {
		in, out := &in.ObjectIDSelector, &out.ObjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureadAdministratorParameters.
func (in *AzureadAdministratorParameters) DeepCopy() *AzureadAdministratorParameters {
	if in == nil {
		return nil
	}
	out := new(AzureadAdministratorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityInitParameters) DeepCopyInto(out *IdentityInitParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityInitParameters.
func (in *IdentityInitParameters) DeepCopy() *IdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityObservation) DeepCopyInto(out *IdentityObservation) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityObservation.
func (in *IdentityObservation) DeepCopy() *IdentityObservation {
	if in == nil {
		return nil
	}
	out := new(IdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityParameters) DeepCopyInto(out *IdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityParameters.
func (in *IdentityParameters) DeepCopy() *IdentityParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImportInitParameters) DeepCopyInto(out *ImportInitParameters) {
	*out = *in
	if in.AdministratorLogin != nil {
		in, out := &in.AdministratorLogin, &out.AdministratorLogin
		*out = new(string)
		**out = **in
	}
	out.AdministratorLoginPasswordSecretRef = in.AdministratorLoginPasswordSecretRef
	if in.AuthenticationType != nil {
		in, out := &in.AuthenticationType, &out.AuthenticationType
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountID != nil {
		in, out := &in.StorageAccountID, &out.StorageAccountID
		*out = new(string)
		**out = **in
	}
	out.StorageKeySecretRef = in.StorageKeySecretRef
	if in.StorageKeyType != nil {
		in, out := &in.StorageKeyType, &out.StorageKeyType
		*out = new(string)
		**out = **in
	}
	if in.StorageURI != nil {
		in, out := &in.StorageURI, &out.StorageURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImportInitParameters.
func (in *ImportInitParameters) DeepCopy() *ImportInitParameters {
	if in == nil {
		return nil
	}
	out := new(ImportInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImportObservation) DeepCopyInto(out *ImportObservation) {
	*out = *in
	if in.AdministratorLogin != nil {
		in, out := &in.AdministratorLogin, &out.AdministratorLogin
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationType != nil {
		in, out := &in.AuthenticationType, &out.AuthenticationType
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountID != nil {
		in, out := &in.StorageAccountID, &out.StorageAccountID
		*out = new(string)
		**out = **in
	}
	if in.StorageKeyType != nil {
		in, out := &in.StorageKeyType, &out.StorageKeyType
		*out = new(string)
		**out = **in
	}
	if in.StorageURI != nil {
		in, out := &in.StorageURI, &out.StorageURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImportObservation.
func (in *ImportObservation) DeepCopy() *ImportObservation {
	if in == nil {
		return nil
	}
	out := new(ImportObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImportParameters) DeepCopyInto(out *ImportParameters) {
	*out = *in
	if in.AdministratorLogin != nil {
		in, out := &in.AdministratorLogin, &out.AdministratorLogin
		*out = new(string)
		**out = **in
	}
	out.AdministratorLoginPasswordSecretRef = in.AdministratorLoginPasswordSecretRef
	if in.AuthenticationType != nil {
		in, out := &in.AuthenticationType, &out.AuthenticationType
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountID != nil {
		in, out := &in.StorageAccountID, &out.StorageAccountID
		*out = new(string)
		**out = **in
	}
	out.StorageKeySecretRef = in.StorageKeySecretRef
	if in.StorageKeyType != nil {
		in, out := &in.StorageKeyType, &out.StorageKeyType
		*out = new(string)
		**out = **in
	}
	if in.StorageURI != nil {
		in, out := &in.StorageURI, &out.StorageURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImportParameters.
func (in *ImportParameters) DeepCopy() *ImportParameters {
	if in == nil {
		return nil
	}
	out := new(ImportParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LongTermRetentionPolicyInitParameters) DeepCopyInto(out *LongTermRetentionPolicyInitParameters) {
	*out = *in
	if in.ImmutableBackupsEnabled != nil {
		in, out := &in.ImmutableBackupsEnabled, &out.ImmutableBackupsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MonthlyRetention != nil {
		in, out := &in.MonthlyRetention, &out.MonthlyRetention
		*out = new(string)
		**out = **in
	}
	if in.WeekOfYear != nil {
		in, out := &in.WeekOfYear, &out.WeekOfYear
		*out = new(float64)
		**out = **in
	}
	if in.WeeklyRetention != nil {
		in, out := &in.WeeklyRetention, &out.WeeklyRetention
		*out = new(string)
		**out = **in
	}
	if in.YearlyRetention != nil {
		in, out := &in.YearlyRetention, &out.YearlyRetention
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LongTermRetentionPolicyInitParameters.
func (in *LongTermRetentionPolicyInitParameters) DeepCopy() *LongTermRetentionPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(LongTermRetentionPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LongTermRetentionPolicyObservation) DeepCopyInto(out *LongTermRetentionPolicyObservation) {
	*out = *in
	if in.ImmutableBackupsEnabled != nil {
		in, out := &in.ImmutableBackupsEnabled, &out.ImmutableBackupsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MonthlyRetention != nil {
		in, out := &in.MonthlyRetention, &out.MonthlyRetention
		*out = new(string)
		**out = **in
	}
	if in.WeekOfYear != nil {
		in, out := &in.WeekOfYear, &out.WeekOfYear
		*out = new(float64)
		**out = **in
	}
	if in.WeeklyRetention != nil {
		in, out := &in.WeeklyRetention, &out.WeeklyRetention
		*out = new(string)
		**out = **in
	}
	if in.YearlyRetention != nil {
		in, out := &in.YearlyRetention, &out.YearlyRetention
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LongTermRetentionPolicyObservation.
func (in *LongTermRetentionPolicyObservation) DeepCopy() *LongTermRetentionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(LongTermRetentionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LongTermRetentionPolicyParameters) DeepCopyInto(out *LongTermRetentionPolicyParameters) {
	*out = *in
	if in.ImmutableBackupsEnabled != nil {
		in, out := &in.ImmutableBackupsEnabled, &out.ImmutableBackupsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MonthlyRetention != nil {
		in, out := &in.MonthlyRetention, &out.MonthlyRetention
		*out = new(string)
		**out = **in
	}
	if in.WeekOfYear != nil {
		in, out := &in.WeekOfYear, &out.WeekOfYear
		*out = new(float64)
		**out = **in
	}
	if in.WeeklyRetention != nil {
		in, out := &in.WeeklyRetention, &out.WeeklyRetention
		*out = new(string)
		**out = **in
	}
	if in.YearlyRetention != nil {
		in, out := &in.YearlyRetention, &out.YearlyRetention
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LongTermRetentionPolicyParameters.
func (in *LongTermRetentionPolicyParameters) DeepCopy() *LongTermRetentionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(LongTermRetentionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLDatabase) DeepCopyInto(out *MSSQLDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLDatabase.
func (in *MSSQLDatabase) DeepCopy() *MSSQLDatabase {
	if in == nil {
		return nil
	}
	out := new(MSSQLDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MSSQLDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLDatabaseInitParameters) DeepCopyInto(out *MSSQLDatabaseInitParameters) {
	*out = *in
	if in.AutoPauseDelayInMinutes != nil {
		in, out := &in.AutoPauseDelayInMinutes, &out.AutoPauseDelayInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.CreateMode != nil {
		in, out := &in.CreateMode, &out.CreateMode
		*out = new(string)
		**out = **in
	}
	if in.CreationSourceDatabaseID != nil {
		in, out := &in.CreationSourceDatabaseID, &out.CreationSourceDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.ElasticPoolID != nil {
		in, out := &in.ElasticPoolID, &out.ElasticPoolID
		*out = new(string)
		**out = **in
	}
	if in.EnclaveType != nil {
		in, out := &in.EnclaveType, &out.EnclaveType
		*out = new(string)
		**out = **in
	}
	if in.GeoBackupEnabled != nil {
		in, out := &in.GeoBackupEnabled, &out.GeoBackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(IdentityInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Import != nil {
		in, out := &in.Import, &out.Import
		*out = new(ImportInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.LedgerEnabled != nil {
		in, out := &in.LedgerEnabled, &out.LedgerEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.LongTermRetentionPolicy != nil {
		in, out := &in.LongTermRetentionPolicy, &out.LongTermRetentionPolicy
		*out = new(LongTermRetentionPolicyInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MaintenanceConfigurationName != nil {
		in, out := &in.MaintenanceConfigurationName, &out.MaintenanceConfigurationName
		*out = new(string)
		**out = **in
	}
	if in.MaxSizeGb != nil {
		in, out := &in.MaxSizeGb, &out.MaxSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.MinCapacity != nil {
		in, out := &in.MinCapacity, &out.MinCapacity
		*out = new(float64)
		**out = **in
	}
	if in.ReadReplicaCount != nil {
		in, out := &in.ReadReplicaCount, &out.ReadReplicaCount
		*out = new(float64)
		**out = **in
	}
	if in.ReadScale != nil {
		in, out := &in.ReadScale, &out.ReadScale
		*out = new(bool)
		**out = **in
	}
	if in.RecoverDatabaseID != nil {
		in, out := &in.RecoverDatabaseID, &out.RecoverDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.RecoveryPointID != nil {
		in, out := &in.RecoveryPointID, &out.RecoveryPointID
		*out = new(string)
		**out = **in
	}
	if in.RestoreDroppedDatabaseID != nil {
		in, out := &in.RestoreDroppedDatabaseID, &out.RestoreDroppedDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.RestoreLongTermRetentionBackupID != nil {
		in, out := &in.RestoreLongTermRetentionBackupID, &out.RestoreLongTermRetentionBackupID
		*out = new(string)
		**out = **in
	}
	if in.RestorePointInTime != nil {
		in, out := &in.RestorePointInTime, &out.RestorePointInTime
		*out = new(string)
		**out = **in
	}
	if in.SampleName != nil {
		in, out := &in.SampleName, &out.SampleName
		*out = new(string)
		**out = **in
	}
	if in.SecondaryType != nil {
		in, out := &in.SecondaryType, &out.SecondaryType
		*out = new(string)
		**out = **in
	}
	if in.ShortTermRetentionPolicy != nil {
		in, out := &in.ShortTermRetentionPolicy, &out.ShortTermRetentionPolicy
		*out = new(ShortTermRetentionPolicyInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountType != nil {
		in, out := &in.StorageAccountType, &out.StorageAccountType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ThreatDetectionPolicy != nil {
		in, out := &in.ThreatDetectionPolicy, &out.ThreatDetectionPolicy
		*out = new(ThreatDetectionPolicyInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.TransparentDataEncryptionEnabled != nil {
		in, out := &in.TransparentDataEncryptionEnabled, &out.TransparentDataEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TransparentDataEncryptionKeyAutomaticRotationEnabled != nil {
		in, out := &in.TransparentDataEncryptionKeyAutomaticRotationEnabled, &out.TransparentDataEncryptionKeyAutomaticRotationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TransparentDataEncryptionKeyVaultKeyID != nil {
		in, out := &in.TransparentDataEncryptionKeyVaultKeyID, &out.TransparentDataEncryptionKeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.TransparentDataEncryptionKeyVaultKeyIDRef != nil {
		in, out := &in.TransparentDataEncryptionKeyVaultKeyIDRef, &out.TransparentDataEncryptionKeyVaultKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransparentDataEncryptionKeyVaultKeyIDSelector != nil {
		in, out := &in.TransparentDataEncryptionKeyVaultKeyIDSelector, &out.TransparentDataEncryptionKeyVaultKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLDatabaseInitParameters.
func (in *MSSQLDatabaseInitParameters) DeepCopy() *MSSQLDatabaseInitParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLDatabaseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLDatabaseList) DeepCopyInto(out *MSSQLDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MSSQLDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLDatabaseList.
func (in *MSSQLDatabaseList) DeepCopy() *MSSQLDatabaseList {
	if in == nil {
		return nil
	}
	out := new(MSSQLDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MSSQLDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLDatabaseObservation) DeepCopyInto(out *MSSQLDatabaseObservation) {
	*out = *in
	if in.AutoPauseDelayInMinutes != nil {
		in, out := &in.AutoPauseDelayInMinutes, &out.AutoPauseDelayInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.CreateMode != nil {
		in, out := &in.CreateMode, &out.CreateMode
		*out = new(string)
		**out = **in
	}
	if in.CreationSourceDatabaseID != nil {
		in, out := &in.CreationSourceDatabaseID, &out.CreationSourceDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.ElasticPoolID != nil {
		in, out := &in.ElasticPoolID, &out.ElasticPoolID
		*out = new(string)
		**out = **in
	}
	if in.EnclaveType != nil {
		in, out := &in.EnclaveType, &out.EnclaveType
		*out = new(string)
		**out = **in
	}
	if in.GeoBackupEnabled != nil {
		in, out := &in.GeoBackupEnabled, &out.GeoBackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(IdentityObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Import != nil {
		in, out := &in.Import, &out.Import
		*out = new(ImportObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.LedgerEnabled != nil {
		in, out := &in.LedgerEnabled, &out.LedgerEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.LongTermRetentionPolicy != nil {
		in, out := &in.LongTermRetentionPolicy, &out.LongTermRetentionPolicy
		*out = new(LongTermRetentionPolicyObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.MaintenanceConfigurationName != nil {
		in, out := &in.MaintenanceConfigurationName, &out.MaintenanceConfigurationName
		*out = new(string)
		**out = **in
	}
	if in.MaxSizeGb != nil {
		in, out := &in.MaxSizeGb, &out.MaxSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.MinCapacity != nil {
		in, out := &in.MinCapacity, &out.MinCapacity
		*out = new(float64)
		**out = **in
	}
	if in.ReadReplicaCount != nil {
		in, out := &in.ReadReplicaCount, &out.ReadReplicaCount
		*out = new(float64)
		**out = **in
	}
	if in.ReadScale != nil {
		in, out := &in.ReadScale, &out.ReadScale
		*out = new(bool)
		**out = **in
	}
	if in.RecoverDatabaseID != nil {
		in, out := &in.RecoverDatabaseID, &out.RecoverDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.RecoveryPointID != nil {
		in, out := &in.RecoveryPointID, &out.RecoveryPointID
		*out = new(string)
		**out = **in
	}
	if in.RestoreDroppedDatabaseID != nil {
		in, out := &in.RestoreDroppedDatabaseID, &out.RestoreDroppedDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.RestoreLongTermRetentionBackupID != nil {
		in, out := &in.RestoreLongTermRetentionBackupID, &out.RestoreLongTermRetentionBackupID
		*out = new(string)
		**out = **in
	}
	if in.RestorePointInTime != nil {
		in, out := &in.RestorePointInTime, &out.RestorePointInTime
		*out = new(string)
		**out = **in
	}
	if in.SampleName != nil {
		in, out := &in.SampleName, &out.SampleName
		*out = new(string)
		**out = **in
	}
	if in.SecondaryType != nil {
		in, out := &in.SecondaryType, &out.SecondaryType
		*out = new(string)
		**out = **in
	}
	if in.ServerID != nil {
		in, out := &in.ServerID, &out.ServerID
		*out = new(string)
		**out = **in
	}
	if in.ShortTermRetentionPolicy != nil {
		in, out := &in.ShortTermRetentionPolicy, &out.ShortTermRetentionPolicy
		*out = new(ShortTermRetentionPolicyObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountType != nil {
		in, out := &in.StorageAccountType, &out.StorageAccountType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ThreatDetectionPolicy != nil {
		in, out := &in.ThreatDetectionPolicy, &out.ThreatDetectionPolicy
		*out = new(ThreatDetectionPolicyObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.TransparentDataEncryptionEnabled != nil {
		in, out := &in.TransparentDataEncryptionEnabled, &out.TransparentDataEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TransparentDataEncryptionKeyAutomaticRotationEnabled != nil {
		in, out := &in.TransparentDataEncryptionKeyAutomaticRotationEnabled, &out.TransparentDataEncryptionKeyAutomaticRotationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TransparentDataEncryptionKeyVaultKeyID != nil {
		in, out := &in.TransparentDataEncryptionKeyVaultKeyID, &out.TransparentDataEncryptionKeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLDatabaseObservation.
func (in *MSSQLDatabaseObservation) DeepCopy() *MSSQLDatabaseObservation {
	if in == nil {
		return nil
	}
	out := new(MSSQLDatabaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLDatabaseParameters) DeepCopyInto(out *MSSQLDatabaseParameters) {
	*out = *in
	if in.AutoPauseDelayInMinutes != nil {
		in, out := &in.AutoPauseDelayInMinutes, &out.AutoPauseDelayInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.CreateMode != nil {
		in, out := &in.CreateMode, &out.CreateMode
		*out = new(string)
		**out = **in
	}
	if in.CreationSourceDatabaseID != nil {
		in, out := &in.CreationSourceDatabaseID, &out.CreationSourceDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.ElasticPoolID != nil {
		in, out := &in.ElasticPoolID, &out.ElasticPoolID
		*out = new(string)
		**out = **in
	}
	if in.EnclaveType != nil {
		in, out := &in.EnclaveType, &out.EnclaveType
		*out = new(string)
		**out = **in
	}
	if in.GeoBackupEnabled != nil {
		in, out := &in.GeoBackupEnabled, &out.GeoBackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(IdentityParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Import != nil {
		in, out := &in.Import, &out.Import
		*out = new(ImportParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.LedgerEnabled != nil {
		in, out := &in.LedgerEnabled, &out.LedgerEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.LongTermRetentionPolicy != nil {
		in, out := &in.LongTermRetentionPolicy, &out.LongTermRetentionPolicy
		*out = new(LongTermRetentionPolicyParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MaintenanceConfigurationName != nil {
		in, out := &in.MaintenanceConfigurationName, &out.MaintenanceConfigurationName
		*out = new(string)
		**out = **in
	}
	if in.MaxSizeGb != nil {
		in, out := &in.MaxSizeGb, &out.MaxSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.MinCapacity != nil {
		in, out := &in.MinCapacity, &out.MinCapacity
		*out = new(float64)
		**out = **in
	}
	if in.ReadReplicaCount != nil {
		in, out := &in.ReadReplicaCount, &out.ReadReplicaCount
		*out = new(float64)
		**out = **in
	}
	if in.ReadScale != nil {
		in, out := &in.ReadScale, &out.ReadScale
		*out = new(bool)
		**out = **in
	}
	if in.RecoverDatabaseID != nil {
		in, out := &in.RecoverDatabaseID, &out.RecoverDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.RecoveryPointID != nil {
		in, out := &in.RecoveryPointID, &out.RecoveryPointID
		*out = new(string)
		**out = **in
	}
	if in.RestoreDroppedDatabaseID != nil {
		in, out := &in.RestoreDroppedDatabaseID, &out.RestoreDroppedDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.RestoreLongTermRetentionBackupID != nil {
		in, out := &in.RestoreLongTermRetentionBackupID, &out.RestoreLongTermRetentionBackupID
		*out = new(string)
		**out = **in
	}
	if in.RestorePointInTime != nil {
		in, out := &in.RestorePointInTime, &out.RestorePointInTime
		*out = new(string)
		**out = **in
	}
	if in.SampleName != nil {
		in, out := &in.SampleName, &out.SampleName
		*out = new(string)
		**out = **in
	}
	if in.SecondaryType != nil {
		in, out := &in.SecondaryType, &out.SecondaryType
		*out = new(string)
		**out = **in
	}
	if in.ServerID != nil {
		in, out := &in.ServerID, &out.ServerID
		*out = new(string)
		**out = **in
	}
	if in.ServerIDRef != nil {
		in, out := &in.ServerIDRef, &out.ServerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerIDSelector != nil {
		in, out := &in.ServerIDSelector, &out.ServerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ShortTermRetentionPolicy != nil {
		in, out := &in.ShortTermRetentionPolicy, &out.ShortTermRetentionPolicy
		*out = new(ShortTermRetentionPolicyParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountType != nil {
		in, out := &in.StorageAccountType, &out.StorageAccountType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ThreatDetectionPolicy != nil {
		in, out := &in.ThreatDetectionPolicy, &out.ThreatDetectionPolicy
		*out = new(ThreatDetectionPolicyParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.TransparentDataEncryptionEnabled != nil {
		in, out := &in.TransparentDataEncryptionEnabled, &out.TransparentDataEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TransparentDataEncryptionKeyAutomaticRotationEnabled != nil {
		in, out := &in.TransparentDataEncryptionKeyAutomaticRotationEnabled, &out.TransparentDataEncryptionKeyAutomaticRotationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TransparentDataEncryptionKeyVaultKeyID != nil {
		in, out := &in.TransparentDataEncryptionKeyVaultKeyID, &out.TransparentDataEncryptionKeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.TransparentDataEncryptionKeyVaultKeyIDRef != nil {
		in, out := &in.TransparentDataEncryptionKeyVaultKeyIDRef, &out.TransparentDataEncryptionKeyVaultKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransparentDataEncryptionKeyVaultKeyIDSelector != nil {
		in, out := &in.TransparentDataEncryptionKeyVaultKeyIDSelector, &out.TransparentDataEncryptionKeyVaultKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLDatabaseParameters.
func (in *MSSQLDatabaseParameters) DeepCopy() *MSSQLDatabaseParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLDatabaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLDatabaseSpec) DeepCopyInto(out *MSSQLDatabaseSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLDatabaseSpec.
func (in *MSSQLDatabaseSpec) DeepCopy() *MSSQLDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(MSSQLDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLDatabaseStatus) DeepCopyInto(out *MSSQLDatabaseStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLDatabaseStatus.
func (in *MSSQLDatabaseStatus) DeepCopy() *MSSQLDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(MSSQLDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLElasticPool) DeepCopyInto(out *MSSQLElasticPool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLElasticPool.
func (in *MSSQLElasticPool) DeepCopy() *MSSQLElasticPool {
	if in == nil {
		return nil
	}
	out := new(MSSQLElasticPool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MSSQLElasticPool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLElasticPoolInitParameters) DeepCopyInto(out *MSSQLElasticPoolInitParameters) {
	*out = *in
	if in.EnclaveType != nil {
		in, out := &in.EnclaveType, &out.EnclaveType
		*out = new(string)
		**out = **in
	}
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceConfigurationName != nil {
		in, out := &in.MaintenanceConfigurationName, &out.MaintenanceConfigurationName
		*out = new(string)
		**out = **in
	}
	if in.MaxSizeBytes != nil {
		in, out := &in.MaxSizeBytes, &out.MaxSizeBytes
		*out = new(float64)
		**out = **in
	}
	if in.MaxSizeGb != nil {
		in, out := &in.MaxSizeGb, &out.MaxSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.PerDatabaseSettings != nil {
		in, out := &in.PerDatabaseSettings, &out.PerDatabaseSettings
		*out = new(PerDatabaseSettingsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(SkuInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLElasticPoolInitParameters.
func (in *MSSQLElasticPoolInitParameters) DeepCopy() *MSSQLElasticPoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLElasticPoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLElasticPoolList) DeepCopyInto(out *MSSQLElasticPoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MSSQLElasticPool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLElasticPoolList.
func (in *MSSQLElasticPoolList) DeepCopy() *MSSQLElasticPoolList {
	if in == nil {
		return nil
	}
	out := new(MSSQLElasticPoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MSSQLElasticPoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLElasticPoolObservation) DeepCopyInto(out *MSSQLElasticPoolObservation) {
	*out = *in
	if in.EnclaveType != nil {
		in, out := &in.EnclaveType, &out.EnclaveType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceConfigurationName != nil {
		in, out := &in.MaintenanceConfigurationName, &out.MaintenanceConfigurationName
		*out = new(string)
		**out = **in
	}
	if in.MaxSizeBytes != nil {
		in, out := &in.MaxSizeBytes, &out.MaxSizeBytes
		*out = new(float64)
		**out = **in
	}
	if in.MaxSizeGb != nil {
		in, out := &in.MaxSizeGb, &out.MaxSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.PerDatabaseSettings != nil {
		in, out := &in.PerDatabaseSettings, &out.PerDatabaseSettings
		*out = new(PerDatabaseSettingsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(SkuObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLElasticPoolObservation.
func (in *MSSQLElasticPoolObservation) DeepCopy() *MSSQLElasticPoolObservation {
	if in == nil {
		return nil
	}
	out := new(MSSQLElasticPoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLElasticPoolParameters) DeepCopyInto(out *MSSQLElasticPoolParameters) {
	*out = *in
	if in.EnclaveType != nil {
		in, out := &in.EnclaveType, &out.EnclaveType
		*out = new(string)
		**out = **in
	}
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceConfigurationName != nil {
		in, out := &in.MaintenanceConfigurationName, &out.MaintenanceConfigurationName
		*out = new(string)
		**out = **in
	}
	if in.MaxSizeBytes != nil {
		in, out := &in.MaxSizeBytes, &out.MaxSizeBytes
		*out = new(float64)
		**out = **in
	}
	if in.MaxSizeGb != nil {
		in, out := &in.MaxSizeGb, &out.MaxSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.PerDatabaseSettings != nil {
		in, out := &in.PerDatabaseSettings, &out.PerDatabaseSettings
		*out = new(PerDatabaseSettingsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.ServerNameRef != nil {
		in, out := &in.ServerNameRef, &out.ServerNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerNameSelector != nil {
		in, out := &in.ServerNameSelector, &out.ServerNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(SkuParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLElasticPoolParameters.
func (in *MSSQLElasticPoolParameters) DeepCopy() *MSSQLElasticPoolParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLElasticPoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLElasticPoolSpec) DeepCopyInto(out *MSSQLElasticPoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLElasticPoolSpec.
func (in *MSSQLElasticPoolSpec) DeepCopy() *MSSQLElasticPoolSpec {
	if in == nil {
		return nil
	}
	out := new(MSSQLElasticPoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLElasticPoolStatus) DeepCopyInto(out *MSSQLElasticPoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLElasticPoolStatus.
func (in *MSSQLElasticPoolStatus) DeepCopy() *MSSQLElasticPoolStatus {
	if in == nil {
		return nil
	}
	out := new(MSSQLElasticPoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLFailoverGroup) DeepCopyInto(out *MSSQLFailoverGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLFailoverGroup.
func (in *MSSQLFailoverGroup) DeepCopy() *MSSQLFailoverGroup {
	if in == nil {
		return nil
	}
	out := new(MSSQLFailoverGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MSSQLFailoverGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLFailoverGroupInitParameters) DeepCopyInto(out *MSSQLFailoverGroupInitParameters) {
	*out = *in
	if in.Databases != nil {
		in, out := &in.Databases, &out.Databases
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DatabasesRefs != nil {
		in, out := &in.DatabasesRefs, &out.DatabasesRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabasesSelector != nil {
		in, out := &in.DatabasesSelector, &out.DatabasesSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PartnerServer != nil {
		in, out := &in.PartnerServer, &out.PartnerServer
		*out = make([]PartnerServerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReadWriteEndpointFailoverPolicy != nil {
		in, out := &in.ReadWriteEndpointFailoverPolicy, &out.ReadWriteEndpointFailoverPolicy
		*out = new(ReadWriteEndpointFailoverPolicyInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadonlyEndpointFailoverPolicyEnabled != nil {
		in, out := &in.ReadonlyEndpointFailoverPolicyEnabled, &out.ReadonlyEndpointFailoverPolicyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLFailoverGroupInitParameters.
func (in *MSSQLFailoverGroupInitParameters) DeepCopy() *MSSQLFailoverGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLFailoverGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLFailoverGroupList) DeepCopyInto(out *MSSQLFailoverGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MSSQLFailoverGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLFailoverGroupList.
func (in *MSSQLFailoverGroupList) DeepCopy() *MSSQLFailoverGroupList {
	if in == nil {
		return nil
	}
	out := new(MSSQLFailoverGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MSSQLFailoverGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLFailoverGroupObservation) DeepCopyInto(out *MSSQLFailoverGroupObservation) {
	*out = *in
	if in.Databases != nil {
		in, out := &in.Databases, &out.Databases
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PartnerServer != nil {
		in, out := &in.PartnerServer, &out.PartnerServer
		*out = make([]PartnerServerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReadWriteEndpointFailoverPolicy != nil {
		in, out := &in.ReadWriteEndpointFailoverPolicy, &out.ReadWriteEndpointFailoverPolicy
		*out = new(ReadWriteEndpointFailoverPolicyObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadonlyEndpointFailoverPolicyEnabled != nil {
		in, out := &in.ReadonlyEndpointFailoverPolicyEnabled, &out.ReadonlyEndpointFailoverPolicyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ServerID != nil {
		in, out := &in.ServerID, &out.ServerID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLFailoverGroupObservation.
func (in *MSSQLFailoverGroupObservation) DeepCopy() *MSSQLFailoverGroupObservation {
	if in == nil {
		return nil
	}
	out := new(MSSQLFailoverGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLFailoverGroupParameters) DeepCopyInto(out *MSSQLFailoverGroupParameters) {
	*out = *in
	if in.Databases != nil {
		in, out := &in.Databases, &out.Databases
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DatabasesRefs != nil {
		in, out := &in.DatabasesRefs, &out.DatabasesRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabasesSelector != nil {
		in, out := &in.DatabasesSelector, &out.DatabasesSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PartnerServer != nil {
		in, out := &in.PartnerServer, &out.PartnerServer
		*out = make([]PartnerServerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReadWriteEndpointFailoverPolicy != nil {
		in, out := &in.ReadWriteEndpointFailoverPolicy, &out.ReadWriteEndpointFailoverPolicy
		*out = new(ReadWriteEndpointFailoverPolicyParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadonlyEndpointFailoverPolicyEnabled != nil {
		in, out := &in.ReadonlyEndpointFailoverPolicyEnabled, &out.ReadonlyEndpointFailoverPolicyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ServerID != nil {
		in, out := &in.ServerID, &out.ServerID
		*out = new(string)
		**out = **in
	}
	if in.ServerIDRef != nil {
		in, out := &in.ServerIDRef, &out.ServerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerIDSelector != nil {
		in, out := &in.ServerIDSelector, &out.ServerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLFailoverGroupParameters.
func (in *MSSQLFailoverGroupParameters) DeepCopy() *MSSQLFailoverGroupParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLFailoverGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLFailoverGroupSpec) DeepCopyInto(out *MSSQLFailoverGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLFailoverGroupSpec.
func (in *MSSQLFailoverGroupSpec) DeepCopy() *MSSQLFailoverGroupSpec {
	if in == nil {
		return nil
	}
	out := new(MSSQLFailoverGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLFailoverGroupStatus) DeepCopyInto(out *MSSQLFailoverGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLFailoverGroupStatus.
func (in *MSSQLFailoverGroupStatus) DeepCopy() *MSSQLFailoverGroupStatus {
	if in == nil {
		return nil
	}
	out := new(MSSQLFailoverGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedDatabase) DeepCopyInto(out *MSSQLManagedDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedDatabase.
func (in *MSSQLManagedDatabase) DeepCopy() *MSSQLManagedDatabase {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MSSQLManagedDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedDatabaseInitParameters) DeepCopyInto(out *MSSQLManagedDatabaseInitParameters) {
	*out = *in
	if in.LongTermRetentionPolicy != nil {
		in, out := &in.LongTermRetentionPolicy, &out.LongTermRetentionPolicy
		*out = new(MSSQLManagedDatabaseLongTermRetentionPolicyInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PointInTimeRestore != nil {
		in, out := &in.PointInTimeRestore, &out.PointInTimeRestore
		*out = new(PointInTimeRestoreInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ShortTermRetentionDays != nil {
		in, out := &in.ShortTermRetentionDays, &out.ShortTermRetentionDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedDatabaseInitParameters.
func (in *MSSQLManagedDatabaseInitParameters) DeepCopy() *MSSQLManagedDatabaseInitParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedDatabaseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedDatabaseList) DeepCopyInto(out *MSSQLManagedDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MSSQLManagedDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedDatabaseList.
func (in *MSSQLManagedDatabaseList) DeepCopy() *MSSQLManagedDatabaseList {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MSSQLManagedDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedDatabaseLongTermRetentionPolicyInitParameters) DeepCopyInto(out *MSSQLManagedDatabaseLongTermRetentionPolicyInitParameters) {
	*out = *in
	if in.ImmutableBackupsEnabled != nil {
		in, out := &in.ImmutableBackupsEnabled, &out.ImmutableBackupsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MonthlyRetention != nil {
		in, out := &in.MonthlyRetention, &out.MonthlyRetention
		*out = new(string)
		**out = **in
	}
	if in.WeekOfYear != nil {
		in, out := &in.WeekOfYear, &out.WeekOfYear
		*out = new(float64)
		**out = **in
	}
	if in.WeeklyRetention != nil {
		in, out := &in.WeeklyRetention, &out.WeeklyRetention
		*out = new(string)
		**out = **in
	}
	if in.YearlyRetention != nil {
		in, out := &in.YearlyRetention, &out.YearlyRetention
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedDatabaseLongTermRetentionPolicyInitParameters.
func (in *MSSQLManagedDatabaseLongTermRetentionPolicyInitParameters) DeepCopy() *MSSQLManagedDatabaseLongTermRetentionPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedDatabaseLongTermRetentionPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedDatabaseLongTermRetentionPolicyObservation) DeepCopyInto(out *MSSQLManagedDatabaseLongTermRetentionPolicyObservation) {
	*out = *in
	if in.ImmutableBackupsEnabled != nil {
		in, out := &in.ImmutableBackupsEnabled, &out.ImmutableBackupsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MonthlyRetention != nil {
		in, out := &in.MonthlyRetention, &out.MonthlyRetention
		*out = new(string)
		**out = **in
	}
	if in.WeekOfYear != nil {
		in, out := &in.WeekOfYear, &out.WeekOfYear
		*out = new(float64)
		**out = **in
	}
	if in.WeeklyRetention != nil {
		in, out := &in.WeeklyRetention, &out.WeeklyRetention
		*out = new(string)
		**out = **in
	}
	if in.YearlyRetention != nil {
		in, out := &in.YearlyRetention, &out.YearlyRetention
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedDatabaseLongTermRetentionPolicyObservation.
func (in *MSSQLManagedDatabaseLongTermRetentionPolicyObservation) DeepCopy() *MSSQLManagedDatabaseLongTermRetentionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedDatabaseLongTermRetentionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedDatabaseLongTermRetentionPolicyParameters) DeepCopyInto(out *MSSQLManagedDatabaseLongTermRetentionPolicyParameters) {
	*out = *in
	if in.ImmutableBackupsEnabled != nil {
		in, out := &in.ImmutableBackupsEnabled, &out.ImmutableBackupsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MonthlyRetention != nil {
		in, out := &in.MonthlyRetention, &out.MonthlyRetention
		*out = new(string)
		**out = **in
	}
	if in.WeekOfYear != nil {
		in, out := &in.WeekOfYear, &out.WeekOfYear
		*out = new(float64)
		**out = **in
	}
	if in.WeeklyRetention != nil {
		in, out := &in.WeeklyRetention, &out.WeeklyRetention
		*out = new(string)
		**out = **in
	}
	if in.YearlyRetention != nil {
		in, out := &in.YearlyRetention, &out.YearlyRetention
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedDatabaseLongTermRetentionPolicyParameters.
func (in *MSSQLManagedDatabaseLongTermRetentionPolicyParameters) DeepCopy() *MSSQLManagedDatabaseLongTermRetentionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedDatabaseLongTermRetentionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedDatabaseObservation) DeepCopyInto(out *MSSQLManagedDatabaseObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LongTermRetentionPolicy != nil {
		in, out := &in.LongTermRetentionPolicy, &out.LongTermRetentionPolicy
		*out = new(MSSQLManagedDatabaseLongTermRetentionPolicyObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ManagedInstanceID != nil {
		in, out := &in.ManagedInstanceID, &out.ManagedInstanceID
		*out = new(string)
		**out = **in
	}
	if in.PointInTimeRestore != nil {
		in, out := &in.PointInTimeRestore, &out.PointInTimeRestore
		*out = new(PointInTimeRestoreObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ShortTermRetentionDays != nil {
		in, out := &in.ShortTermRetentionDays, &out.ShortTermRetentionDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedDatabaseObservation.
func (in *MSSQLManagedDatabaseObservation) DeepCopy() *MSSQLManagedDatabaseObservation {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedDatabaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedDatabaseParameters) DeepCopyInto(out *MSSQLManagedDatabaseParameters) {
	*out = *in
	if in.LongTermRetentionPolicy != nil {
		in, out := &in.LongTermRetentionPolicy, &out.LongTermRetentionPolicy
		*out = new(MSSQLManagedDatabaseLongTermRetentionPolicyParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ManagedInstanceID != nil {
		in, out := &in.ManagedInstanceID, &out.ManagedInstanceID
		*out = new(string)
		**out = **in
	}
	if in.ManagedInstanceIDRef != nil {
		in, out := &in.ManagedInstanceIDRef, &out.ManagedInstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ManagedInstanceIDSelector != nil {
		in, out := &in.ManagedInstanceIDSelector, &out.ManagedInstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PointInTimeRestore != nil {
		in, out := &in.PointInTimeRestore, &out.PointInTimeRestore
		*out = new(PointInTimeRestoreParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ShortTermRetentionDays != nil {
		in, out := &in.ShortTermRetentionDays, &out.ShortTermRetentionDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedDatabaseParameters.
func (in *MSSQLManagedDatabaseParameters) DeepCopy() *MSSQLManagedDatabaseParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedDatabaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedDatabaseSpec) DeepCopyInto(out *MSSQLManagedDatabaseSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedDatabaseSpec.
func (in *MSSQLManagedDatabaseSpec) DeepCopy() *MSSQLManagedDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedDatabaseStatus) DeepCopyInto(out *MSSQLManagedDatabaseStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedDatabaseStatus.
func (in *MSSQLManagedDatabaseStatus) DeepCopy() *MSSQLManagedDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstance) DeepCopyInto(out *MSSQLManagedInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstance.
func (in *MSSQLManagedInstance) DeepCopy() *MSSQLManagedInstance {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MSSQLManagedInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceFailoverGroup) DeepCopyInto(out *MSSQLManagedInstanceFailoverGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceFailoverGroup.
func (in *MSSQLManagedInstanceFailoverGroup) DeepCopy() *MSSQLManagedInstanceFailoverGroup {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceFailoverGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MSSQLManagedInstanceFailoverGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceFailoverGroupInitParameters) DeepCopyInto(out *MSSQLManagedInstanceFailoverGroupInitParameters) {
	*out = *in
	if in.ManagedInstanceID != nil {
		in, out := &in.ManagedInstanceID, &out.ManagedInstanceID
		*out = new(string)
		**out = **in
	}
	if in.ManagedInstanceIDRef != nil {
		in, out := &in.ManagedInstanceIDRef, &out.ManagedInstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ManagedInstanceIDSelector != nil {
		in, out := &in.ManagedInstanceIDSelector, &out.ManagedInstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PartnerManagedInstanceID != nil {
		in, out := &in.PartnerManagedInstanceID, &out.PartnerManagedInstanceID
		*out = new(string)
		**out = **in
	}
	if in.PartnerManagedInstanceIDRef != nil {
		in, out := &in.PartnerManagedInstanceIDRef, &out.PartnerManagedInstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PartnerManagedInstanceIDSelector != nil {
		in, out := &in.PartnerManagedInstanceIDSelector, &out.PartnerManagedInstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadWriteEndpointFailoverPolicy != nil {
		in, out := &in.ReadWriteEndpointFailoverPolicy, &out.ReadWriteEndpointFailoverPolicy
		*out = new(MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadonlyEndpointFailoverPolicyEnabled != nil {
		in, out := &in.ReadonlyEndpointFailoverPolicyEnabled, &out.ReadonlyEndpointFailoverPolicyEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceFailoverGroupInitParameters.
func (in *MSSQLManagedInstanceFailoverGroupInitParameters) DeepCopy() *MSSQLManagedInstanceFailoverGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceFailoverGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceFailoverGroupList) DeepCopyInto(out *MSSQLManagedInstanceFailoverGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MSSQLManagedInstanceFailoverGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceFailoverGroupList.
func (in *MSSQLManagedInstanceFailoverGroupList) DeepCopy() *MSSQLManagedInstanceFailoverGroupList {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceFailoverGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MSSQLManagedInstanceFailoverGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceFailoverGroupObservation) DeepCopyInto(out *MSSQLManagedInstanceFailoverGroupObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManagedInstanceID != nil {
		in, out := &in.ManagedInstanceID, &out.ManagedInstanceID
		*out = new(string)
		**out = **in
	}
	if in.PartnerManagedInstanceID != nil {
		in, out := &in.PartnerManagedInstanceID, &out.PartnerManagedInstanceID
		*out = new(string)
		**out = **in
	}
	if in.PartnerRegion != nil {
		in, out := &in.PartnerRegion, &out.PartnerRegion
		*out = make([]PartnerRegionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReadWriteEndpointFailoverPolicy != nil {
		in, out := &in.ReadWriteEndpointFailoverPolicy, &out.ReadWriteEndpointFailoverPolicy
		*out = new(MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadonlyEndpointFailoverPolicyEnabled != nil {
		in, out := &in.ReadonlyEndpointFailoverPolicyEnabled, &out.ReadonlyEndpointFailoverPolicyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceFailoverGroupObservation.
func (in *MSSQLManagedInstanceFailoverGroupObservation) DeepCopy() *MSSQLManagedInstanceFailoverGroupObservation {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceFailoverGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceFailoverGroupParameters) DeepCopyInto(out *MSSQLManagedInstanceFailoverGroupParameters) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManagedInstanceID != nil {
		in, out := &in.ManagedInstanceID, &out.ManagedInstanceID
		*out = new(string)
		**out = **in
	}
	if in.ManagedInstanceIDRef != nil {
		in, out := &in.ManagedInstanceIDRef, &out.ManagedInstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ManagedInstanceIDSelector != nil {
		in, out := &in.ManagedInstanceIDSelector, &out.ManagedInstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PartnerManagedInstanceID != nil {
		in, out := &in.PartnerManagedInstanceID, &out.PartnerManagedInstanceID
		*out = new(string)
		**out = **in
	}
	if in.PartnerManagedInstanceIDRef != nil {
		in, out := &in.PartnerManagedInstanceIDRef, &out.PartnerManagedInstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PartnerManagedInstanceIDSelector != nil {
		in, out := &in.PartnerManagedInstanceIDSelector, &out.PartnerManagedInstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadWriteEndpointFailoverPolicy != nil {
		in, out := &in.ReadWriteEndpointFailoverPolicy, &out.ReadWriteEndpointFailoverPolicy
		*out = new(MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadonlyEndpointFailoverPolicyEnabled != nil {
		in, out := &in.ReadonlyEndpointFailoverPolicyEnabled, &out.ReadonlyEndpointFailoverPolicyEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceFailoverGroupParameters.
func (in *MSSQLManagedInstanceFailoverGroupParameters) DeepCopy() *MSSQLManagedInstanceFailoverGroupParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceFailoverGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyInitParameters) DeepCopyInto(out *MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyInitParameters) {
	*out = *in
	if in.GraceMinutes != nil {
		in, out := &in.GraceMinutes, &out.GraceMinutes
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyInitParameters.
func (in *MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyInitParameters) DeepCopy() *MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyObservation) DeepCopyInto(out *MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyObservation) {
	*out = *in
	if in.GraceMinutes != nil {
		in, out := &in.GraceMinutes, &out.GraceMinutes
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyObservation.
func (in *MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyObservation) DeepCopy() *MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyParameters) DeepCopyInto(out *MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyParameters) {
	*out = *in
	if in.GraceMinutes != nil {
		in, out := &in.GraceMinutes, &out.GraceMinutes
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyParameters.
func (in *MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyParameters) DeepCopy() *MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceFailoverGroupSpec) DeepCopyInto(out *MSSQLManagedInstanceFailoverGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceFailoverGroupSpec.
func (in *MSSQLManagedInstanceFailoverGroupSpec) DeepCopy() *MSSQLManagedInstanceFailoverGroupSpec {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceFailoverGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceFailoverGroupStatus) DeepCopyInto(out *MSSQLManagedInstanceFailoverGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceFailoverGroupStatus.
func (in *MSSQLManagedInstanceFailoverGroupStatus) DeepCopy() *MSSQLManagedInstanceFailoverGroupStatus {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceFailoverGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceIdentityInitParameters) DeepCopyInto(out *MSSQLManagedInstanceIdentityInitParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceIdentityInitParameters.
func (in *MSSQLManagedInstanceIdentityInitParameters) DeepCopy() *MSSQLManagedInstanceIdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceIdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceIdentityObservation) DeepCopyInto(out *MSSQLManagedInstanceIdentityObservation) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceIdentityObservation.
func (in *MSSQLManagedInstanceIdentityObservation) DeepCopy() *MSSQLManagedInstanceIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceIdentityParameters) DeepCopyInto(out *MSSQLManagedInstanceIdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceIdentityParameters.
func (in *MSSQLManagedInstanceIdentityParameters) DeepCopy() *MSSQLManagedInstanceIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceInitParameters) DeepCopyInto(out *MSSQLManagedInstanceInitParameters) {
	*out = *in
	if in.AdministratorLogin != nil {
		in, out := &in.AdministratorLogin, &out.AdministratorLogin
		*out = new(string)
		**out = **in
	}
	out.AdministratorLoginPasswordSecretRef = in.AdministratorLoginPasswordSecretRef
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.DNSZonePartnerID != nil {
		in, out := &in.DNSZonePartnerID, &out.DNSZonePartnerID
		*out = new(string)
		**out = **in
	}
	if in.DNSZonePartnerIDRef != nil {
		in, out := &in.DNSZonePartnerIDRef, &out.DNSZonePartnerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DNSZonePartnerIDSelector != nil {
		in, out := &in.DNSZonePartnerIDSelector, &out.DNSZonePartnerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(MSSQLManagedInstanceIdentityInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceConfigurationName != nil {
		in, out := &in.MaintenanceConfigurationName, &out.MaintenanceConfigurationName
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ProxyOverride != nil {
		in, out := &in.ProxyOverride, &out.ProxyOverride
		*out = new(string)
		**out = **in
	}
	if in.PublicDataEndpointEnabled != nil {
		in, out := &in.PublicDataEndpointEnabled, &out.PublicDataEndpointEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountType != nil {
		in, out := &in.StorageAccountType, &out.StorageAccountType
		*out = new(string)
		**out = **in
	}
	if in.StorageSizeInGb != nil {
		in, out := &in.StorageSizeInGb, &out.StorageSizeInGb
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
	if in.Vcores != nil {
		in, out := &in.Vcores, &out.Vcores
		*out = new(float64)
		**out = **in
	}
	if in.ZoneRedundantEnabled != nil {
		in, out := &in.ZoneRedundantEnabled, &out.ZoneRedundantEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceInitParameters.
func (in *MSSQLManagedInstanceInitParameters) DeepCopy() *MSSQLManagedInstanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceList) DeepCopyInto(out *MSSQLManagedInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MSSQLManagedInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceList.
func (in *MSSQLManagedInstanceList) DeepCopy() *MSSQLManagedInstanceList {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MSSQLManagedInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceObservation) DeepCopyInto(out *MSSQLManagedInstanceObservation) {
	*out = *in
	if in.AdministratorLogin != nil {
		in, out := &in.AdministratorLogin, &out.AdministratorLogin
		*out = new(string)
		**out = **in
	}
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.DNSZone != nil {
		in, out := &in.DNSZone, &out.DNSZone
		*out = new(string)
		**out = **in
	}
	if in.DNSZonePartnerID != nil {
		in, out := &in.DNSZonePartnerID, &out.DNSZonePartnerID
		*out = new(string)
		**out = **in
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(MSSQLManagedInstanceIdentityObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceConfigurationName != nil {
		in, out := &in.MaintenanceConfigurationName, &out.MaintenanceConfigurationName
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ProxyOverride != nil {
		in, out := &in.ProxyOverride, &out.ProxyOverride
		*out = new(string)
		**out = **in
	}
	if in.PublicDataEndpointEnabled != nil {
		in, out := &in.PublicDataEndpointEnabled, &out.PublicDataEndpointEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountType != nil {
		in, out := &in.StorageAccountType, &out.StorageAccountType
		*out = new(string)
		**out = **in
	}
	if in.StorageSizeInGb != nil {
		in, out := &in.StorageSizeInGb, &out.StorageSizeInGb
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
	if in.Vcores != nil {
		in, out := &in.Vcores, &out.Vcores
		*out = new(float64)
		**out = **in
	}
	if in.ZoneRedundantEnabled != nil {
		in, out := &in.ZoneRedundantEnabled, &out.ZoneRedundantEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceObservation.
func (in *MSSQLManagedInstanceObservation) DeepCopy() *MSSQLManagedInstanceObservation {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceParameters) DeepCopyInto(out *MSSQLManagedInstanceParameters) {
	*out = *in
	if in.AdministratorLogin != nil {
		in, out := &in.AdministratorLogin, &out.AdministratorLogin
		*out = new(string)
		**out = **in
	}
	out.AdministratorLoginPasswordSecretRef = in.AdministratorLoginPasswordSecretRef
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.DNSZonePartnerID != nil {
		in, out := &in.DNSZonePartnerID, &out.DNSZonePartnerID
		*out = new(string)
		**out = **in
	}
	if in.DNSZonePartnerIDRef != nil {
		in, out := &in.DNSZonePartnerIDRef, &out.DNSZonePartnerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DNSZonePartnerIDSelector != nil {
		in, out := &in.DNSZonePartnerIDSelector, &out.DNSZonePartnerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(MSSQLManagedInstanceIdentityParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceConfigurationName != nil {
		in, out := &in.MaintenanceConfigurationName, &out.MaintenanceConfigurationName
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ProxyOverride != nil {
		in, out := &in.ProxyOverride, &out.ProxyOverride
		*out = new(string)
		**out = **in
	}
	if in.PublicDataEndpointEnabled != nil {
		in, out := &in.PublicDataEndpointEnabled, &out.PublicDataEndpointEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountType != nil {
		in, out := &in.StorageAccountType, &out.StorageAccountType
		*out = new(string)
		**out = **in
	}
	if in.StorageSizeInGb != nil {
		in, out := &in.StorageSizeInGb, &out.StorageSizeInGb
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimezoneID != nil {
		in, out := &in.TimezoneID, &out.TimezoneID
		*out = new(string)
		**out = **in
	}
	if in.Vcores != nil {
		in, out := &in.Vcores, &out.Vcores
		*out = new(float64)
		**out = **in
	}
	if in.ZoneRedundantEnabled != nil {
		in, out := &in.ZoneRedundantEnabled, &out.ZoneRedundantEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceParameters.
func (in *MSSQLManagedInstanceParameters) DeepCopy() *MSSQLManagedInstanceParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceSpec) DeepCopyInto(out *MSSQLManagedInstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceSpec.
func (in *MSSQLManagedInstanceSpec) DeepCopy() *MSSQLManagedInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceStatus) DeepCopyInto(out *MSSQLManagedInstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceStatus.
func (in *MSSQLManagedInstanceStatus) DeepCopy() *MSSQLManagedInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceVulnerabilityAssessment) DeepCopyInto(out *MSSQLManagedInstanceVulnerabilityAssessment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceVulnerabilityAssessment.
func (in *MSSQLManagedInstanceVulnerabilityAssessment) DeepCopy() *MSSQLManagedInstanceVulnerabilityAssessment {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceVulnerabilityAssessment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MSSQLManagedInstanceVulnerabilityAssessment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceVulnerabilityAssessmentInitParameters) DeepCopyInto(out *MSSQLManagedInstanceVulnerabilityAssessmentInitParameters) {
	*out = *in
	if in.RecurringScans != nil {
		in, out := &in.RecurringScans, &out.RecurringScans
		*out = new(RecurringScansInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountAccessKeySecretRef != nil {
		in, out := &in.StorageAccountAccessKeySecretRef, &out.StorageAccountAccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.StorageContainerPath != nil {
		in, out := &in.StorageContainerPath, &out.StorageContainerPath
		*out = new(string)
		**out = **in
	}
	if in.StorageContainerSASKeySecretRef != nil {
		in, out := &in.StorageContainerSASKeySecretRef, &out.StorageContainerSASKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceVulnerabilityAssessmentInitParameters.
func (in *MSSQLManagedInstanceVulnerabilityAssessmentInitParameters) DeepCopy() *MSSQLManagedInstanceVulnerabilityAssessmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceVulnerabilityAssessmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceVulnerabilityAssessmentList) DeepCopyInto(out *MSSQLManagedInstanceVulnerabilityAssessmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MSSQLManagedInstanceVulnerabilityAssessment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceVulnerabilityAssessmentList.
func (in *MSSQLManagedInstanceVulnerabilityAssessmentList) DeepCopy() *MSSQLManagedInstanceVulnerabilityAssessmentList {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceVulnerabilityAssessmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MSSQLManagedInstanceVulnerabilityAssessmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceVulnerabilityAssessmentObservation) DeepCopyInto(out *MSSQLManagedInstanceVulnerabilityAssessmentObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ManagedInstanceID != nil {
		in, out := &in.ManagedInstanceID, &out.ManagedInstanceID
		*out = new(string)
		**out = **in
	}
	if in.RecurringScans != nil {
		in, out := &in.RecurringScans, &out.RecurringScans
		*out = new(RecurringScansObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageContainerPath != nil {
		in, out := &in.StorageContainerPath, &out.StorageContainerPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceVulnerabilityAssessmentObservation.
func (in *MSSQLManagedInstanceVulnerabilityAssessmentObservation) DeepCopy() *MSSQLManagedInstanceVulnerabilityAssessmentObservation {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceVulnerabilityAssessmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceVulnerabilityAssessmentParameters) DeepCopyInto(out *MSSQLManagedInstanceVulnerabilityAssessmentParameters) {
	*out = *in
	if in.ManagedInstanceID != nil {
		in, out := &in.ManagedInstanceID, &out.ManagedInstanceID
		*out = new(string)
		**out = **in
	}
	if in.ManagedInstanceIDRef != nil {
		in, out := &in.ManagedInstanceIDRef, &out.ManagedInstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ManagedInstanceIDSelector != nil {
		in, out := &in.ManagedInstanceIDSelector, &out.ManagedInstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RecurringScans != nil {
		in, out := &in.RecurringScans, &out.RecurringScans
		*out = new(RecurringScansParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountAccessKeySecretRef != nil {
		in, out := &in.StorageAccountAccessKeySecretRef, &out.StorageAccountAccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.StorageContainerPath != nil {
		in, out := &in.StorageContainerPath, &out.StorageContainerPath
		*out = new(string)
		**out = **in
	}
	if in.StorageContainerSASKeySecretRef != nil {
		in, out := &in.StorageContainerSASKeySecretRef, &out.StorageContainerSASKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceVulnerabilityAssessmentParameters.
func (in *MSSQLManagedInstanceVulnerabilityAssessmentParameters) DeepCopy() *MSSQLManagedInstanceVulnerabilityAssessmentParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceVulnerabilityAssessmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceVulnerabilityAssessmentSpec) DeepCopyInto(out *MSSQLManagedInstanceVulnerabilityAssessmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceVulnerabilityAssessmentSpec.
func (in *MSSQLManagedInstanceVulnerabilityAssessmentSpec) DeepCopy() *MSSQLManagedInstanceVulnerabilityAssessmentSpec {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceVulnerabilityAssessmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLManagedInstanceVulnerabilityAssessmentStatus) DeepCopyInto(out *MSSQLManagedInstanceVulnerabilityAssessmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLManagedInstanceVulnerabilityAssessmentStatus.
func (in *MSSQLManagedInstanceVulnerabilityAssessmentStatus) DeepCopy() *MSSQLManagedInstanceVulnerabilityAssessmentStatus {
	if in == nil {
		return nil
	}
	out := new(MSSQLManagedInstanceVulnerabilityAssessmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLServer) DeepCopyInto(out *MSSQLServer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLServer.
func (in *MSSQLServer) DeepCopy() *MSSQLServer {
	if in == nil {
		return nil
	}
	out := new(MSSQLServer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MSSQLServer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLServerIdentityInitParameters) DeepCopyInto(out *MSSQLServerIdentityInitParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLServerIdentityInitParameters.
func (in *MSSQLServerIdentityInitParameters) DeepCopy() *MSSQLServerIdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLServerIdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLServerIdentityObservation) DeepCopyInto(out *MSSQLServerIdentityObservation) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLServerIdentityObservation.
func (in *MSSQLServerIdentityObservation) DeepCopy() *MSSQLServerIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(MSSQLServerIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLServerIdentityParameters) DeepCopyInto(out *MSSQLServerIdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLServerIdentityParameters.
func (in *MSSQLServerIdentityParameters) DeepCopy() *MSSQLServerIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLServerIdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLServerInitParameters) DeepCopyInto(out *MSSQLServerInitParameters) {
	*out = *in
	if in.AdministratorLogin != nil {
		in, out := &in.AdministratorLogin, &out.AdministratorLogin
		*out = new(string)
		**out = **in
	}
	if in.AdministratorLoginPasswordSecretRef != nil {
		in, out := &in.AdministratorLoginPasswordSecretRef, &out.AdministratorLoginPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AzureadAdministrator != nil {
		in, out := &in.AzureadAdministrator, &out.AzureadAdministrator
		*out = new(AzureadAdministratorInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionPolicy != nil {
		in, out := &in.ConnectionPolicy, &out.ConnectionPolicy
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(MSSQLServerIdentityInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.OutboundNetworkRestrictionEnabled != nil {
		in, out := &in.OutboundNetworkRestrictionEnabled, &out.OutboundNetworkRestrictionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryUserAssignedIdentityID != nil {
		in, out := &in.PrimaryUserAssignedIdentityID, &out.PrimaryUserAssignedIdentityID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryUserAssignedIdentityIDRef != nil {
		in, out := &in.PrimaryUserAssignedIdentityIDRef, &out.PrimaryUserAssignedIdentityIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrimaryUserAssignedIdentityIDSelector != nil {
		in, out := &in.PrimaryUserAssignedIdentityIDSelector, &out.PrimaryUserAssignedIdentityIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransparentDataEncryptionKeyVaultKeyID != nil {
		in, out := &in.TransparentDataEncryptionKeyVaultKeyID, &out.TransparentDataEncryptionKeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.TransparentDataEncryptionKeyVaultKeyIDRef != nil {
		in, out := &in.TransparentDataEncryptionKeyVaultKeyIDRef, &out.TransparentDataEncryptionKeyVaultKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransparentDataEncryptionKeyVaultKeyIDSelector != nil {
		in, out := &in.TransparentDataEncryptionKeyVaultKeyIDSelector, &out.TransparentDataEncryptionKeyVaultKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLServerInitParameters.
func (in *MSSQLServerInitParameters) DeepCopy() *MSSQLServerInitParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLServerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLServerList) DeepCopyInto(out *MSSQLServerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MSSQLServer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLServerList.
func (in *MSSQLServerList) DeepCopy() *MSSQLServerList {
	if in == nil {
		return nil
	}
	out := new(MSSQLServerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MSSQLServerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLServerObservation) DeepCopyInto(out *MSSQLServerObservation) {
	*out = *in
	if in.AdministratorLogin != nil {
		in, out := &in.AdministratorLogin, &out.AdministratorLogin
		*out = new(string)
		**out = **in
	}
	if in.AzureadAdministrator != nil {
		in, out := &in.AzureadAdministrator, &out.AzureadAdministrator
		*out = new(AzureadAdministratorObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionPolicy != nil {
		in, out := &in.ConnectionPolicy, &out.ConnectionPolicy
		*out = new(string)
		**out = **in
	}
	if in.FullyQualifiedDomainName != nil {
		in, out := &in.FullyQualifiedDomainName, &out.FullyQualifiedDomainName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(MSSQLServerIdentityObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.OutboundNetworkRestrictionEnabled != nil {
		in, out := &in.OutboundNetworkRestrictionEnabled, &out.OutboundNetworkRestrictionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryUserAssignedIdentityID != nil {
		in, out := &in.PrimaryUserAssignedIdentityID, &out.PrimaryUserAssignedIdentityID
		*out = new(string)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.RestorableDroppedDatabaseIds != nil {
		in, out := &in.RestorableDroppedDatabaseIds, &out.RestorableDroppedDatabaseIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransparentDataEncryptionKeyVaultKeyID != nil {
		in, out := &in.TransparentDataEncryptionKeyVaultKeyID, &out.TransparentDataEncryptionKeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLServerObservation.
func (in *MSSQLServerObservation) DeepCopy() *MSSQLServerObservation {
	if in == nil {
		return nil
	}
	out := new(MSSQLServerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLServerParameters) DeepCopyInto(out *MSSQLServerParameters) {
	*out = *in
	if in.AdministratorLogin != nil {
		in, out := &in.AdministratorLogin, &out.AdministratorLogin
		*out = new(string)
		**out = **in
	}
	if in.AdministratorLoginPasswordSecretRef != nil {
		in, out := &in.AdministratorLoginPasswordSecretRef, &out.AdministratorLoginPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AzureadAdministrator != nil {
		in, out := &in.AzureadAdministrator, &out.AzureadAdministrator
		*out = new(AzureadAdministratorParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionPolicy != nil {
		in, out := &in.ConnectionPolicy, &out.ConnectionPolicy
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(MSSQLServerIdentityParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.OutboundNetworkRestrictionEnabled != nil {
		in, out := &in.OutboundNetworkRestrictionEnabled, &out.OutboundNetworkRestrictionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryUserAssignedIdentityID != nil {
		in, out := &in.PrimaryUserAssignedIdentityID, &out.PrimaryUserAssignedIdentityID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryUserAssignedIdentityIDRef != nil {
		in, out := &in.PrimaryUserAssignedIdentityIDRef, &out.PrimaryUserAssignedIdentityIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrimaryUserAssignedIdentityIDSelector != nil {
		in, out := &in.PrimaryUserAssignedIdentityIDSelector, &out.PrimaryUserAssignedIdentityIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransparentDataEncryptionKeyVaultKeyID != nil {
		in, out := &in.TransparentDataEncryptionKeyVaultKeyID, &out.TransparentDataEncryptionKeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.TransparentDataEncryptionKeyVaultKeyIDRef != nil {
		in, out := &in.TransparentDataEncryptionKeyVaultKeyIDRef, &out.TransparentDataEncryptionKeyVaultKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransparentDataEncryptionKeyVaultKeyIDSelector != nil {
		in, out := &in.TransparentDataEncryptionKeyVaultKeyIDSelector, &out.TransparentDataEncryptionKeyVaultKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLServerParameters.
func (in *MSSQLServerParameters) DeepCopy() *MSSQLServerParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLServerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLServerSpec) DeepCopyInto(out *MSSQLServerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLServerSpec.
func (in *MSSQLServerSpec) DeepCopy() *MSSQLServerSpec {
	if in == nil {
		return nil
	}
	out := new(MSSQLServerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLServerStatus) DeepCopyInto(out *MSSQLServerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLServerStatus.
func (in *MSSQLServerStatus) DeepCopy() *MSSQLServerStatus {
	if in == nil {
		return nil
	}
	out := new(MSSQLServerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLServerVulnerabilityAssessment) DeepCopyInto(out *MSSQLServerVulnerabilityAssessment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLServerVulnerabilityAssessment.
func (in *MSSQLServerVulnerabilityAssessment) DeepCopy() *MSSQLServerVulnerabilityAssessment {
	if in == nil {
		return nil
	}
	out := new(MSSQLServerVulnerabilityAssessment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MSSQLServerVulnerabilityAssessment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLServerVulnerabilityAssessmentInitParameters) DeepCopyInto(out *MSSQLServerVulnerabilityAssessmentInitParameters) {
	*out = *in
	if in.RecurringScans != nil {
		in, out := &in.RecurringScans, &out.RecurringScans
		*out = new(MSSQLServerVulnerabilityAssessmentRecurringScansInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerSecurityAlertPolicyID != nil {
		in, out := &in.ServerSecurityAlertPolicyID, &out.ServerSecurityAlertPolicyID
		*out = new(string)
		**out = **in
	}
	if in.ServerSecurityAlertPolicyIDRef != nil {
		in, out := &in.ServerSecurityAlertPolicyIDRef, &out.ServerSecurityAlertPolicyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerSecurityAlertPolicyIDSelector != nil {
		in, out := &in.ServerSecurityAlertPolicyIDSelector, &out.ServerSecurityAlertPolicyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountAccessKeySecretRef != nil {
		in, out := &in.StorageAccountAccessKeySecretRef, &out.StorageAccountAccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.StorageContainerPath != nil {
		in, out := &in.StorageContainerPath, &out.StorageContainerPath
		*out = new(string)
		**out = **in
	}
	if in.StorageContainerSASKeySecretRef != nil {
		in, out := &in.StorageContainerSASKeySecretRef, &out.StorageContainerSASKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLServerVulnerabilityAssessmentInitParameters.
func (in *MSSQLServerVulnerabilityAssessmentInitParameters) DeepCopy() *MSSQLServerVulnerabilityAssessmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLServerVulnerabilityAssessmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLServerVulnerabilityAssessmentList) DeepCopyInto(out *MSSQLServerVulnerabilityAssessmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MSSQLServerVulnerabilityAssessment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLServerVulnerabilityAssessmentList.
func (in *MSSQLServerVulnerabilityAssessmentList) DeepCopy() *MSSQLServerVulnerabilityAssessmentList {
	if in == nil {
		return nil
	}
	out := new(MSSQLServerVulnerabilityAssessmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MSSQLServerVulnerabilityAssessmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLServerVulnerabilityAssessmentObservation) DeepCopyInto(out *MSSQLServerVulnerabilityAssessmentObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RecurringScans != nil {
		in, out := &in.RecurringScans, &out.RecurringScans
		*out = new(MSSQLServerVulnerabilityAssessmentRecurringScansObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerSecurityAlertPolicyID != nil {
		in, out := &in.ServerSecurityAlertPolicyID, &out.ServerSecurityAlertPolicyID
		*out = new(string)
		**out = **in
	}
	if in.StorageContainerPath != nil {
		in, out := &in.StorageContainerPath, &out.StorageContainerPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLServerVulnerabilityAssessmentObservation.
func (in *MSSQLServerVulnerabilityAssessmentObservation) DeepCopy() *MSSQLServerVulnerabilityAssessmentObservation {
	if in == nil {
		return nil
	}
	out := new(MSSQLServerVulnerabilityAssessmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLServerVulnerabilityAssessmentParameters) DeepCopyInto(out *MSSQLServerVulnerabilityAssessmentParameters) {
	*out = *in
	if in.RecurringScans != nil {
		in, out := &in.RecurringScans, &out.RecurringScans
		*out = new(MSSQLServerVulnerabilityAssessmentRecurringScansParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerSecurityAlertPolicyID != nil {
		in, out := &in.ServerSecurityAlertPolicyID, &out.ServerSecurityAlertPolicyID
		*out = new(string)
		**out = **in
	}
	if in.ServerSecurityAlertPolicyIDRef != nil {
		in, out := &in.ServerSecurityAlertPolicyIDRef, &out.ServerSecurityAlertPolicyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerSecurityAlertPolicyIDSelector != nil {
		in, out := &in.ServerSecurityAlertPolicyIDSelector, &out.ServerSecurityAlertPolicyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountAccessKeySecretRef != nil {
		in, out := &in.StorageAccountAccessKeySecretRef, &out.StorageAccountAccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.StorageContainerPath != nil {
		in, out := &in.StorageContainerPath, &out.StorageContainerPath
		*out = new(string)
		**out = **in
	}
	if in.StorageContainerSASKeySecretRef != nil {
		in, out := &in.StorageContainerSASKeySecretRef, &out.StorageContainerSASKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLServerVulnerabilityAssessmentParameters.
func (in *MSSQLServerVulnerabilityAssessmentParameters) DeepCopy() *MSSQLServerVulnerabilityAssessmentParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLServerVulnerabilityAssessmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLServerVulnerabilityAssessmentRecurringScansInitParameters) DeepCopyInto(out *MSSQLServerVulnerabilityAssessmentRecurringScansInitParameters) {
	*out = *in
	if in.EmailSubscriptionAdmins != nil {
		in, out := &in.EmailSubscriptionAdmins, &out.EmailSubscriptionAdmins
		*out = new(bool)
		**out = **in
	}
	if in.Emails != nil {
		in, out := &in.Emails, &out.Emails
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLServerVulnerabilityAssessmentRecurringScansInitParameters.
func (in *MSSQLServerVulnerabilityAssessmentRecurringScansInitParameters) DeepCopy() *MSSQLServerVulnerabilityAssessmentRecurringScansInitParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLServerVulnerabilityAssessmentRecurringScansInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLServerVulnerabilityAssessmentRecurringScansObservation) DeepCopyInto(out *MSSQLServerVulnerabilityAssessmentRecurringScansObservation) {
	*out = *in
	if in.EmailSubscriptionAdmins != nil {
		in, out := &in.EmailSubscriptionAdmins, &out.EmailSubscriptionAdmins
		*out = new(bool)
		**out = **in
	}
	if in.Emails != nil {
		in, out := &in.Emails, &out.Emails
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLServerVulnerabilityAssessmentRecurringScansObservation.
func (in *MSSQLServerVulnerabilityAssessmentRecurringScansObservation) DeepCopy() *MSSQLServerVulnerabilityAssessmentRecurringScansObservation {
	if in == nil {
		return nil
	}
	out := new(MSSQLServerVulnerabilityAssessmentRecurringScansObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLServerVulnerabilityAssessmentRecurringScansParameters) DeepCopyInto(out *MSSQLServerVulnerabilityAssessmentRecurringScansParameters) {
	*out = *in
	if in.EmailSubscriptionAdmins != nil {
		in, out := &in.EmailSubscriptionAdmins, &out.EmailSubscriptionAdmins
		*out = new(bool)
		**out = **in
	}
	if in.Emails != nil {
		in, out := &in.Emails, &out.Emails
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLServerVulnerabilityAssessmentRecurringScansParameters.
func (in *MSSQLServerVulnerabilityAssessmentRecurringScansParameters) DeepCopy() *MSSQLServerVulnerabilityAssessmentRecurringScansParameters {
	if in == nil {
		return nil
	}
	out := new(MSSQLServerVulnerabilityAssessmentRecurringScansParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLServerVulnerabilityAssessmentSpec) DeepCopyInto(out *MSSQLServerVulnerabilityAssessmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLServerVulnerabilityAssessmentSpec.
func (in *MSSQLServerVulnerabilityAssessmentSpec) DeepCopy() *MSSQLServerVulnerabilityAssessmentSpec {
	if in == nil {
		return nil
	}
	out := new(MSSQLServerVulnerabilityAssessmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MSSQLServerVulnerabilityAssessmentStatus) DeepCopyInto(out *MSSQLServerVulnerabilityAssessmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MSSQLServerVulnerabilityAssessmentStatus.
func (in *MSSQLServerVulnerabilityAssessmentStatus) DeepCopy() *MSSQLServerVulnerabilityAssessmentStatus {
	if in == nil {
		return nil
	}
	out := new(MSSQLServerVulnerabilityAssessmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartnerRegionInitParameters) DeepCopyInto(out *PartnerRegionInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartnerRegionInitParameters.
func (in *PartnerRegionInitParameters) DeepCopy() *PartnerRegionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PartnerRegionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartnerRegionObservation) DeepCopyInto(out *PartnerRegionObservation) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartnerRegionObservation.
func (in *PartnerRegionObservation) DeepCopy() *PartnerRegionObservation {
	if in == nil {
		return nil
	}
	out := new(PartnerRegionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartnerRegionParameters) DeepCopyInto(out *PartnerRegionParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartnerRegionParameters.
func (in *PartnerRegionParameters) DeepCopy() *PartnerRegionParameters {
	if in == nil {
		return nil
	}
	out := new(PartnerRegionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartnerServerInitParameters) DeepCopyInto(out *PartnerServerInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IDRef != nil {
		in, out := &in.IDRef, &out.IDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IDSelector != nil {
		in, out := &in.IDSelector, &out.IDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartnerServerInitParameters.
func (in *PartnerServerInitParameters) DeepCopy() *PartnerServerInitParameters {
	if in == nil {
		return nil
	}
	out := new(PartnerServerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartnerServerObservation) DeepCopyInto(out *PartnerServerObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartnerServerObservation.
func (in *PartnerServerObservation) DeepCopy() *PartnerServerObservation {
	if in == nil {
		return nil
	}
	out := new(PartnerServerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartnerServerParameters) DeepCopyInto(out *PartnerServerParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IDRef != nil {
		in, out := &in.IDRef, &out.IDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IDSelector != nil {
		in, out := &in.IDSelector, &out.IDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartnerServerParameters.
func (in *PartnerServerParameters) DeepCopy() *PartnerServerParameters {
	if in == nil {
		return nil
	}
	out := new(PartnerServerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerDatabaseSettingsInitParameters) DeepCopyInto(out *PerDatabaseSettingsInitParameters) {
	*out = *in
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(float64)
		**out = **in
	}
	if in.MinCapacity != nil {
		in, out := &in.MinCapacity, &out.MinCapacity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerDatabaseSettingsInitParameters.
func (in *PerDatabaseSettingsInitParameters) DeepCopy() *PerDatabaseSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PerDatabaseSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerDatabaseSettingsObservation) DeepCopyInto(out *PerDatabaseSettingsObservation) {
	*out = *in
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(float64)
		**out = **in
	}
	if in.MinCapacity != nil {
		in, out := &in.MinCapacity, &out.MinCapacity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerDatabaseSettingsObservation.
func (in *PerDatabaseSettingsObservation) DeepCopy() *PerDatabaseSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(PerDatabaseSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerDatabaseSettingsParameters) DeepCopyInto(out *PerDatabaseSettingsParameters) {
	*out = *in
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(float64)
		**out = **in
	}
	if in.MinCapacity != nil {
		in, out := &in.MinCapacity, &out.MinCapacity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerDatabaseSettingsParameters.
func (in *PerDatabaseSettingsParameters) DeepCopy() *PerDatabaseSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(PerDatabaseSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PointInTimeRestoreInitParameters) DeepCopyInto(out *PointInTimeRestoreInitParameters) {
	*out = *in
	if in.RestorePointInTime != nil {
		in, out := &in.RestorePointInTime, &out.RestorePointInTime
		*out = new(string)
		**out = **in
	}
	if in.SourceDatabaseID != nil {
		in, out := &in.SourceDatabaseID, &out.SourceDatabaseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PointInTimeRestoreInitParameters.
func (in *PointInTimeRestoreInitParameters) DeepCopy() *PointInTimeRestoreInitParameters {
	if in == nil {
		return nil
	}
	out := new(PointInTimeRestoreInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PointInTimeRestoreObservation) DeepCopyInto(out *PointInTimeRestoreObservation) {
	*out = *in
	if in.RestorePointInTime != nil {
		in, out := &in.RestorePointInTime, &out.RestorePointInTime
		*out = new(string)
		**out = **in
	}
	if in.SourceDatabaseID != nil {
		in, out := &in.SourceDatabaseID, &out.SourceDatabaseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PointInTimeRestoreObservation.
func (in *PointInTimeRestoreObservation) DeepCopy() *PointInTimeRestoreObservation {
	if in == nil {
		return nil
	}
	out := new(PointInTimeRestoreObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PointInTimeRestoreParameters) DeepCopyInto(out *PointInTimeRestoreParameters) {
	*out = *in
	if in.RestorePointInTime != nil {
		in, out := &in.RestorePointInTime, &out.RestorePointInTime
		*out = new(string)
		**out = **in
	}
	if in.SourceDatabaseID != nil {
		in, out := &in.SourceDatabaseID, &out.SourceDatabaseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PointInTimeRestoreParameters.
func (in *PointInTimeRestoreParameters) DeepCopy() *PointInTimeRestoreParameters {
	if in == nil {
		return nil
	}
	out := new(PointInTimeRestoreParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReadWriteEndpointFailoverPolicyInitParameters) DeepCopyInto(out *ReadWriteEndpointFailoverPolicyInitParameters) {
	*out = *in
	if in.GraceMinutes != nil {
		in, out := &in.GraceMinutes, &out.GraceMinutes
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReadWriteEndpointFailoverPolicyInitParameters.
func (in *ReadWriteEndpointFailoverPolicyInitParameters) DeepCopy() *ReadWriteEndpointFailoverPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReadWriteEndpointFailoverPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReadWriteEndpointFailoverPolicyObservation) DeepCopyInto(out *ReadWriteEndpointFailoverPolicyObservation) {
	*out = *in
	if in.GraceMinutes != nil {
		in, out := &in.GraceMinutes, &out.GraceMinutes
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReadWriteEndpointFailoverPolicyObservation.
func (in *ReadWriteEndpointFailoverPolicyObservation) DeepCopy() *ReadWriteEndpointFailoverPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ReadWriteEndpointFailoverPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReadWriteEndpointFailoverPolicyParameters) DeepCopyInto(out *ReadWriteEndpointFailoverPolicyParameters) {
	*out = *in
	if in.GraceMinutes != nil {
		in, out := &in.GraceMinutes, &out.GraceMinutes
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReadWriteEndpointFailoverPolicyParameters.
func (in *ReadWriteEndpointFailoverPolicyParameters) DeepCopy() *ReadWriteEndpointFailoverPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ReadWriteEndpointFailoverPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecurringScansInitParameters) DeepCopyInto(out *RecurringScansInitParameters) {
	*out = *in
	if in.EmailSubscriptionAdmins != nil {
		in, out := &in.EmailSubscriptionAdmins, &out.EmailSubscriptionAdmins
		*out = new(bool)
		**out = **in
	}
	if in.Emails != nil {
		in, out := &in.Emails, &out.Emails
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecurringScansInitParameters.
func (in *RecurringScansInitParameters) DeepCopy() *RecurringScansInitParameters {
	if in == nil {
		return nil
	}
	out := new(RecurringScansInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecurringScansObservation) DeepCopyInto(out *RecurringScansObservation) {
	*out = *in
	if in.EmailSubscriptionAdmins != nil {
		in, out := &in.EmailSubscriptionAdmins, &out.EmailSubscriptionAdmins
		*out = new(bool)
		**out = **in
	}
	if in.Emails != nil {
		in, out := &in.Emails, &out.Emails
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecurringScansObservation.
func (in *RecurringScansObservation) DeepCopy() *RecurringScansObservation {
	if in == nil {
		return nil
	}
	out := new(RecurringScansObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecurringScansParameters) DeepCopyInto(out *RecurringScansParameters) {
	*out = *in
	if in.EmailSubscriptionAdmins != nil {
		in, out := &in.EmailSubscriptionAdmins, &out.EmailSubscriptionAdmins
		*out = new(bool)
		**out = **in
	}
	if in.Emails != nil {
		in, out := &in.Emails, &out.Emails
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecurringScansParameters.
func (in *RecurringScansParameters) DeepCopy() *RecurringScansParameters {
	if in == nil {
		return nil
	}
	out := new(RecurringScansParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShortTermRetentionPolicyInitParameters) DeepCopyInto(out *ShortTermRetentionPolicyInitParameters) {
	*out = *in
	if in.BackupIntervalInHours != nil {
		in, out := &in.BackupIntervalInHours, &out.BackupIntervalInHours
		*out = new(float64)
		**out = **in
	}
	if in.RetentionDays != nil {
		in, out := &in.RetentionDays, &out.RetentionDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShortTermRetentionPolicyInitParameters.
func (in *ShortTermRetentionPolicyInitParameters) DeepCopy() *ShortTermRetentionPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ShortTermRetentionPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShortTermRetentionPolicyObservation) DeepCopyInto(out *ShortTermRetentionPolicyObservation) {
	*out = *in
	if in.BackupIntervalInHours != nil {
		in, out := &in.BackupIntervalInHours, &out.BackupIntervalInHours
		*out = new(float64)
		**out = **in
	}
	if in.RetentionDays != nil {
		in, out := &in.RetentionDays, &out.RetentionDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShortTermRetentionPolicyObservation.
func (in *ShortTermRetentionPolicyObservation) DeepCopy() *ShortTermRetentionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ShortTermRetentionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShortTermRetentionPolicyParameters) DeepCopyInto(out *ShortTermRetentionPolicyParameters) {
	*out = *in
	if in.BackupIntervalInHours != nil {
		in, out := &in.BackupIntervalInHours, &out.BackupIntervalInHours
		*out = new(float64)
		**out = **in
	}
	if in.RetentionDays != nil {
		in, out := &in.RetentionDays, &out.RetentionDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShortTermRetentionPolicyParameters.
func (in *ShortTermRetentionPolicyParameters) DeepCopy() *ShortTermRetentionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ShortTermRetentionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkuInitParameters) DeepCopyInto(out *SkuInitParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkuInitParameters.
func (in *SkuInitParameters) DeepCopy() *SkuInitParameters {
	if in == nil {
		return nil
	}
	out := new(SkuInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkuObservation) DeepCopyInto(out *SkuObservation) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkuObservation.
func (in *SkuObservation) DeepCopy() *SkuObservation {
	if in == nil {
		return nil
	}
	out := new(SkuObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkuParameters) DeepCopyInto(out *SkuParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkuParameters.
func (in *SkuParameters) DeepCopy() *SkuParameters {
	if in == nil {
		return nil
	}
	out := new(SkuParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreatDetectionPolicyInitParameters) DeepCopyInto(out *ThreatDetectionPolicyInitParameters) {
	*out = *in
	if in.DisabledAlerts != nil {
		in, out := &in.DisabledAlerts, &out.DisabledAlerts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EmailAccountAdmins != nil {
		in, out := &in.EmailAccountAdmins, &out.EmailAccountAdmins
		*out = new(string)
		**out = **in
	}
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RetentionDays != nil {
		in, out := &in.RetentionDays, &out.RetentionDays
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountAccessKeySecretRef != nil {
		in, out := &in.StorageAccountAccessKeySecretRef, &out.StorageAccountAccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.StorageEndpoint != nil {
		in, out := &in.StorageEndpoint, &out.StorageEndpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreatDetectionPolicyInitParameters.
func (in *ThreatDetectionPolicyInitParameters) DeepCopy() *ThreatDetectionPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ThreatDetectionPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreatDetectionPolicyObservation) DeepCopyInto(out *ThreatDetectionPolicyObservation) {
	*out = *in
	if in.DisabledAlerts != nil {
		in, out := &in.DisabledAlerts, &out.DisabledAlerts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EmailAccountAdmins != nil {
		in, out := &in.EmailAccountAdmins, &out.EmailAccountAdmins
		*out = new(string)
		**out = **in
	}
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RetentionDays != nil {
		in, out := &in.RetentionDays, &out.RetentionDays
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StorageEndpoint != nil {
		in, out := &in.StorageEndpoint, &out.StorageEndpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreatDetectionPolicyObservation.
func (in *ThreatDetectionPolicyObservation) DeepCopy() *ThreatDetectionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ThreatDetectionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreatDetectionPolicyParameters) DeepCopyInto(out *ThreatDetectionPolicyParameters) {
	*out = *in
	if in.DisabledAlerts != nil {
		in, out := &in.DisabledAlerts, &out.DisabledAlerts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EmailAccountAdmins != nil {
		in, out := &in.EmailAccountAdmins, &out.EmailAccountAdmins
		*out = new(string)
		**out = **in
	}
	if in.EmailAddresses != nil {
		in, out := &in.EmailAddresses, &out.EmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RetentionDays != nil {
		in, out := &in.RetentionDays, &out.RetentionDays
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountAccessKeySecretRef != nil {
		in, out := &in.StorageAccountAccessKeySecretRef, &out.StorageAccountAccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.StorageEndpoint != nil {
		in, out := &in.StorageEndpoint, &out.StorageEndpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreatDetectionPolicyParameters.
func (in *ThreatDetectionPolicyParameters) DeepCopy() *ThreatDetectionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ThreatDetectionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}
