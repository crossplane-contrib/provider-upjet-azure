/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type MSSQLDatabaseExtendedAuditingPolicyObservation struct {

	// The ID of the MS SQL Database Extended Auditing Policy.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type MSSQLDatabaseExtendedAuditingPolicyParameters struct {

	// The ID of the SQL database to set the extended auditing policy. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/sql/v1beta1.MSSQLDatabase
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	DatabaseID *string `json:"databaseId,omitempty" tf:"database_id,omitempty"`

	// Reference to a MSSQLDatabase in sql to populate databaseId.
	// +kubebuilder:validation:Optional
	DatabaseIDRef *v1.Reference `json:"databaseIdRef,omitempty" tf:"-"`

	// Selector for a MSSQLDatabase in sql to populate databaseId.
	// +kubebuilder:validation:Optional
	DatabaseIDSelector *v1.Selector `json:"databaseIdSelector,omitempty" tf:"-"`

	// Whether to enable the extended auditing policy. Possible values are true and false. Defaults to true.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Enable audit events to Azure Monitor? Defaults to true.
	// +kubebuilder:validation:Optional
	LogMonitoringEnabled *bool `json:"logMonitoringEnabled,omitempty" tf:"log_monitoring_enabled,omitempty"`

	// The number of days to retain logs for in the storage account. Defaults to 0.
	// +kubebuilder:validation:Optional
	RetentionInDays *float64 `json:"retentionInDays,omitempty" tf:"retention_in_days,omitempty"`

	// Is storage_account_access_key value the storage's secondary key?
	// +kubebuilder:validation:Optional
	StorageAccountAccessKeyIsSecondary *bool `json:"storageAccountAccessKeyIsSecondary,omitempty" tf:"storage_account_access_key_is_secondary,omitempty"`

	// The access key to use for the auditing storage account.
	// +kubebuilder:validation:Optional
	StorageAccountAccessKeySecretRef *v1.SecretKeySelector `json:"storageAccountAccessKeySecretRef,omitempty" tf:"-"`

	// The blob storage endpoint (e.g. https://example.blob.core.windows.net). This blob storage will hold all extended auditing logs.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("primary_blob_endpoint",true)
	// +kubebuilder:validation:Optional
	StorageEndpoint *string `json:"storageEndpoint,omitempty" tf:"storage_endpoint,omitempty"`

	// Reference to a Account in storage to populate storageEndpoint.
	// +kubebuilder:validation:Optional
	StorageEndpointRef *v1.Reference `json:"storageEndpointRef,omitempty" tf:"-"`

	// Selector for a Account in storage to populate storageEndpoint.
	// +kubebuilder:validation:Optional
	StorageEndpointSelector *v1.Selector `json:"storageEndpointSelector,omitempty" tf:"-"`
}

// MSSQLDatabaseExtendedAuditingPolicySpec defines the desired state of MSSQLDatabaseExtendedAuditingPolicy
type MSSQLDatabaseExtendedAuditingPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MSSQLDatabaseExtendedAuditingPolicyParameters `json:"forProvider"`
}

// MSSQLDatabaseExtendedAuditingPolicyStatus defines the observed state of MSSQLDatabaseExtendedAuditingPolicy.
type MSSQLDatabaseExtendedAuditingPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MSSQLDatabaseExtendedAuditingPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// MSSQLDatabaseExtendedAuditingPolicy is the Schema for the MSSQLDatabaseExtendedAuditingPolicys API. Manages a MS SQL Database Extended Auditing Policy.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type MSSQLDatabaseExtendedAuditingPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MSSQLDatabaseExtendedAuditingPolicySpec   `json:"spec"`
	Status            MSSQLDatabaseExtendedAuditingPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MSSQLDatabaseExtendedAuditingPolicyList contains a list of MSSQLDatabaseExtendedAuditingPolicys
type MSSQLDatabaseExtendedAuditingPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MSSQLDatabaseExtendedAuditingPolicy `json:"items"`
}

// Repository type metadata.
var (
	MSSQLDatabaseExtendedAuditingPolicy_Kind             = "MSSQLDatabaseExtendedAuditingPolicy"
	MSSQLDatabaseExtendedAuditingPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MSSQLDatabaseExtendedAuditingPolicy_Kind}.String()
	MSSQLDatabaseExtendedAuditingPolicy_KindAPIVersion   = MSSQLDatabaseExtendedAuditingPolicy_Kind + "." + CRDGroupVersion.String()
	MSSQLDatabaseExtendedAuditingPolicy_GroupVersionKind = CRDGroupVersion.WithKind(MSSQLDatabaseExtendedAuditingPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&MSSQLDatabaseExtendedAuditingPolicy{}, &MSSQLDatabaseExtendedAuditingPolicyList{})
}
