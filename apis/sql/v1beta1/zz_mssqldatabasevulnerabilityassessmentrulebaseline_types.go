// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BaselineResultInitParameters struct {

	// A list representing a result of the baseline.
	Result []*string `json:"result,omitempty" tf:"result,omitempty"`
}

type BaselineResultObservation struct {

	// A list representing a result of the baseline.
	Result []*string `json:"result,omitempty" tf:"result,omitempty"`
}

type BaselineResultParameters struct {

	// A list representing a result of the baseline.
	// +kubebuilder:validation:Optional
	Result []*string `json:"result" tf:"result,omitempty"`
}

type MSSQLDatabaseVulnerabilityAssessmentRuleBaselineInitParameters struct {

	// The name of the vulnerability assessment rule baseline. Valid options are default and master. default implies a baseline on a database level rule and master for server level rule. Defaults to default. Changing this forces a new resource to be created.
	BaselineName *string `json:"baselineName,omitempty" tf:"baseline_name,omitempty"`

	// A baseline_result block as documented below. Multiple blocks can be defined.
	BaselineResult []BaselineResultInitParameters `json:"baselineResult,omitempty" tf:"baseline_result,omitempty"`

	// The vulnerability assessment rule ID. Changing this forces a new resource to be created.
	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`
}

type MSSQLDatabaseVulnerabilityAssessmentRuleBaselineObservation struct {

	// The name of the vulnerability assessment rule baseline. Valid options are default and master. default implies a baseline on a database level rule and master for server level rule. Defaults to default. Changing this forces a new resource to be created.
	BaselineName *string `json:"baselineName,omitempty" tf:"baseline_name,omitempty"`

	// A baseline_result block as documented below. Multiple blocks can be defined.
	BaselineResult []BaselineResultObservation `json:"baselineResult,omitempty" tf:"baseline_result,omitempty"`

	// Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
	DatabaseName *string `json:"databaseName,omitempty" tf:"database_name,omitempty"`

	// The ID of the Database Vulnerability Assessment Rule Baseline.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The vulnerability assessment rule ID. Changing this forces a new resource to be created.
	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`

	// The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.
	ServerVulnerabilityAssessmentID *string `json:"serverVulnerabilityAssessmentId,omitempty" tf:"server_vulnerability_assessment_id,omitempty"`
}

type MSSQLDatabaseVulnerabilityAssessmentRuleBaselineParameters struct {

	// The name of the vulnerability assessment rule baseline. Valid options are default and master. default implies a baseline on a database level rule and master for server level rule. Defaults to default. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	BaselineName *string `json:"baselineName,omitempty" tf:"baseline_name,omitempty"`

	// A baseline_result block as documented below. Multiple blocks can be defined.
	// +kubebuilder:validation:Optional
	BaselineResult []BaselineResultParameters `json:"baselineResult,omitempty" tf:"baseline_result,omitempty"`

	// Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=MSSQLDatabase
	// +kubebuilder:validation:Optional
	DatabaseName *string `json:"databaseName,omitempty" tf:"database_name,omitempty"`

	// Reference to a MSSQLDatabase to populate databaseName.
	// +kubebuilder:validation:Optional
	DatabaseNameRef *v1.Reference `json:"databaseNameRef,omitempty" tf:"-"`

	// Selector for a MSSQLDatabase to populate databaseName.
	// +kubebuilder:validation:Optional
	DatabaseNameSelector *v1.Selector `json:"databaseNameSelector,omitempty" tf:"-"`

	// The vulnerability assessment rule ID. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`

	// The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/sql/v1beta1.MSSQLServerVulnerabilityAssessment
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ServerVulnerabilityAssessmentID *string `json:"serverVulnerabilityAssessmentId,omitempty" tf:"server_vulnerability_assessment_id,omitempty"`

	// Reference to a MSSQLServerVulnerabilityAssessment in sql to populate serverVulnerabilityAssessmentId.
	// +kubebuilder:validation:Optional
	ServerVulnerabilityAssessmentIDRef *v1.Reference `json:"serverVulnerabilityAssessmentIdRef,omitempty" tf:"-"`

	// Selector for a MSSQLServerVulnerabilityAssessment in sql to populate serverVulnerabilityAssessmentId.
	// +kubebuilder:validation:Optional
	ServerVulnerabilityAssessmentIDSelector *v1.Selector `json:"serverVulnerabilityAssessmentIdSelector,omitempty" tf:"-"`
}

// MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpec defines the desired state of MSSQLDatabaseVulnerabilityAssessmentRuleBaseline
type MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MSSQLDatabaseVulnerabilityAssessmentRuleBaselineParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider MSSQLDatabaseVulnerabilityAssessmentRuleBaselineInitParameters `json:"initProvider,omitempty"`
}

// MSSQLDatabaseVulnerabilityAssessmentRuleBaselineStatus defines the observed state of MSSQLDatabaseVulnerabilityAssessmentRuleBaseline.
type MSSQLDatabaseVulnerabilityAssessmentRuleBaselineStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MSSQLDatabaseVulnerabilityAssessmentRuleBaselineObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// MSSQLDatabaseVulnerabilityAssessmentRuleBaseline is the Schema for the MSSQLDatabaseVulnerabilityAssessmentRuleBaselines API. Manages a Database Vulnerability Assessment Rule Baseline.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type MSSQLDatabaseVulnerabilityAssessmentRuleBaseline struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.baselineResult) || (has(self.initProvider) && has(self.initProvider.baselineResult))",message="spec.forProvider.baselineResult is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.ruleId) || (has(self.initProvider) && has(self.initProvider.ruleId))",message="spec.forProvider.ruleId is a required parameter"
	Spec   MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpec   `json:"spec"`
	Status MSSQLDatabaseVulnerabilityAssessmentRuleBaselineStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MSSQLDatabaseVulnerabilityAssessmentRuleBaselineList contains a list of MSSQLDatabaseVulnerabilityAssessmentRuleBaselines
type MSSQLDatabaseVulnerabilityAssessmentRuleBaselineList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MSSQLDatabaseVulnerabilityAssessmentRuleBaseline `json:"items"`
}

// Repository type metadata.
var (
	MSSQLDatabaseVulnerabilityAssessmentRuleBaseline_Kind             = "MSSQLDatabaseVulnerabilityAssessmentRuleBaseline"
	MSSQLDatabaseVulnerabilityAssessmentRuleBaseline_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MSSQLDatabaseVulnerabilityAssessmentRuleBaseline_Kind}.String()
	MSSQLDatabaseVulnerabilityAssessmentRuleBaseline_KindAPIVersion   = MSSQLDatabaseVulnerabilityAssessmentRuleBaseline_Kind + "." + CRDGroupVersion.String()
	MSSQLDatabaseVulnerabilityAssessmentRuleBaseline_GroupVersionKind = CRDGroupVersion.WithKind(MSSQLDatabaseVulnerabilityAssessmentRuleBaseline_Kind)
)

func init() {
	SchemeBuilder.Register(&MSSQLDatabaseVulnerabilityAssessmentRuleBaseline{}, &MSSQLDatabaseVulnerabilityAssessmentRuleBaselineList{})
}
