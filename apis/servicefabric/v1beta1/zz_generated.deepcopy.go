//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectoryObservation) DeepCopyInto(out *ActiveDirectoryObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectoryObservation.
func (in *ActiveDirectoryObservation) DeepCopy() *ActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectoryParameters) DeepCopyInto(out *ActiveDirectoryParameters) {
	*out = *in
	if in.ClientApplicationID != nil {
		in, out := &in.ClientApplicationID, &out.ClientApplicationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterApplicationID != nil {
		in, out := &in.ClusterApplicationID, &out.ClusterApplicationID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectoryParameters.
func (in *ActiveDirectoryParameters) DeepCopy() *ActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationPortsObservation) DeepCopyInto(out *ApplicationPortsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationPortsObservation.
func (in *ApplicationPortsObservation) DeepCopy() *ApplicationPortsObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationPortsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationPortsParameters) DeepCopyInto(out *ApplicationPortsParameters) {
	*out = *in
	if in.EndPort != nil {
		in, out := &in.EndPort, &out.EndPort
		*out = new(float64)
		**out = **in
	}
	if in.StartPort != nil {
		in, out := &in.StartPort, &out.StartPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationPortsParameters.
func (in *ApplicationPortsParameters) DeepCopy() *ApplicationPortsParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationPortsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationCertificateObservation) DeepCopyInto(out *AuthenticationCertificateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationCertificateObservation.
func (in *AuthenticationCertificateObservation) DeepCopy() *AuthenticationCertificateObservation {
	if in == nil {
		return nil
	}
	out := new(AuthenticationCertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationCertificateParameters) DeepCopyInto(out *AuthenticationCertificateParameters) {
	*out = *in
	if in.CommonName != nil {
		in, out := &in.CommonName, &out.CommonName
		*out = new(string)
		**out = **in
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationCertificateParameters.
func (in *AuthenticationCertificateParameters) DeepCopy() *AuthenticationCertificateParameters {
	if in == nil {
		return nil
	}
	out := new(AuthenticationCertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationObservation) DeepCopyInto(out *AuthenticationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationObservation.
func (in *AuthenticationObservation) DeepCopy() *AuthenticationObservation {
	if in == nil {
		return nil
	}
	out := new(AuthenticationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationParameters) DeepCopyInto(out *AuthenticationParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]ActiveDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = make([]AuthenticationCertificateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationParameters.
func (in *AuthenticationParameters) DeepCopy() *AuthenticationParameters {
	if in == nil {
		return nil
	}
	out := new(AuthenticationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureActiveDirectoryObservation) DeepCopyInto(out *AzureActiveDirectoryObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureActiveDirectoryObservation.
func (in *AzureActiveDirectoryObservation) DeepCopy() *AzureActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(AzureActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureActiveDirectoryParameters) DeepCopyInto(out *AzureActiveDirectoryParameters) {
	*out = *in
	if in.ClientApplicationID != nil {
		in, out := &in.ClientApplicationID, &out.ClientApplicationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterApplicationID != nil {
		in, out := &in.ClusterApplicationID, &out.ClusterApplicationID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureActiveDirectoryParameters.
func (in *AzureActiveDirectoryParameters) DeepCopy() *AzureActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(AzureActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateCommonNamesObservation) DeepCopyInto(out *CertificateCommonNamesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateCommonNamesObservation.
func (in *CertificateCommonNamesObservation) DeepCopy() *CertificateCommonNamesObservation {
	if in == nil {
		return nil
	}
	out := new(CertificateCommonNamesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateCommonNamesParameters) DeepCopyInto(out *CertificateCommonNamesParameters) {
	*out = *in
	if in.CommonNames != nil {
		in, out := &in.CommonNames, &out.CommonNames
		*out = make([]CommonNamesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.X509StoreName != nil {
		in, out := &in.X509StoreName, &out.X509StoreName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateCommonNamesParameters.
func (in *CertificateCommonNamesParameters) DeepCopy() *CertificateCommonNamesParameters {
	if in == nil {
		return nil
	}
	out := new(CertificateCommonNamesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateObservation) DeepCopyInto(out *CertificateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateObservation.
func (in *CertificateObservation) DeepCopy() *CertificateObservation {
	if in == nil {
		return nil
	}
	out := new(CertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateParameters) DeepCopyInto(out *CertificateParameters) {
	*out = *in
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
	if in.ThumbprintSecondary != nil {
		in, out := &in.ThumbprintSecondary, &out.ThumbprintSecondary
		*out = new(string)
		**out = **in
	}
	if in.X509StoreName != nil {
		in, out := &in.X509StoreName, &out.X509StoreName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateParameters.
func (in *CertificateParameters) DeepCopy() *CertificateParameters {
	if in == nil {
		return nil
	}
	out := new(CertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificatesObservation) DeepCopyInto(out *CertificatesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificatesObservation.
func (in *CertificatesObservation) DeepCopy() *CertificatesObservation {
	if in == nil {
		return nil
	}
	out := new(CertificatesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificatesParameters) DeepCopyInto(out *CertificatesParameters) {
	*out = *in
	if in.Store != nil {
		in, out := &in.Store, &out.Store
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificatesParameters.
func (in *CertificatesParameters) DeepCopy() *CertificatesParameters {
	if in == nil {
		return nil
	}
	out := new(CertificatesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientCertificateCommonNameObservation) DeepCopyInto(out *ClientCertificateCommonNameObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientCertificateCommonNameObservation.
func (in *ClientCertificateCommonNameObservation) DeepCopy() *ClientCertificateCommonNameObservation {
	if in == nil {
		return nil
	}
	out := new(ClientCertificateCommonNameObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientCertificateCommonNameParameters) DeepCopyInto(out *ClientCertificateCommonNameParameters) {
	*out = *in
	if in.CommonName != nil {
		in, out := &in.CommonName, &out.CommonName
		*out = new(string)
		**out = **in
	}
	if in.IsAdmin != nil {
		in, out := &in.IsAdmin, &out.IsAdmin
		*out = new(bool)
		**out = **in
	}
	if in.IssuerThumbprint != nil {
		in, out := &in.IssuerThumbprint, &out.IssuerThumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientCertificateCommonNameParameters.
func (in *ClientCertificateCommonNameParameters) DeepCopy() *ClientCertificateCommonNameParameters {
	if in == nil {
		return nil
	}
	out := new(ClientCertificateCommonNameParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientCertificateThumbprintObservation) DeepCopyInto(out *ClientCertificateThumbprintObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientCertificateThumbprintObservation.
func (in *ClientCertificateThumbprintObservation) DeepCopy() *ClientCertificateThumbprintObservation {
	if in == nil {
		return nil
	}
	out := new(ClientCertificateThumbprintObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientCertificateThumbprintParameters) DeepCopyInto(out *ClientCertificateThumbprintParameters) {
	*out = *in
	if in.IsAdmin != nil {
		in, out := &in.IsAdmin, &out.IsAdmin
		*out = new(bool)
		**out = **in
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientCertificateThumbprintParameters.
func (in *ClientCertificateThumbprintParameters) DeepCopy() *ClientCertificateThumbprintParameters {
	if in == nil {
		return nil
	}
	out := new(ClientCertificateThumbprintParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterObservation) DeepCopyInto(out *ClusterObservation) {
	*out = *in
	if in.ClusterEndpoint != nil {
		in, out := &in.ClusterEndpoint, &out.ClusterEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterObservation.
func (in *ClusterObservation) DeepCopy() *ClusterObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterParameters) DeepCopyInto(out *ClusterParameters) {
	*out = *in
	if in.AddOnFeatures != nil {
		in, out := &in.AddOnFeatures, &out.AddOnFeatures
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AzureActiveDirectory != nil {
		in, out := &in.AzureActiveDirectory, &out.AzureActiveDirectory
		*out = make([]AzureActiveDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = make([]CertificateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CertificateCommonNames != nil {
		in, out := &in.CertificateCommonNames, &out.CertificateCommonNames
		*out = make([]CertificateCommonNamesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientCertificateCommonName != nil {
		in, out := &in.ClientCertificateCommonName, &out.ClientCertificateCommonName
		*out = make([]ClientCertificateCommonNameParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientCertificateThumbprint != nil {
		in, out := &in.ClientCertificateThumbprint, &out.ClientCertificateThumbprint
		*out = make([]ClientCertificateThumbprintParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterCodeVersion != nil {
		in, out := &in.ClusterCodeVersion, &out.ClusterCodeVersion
		*out = new(string)
		**out = **in
	}
	if in.DiagnosticsConfig != nil {
		in, out := &in.DiagnosticsConfig, &out.DiagnosticsConfig
		*out = make([]DiagnosticsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FabricSettings != nil {
		in, out := &in.FabricSettings, &out.FabricSettings
		*out = make([]FabricSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManagementEndpoint != nil {
		in, out := &in.ManagementEndpoint, &out.ManagementEndpoint
		*out = new(string)
		**out = **in
	}
	if in.NodeType != nil {
		in, out := &in.NodeType, &out.NodeType
		*out = make([]NodeTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReliabilityLevel != nil {
		in, out := &in.ReliabilityLevel, &out.ReliabilityLevel
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ReverseProxyCertificate != nil {
		in, out := &in.ReverseProxyCertificate, &out.ReverseProxyCertificate
		*out = make([]ReverseProxyCertificateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReverseProxyCertificateCommonNames != nil {
		in, out := &in.ReverseProxyCertificateCommonNames, &out.ReverseProxyCertificateCommonNames
		*out = make([]ReverseProxyCertificateCommonNamesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceFabricZonalUpgradeMode != nil {
		in, out := &in.ServiceFabricZonalUpgradeMode, &out.ServiceFabricZonalUpgradeMode
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpgradeMode != nil {
		in, out := &in.UpgradeMode, &out.UpgradeMode
		*out = new(string)
		**out = **in
	}
	if in.UpgradePolicy != nil {
		in, out := &in.UpgradePolicy, &out.UpgradePolicy
		*out = make([]UpgradePolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VMImage != nil {
		in, out := &in.VMImage, &out.VMImage
		*out = new(string)
		**out = **in
	}
	if in.VmssZonalUpgradeMode != nil {
		in, out := &in.VmssZonalUpgradeMode, &out.VmssZonalUpgradeMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterParameters.
func (in *ClusterParameters) DeepCopy() *ClusterParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommonNamesObservation) DeepCopyInto(out *CommonNamesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommonNamesObservation.
func (in *CommonNamesObservation) DeepCopy() *CommonNamesObservation {
	if in == nil {
		return nil
	}
	out := new(CommonNamesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommonNamesParameters) DeepCopyInto(out *CommonNamesParameters) {
	*out = *in
	if in.CertificateCommonName != nil {
		in, out := &in.CertificateCommonName, &out.CertificateCommonName
		*out = new(string)
		**out = **in
	}
	if in.CertificateIssuerThumbprint != nil {
		in, out := &in.CertificateIssuerThumbprint, &out.CertificateIssuerThumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommonNamesParameters.
func (in *CommonNamesParameters) DeepCopy() *CommonNamesParameters {
	if in == nil {
		return nil
	}
	out := new(CommonNamesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomFabricSettingObservation) DeepCopyInto(out *CustomFabricSettingObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomFabricSettingObservation.
func (in *CustomFabricSettingObservation) DeepCopy() *CustomFabricSettingObservation {
	if in == nil {
		return nil
	}
	out := new(CustomFabricSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomFabricSettingParameters) DeepCopyInto(out *CustomFabricSettingParameters) {
	*out = *in
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = new(string)
		**out = **in
	}
	if in.Section != nil {
		in, out := &in.Section, &out.Section
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomFabricSettingParameters.
func (in *CustomFabricSettingParameters) DeepCopy() *CustomFabricSettingParameters {
	if in == nil {
		return nil
	}
	out := new(CustomFabricSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeltaHealthPolicyObservation) DeepCopyInto(out *DeltaHealthPolicyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeltaHealthPolicyObservation.
func (in *DeltaHealthPolicyObservation) DeepCopy() *DeltaHealthPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(DeltaHealthPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeltaHealthPolicyParameters) DeepCopyInto(out *DeltaHealthPolicyParameters) {
	*out = *in
	if in.MaxDeltaUnhealthyApplicationsPercent != nil {
		in, out := &in.MaxDeltaUnhealthyApplicationsPercent, &out.MaxDeltaUnhealthyApplicationsPercent
		*out = new(float64)
		**out = **in
	}
	if in.MaxDeltaUnhealthyNodesPercent != nil {
		in, out := &in.MaxDeltaUnhealthyNodesPercent, &out.MaxDeltaUnhealthyNodesPercent
		*out = new(float64)
		**out = **in
	}
	if in.MaxUpgradeDomainDeltaUnhealthyNodesPercent != nil {
		in, out := &in.MaxUpgradeDomainDeltaUnhealthyNodesPercent, &out.MaxUpgradeDomainDeltaUnhealthyNodesPercent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeltaHealthPolicyParameters.
func (in *DeltaHealthPolicyParameters) DeepCopy() *DeltaHealthPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(DeltaHealthPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiagnosticsConfigObservation) DeepCopyInto(out *DiagnosticsConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiagnosticsConfigObservation.
func (in *DiagnosticsConfigObservation) DeepCopy() *DiagnosticsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DiagnosticsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiagnosticsConfigParameters) DeepCopyInto(out *DiagnosticsConfigParameters) {
	*out = *in
	if in.BlobEndpoint != nil {
		in, out := &in.BlobEndpoint, &out.BlobEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ProtectedAccountKeyName != nil {
		in, out := &in.ProtectedAccountKeyName, &out.ProtectedAccountKeyName
		*out = new(string)
		**out = **in
	}
	if in.QueueEndpoint != nil {
		in, out := &in.QueueEndpoint, &out.QueueEndpoint
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.TableEndpoint != nil {
		in, out := &in.TableEndpoint, &out.TableEndpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiagnosticsConfigParameters.
func (in *DiagnosticsConfigParameters) DeepCopy() *DiagnosticsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DiagnosticsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralPortsObservation) DeepCopyInto(out *EphemeralPortsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralPortsObservation.
func (in *EphemeralPortsObservation) DeepCopy() *EphemeralPortsObservation {
	if in == nil {
		return nil
	}
	out := new(EphemeralPortsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralPortsParameters) DeepCopyInto(out *EphemeralPortsParameters) {
	*out = *in
	if in.EndPort != nil {
		in, out := &in.EndPort, &out.EndPort
		*out = new(float64)
		**out = **in
	}
	if in.StartPort != nil {
		in, out := &in.StartPort, &out.StartPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralPortsParameters.
func (in *EphemeralPortsParameters) DeepCopy() *EphemeralPortsParameters {
	if in == nil {
		return nil
	}
	out := new(EphemeralPortsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FabricSettingsObservation) DeepCopyInto(out *FabricSettingsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FabricSettingsObservation.
func (in *FabricSettingsObservation) DeepCopy() *FabricSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(FabricSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FabricSettingsParameters) DeepCopyInto(out *FabricSettingsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FabricSettingsParameters.
func (in *FabricSettingsParameters) DeepCopy() *FabricSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(FabricSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthPolicyObservation) DeepCopyInto(out *HealthPolicyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthPolicyObservation.
func (in *HealthPolicyObservation) DeepCopy() *HealthPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(HealthPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthPolicyParameters) DeepCopyInto(out *HealthPolicyParameters) {
	*out = *in
	if in.MaxUnhealthyApplicationsPercent != nil {
		in, out := &in.MaxUnhealthyApplicationsPercent, &out.MaxUnhealthyApplicationsPercent
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnhealthyNodesPercent != nil {
		in, out := &in.MaxUnhealthyNodesPercent, &out.MaxUnhealthyNodesPercent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthPolicyParameters.
func (in *HealthPolicyParameters) DeepCopy() *HealthPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(HealthPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LBRuleObservation) DeepCopyInto(out *LBRuleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LBRuleObservation.
func (in *LBRuleObservation) DeepCopy() *LBRuleObservation {
	if in == nil {
		return nil
	}
	out := new(LBRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LBRuleParameters) DeepCopyInto(out *LBRuleParameters) {
	*out = *in
	if in.BackendPort != nil {
		in, out := &in.BackendPort, &out.BackendPort
		*out = new(float64)
		**out = **in
	}
	if in.FrontendPort != nil {
		in, out := &in.FrontendPort, &out.FrontendPort
		*out = new(float64)
		**out = **in
	}
	if in.ProbeProtocol != nil {
		in, out := &in.ProbeProtocol, &out.ProbeProtocol
		*out = new(string)
		**out = **in
	}
	if in.ProbeRequestPath != nil {
		in, out := &in.ProbeRequestPath, &out.ProbeRequestPath
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LBRuleParameters.
func (in *LBRuleParameters) DeepCopy() *LBRuleParameters {
	if in == nil {
		return nil
	}
	out := new(LBRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedCluster) DeepCopyInto(out *ManagedCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedCluster.
func (in *ManagedCluster) DeepCopy() *ManagedCluster {
	if in == nil {
		return nil
	}
	out := new(ManagedCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterList) DeepCopyInto(out *ManagedClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagedCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterList.
func (in *ManagedClusterList) DeepCopy() *ManagedClusterList {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterNodeTypeObservation) DeepCopyInto(out *ManagedClusterNodeTypeObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterNodeTypeObservation.
func (in *ManagedClusterNodeTypeObservation) DeepCopy() *ManagedClusterNodeTypeObservation {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterNodeTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterNodeTypeParameters) DeepCopyInto(out *ManagedClusterNodeTypeParameters) {
	*out = *in
	if in.ApplicationPortRange != nil {
		in, out := &in.ApplicationPortRange, &out.ApplicationPortRange
		*out = new(string)
		**out = **in
	}
	if in.Capacities != nil {
		in, out := &in.Capacities, &out.Capacities
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DataDiskSizeGb != nil {
		in, out := &in.DataDiskSizeGb, &out.DataDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.DataDiskType != nil {
		in, out := &in.DataDiskType, &out.DataDiskType
		*out = new(string)
		**out = **in
	}
	if in.EphemeralPortRange != nil {
		in, out := &in.EphemeralPortRange, &out.EphemeralPortRange
		*out = new(string)
		**out = **in
	}
	if in.MultiplePlacementGroupsEnabled != nil {
		in, out := &in.MultiplePlacementGroupsEnabled, &out.MultiplePlacementGroupsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PlacementProperties != nil {
		in, out := &in.PlacementProperties, &out.PlacementProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Primary != nil {
		in, out := &in.Primary, &out.Primary
		*out = new(bool)
		**out = **in
	}
	if in.Stateless != nil {
		in, out := &in.Stateless, &out.Stateless
		*out = new(bool)
		**out = **in
	}
	if in.VMImageOffer != nil {
		in, out := &in.VMImageOffer, &out.VMImageOffer
		*out = new(string)
		**out = **in
	}
	if in.VMImagePublisher != nil {
		in, out := &in.VMImagePublisher, &out.VMImagePublisher
		*out = new(string)
		**out = **in
	}
	if in.VMImageSku != nil {
		in, out := &in.VMImageSku, &out.VMImageSku
		*out = new(string)
		**out = **in
	}
	if in.VMImageVersion != nil {
		in, out := &in.VMImageVersion, &out.VMImageVersion
		*out = new(string)
		**out = **in
	}
	if in.VMInstanceCount != nil {
		in, out := &in.VMInstanceCount, &out.VMInstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.VMSecrets != nil {
		in, out := &in.VMSecrets, &out.VMSecrets
		*out = make([]VMSecretsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterNodeTypeParameters.
func (in *ManagedClusterNodeTypeParameters) DeepCopy() *ManagedClusterNodeTypeParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterNodeTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterObservation) DeepCopyInto(out *ManagedClusterObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NodeType != nil {
		in, out := &in.NodeType, &out.NodeType
		*out = make([]ManagedClusterNodeTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterObservation.
func (in *ManagedClusterObservation) DeepCopy() *ManagedClusterObservation {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterParameters) DeepCopyInto(out *ManagedClusterParameters) {
	*out = *in
	if in.Authentication != nil {
		in, out := &in.Authentication, &out.Authentication
		*out = make([]AuthenticationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackupServiceEnabled != nil {
		in, out := &in.BackupServiceEnabled, &out.BackupServiceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientConnectionPort != nil {
		in, out := &in.ClientConnectionPort, &out.ClientConnectionPort
		*out = new(float64)
		**out = **in
	}
	if in.CustomFabricSetting != nil {
		in, out := &in.CustomFabricSetting, &out.CustomFabricSetting
		*out = make([]CustomFabricSettingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DNSName != nil {
		in, out := &in.DNSName, &out.DNSName
		*out = new(string)
		**out = **in
	}
	if in.DNSServiceEnabled != nil {
		in, out := &in.DNSServiceEnabled, &out.DNSServiceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HTTPGatewayPort != nil {
		in, out := &in.HTTPGatewayPort, &out.HTTPGatewayPort
		*out = new(float64)
		**out = **in
	}
	if in.LBRule != nil {
		in, out := &in.LBRule, &out.LBRule
		*out = make([]LBRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NodeType != nil {
		in, out := &in.NodeType, &out.NodeType
		*out = make([]ManagedClusterNodeTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpgradeWave != nil {
		in, out := &in.UpgradeWave, &out.UpgradeWave
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterParameters.
func (in *ManagedClusterParameters) DeepCopy() *ManagedClusterParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterSpec) DeepCopyInto(out *ManagedClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterSpec.
func (in *ManagedClusterSpec) DeepCopy() *ManagedClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterStatus) DeepCopyInto(out *ManagedClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterStatus.
func (in *ManagedClusterStatus) DeepCopy() *ManagedClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTypeObservation) DeepCopyInto(out *NodeTypeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTypeObservation.
func (in *NodeTypeObservation) DeepCopy() *NodeTypeObservation {
	if in == nil {
		return nil
	}
	out := new(NodeTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTypeParameters) DeepCopyInto(out *NodeTypeParameters) {
	*out = *in
	if in.ApplicationPorts != nil {
		in, out := &in.ApplicationPorts, &out.ApplicationPorts
		*out = make([]ApplicationPortsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Capacities != nil {
		in, out := &in.Capacities, &out.Capacities
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ClientEndpointPort != nil {
		in, out := &in.ClientEndpointPort, &out.ClientEndpointPort
		*out = new(float64)
		**out = **in
	}
	if in.DurabilityLevel != nil {
		in, out := &in.DurabilityLevel, &out.DurabilityLevel
		*out = new(string)
		**out = **in
	}
	if in.EphemeralPorts != nil {
		in, out := &in.EphemeralPorts, &out.EphemeralPorts
		*out = make([]EphemeralPortsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPEndpointPort != nil {
		in, out := &in.HTTPEndpointPort, &out.HTTPEndpointPort
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.IsPrimary != nil {
		in, out := &in.IsPrimary, &out.IsPrimary
		*out = new(bool)
		**out = **in
	}
	if in.IsStateless != nil {
		in, out := &in.IsStateless, &out.IsStateless
		*out = new(bool)
		**out = **in
	}
	if in.MultipleAvailabilityZones != nil {
		in, out := &in.MultipleAvailabilityZones, &out.MultipleAvailabilityZones
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PlacementProperties != nil {
		in, out := &in.PlacementProperties, &out.PlacementProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ReverseProxyEndpointPort != nil {
		in, out := &in.ReverseProxyEndpointPort, &out.ReverseProxyEndpointPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTypeParameters.
func (in *NodeTypeParameters) DeepCopy() *NodeTypeParameters {
	if in == nil {
		return nil
	}
	out := new(NodeTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReverseProxyCertificateCommonNamesCommonNamesObservation) DeepCopyInto(out *ReverseProxyCertificateCommonNamesCommonNamesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReverseProxyCertificateCommonNamesCommonNamesObservation.
func (in *ReverseProxyCertificateCommonNamesCommonNamesObservation) DeepCopy() *ReverseProxyCertificateCommonNamesCommonNamesObservation {
	if in == nil {
		return nil
	}
	out := new(ReverseProxyCertificateCommonNamesCommonNamesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReverseProxyCertificateCommonNamesCommonNamesParameters) DeepCopyInto(out *ReverseProxyCertificateCommonNamesCommonNamesParameters) {
	*out = *in
	if in.CertificateCommonName != nil {
		in, out := &in.CertificateCommonName, &out.CertificateCommonName
		*out = new(string)
		**out = **in
	}
	if in.CertificateIssuerThumbprint != nil {
		in, out := &in.CertificateIssuerThumbprint, &out.CertificateIssuerThumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReverseProxyCertificateCommonNamesCommonNamesParameters.
func (in *ReverseProxyCertificateCommonNamesCommonNamesParameters) DeepCopy() *ReverseProxyCertificateCommonNamesCommonNamesParameters {
	if in == nil {
		return nil
	}
	out := new(ReverseProxyCertificateCommonNamesCommonNamesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReverseProxyCertificateCommonNamesObservation) DeepCopyInto(out *ReverseProxyCertificateCommonNamesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReverseProxyCertificateCommonNamesObservation.
func (in *ReverseProxyCertificateCommonNamesObservation) DeepCopy() *ReverseProxyCertificateCommonNamesObservation {
	if in == nil {
		return nil
	}
	out := new(ReverseProxyCertificateCommonNamesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReverseProxyCertificateCommonNamesParameters) DeepCopyInto(out *ReverseProxyCertificateCommonNamesParameters) {
	*out = *in
	if in.CommonNames != nil {
		in, out := &in.CommonNames, &out.CommonNames
		*out = make([]ReverseProxyCertificateCommonNamesCommonNamesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.X509StoreName != nil {
		in, out := &in.X509StoreName, &out.X509StoreName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReverseProxyCertificateCommonNamesParameters.
func (in *ReverseProxyCertificateCommonNamesParameters) DeepCopy() *ReverseProxyCertificateCommonNamesParameters {
	if in == nil {
		return nil
	}
	out := new(ReverseProxyCertificateCommonNamesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReverseProxyCertificateObservation) DeepCopyInto(out *ReverseProxyCertificateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReverseProxyCertificateObservation.
func (in *ReverseProxyCertificateObservation) DeepCopy() *ReverseProxyCertificateObservation {
	if in == nil {
		return nil
	}
	out := new(ReverseProxyCertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReverseProxyCertificateParameters) DeepCopyInto(out *ReverseProxyCertificateParameters) {
	*out = *in
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
	if in.ThumbprintSecondary != nil {
		in, out := &in.ThumbprintSecondary, &out.ThumbprintSecondary
		*out = new(string)
		**out = **in
	}
	if in.X509StoreName != nil {
		in, out := &in.X509StoreName, &out.X509StoreName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReverseProxyCertificateParameters.
func (in *ReverseProxyCertificateParameters) DeepCopy() *ReverseProxyCertificateParameters {
	if in == nil {
		return nil
	}
	out := new(ReverseProxyCertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpgradePolicyObservation) DeepCopyInto(out *UpgradePolicyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpgradePolicyObservation.
func (in *UpgradePolicyObservation) DeepCopy() *UpgradePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(UpgradePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpgradePolicyParameters) DeepCopyInto(out *UpgradePolicyParameters) {
	*out = *in
	if in.DeltaHealthPolicy != nil {
		in, out := &in.DeltaHealthPolicy, &out.DeltaHealthPolicy
		*out = make([]DeltaHealthPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceRestartEnabled != nil {
		in, out := &in.ForceRestartEnabled, &out.ForceRestartEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckRetryTimeout != nil {
		in, out := &in.HealthCheckRetryTimeout, &out.HealthCheckRetryTimeout
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckStableDuration != nil {
		in, out := &in.HealthCheckStableDuration, &out.HealthCheckStableDuration
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckWaitDuration != nil {
		in, out := &in.HealthCheckWaitDuration, &out.HealthCheckWaitDuration
		*out = new(string)
		**out = **in
	}
	if in.HealthPolicy != nil {
		in, out := &in.HealthPolicy, &out.HealthPolicy
		*out = make([]HealthPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpgradeDomainTimeout != nil {
		in, out := &in.UpgradeDomainTimeout, &out.UpgradeDomainTimeout
		*out = new(string)
		**out = **in
	}
	if in.UpgradeReplicaSetCheckTimeout != nil {
		in, out := &in.UpgradeReplicaSetCheckTimeout, &out.UpgradeReplicaSetCheckTimeout
		*out = new(string)
		**out = **in
	}
	if in.UpgradeTimeout != nil {
		in, out := &in.UpgradeTimeout, &out.UpgradeTimeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpgradePolicyParameters.
func (in *UpgradePolicyParameters) DeepCopy() *UpgradePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(UpgradePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMSecretsObservation) DeepCopyInto(out *VMSecretsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMSecretsObservation.
func (in *VMSecretsObservation) DeepCopy() *VMSecretsObservation {
	if in == nil {
		return nil
	}
	out := new(VMSecretsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMSecretsParameters) DeepCopyInto(out *VMSecretsParameters) {
	*out = *in
	if in.Certificates != nil {
		in, out := &in.Certificates, &out.Certificates
		*out = make([]CertificatesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VaultID != nil {
		in, out := &in.VaultID, &out.VaultID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMSecretsParameters.
func (in *VMSecretsParameters) DeepCopy() *VMSecretsParameters {
	if in == nil {
		return nil
	}
	out := new(VMSecretsParameters)
	in.DeepCopyInto(out)
	return out
}
