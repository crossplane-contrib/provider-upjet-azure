// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SubAccountInitParameters struct {

	// Whether the resource monitoring is enabled? Defaults to true.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// A mapping of tags which should be assigned to the logz Sub Account.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// A user block as defined below. Changing this forces a new resource to be created.
	User []SubAccountUserInitParameters `json:"user,omitempty" tf:"user,omitempty"`
}

type SubAccountObservation struct {

	// Whether the resource monitoring is enabled? Defaults to true.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The ID of the logz Sub Account.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID of the Logz Monitor. Changing this forces a new logz Sub Account to be created.
	LogzMonitorID *string `json:"logzMonitorId,omitempty" tf:"logz_monitor_id,omitempty"`

	// A mapping of tags which should be assigned to the logz Sub Account.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// A user block as defined below. Changing this forces a new resource to be created.
	User []SubAccountUserObservation `json:"user,omitempty" tf:"user,omitempty"`
}

type SubAccountParameters struct {

	// Whether the resource monitoring is enabled? Defaults to true.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The ID of the Logz Monitor. Changing this forces a new logz Sub Account to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/logz/v1beta1.Monitor
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	LogzMonitorID *string `json:"logzMonitorId,omitempty" tf:"logz_monitor_id,omitempty"`

	// Reference to a Monitor in logz to populate logzMonitorId.
	// +kubebuilder:validation:Optional
	LogzMonitorIDRef *v1.Reference `json:"logzMonitorIdRef,omitempty" tf:"-"`

	// Selector for a Monitor in logz to populate logzMonitorId.
	// +kubebuilder:validation:Optional
	LogzMonitorIDSelector *v1.Selector `json:"logzMonitorIdSelector,omitempty" tf:"-"`

	// A mapping of tags which should be assigned to the logz Sub Account.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// A user block as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	User []SubAccountUserParameters `json:"user,omitempty" tf:"user,omitempty"`
}

type SubAccountUserInitParameters struct {

	// Email of the user used by Logz for contacting them if needed. A valid email address consists of an email prefix and an email domain. The prefix and domain may contain only letters, numbers, underscores, periods and dashes. Changing this forces a new logz Sub Account to be created.
	Email *string `json:"email,omitempty" tf:"email,omitempty"`

	// First Name of the user. Possible values must be between 1 and 50 characters in length. Changing this forces a new logz Sub Account to be created.
	FirstName *string `json:"firstName,omitempty" tf:"first_name,omitempty"`

	// Last Name of the user. Possible values must be between 1 and 50 characters in length. Changing this forces a new logz Sub Account to be created.
	LastName *string `json:"lastName,omitempty" tf:"last_name,omitempty"`

	// Phone number of the user used by Logz for contacting them if needed. Possible values must be between 1 and 40 characters in length. Changing this forces a new logz Sub Account to be created.
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`
}

type SubAccountUserObservation struct {

	// Email of the user used by Logz for contacting them if needed. A valid email address consists of an email prefix and an email domain. The prefix and domain may contain only letters, numbers, underscores, periods and dashes. Changing this forces a new logz Sub Account to be created.
	Email *string `json:"email,omitempty" tf:"email,omitempty"`

	// First Name of the user. Possible values must be between 1 and 50 characters in length. Changing this forces a new logz Sub Account to be created.
	FirstName *string `json:"firstName,omitempty" tf:"first_name,omitempty"`

	// Last Name of the user. Possible values must be between 1 and 50 characters in length. Changing this forces a new logz Sub Account to be created.
	LastName *string `json:"lastName,omitempty" tf:"last_name,omitempty"`

	// Phone number of the user used by Logz for contacting them if needed. Possible values must be between 1 and 40 characters in length. Changing this forces a new logz Sub Account to be created.
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`
}

type SubAccountUserParameters struct {

	// Email of the user used by Logz for contacting them if needed. A valid email address consists of an email prefix and an email domain. The prefix and domain may contain only letters, numbers, underscores, periods and dashes. Changing this forces a new logz Sub Account to be created.
	// +kubebuilder:validation:Optional
	Email *string `json:"email" tf:"email,omitempty"`

	// First Name of the user. Possible values must be between 1 and 50 characters in length. Changing this forces a new logz Sub Account to be created.
	// +kubebuilder:validation:Optional
	FirstName *string `json:"firstName" tf:"first_name,omitempty"`

	// Last Name of the user. Possible values must be between 1 and 50 characters in length. Changing this forces a new logz Sub Account to be created.
	// +kubebuilder:validation:Optional
	LastName *string `json:"lastName" tf:"last_name,omitempty"`

	// Phone number of the user used by Logz for contacting them if needed. Possible values must be between 1 and 40 characters in length. Changing this forces a new logz Sub Account to be created.
	// +kubebuilder:validation:Optional
	PhoneNumber *string `json:"phoneNumber" tf:"phone_number,omitempty"`
}

// SubAccountSpec defines the desired state of SubAccount
type SubAccountSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SubAccountParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SubAccountInitParameters `json:"initProvider,omitempty"`
}

// SubAccountStatus defines the observed state of SubAccount.
type SubAccountStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SubAccountObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SubAccount is the Schema for the SubAccounts API. Manages a logz Sub Account.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type SubAccount struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.user) || (has(self.initProvider) && has(self.initProvider.user))",message="spec.forProvider.user is a required parameter"
	Spec   SubAccountSpec   `json:"spec"`
	Status SubAccountStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SubAccountList contains a list of SubAccounts
type SubAccountList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SubAccount `json:"items"`
}

// Repository type metadata.
var (
	SubAccount_Kind             = "SubAccount"
	SubAccount_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SubAccount_Kind}.String()
	SubAccount_KindAPIVersion   = SubAccount_Kind + "." + CRDGroupVersion.String()
	SubAccount_GroupVersionKind = CRDGroupVersion.WithKind(SubAccount_Kind)
)

func init() {
	SchemeBuilder.Register(&SubAccount{}, &SubAccountList{})
}
