//go:build (servicebus || all) && !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta2

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientScopedSubscriptionInitParameters) DeepCopyInto(out *ClientScopedSubscriptionInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.IsClientScopedSubscriptionShareable != nil {
		in, out := &in.IsClientScopedSubscriptionShareable, &out.IsClientScopedSubscriptionShareable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientScopedSubscriptionInitParameters.
func (in *ClientScopedSubscriptionInitParameters) DeepCopy() *ClientScopedSubscriptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientScopedSubscriptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientScopedSubscriptionObservation) DeepCopyInto(out *ClientScopedSubscriptionObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.IsClientScopedSubscriptionDurable != nil {
		in, out := &in.IsClientScopedSubscriptionDurable, &out.IsClientScopedSubscriptionDurable
		*out = new(bool)
		**out = **in
	}
	if in.IsClientScopedSubscriptionShareable != nil {
		in, out := &in.IsClientScopedSubscriptionShareable, &out.IsClientScopedSubscriptionShareable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientScopedSubscriptionObservation.
func (in *ClientScopedSubscriptionObservation) DeepCopy() *ClientScopedSubscriptionObservation {
	if in == nil {
		return nil
	}
	out := new(ClientScopedSubscriptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientScopedSubscriptionParameters) DeepCopyInto(out *ClientScopedSubscriptionParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.IsClientScopedSubscriptionShareable != nil {
		in, out := &in.IsClientScopedSubscriptionShareable, &out.IsClientScopedSubscriptionShareable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientScopedSubscriptionParameters.
func (in *ClientScopedSubscriptionParameters) DeepCopy() *ClientScopedSubscriptionParameters {
	if in == nil {
		return nil
	}
	out := new(ClientScopedSubscriptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorrelationFilterInitParameters) DeepCopyInto(out *CorrelationFilterInitParameters) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CorrelationID != nil {
		in, out := &in.CorrelationID, &out.CorrelationID
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.MessageID != nil {
		in, out := &in.MessageID, &out.MessageID
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ReplyTo != nil {
		in, out := &in.ReplyTo, &out.ReplyTo
		*out = new(string)
		**out = **in
	}
	if in.ReplyToSessionID != nil {
		in, out := &in.ReplyToSessionID, &out.ReplyToSessionID
		*out = new(string)
		**out = **in
	}
	if in.SessionID != nil {
		in, out := &in.SessionID, &out.SessionID
		*out = new(string)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorrelationFilterInitParameters.
func (in *CorrelationFilterInitParameters) DeepCopy() *CorrelationFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(CorrelationFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorrelationFilterObservation) DeepCopyInto(out *CorrelationFilterObservation) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CorrelationID != nil {
		in, out := &in.CorrelationID, &out.CorrelationID
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.MessageID != nil {
		in, out := &in.MessageID, &out.MessageID
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ReplyTo != nil {
		in, out := &in.ReplyTo, &out.ReplyTo
		*out = new(string)
		**out = **in
	}
	if in.ReplyToSessionID != nil {
		in, out := &in.ReplyToSessionID, &out.ReplyToSessionID
		*out = new(string)
		**out = **in
	}
	if in.SessionID != nil {
		in, out := &in.SessionID, &out.SessionID
		*out = new(string)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorrelationFilterObservation.
func (in *CorrelationFilterObservation) DeepCopy() *CorrelationFilterObservation {
	if in == nil {
		return nil
	}
	out := new(CorrelationFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorrelationFilterParameters) DeepCopyInto(out *CorrelationFilterParameters) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CorrelationID != nil {
		in, out := &in.CorrelationID, &out.CorrelationID
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.MessageID != nil {
		in, out := &in.MessageID, &out.MessageID
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ReplyTo != nil {
		in, out := &in.ReplyTo, &out.ReplyTo
		*out = new(string)
		**out = **in
	}
	if in.ReplyToSessionID != nil {
		in, out := &in.ReplyToSessionID, &out.ReplyToSessionID
		*out = new(string)
		**out = **in
	}
	if in.SessionID != nil {
		in, out := &in.SessionID, &out.SessionID
		*out = new(string)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorrelationFilterParameters.
func (in *CorrelationFilterParameters) DeepCopy() *CorrelationFilterParameters {
	if in == nil {
		return nil
	}
	out := new(CorrelationFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomerManagedKeyInitParameters) DeepCopyInto(out *CustomerManagedKeyInitParameters) {
	*out = *in
	if in.IdentityID != nil {
		in, out := &in.IdentityID, &out.IdentityID
		*out = new(string)
		**out = **in
	}
	if in.InfrastructureEncryptionEnabled != nil {
		in, out := &in.InfrastructureEncryptionEnabled, &out.InfrastructureEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomerManagedKeyInitParameters.
func (in *CustomerManagedKeyInitParameters) DeepCopy() *CustomerManagedKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomerManagedKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomerManagedKeyObservation) DeepCopyInto(out *CustomerManagedKeyObservation) {
	*out = *in
	if in.IdentityID != nil {
		in, out := &in.IdentityID, &out.IdentityID
		*out = new(string)
		**out = **in
	}
	if in.InfrastructureEncryptionEnabled != nil {
		in, out := &in.InfrastructureEncryptionEnabled, &out.InfrastructureEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomerManagedKeyObservation.
func (in *CustomerManagedKeyObservation) DeepCopy() *CustomerManagedKeyObservation {
	if in == nil {
		return nil
	}
	out := new(CustomerManagedKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomerManagedKeyParameters) DeepCopyInto(out *CustomerManagedKeyParameters) {
	*out = *in
	if in.IdentityID != nil {
		in, out := &in.IdentityID, &out.IdentityID
		*out = new(string)
		**out = **in
	}
	if in.InfrastructureEncryptionEnabled != nil {
		in, out := &in.InfrastructureEncryptionEnabled, &out.InfrastructureEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomerManagedKeyParameters.
func (in *CustomerManagedKeyParameters) DeepCopy() *CustomerManagedKeyParameters {
	if in == nil {
		return nil
	}
	out := new(CustomerManagedKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityInitParameters) DeepCopyInto(out *IdentityInitParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityInitParameters.
func (in *IdentityInitParameters) DeepCopy() *IdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityObservation) DeepCopyInto(out *IdentityObservation) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityObservation.
func (in *IdentityObservation) DeepCopy() *IdentityObservation {
	if in == nil {
		return nil
	}
	out := new(IdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityParameters) DeepCopyInto(out *IdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityParameters.
func (in *IdentityParameters) DeepCopy() *IdentityParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRuleSetInitParameters) DeepCopyInto(out *NetworkRuleSetInitParameters) {
	*out = *in
	if in.DefaultAction != nil {
		in, out := &in.DefaultAction, &out.DefaultAction
		*out = new(string)
		**out = **in
	}
	if in.IPRules != nil {
		in, out := &in.IPRules, &out.IPRules
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NetworkRules != nil {
		in, out := &in.NetworkRules, &out.NetworkRules
		*out = make([]NetworkRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TrustedServicesAllowed != nil {
		in, out := &in.TrustedServicesAllowed, &out.TrustedServicesAllowed
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRuleSetInitParameters.
func (in *NetworkRuleSetInitParameters) DeepCopy() *NetworkRuleSetInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkRuleSetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRuleSetObservation) DeepCopyInto(out *NetworkRuleSetObservation) {
	*out = *in
	if in.DefaultAction != nil {
		in, out := &in.DefaultAction, &out.DefaultAction
		*out = new(string)
		**out = **in
	}
	if in.IPRules != nil {
		in, out := &in.IPRules, &out.IPRules
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NetworkRules != nil {
		in, out := &in.NetworkRules, &out.NetworkRules
		*out = make([]NetworkRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TrustedServicesAllowed != nil {
		in, out := &in.TrustedServicesAllowed, &out.TrustedServicesAllowed
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRuleSetObservation.
func (in *NetworkRuleSetObservation) DeepCopy() *NetworkRuleSetObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkRuleSetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRuleSetParameters) DeepCopyInto(out *NetworkRuleSetParameters) {
	*out = *in
	if in.DefaultAction != nil {
		in, out := &in.DefaultAction, &out.DefaultAction
		*out = new(string)
		**out = **in
	}
	if in.IPRules != nil {
		in, out := &in.IPRules, &out.IPRules
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NetworkRules != nil {
		in, out := &in.NetworkRules, &out.NetworkRules
		*out = make([]NetworkRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TrustedServicesAllowed != nil {
		in, out := &in.TrustedServicesAllowed, &out.TrustedServicesAllowed
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRuleSetParameters.
func (in *NetworkRuleSetParameters) DeepCopy() *NetworkRuleSetParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkRuleSetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRulesInitParameters) DeepCopyInto(out *NetworkRulesInitParameters) {
	*out = *in
	if in.IgnoreMissingVnetServiceEndpoint != nil {
		in, out := &in.IgnoreMissingVnetServiceEndpoint, &out.IgnoreMissingVnetServiceEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRulesInitParameters.
func (in *NetworkRulesInitParameters) DeepCopy() *NetworkRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRulesObservation) DeepCopyInto(out *NetworkRulesObservation) {
	*out = *in
	if in.IgnoreMissingVnetServiceEndpoint != nil {
		in, out := &in.IgnoreMissingVnetServiceEndpoint, &out.IgnoreMissingVnetServiceEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRulesObservation.
func (in *NetworkRulesObservation) DeepCopy() *NetworkRulesObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRulesParameters) DeepCopyInto(out *NetworkRulesParameters) {
	*out = *in
	if in.IgnoreMissingVnetServiceEndpoint != nil {
		in, out := &in.IgnoreMissingVnetServiceEndpoint, &out.IgnoreMissingVnetServiceEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRulesParameters.
func (in *NetworkRulesParameters) DeepCopy() *NetworkRulesParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceBusNamespace) DeepCopyInto(out *ServiceBusNamespace) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceBusNamespace.
func (in *ServiceBusNamespace) DeepCopy() *ServiceBusNamespace {
	if in == nil {
		return nil
	}
	out := new(ServiceBusNamespace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceBusNamespace) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceBusNamespaceInitParameters) DeepCopyInto(out *ServiceBusNamespaceInitParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.CustomerManagedKey != nil {
		in, out := &in.CustomerManagedKey, &out.CustomerManagedKey
		*out = new(CustomerManagedKeyInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(IdentityInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.LocalAuthEnabled != nil {
		in, out := &in.LocalAuthEnabled, &out.LocalAuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.NetworkRuleSet != nil {
		in, out := &in.NetworkRuleSet, &out.NetworkRuleSet
		*out = new(NetworkRuleSetInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PremiumMessagingPartitions != nil {
		in, out := &in.PremiumMessagingPartitions, &out.PremiumMessagingPartitions
		*out = new(float64)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceBusNamespaceInitParameters.
func (in *ServiceBusNamespaceInitParameters) DeepCopy() *ServiceBusNamespaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceBusNamespaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceBusNamespaceList) DeepCopyInto(out *ServiceBusNamespaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServiceBusNamespace, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceBusNamespaceList.
func (in *ServiceBusNamespaceList) DeepCopy() *ServiceBusNamespaceList {
	if in == nil {
		return nil
	}
	out := new(ServiceBusNamespaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceBusNamespaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceBusNamespaceObservation) DeepCopyInto(out *ServiceBusNamespaceObservation) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.CustomerManagedKey != nil {
		in, out := &in.CustomerManagedKey, &out.CustomerManagedKey
		*out = new(CustomerManagedKeyObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(IdentityObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.LocalAuthEnabled != nil {
		in, out := &in.LocalAuthEnabled, &out.LocalAuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.NetworkRuleSet != nil {
		in, out := &in.NetworkRuleSet, &out.NetworkRuleSet
		*out = new(NetworkRuleSetObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.PremiumMessagingPartitions != nil {
		in, out := &in.PremiumMessagingPartitions, &out.PremiumMessagingPartitions
		*out = new(float64)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceBusNamespaceObservation.
func (in *ServiceBusNamespaceObservation) DeepCopy() *ServiceBusNamespaceObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceBusNamespaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceBusNamespaceParameters) DeepCopyInto(out *ServiceBusNamespaceParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.CustomerManagedKey != nil {
		in, out := &in.CustomerManagedKey, &out.CustomerManagedKey
		*out = new(CustomerManagedKeyParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(IdentityParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.LocalAuthEnabled != nil {
		in, out := &in.LocalAuthEnabled, &out.LocalAuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.NetworkRuleSet != nil {
		in, out := &in.NetworkRuleSet, &out.NetworkRuleSet
		*out = new(NetworkRuleSetParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PremiumMessagingPartitions != nil {
		in, out := &in.PremiumMessagingPartitions, &out.PremiumMessagingPartitions
		*out = new(float64)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceBusNamespaceParameters.
func (in *ServiceBusNamespaceParameters) DeepCopy() *ServiceBusNamespaceParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceBusNamespaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceBusNamespaceSpec) DeepCopyInto(out *ServiceBusNamespaceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceBusNamespaceSpec.
func (in *ServiceBusNamespaceSpec) DeepCopy() *ServiceBusNamespaceSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceBusNamespaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceBusNamespaceStatus) DeepCopyInto(out *ServiceBusNamespaceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceBusNamespaceStatus.
func (in *ServiceBusNamespaceStatus) DeepCopy() *ServiceBusNamespaceStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceBusNamespaceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subscription) DeepCopyInto(out *Subscription) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subscription.
func (in *Subscription) DeepCopy() *Subscription {
	if in == nil {
		return nil
	}
	out := new(Subscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Subscription) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionInitParameters) DeepCopyInto(out *SubscriptionInitParameters) {
	*out = *in
	if in.AutoDeleteOnIdle != nil {
		in, out := &in.AutoDeleteOnIdle, &out.AutoDeleteOnIdle
		*out = new(string)
		**out = **in
	}
	if in.BatchedOperationsEnabled != nil {
		in, out := &in.BatchedOperationsEnabled, &out.BatchedOperationsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientScopedSubscription != nil {
		in, out := &in.ClientScopedSubscription, &out.ClientScopedSubscription
		*out = new(ClientScopedSubscriptionInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientScopedSubscriptionEnabled != nil {
		in, out := &in.ClientScopedSubscriptionEnabled, &out.ClientScopedSubscriptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DeadLetteringOnFilterEvaluationError != nil {
		in, out := &in.DeadLetteringOnFilterEvaluationError, &out.DeadLetteringOnFilterEvaluationError
		*out = new(bool)
		**out = **in
	}
	if in.DeadLetteringOnMessageExpiration != nil {
		in, out := &in.DeadLetteringOnMessageExpiration, &out.DeadLetteringOnMessageExpiration
		*out = new(bool)
		**out = **in
	}
	if in.DefaultMessageTTL != nil {
		in, out := &in.DefaultMessageTTL, &out.DefaultMessageTTL
		*out = new(string)
		**out = **in
	}
	if in.EnableBatchedOperations != nil {
		in, out := &in.EnableBatchedOperations, &out.EnableBatchedOperations
		*out = new(bool)
		**out = **in
	}
	if in.ForwardDeadLetteredMessagesTo != nil {
		in, out := &in.ForwardDeadLetteredMessagesTo, &out.ForwardDeadLetteredMessagesTo
		*out = new(string)
		**out = **in
	}
	if in.ForwardTo != nil {
		in, out := &in.ForwardTo, &out.ForwardTo
		*out = new(string)
		**out = **in
	}
	if in.LockDuration != nil {
		in, out := &in.LockDuration, &out.LockDuration
		*out = new(string)
		**out = **in
	}
	if in.MaxDeliveryCount != nil {
		in, out := &in.MaxDeliveryCount, &out.MaxDeliveryCount
		*out = new(float64)
		**out = **in
	}
	if in.RequiresSession != nil {
		in, out := &in.RequiresSession, &out.RequiresSession
		*out = new(bool)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionInitParameters.
func (in *SubscriptionInitParameters) DeepCopy() *SubscriptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubscriptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionList) DeepCopyInto(out *SubscriptionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Subscription, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionList.
func (in *SubscriptionList) DeepCopy() *SubscriptionList {
	if in == nil {
		return nil
	}
	out := new(SubscriptionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubscriptionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionObservation) DeepCopyInto(out *SubscriptionObservation) {
	*out = *in
	if in.AutoDeleteOnIdle != nil {
		in, out := &in.AutoDeleteOnIdle, &out.AutoDeleteOnIdle
		*out = new(string)
		**out = **in
	}
	if in.BatchedOperationsEnabled != nil {
		in, out := &in.BatchedOperationsEnabled, &out.BatchedOperationsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientScopedSubscription != nil {
		in, out := &in.ClientScopedSubscription, &out.ClientScopedSubscription
		*out = new(ClientScopedSubscriptionObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientScopedSubscriptionEnabled != nil {
		in, out := &in.ClientScopedSubscriptionEnabled, &out.ClientScopedSubscriptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DeadLetteringOnFilterEvaluationError != nil {
		in, out := &in.DeadLetteringOnFilterEvaluationError, &out.DeadLetteringOnFilterEvaluationError
		*out = new(bool)
		**out = **in
	}
	if in.DeadLetteringOnMessageExpiration != nil {
		in, out := &in.DeadLetteringOnMessageExpiration, &out.DeadLetteringOnMessageExpiration
		*out = new(bool)
		**out = **in
	}
	if in.DefaultMessageTTL != nil {
		in, out := &in.DefaultMessageTTL, &out.DefaultMessageTTL
		*out = new(string)
		**out = **in
	}
	if in.EnableBatchedOperations != nil {
		in, out := &in.EnableBatchedOperations, &out.EnableBatchedOperations
		*out = new(bool)
		**out = **in
	}
	if in.ForwardDeadLetteredMessagesTo != nil {
		in, out := &in.ForwardDeadLetteredMessagesTo, &out.ForwardDeadLetteredMessagesTo
		*out = new(string)
		**out = **in
	}
	if in.ForwardTo != nil {
		in, out := &in.ForwardTo, &out.ForwardTo
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LockDuration != nil {
		in, out := &in.LockDuration, &out.LockDuration
		*out = new(string)
		**out = **in
	}
	if in.MaxDeliveryCount != nil {
		in, out := &in.MaxDeliveryCount, &out.MaxDeliveryCount
		*out = new(float64)
		**out = **in
	}
	if in.RequiresSession != nil {
		in, out := &in.RequiresSession, &out.RequiresSession
		*out = new(bool)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TopicID != nil {
		in, out := &in.TopicID, &out.TopicID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionObservation.
func (in *SubscriptionObservation) DeepCopy() *SubscriptionObservation {
	if in == nil {
		return nil
	}
	out := new(SubscriptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionParameters) DeepCopyInto(out *SubscriptionParameters) {
	*out = *in
	if in.AutoDeleteOnIdle != nil {
		in, out := &in.AutoDeleteOnIdle, &out.AutoDeleteOnIdle
		*out = new(string)
		**out = **in
	}
	if in.BatchedOperationsEnabled != nil {
		in, out := &in.BatchedOperationsEnabled, &out.BatchedOperationsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientScopedSubscription != nil {
		in, out := &in.ClientScopedSubscription, &out.ClientScopedSubscription
		*out = new(ClientScopedSubscriptionParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientScopedSubscriptionEnabled != nil {
		in, out := &in.ClientScopedSubscriptionEnabled, &out.ClientScopedSubscriptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DeadLetteringOnFilterEvaluationError != nil {
		in, out := &in.DeadLetteringOnFilterEvaluationError, &out.DeadLetteringOnFilterEvaluationError
		*out = new(bool)
		**out = **in
	}
	if in.DeadLetteringOnMessageExpiration != nil {
		in, out := &in.DeadLetteringOnMessageExpiration, &out.DeadLetteringOnMessageExpiration
		*out = new(bool)
		**out = **in
	}
	if in.DefaultMessageTTL != nil {
		in, out := &in.DefaultMessageTTL, &out.DefaultMessageTTL
		*out = new(string)
		**out = **in
	}
	if in.EnableBatchedOperations != nil {
		in, out := &in.EnableBatchedOperations, &out.EnableBatchedOperations
		*out = new(bool)
		**out = **in
	}
	if in.ForwardDeadLetteredMessagesTo != nil {
		in, out := &in.ForwardDeadLetteredMessagesTo, &out.ForwardDeadLetteredMessagesTo
		*out = new(string)
		**out = **in
	}
	if in.ForwardTo != nil {
		in, out := &in.ForwardTo, &out.ForwardTo
		*out = new(string)
		**out = **in
	}
	if in.LockDuration != nil {
		in, out := &in.LockDuration, &out.LockDuration
		*out = new(string)
		**out = **in
	}
	if in.MaxDeliveryCount != nil {
		in, out := &in.MaxDeliveryCount, &out.MaxDeliveryCount
		*out = new(float64)
		**out = **in
	}
	if in.RequiresSession != nil {
		in, out := &in.RequiresSession, &out.RequiresSession
		*out = new(bool)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TopicID != nil {
		in, out := &in.TopicID, &out.TopicID
		*out = new(string)
		**out = **in
	}
	if in.TopicIDRef != nil {
		in, out := &in.TopicIDRef, &out.TopicIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TopicIDSelector != nil {
		in, out := &in.TopicIDSelector, &out.TopicIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionParameters.
func (in *SubscriptionParameters) DeepCopy() *SubscriptionParameters {
	if in == nil {
		return nil
	}
	out := new(SubscriptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionRule) DeepCopyInto(out *SubscriptionRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionRule.
func (in *SubscriptionRule) DeepCopy() *SubscriptionRule {
	if in == nil {
		return nil
	}
	out := new(SubscriptionRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubscriptionRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionRuleInitParameters) DeepCopyInto(out *SubscriptionRuleInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.CorrelationFilter != nil {
		in, out := &in.CorrelationFilter, &out.CorrelationFilter
		*out = new(CorrelationFilterInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.SQLFilter != nil {
		in, out := &in.SQLFilter, &out.SQLFilter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionRuleInitParameters.
func (in *SubscriptionRuleInitParameters) DeepCopy() *SubscriptionRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubscriptionRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionRuleList) DeepCopyInto(out *SubscriptionRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SubscriptionRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionRuleList.
func (in *SubscriptionRuleList) DeepCopy() *SubscriptionRuleList {
	if in == nil {
		return nil
	}
	out := new(SubscriptionRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubscriptionRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionRuleObservation) DeepCopyInto(out *SubscriptionRuleObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.CorrelationFilter != nil {
		in, out := &in.CorrelationFilter, &out.CorrelationFilter
		*out = new(CorrelationFilterObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SQLFilter != nil {
		in, out := &in.SQLFilter, &out.SQLFilter
		*out = new(string)
		**out = **in
	}
	if in.SQLFilterCompatibilityLevel != nil {
		in, out := &in.SQLFilterCompatibilityLevel, &out.SQLFilterCompatibilityLevel
		*out = new(float64)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionRuleObservation.
func (in *SubscriptionRuleObservation) DeepCopy() *SubscriptionRuleObservation {
	if in == nil {
		return nil
	}
	out := new(SubscriptionRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionRuleParameters) DeepCopyInto(out *SubscriptionRuleParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.CorrelationFilter != nil {
		in, out := &in.CorrelationFilter, &out.CorrelationFilter
		*out = new(CorrelationFilterParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.SQLFilter != nil {
		in, out := &in.SQLFilter, &out.SQLFilter
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionIDRef != nil {
		in, out := &in.SubscriptionIDRef, &out.SubscriptionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubscriptionIDSelector != nil {
		in, out := &in.SubscriptionIDSelector, &out.SubscriptionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionRuleParameters.
func (in *SubscriptionRuleParameters) DeepCopy() *SubscriptionRuleParameters {
	if in == nil {
		return nil
	}
	out := new(SubscriptionRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionRuleSpec) DeepCopyInto(out *SubscriptionRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionRuleSpec.
func (in *SubscriptionRuleSpec) DeepCopy() *SubscriptionRuleSpec {
	if in == nil {
		return nil
	}
	out := new(SubscriptionRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionRuleStatus) DeepCopyInto(out *SubscriptionRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionRuleStatus.
func (in *SubscriptionRuleStatus) DeepCopy() *SubscriptionRuleStatus {
	if in == nil {
		return nil
	}
	out := new(SubscriptionRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionSpec) DeepCopyInto(out *SubscriptionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionSpec.
func (in *SubscriptionSpec) DeepCopy() *SubscriptionSpec {
	if in == nil {
		return nil
	}
	out := new(SubscriptionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionStatus) DeepCopyInto(out *SubscriptionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionStatus.
func (in *SubscriptionStatus) DeepCopy() *SubscriptionStatus {
	if in == nil {
		return nil
	}
	out := new(SubscriptionStatus)
	in.DeepCopyInto(out)
	return out
}
