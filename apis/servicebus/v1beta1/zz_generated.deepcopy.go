//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientScopedSubscriptionObservation) DeepCopyInto(out *ClientScopedSubscriptionObservation) {
	*out = *in
	if in.IsClientScopedSubscriptionDurable != nil {
		in, out := &in.IsClientScopedSubscriptionDurable, &out.IsClientScopedSubscriptionDurable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientScopedSubscriptionObservation.
func (in *ClientScopedSubscriptionObservation) DeepCopy() *ClientScopedSubscriptionObservation {
	if in == nil {
		return nil
	}
	out := new(ClientScopedSubscriptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientScopedSubscriptionParameters) DeepCopyInto(out *ClientScopedSubscriptionParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.IsClientScopedSubscriptionShareable != nil {
		in, out := &in.IsClientScopedSubscriptionShareable, &out.IsClientScopedSubscriptionShareable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientScopedSubscriptionParameters.
func (in *ClientScopedSubscriptionParameters) DeepCopy() *ClientScopedSubscriptionParameters {
	if in == nil {
		return nil
	}
	out := new(ClientScopedSubscriptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorrelationFilterObservation) DeepCopyInto(out *CorrelationFilterObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorrelationFilterObservation.
func (in *CorrelationFilterObservation) DeepCopy() *CorrelationFilterObservation {
	if in == nil {
		return nil
	}
	out := new(CorrelationFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorrelationFilterParameters) DeepCopyInto(out *CorrelationFilterParameters) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CorrelationID != nil {
		in, out := &in.CorrelationID, &out.CorrelationID
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.MessageID != nil {
		in, out := &in.MessageID, &out.MessageID
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ReplyTo != nil {
		in, out := &in.ReplyTo, &out.ReplyTo
		*out = new(string)
		**out = **in
	}
	if in.ReplyToSessionID != nil {
		in, out := &in.ReplyToSessionID, &out.ReplyToSessionID
		*out = new(string)
		**out = **in
	}
	if in.SessionID != nil {
		in, out := &in.SessionID, &out.SessionID
		*out = new(string)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorrelationFilterParameters.
func (in *CorrelationFilterParameters) DeepCopy() *CorrelationFilterParameters {
	if in == nil {
		return nil
	}
	out := new(CorrelationFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomerManagedKeyObservation) DeepCopyInto(out *CustomerManagedKeyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomerManagedKeyObservation.
func (in *CustomerManagedKeyObservation) DeepCopy() *CustomerManagedKeyObservation {
	if in == nil {
		return nil
	}
	out := new(CustomerManagedKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomerManagedKeyParameters) DeepCopyInto(out *CustomerManagedKeyParameters) {
	*out = *in
	if in.IdentityID != nil {
		in, out := &in.IdentityID, &out.IdentityID
		*out = new(string)
		**out = **in
	}
	if in.InfrastructureEncryptionEnabled != nil {
		in, out := &in.InfrastructureEncryptionEnabled, &out.InfrastructureEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomerManagedKeyParameters.
func (in *CustomerManagedKeyParameters) DeepCopy() *CustomerManagedKeyParameters {
	if in == nil {
		return nil
	}
	out := new(CustomerManagedKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityObservation) DeepCopyInto(out *IdentityObservation) {
	*out = *in
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityObservation.
func (in *IdentityObservation) DeepCopy() *IdentityObservation {
	if in == nil {
		return nil
	}
	out := new(IdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityParameters) DeepCopyInto(out *IdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityParameters.
func (in *IdentityParameters) DeepCopy() *IdentityParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceAuthorizationRule) DeepCopyInto(out *NamespaceAuthorizationRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceAuthorizationRule.
func (in *NamespaceAuthorizationRule) DeepCopy() *NamespaceAuthorizationRule {
	if in == nil {
		return nil
	}
	out := new(NamespaceAuthorizationRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NamespaceAuthorizationRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceAuthorizationRuleList) DeepCopyInto(out *NamespaceAuthorizationRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NamespaceAuthorizationRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceAuthorizationRuleList.
func (in *NamespaceAuthorizationRuleList) DeepCopy() *NamespaceAuthorizationRuleList {
	if in == nil {
		return nil
	}
	out := new(NamespaceAuthorizationRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NamespaceAuthorizationRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceAuthorizationRuleObservation) DeepCopyInto(out *NamespaceAuthorizationRuleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceAuthorizationRuleObservation.
func (in *NamespaceAuthorizationRuleObservation) DeepCopy() *NamespaceAuthorizationRuleObservation {
	if in == nil {
		return nil
	}
	out := new(NamespaceAuthorizationRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceAuthorizationRuleParameters) DeepCopyInto(out *NamespaceAuthorizationRuleParameters) {
	*out = *in
	if in.Listen != nil {
		in, out := &in.Listen, &out.Listen
		*out = new(bool)
		**out = **in
	}
	if in.Manage != nil {
		in, out := &in.Manage, &out.Manage
		*out = new(bool)
		**out = **in
	}
	if in.NamespaceID != nil {
		in, out := &in.NamespaceID, &out.NamespaceID
		*out = new(string)
		**out = **in
	}
	if in.NamespaceIDRef != nil {
		in, out := &in.NamespaceIDRef, &out.NamespaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NamespaceIDSelector != nil {
		in, out := &in.NamespaceIDSelector, &out.NamespaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Send != nil {
		in, out := &in.Send, &out.Send
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceAuthorizationRuleParameters.
func (in *NamespaceAuthorizationRuleParameters) DeepCopy() *NamespaceAuthorizationRuleParameters {
	if in == nil {
		return nil
	}
	out := new(NamespaceAuthorizationRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceAuthorizationRuleSpec) DeepCopyInto(out *NamespaceAuthorizationRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceAuthorizationRuleSpec.
func (in *NamespaceAuthorizationRuleSpec) DeepCopy() *NamespaceAuthorizationRuleSpec {
	if in == nil {
		return nil
	}
	out := new(NamespaceAuthorizationRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceAuthorizationRuleStatus) DeepCopyInto(out *NamespaceAuthorizationRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceAuthorizationRuleStatus.
func (in *NamespaceAuthorizationRuleStatus) DeepCopy() *NamespaceAuthorizationRuleStatus {
	if in == nil {
		return nil
	}
	out := new(NamespaceAuthorizationRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceDisasterRecoveryConfig) DeepCopyInto(out *NamespaceDisasterRecoveryConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceDisasterRecoveryConfig.
func (in *NamespaceDisasterRecoveryConfig) DeepCopy() *NamespaceDisasterRecoveryConfig {
	if in == nil {
		return nil
	}
	out := new(NamespaceDisasterRecoveryConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NamespaceDisasterRecoveryConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceDisasterRecoveryConfigList) DeepCopyInto(out *NamespaceDisasterRecoveryConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NamespaceDisasterRecoveryConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceDisasterRecoveryConfigList.
func (in *NamespaceDisasterRecoveryConfigList) DeepCopy() *NamespaceDisasterRecoveryConfigList {
	if in == nil {
		return nil
	}
	out := new(NamespaceDisasterRecoveryConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NamespaceDisasterRecoveryConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceDisasterRecoveryConfigObservation) DeepCopyInto(out *NamespaceDisasterRecoveryConfigObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceDisasterRecoveryConfigObservation.
func (in *NamespaceDisasterRecoveryConfigObservation) DeepCopy() *NamespaceDisasterRecoveryConfigObservation {
	if in == nil {
		return nil
	}
	out := new(NamespaceDisasterRecoveryConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceDisasterRecoveryConfigParameters) DeepCopyInto(out *NamespaceDisasterRecoveryConfigParameters) {
	*out = *in
	if in.AliasAuthorizationRuleID != nil {
		in, out := &in.AliasAuthorizationRuleID, &out.AliasAuthorizationRuleID
		*out = new(string)
		**out = **in
	}
	if in.AliasAuthorizationRuleIDRef != nil {
		in, out := &in.AliasAuthorizationRuleIDRef, &out.AliasAuthorizationRuleIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AliasAuthorizationRuleIDSelector != nil {
		in, out := &in.AliasAuthorizationRuleIDSelector, &out.AliasAuthorizationRuleIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PartnerNamespaceID != nil {
		in, out := &in.PartnerNamespaceID, &out.PartnerNamespaceID
		*out = new(string)
		**out = **in
	}
	if in.PartnerNamespaceIDRef != nil {
		in, out := &in.PartnerNamespaceIDRef, &out.PartnerNamespaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PartnerNamespaceIDSelector != nil {
		in, out := &in.PartnerNamespaceIDSelector, &out.PartnerNamespaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PrimaryNamespaceID != nil {
		in, out := &in.PrimaryNamespaceID, &out.PrimaryNamespaceID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryNamespaceIDRef != nil {
		in, out := &in.PrimaryNamespaceIDRef, &out.PrimaryNamespaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrimaryNamespaceIDSelector != nil {
		in, out := &in.PrimaryNamespaceIDSelector, &out.PrimaryNamespaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceDisasterRecoveryConfigParameters.
func (in *NamespaceDisasterRecoveryConfigParameters) DeepCopy() *NamespaceDisasterRecoveryConfigParameters {
	if in == nil {
		return nil
	}
	out := new(NamespaceDisasterRecoveryConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceDisasterRecoveryConfigSpec) DeepCopyInto(out *NamespaceDisasterRecoveryConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceDisasterRecoveryConfigSpec.
func (in *NamespaceDisasterRecoveryConfigSpec) DeepCopy() *NamespaceDisasterRecoveryConfigSpec {
	if in == nil {
		return nil
	}
	out := new(NamespaceDisasterRecoveryConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceDisasterRecoveryConfigStatus) DeepCopyInto(out *NamespaceDisasterRecoveryConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceDisasterRecoveryConfigStatus.
func (in *NamespaceDisasterRecoveryConfigStatus) DeepCopy() *NamespaceDisasterRecoveryConfigStatus {
	if in == nil {
		return nil
	}
	out := new(NamespaceDisasterRecoveryConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceNetworkRuleSet) DeepCopyInto(out *NamespaceNetworkRuleSet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceNetworkRuleSet.
func (in *NamespaceNetworkRuleSet) DeepCopy() *NamespaceNetworkRuleSet {
	if in == nil {
		return nil
	}
	out := new(NamespaceNetworkRuleSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NamespaceNetworkRuleSet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceNetworkRuleSetList) DeepCopyInto(out *NamespaceNetworkRuleSetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NamespaceNetworkRuleSet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceNetworkRuleSetList.
func (in *NamespaceNetworkRuleSetList) DeepCopy() *NamespaceNetworkRuleSetList {
	if in == nil {
		return nil
	}
	out := new(NamespaceNetworkRuleSetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NamespaceNetworkRuleSetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceNetworkRuleSetObservation) DeepCopyInto(out *NamespaceNetworkRuleSetObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceNetworkRuleSetObservation.
func (in *NamespaceNetworkRuleSetObservation) DeepCopy() *NamespaceNetworkRuleSetObservation {
	if in == nil {
		return nil
	}
	out := new(NamespaceNetworkRuleSetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceNetworkRuleSetParameters) DeepCopyInto(out *NamespaceNetworkRuleSetParameters) {
	*out = *in
	if in.DefaultAction != nil {
		in, out := &in.DefaultAction, &out.DefaultAction
		*out = new(string)
		**out = **in
	}
	if in.IPRules != nil {
		in, out := &in.IPRules, &out.IPRules
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NamespaceID != nil {
		in, out := &in.NamespaceID, &out.NamespaceID
		*out = new(string)
		**out = **in
	}
	if in.NamespaceIDRef != nil {
		in, out := &in.NamespaceIDRef, &out.NamespaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NamespaceIDSelector != nil {
		in, out := &in.NamespaceIDSelector, &out.NamespaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkRules != nil {
		in, out := &in.NetworkRules, &out.NetworkRules
		*out = make([]NetworkRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TrustedServicesAllowed != nil {
		in, out := &in.TrustedServicesAllowed, &out.TrustedServicesAllowed
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceNetworkRuleSetParameters.
func (in *NamespaceNetworkRuleSetParameters) DeepCopy() *NamespaceNetworkRuleSetParameters {
	if in == nil {
		return nil
	}
	out := new(NamespaceNetworkRuleSetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceNetworkRuleSetSpec) DeepCopyInto(out *NamespaceNetworkRuleSetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceNetworkRuleSetSpec.
func (in *NamespaceNetworkRuleSetSpec) DeepCopy() *NamespaceNetworkRuleSetSpec {
	if in == nil {
		return nil
	}
	out := new(NamespaceNetworkRuleSetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceNetworkRuleSetStatus) DeepCopyInto(out *NamespaceNetworkRuleSetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceNetworkRuleSetStatus.
func (in *NamespaceNetworkRuleSetStatus) DeepCopy() *NamespaceNetworkRuleSetStatus {
	if in == nil {
		return nil
	}
	out := new(NamespaceNetworkRuleSetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRulesObservation) DeepCopyInto(out *NetworkRulesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRulesObservation.
func (in *NetworkRulesObservation) DeepCopy() *NetworkRulesObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRulesParameters) DeepCopyInto(out *NetworkRulesParameters) {
	*out = *in
	if in.IgnoreMissingVnetServiceEndpoint != nil {
		in, out := &in.IgnoreMissingVnetServiceEndpoint, &out.IgnoreMissingVnetServiceEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRulesParameters.
func (in *NetworkRulesParameters) DeepCopy() *NetworkRulesParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Queue) DeepCopyInto(out *Queue) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Queue.
func (in *Queue) DeepCopy() *Queue {
	if in == nil {
		return nil
	}
	out := new(Queue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Queue) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueAuthorizationRule) DeepCopyInto(out *QueueAuthorizationRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueAuthorizationRule.
func (in *QueueAuthorizationRule) DeepCopy() *QueueAuthorizationRule {
	if in == nil {
		return nil
	}
	out := new(QueueAuthorizationRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *QueueAuthorizationRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueAuthorizationRuleList) DeepCopyInto(out *QueueAuthorizationRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]QueueAuthorizationRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueAuthorizationRuleList.
func (in *QueueAuthorizationRuleList) DeepCopy() *QueueAuthorizationRuleList {
	if in == nil {
		return nil
	}
	out := new(QueueAuthorizationRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *QueueAuthorizationRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueAuthorizationRuleObservation) DeepCopyInto(out *QueueAuthorizationRuleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueAuthorizationRuleObservation.
func (in *QueueAuthorizationRuleObservation) DeepCopy() *QueueAuthorizationRuleObservation {
	if in == nil {
		return nil
	}
	out := new(QueueAuthorizationRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueAuthorizationRuleParameters) DeepCopyInto(out *QueueAuthorizationRuleParameters) {
	*out = *in
	if in.Listen != nil {
		in, out := &in.Listen, &out.Listen
		*out = new(bool)
		**out = **in
	}
	if in.Manage != nil {
		in, out := &in.Manage, &out.Manage
		*out = new(bool)
		**out = **in
	}
	if in.QueueID != nil {
		in, out := &in.QueueID, &out.QueueID
		*out = new(string)
		**out = **in
	}
	if in.QueueIDRef != nil {
		in, out := &in.QueueIDRef, &out.QueueIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.QueueIDSelector != nil {
		in, out := &in.QueueIDSelector, &out.QueueIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Send != nil {
		in, out := &in.Send, &out.Send
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueAuthorizationRuleParameters.
func (in *QueueAuthorizationRuleParameters) DeepCopy() *QueueAuthorizationRuleParameters {
	if in == nil {
		return nil
	}
	out := new(QueueAuthorizationRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueAuthorizationRuleSpec) DeepCopyInto(out *QueueAuthorizationRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueAuthorizationRuleSpec.
func (in *QueueAuthorizationRuleSpec) DeepCopy() *QueueAuthorizationRuleSpec {
	if in == nil {
		return nil
	}
	out := new(QueueAuthorizationRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueAuthorizationRuleStatus) DeepCopyInto(out *QueueAuthorizationRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueAuthorizationRuleStatus.
func (in *QueueAuthorizationRuleStatus) DeepCopy() *QueueAuthorizationRuleStatus {
	if in == nil {
		return nil
	}
	out := new(QueueAuthorizationRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueList) DeepCopyInto(out *QueueList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Queue, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueList.
func (in *QueueList) DeepCopy() *QueueList {
	if in == nil {
		return nil
	}
	out := new(QueueList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *QueueList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueObservation) DeepCopyInto(out *QueueObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueObservation.
func (in *QueueObservation) DeepCopy() *QueueObservation {
	if in == nil {
		return nil
	}
	out := new(QueueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueParameters) DeepCopyInto(out *QueueParameters) {
	*out = *in
	if in.AutoDeleteOnIdle != nil {
		in, out := &in.AutoDeleteOnIdle, &out.AutoDeleteOnIdle
		*out = new(string)
		**out = **in
	}
	if in.DeadLetteringOnMessageExpiration != nil {
		in, out := &in.DeadLetteringOnMessageExpiration, &out.DeadLetteringOnMessageExpiration
		*out = new(bool)
		**out = **in
	}
	if in.DefaultMessageTTL != nil {
		in, out := &in.DefaultMessageTTL, &out.DefaultMessageTTL
		*out = new(string)
		**out = **in
	}
	if in.DuplicateDetectionHistoryTimeWindow != nil {
		in, out := &in.DuplicateDetectionHistoryTimeWindow, &out.DuplicateDetectionHistoryTimeWindow
		*out = new(string)
		**out = **in
	}
	if in.EnableBatchedOperations != nil {
		in, out := &in.EnableBatchedOperations, &out.EnableBatchedOperations
		*out = new(bool)
		**out = **in
	}
	if in.EnableExpress != nil {
		in, out := &in.EnableExpress, &out.EnableExpress
		*out = new(bool)
		**out = **in
	}
	if in.EnablePartitioning != nil {
		in, out := &in.EnablePartitioning, &out.EnablePartitioning
		*out = new(bool)
		**out = **in
	}
	if in.ForwardDeadLetteredMessagesTo != nil {
		in, out := &in.ForwardDeadLetteredMessagesTo, &out.ForwardDeadLetteredMessagesTo
		*out = new(string)
		**out = **in
	}
	if in.ForwardTo != nil {
		in, out := &in.ForwardTo, &out.ForwardTo
		*out = new(string)
		**out = **in
	}
	if in.LockDuration != nil {
		in, out := &in.LockDuration, &out.LockDuration
		*out = new(string)
		**out = **in
	}
	if in.MaxDeliveryCount != nil {
		in, out := &in.MaxDeliveryCount, &out.MaxDeliveryCount
		*out = new(float64)
		**out = **in
	}
	if in.MaxMessageSizeInKilobytes != nil {
		in, out := &in.MaxMessageSizeInKilobytes, &out.MaxMessageSizeInKilobytes
		*out = new(float64)
		**out = **in
	}
	if in.MaxSizeInMegabytes != nil {
		in, out := &in.MaxSizeInMegabytes, &out.MaxSizeInMegabytes
		*out = new(float64)
		**out = **in
	}
	if in.NamespaceID != nil {
		in, out := &in.NamespaceID, &out.NamespaceID
		*out = new(string)
		**out = **in
	}
	if in.NamespaceIDRef != nil {
		in, out := &in.NamespaceIDRef, &out.NamespaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NamespaceIDSelector != nil {
		in, out := &in.NamespaceIDSelector, &out.NamespaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RequiresDuplicateDetection != nil {
		in, out := &in.RequiresDuplicateDetection, &out.RequiresDuplicateDetection
		*out = new(bool)
		**out = **in
	}
	if in.RequiresSession != nil {
		in, out := &in.RequiresSession, &out.RequiresSession
		*out = new(bool)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueParameters.
func (in *QueueParameters) DeepCopy() *QueueParameters {
	if in == nil {
		return nil
	}
	out := new(QueueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueSpec) DeepCopyInto(out *QueueSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueSpec.
func (in *QueueSpec) DeepCopy() *QueueSpec {
	if in == nil {
		return nil
	}
	out := new(QueueSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueStatus) DeepCopyInto(out *QueueStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueStatus.
func (in *QueueStatus) DeepCopy() *QueueStatus {
	if in == nil {
		return nil
	}
	out := new(QueueStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceBusNamespace) DeepCopyInto(out *ServiceBusNamespace) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceBusNamespace.
func (in *ServiceBusNamespace) DeepCopy() *ServiceBusNamespace {
	if in == nil {
		return nil
	}
	out := new(ServiceBusNamespace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceBusNamespace) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceBusNamespaceList) DeepCopyInto(out *ServiceBusNamespaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServiceBusNamespace, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceBusNamespaceList.
func (in *ServiceBusNamespaceList) DeepCopy() *ServiceBusNamespaceList {
	if in == nil {
		return nil
	}
	out := new(ServiceBusNamespaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceBusNamespaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceBusNamespaceObservation) DeepCopyInto(out *ServiceBusNamespaceObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceBusNamespaceObservation.
func (in *ServiceBusNamespaceObservation) DeepCopy() *ServiceBusNamespaceObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceBusNamespaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceBusNamespaceParameters) DeepCopyInto(out *ServiceBusNamespaceParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.CustomerManagedKey != nil {
		in, out := &in.CustomerManagedKey, &out.CustomerManagedKey
		*out = make([]CustomerManagedKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocalAuthEnabled != nil {
		in, out := &in.LocalAuthEnabled, &out.LocalAuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceBusNamespaceParameters.
func (in *ServiceBusNamespaceParameters) DeepCopy() *ServiceBusNamespaceParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceBusNamespaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceBusNamespaceSpec) DeepCopyInto(out *ServiceBusNamespaceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceBusNamespaceSpec.
func (in *ServiceBusNamespaceSpec) DeepCopy() *ServiceBusNamespaceSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceBusNamespaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceBusNamespaceStatus) DeepCopyInto(out *ServiceBusNamespaceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceBusNamespaceStatus.
func (in *ServiceBusNamespaceStatus) DeepCopy() *ServiceBusNamespaceStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceBusNamespaceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subscription) DeepCopyInto(out *Subscription) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subscription.
func (in *Subscription) DeepCopy() *Subscription {
	if in == nil {
		return nil
	}
	out := new(Subscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Subscription) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionList) DeepCopyInto(out *SubscriptionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Subscription, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionList.
func (in *SubscriptionList) DeepCopy() *SubscriptionList {
	if in == nil {
		return nil
	}
	out := new(SubscriptionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubscriptionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionObservation) DeepCopyInto(out *SubscriptionObservation) {
	*out = *in
	if in.ClientScopedSubscription != nil {
		in, out := &in.ClientScopedSubscription, &out.ClientScopedSubscription
		*out = make([]ClientScopedSubscriptionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionObservation.
func (in *SubscriptionObservation) DeepCopy() *SubscriptionObservation {
	if in == nil {
		return nil
	}
	out := new(SubscriptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionParameters) DeepCopyInto(out *SubscriptionParameters) {
	*out = *in
	if in.AutoDeleteOnIdle != nil {
		in, out := &in.AutoDeleteOnIdle, &out.AutoDeleteOnIdle
		*out = new(string)
		**out = **in
	}
	if in.ClientScopedSubscription != nil {
		in, out := &in.ClientScopedSubscription, &out.ClientScopedSubscription
		*out = make([]ClientScopedSubscriptionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientScopedSubscriptionEnabled != nil {
		in, out := &in.ClientScopedSubscriptionEnabled, &out.ClientScopedSubscriptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DeadLetteringOnFilterEvaluationError != nil {
		in, out := &in.DeadLetteringOnFilterEvaluationError, &out.DeadLetteringOnFilterEvaluationError
		*out = new(bool)
		**out = **in
	}
	if in.DeadLetteringOnMessageExpiration != nil {
		in, out := &in.DeadLetteringOnMessageExpiration, &out.DeadLetteringOnMessageExpiration
		*out = new(bool)
		**out = **in
	}
	if in.DefaultMessageTTL != nil {
		in, out := &in.DefaultMessageTTL, &out.DefaultMessageTTL
		*out = new(string)
		**out = **in
	}
	if in.EnableBatchedOperations != nil {
		in, out := &in.EnableBatchedOperations, &out.EnableBatchedOperations
		*out = new(bool)
		**out = **in
	}
	if in.ForwardDeadLetteredMessagesTo != nil {
		in, out := &in.ForwardDeadLetteredMessagesTo, &out.ForwardDeadLetteredMessagesTo
		*out = new(string)
		**out = **in
	}
	if in.ForwardTo != nil {
		in, out := &in.ForwardTo, &out.ForwardTo
		*out = new(string)
		**out = **in
	}
	if in.LockDuration != nil {
		in, out := &in.LockDuration, &out.LockDuration
		*out = new(string)
		**out = **in
	}
	if in.MaxDeliveryCount != nil {
		in, out := &in.MaxDeliveryCount, &out.MaxDeliveryCount
		*out = new(float64)
		**out = **in
	}
	if in.RequiresSession != nil {
		in, out := &in.RequiresSession, &out.RequiresSession
		*out = new(bool)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TopicID != nil {
		in, out := &in.TopicID, &out.TopicID
		*out = new(string)
		**out = **in
	}
	if in.TopicIDRef != nil {
		in, out := &in.TopicIDRef, &out.TopicIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TopicIDSelector != nil {
		in, out := &in.TopicIDSelector, &out.TopicIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionParameters.
func (in *SubscriptionParameters) DeepCopy() *SubscriptionParameters {
	if in == nil {
		return nil
	}
	out := new(SubscriptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionRule) DeepCopyInto(out *SubscriptionRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionRule.
func (in *SubscriptionRule) DeepCopy() *SubscriptionRule {
	if in == nil {
		return nil
	}
	out := new(SubscriptionRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubscriptionRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionRuleList) DeepCopyInto(out *SubscriptionRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SubscriptionRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionRuleList.
func (in *SubscriptionRuleList) DeepCopy() *SubscriptionRuleList {
	if in == nil {
		return nil
	}
	out := new(SubscriptionRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubscriptionRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionRuleObservation) DeepCopyInto(out *SubscriptionRuleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SQLFilterCompatibilityLevel != nil {
		in, out := &in.SQLFilterCompatibilityLevel, &out.SQLFilterCompatibilityLevel
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionRuleObservation.
func (in *SubscriptionRuleObservation) DeepCopy() *SubscriptionRuleObservation {
	if in == nil {
		return nil
	}
	out := new(SubscriptionRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionRuleParameters) DeepCopyInto(out *SubscriptionRuleParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.CorrelationFilter != nil {
		in, out := &in.CorrelationFilter, &out.CorrelationFilter
		*out = make([]CorrelationFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.SQLFilter != nil {
		in, out := &in.SQLFilter, &out.SQLFilter
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionIDRef != nil {
		in, out := &in.SubscriptionIDRef, &out.SubscriptionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubscriptionIDSelector != nil {
		in, out := &in.SubscriptionIDSelector, &out.SubscriptionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionRuleParameters.
func (in *SubscriptionRuleParameters) DeepCopy() *SubscriptionRuleParameters {
	if in == nil {
		return nil
	}
	out := new(SubscriptionRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionRuleSpec) DeepCopyInto(out *SubscriptionRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionRuleSpec.
func (in *SubscriptionRuleSpec) DeepCopy() *SubscriptionRuleSpec {
	if in == nil {
		return nil
	}
	out := new(SubscriptionRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionRuleStatus) DeepCopyInto(out *SubscriptionRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionRuleStatus.
func (in *SubscriptionRuleStatus) DeepCopy() *SubscriptionRuleStatus {
	if in == nil {
		return nil
	}
	out := new(SubscriptionRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionSpec) DeepCopyInto(out *SubscriptionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionSpec.
func (in *SubscriptionSpec) DeepCopy() *SubscriptionSpec {
	if in == nil {
		return nil
	}
	out := new(SubscriptionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionStatus) DeepCopyInto(out *SubscriptionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionStatus.
func (in *SubscriptionStatus) DeepCopy() *SubscriptionStatus {
	if in == nil {
		return nil
	}
	out := new(SubscriptionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Topic) DeepCopyInto(out *Topic) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Topic.
func (in *Topic) DeepCopy() *Topic {
	if in == nil {
		return nil
	}
	out := new(Topic)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Topic) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicAuthorizationRule) DeepCopyInto(out *TopicAuthorizationRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicAuthorizationRule.
func (in *TopicAuthorizationRule) DeepCopy() *TopicAuthorizationRule {
	if in == nil {
		return nil
	}
	out := new(TopicAuthorizationRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopicAuthorizationRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicAuthorizationRuleList) DeepCopyInto(out *TopicAuthorizationRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TopicAuthorizationRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicAuthorizationRuleList.
func (in *TopicAuthorizationRuleList) DeepCopy() *TopicAuthorizationRuleList {
	if in == nil {
		return nil
	}
	out := new(TopicAuthorizationRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopicAuthorizationRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicAuthorizationRuleObservation) DeepCopyInto(out *TopicAuthorizationRuleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicAuthorizationRuleObservation.
func (in *TopicAuthorizationRuleObservation) DeepCopy() *TopicAuthorizationRuleObservation {
	if in == nil {
		return nil
	}
	out := new(TopicAuthorizationRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicAuthorizationRuleParameters) DeepCopyInto(out *TopicAuthorizationRuleParameters) {
	*out = *in
	if in.Listen != nil {
		in, out := &in.Listen, &out.Listen
		*out = new(bool)
		**out = **in
	}
	if in.Manage != nil {
		in, out := &in.Manage, &out.Manage
		*out = new(bool)
		**out = **in
	}
	if in.Send != nil {
		in, out := &in.Send, &out.Send
		*out = new(bool)
		**out = **in
	}
	if in.TopicID != nil {
		in, out := &in.TopicID, &out.TopicID
		*out = new(string)
		**out = **in
	}
	if in.TopicIDRef != nil {
		in, out := &in.TopicIDRef, &out.TopicIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TopicIDSelector != nil {
		in, out := &in.TopicIDSelector, &out.TopicIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicAuthorizationRuleParameters.
func (in *TopicAuthorizationRuleParameters) DeepCopy() *TopicAuthorizationRuleParameters {
	if in == nil {
		return nil
	}
	out := new(TopicAuthorizationRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicAuthorizationRuleSpec) DeepCopyInto(out *TopicAuthorizationRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicAuthorizationRuleSpec.
func (in *TopicAuthorizationRuleSpec) DeepCopy() *TopicAuthorizationRuleSpec {
	if in == nil {
		return nil
	}
	out := new(TopicAuthorizationRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicAuthorizationRuleStatus) DeepCopyInto(out *TopicAuthorizationRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicAuthorizationRuleStatus.
func (in *TopicAuthorizationRuleStatus) DeepCopy() *TopicAuthorizationRuleStatus {
	if in == nil {
		return nil
	}
	out := new(TopicAuthorizationRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicList) DeepCopyInto(out *TopicList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Topic, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicList.
func (in *TopicList) DeepCopy() *TopicList {
	if in == nil {
		return nil
	}
	out := new(TopicList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopicList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicObservation) DeepCopyInto(out *TopicObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicObservation.
func (in *TopicObservation) DeepCopy() *TopicObservation {
	if in == nil {
		return nil
	}
	out := new(TopicObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicParameters) DeepCopyInto(out *TopicParameters) {
	*out = *in
	if in.AutoDeleteOnIdle != nil {
		in, out := &in.AutoDeleteOnIdle, &out.AutoDeleteOnIdle
		*out = new(string)
		**out = **in
	}
	if in.DefaultMessageTTL != nil {
		in, out := &in.DefaultMessageTTL, &out.DefaultMessageTTL
		*out = new(string)
		**out = **in
	}
	if in.DuplicateDetectionHistoryTimeWindow != nil {
		in, out := &in.DuplicateDetectionHistoryTimeWindow, &out.DuplicateDetectionHistoryTimeWindow
		*out = new(string)
		**out = **in
	}
	if in.EnableBatchedOperations != nil {
		in, out := &in.EnableBatchedOperations, &out.EnableBatchedOperations
		*out = new(bool)
		**out = **in
	}
	if in.EnableExpress != nil {
		in, out := &in.EnableExpress, &out.EnableExpress
		*out = new(bool)
		**out = **in
	}
	if in.EnablePartitioning != nil {
		in, out := &in.EnablePartitioning, &out.EnablePartitioning
		*out = new(bool)
		**out = **in
	}
	if in.MaxMessageSizeInKilobytes != nil {
		in, out := &in.MaxMessageSizeInKilobytes, &out.MaxMessageSizeInKilobytes
		*out = new(float64)
		**out = **in
	}
	if in.MaxSizeInMegabytes != nil {
		in, out := &in.MaxSizeInMegabytes, &out.MaxSizeInMegabytes
		*out = new(float64)
		**out = **in
	}
	if in.NamespaceID != nil {
		in, out := &in.NamespaceID, &out.NamespaceID
		*out = new(string)
		**out = **in
	}
	if in.NamespaceIDRef != nil {
		in, out := &in.NamespaceIDRef, &out.NamespaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NamespaceIDSelector != nil {
		in, out := &in.NamespaceIDSelector, &out.NamespaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RequiresDuplicateDetection != nil {
		in, out := &in.RequiresDuplicateDetection, &out.RequiresDuplicateDetection
		*out = new(bool)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SupportOrdering != nil {
		in, out := &in.SupportOrdering, &out.SupportOrdering
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicParameters.
func (in *TopicParameters) DeepCopy() *TopicParameters {
	if in == nil {
		return nil
	}
	out := new(TopicParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicSpec) DeepCopyInto(out *TopicSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicSpec.
func (in *TopicSpec) DeepCopy() *TopicSpec {
	if in == nil {
		return nil
	}
	out := new(TopicSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicStatus) DeepCopyInto(out *TopicStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicStatus.
func (in *TopicStatus) DeepCopy() *TopicStatus {
	if in == nil {
		return nil
	}
	out := new(TopicStatus)
	in.DeepCopyInto(out)
	return out
}
