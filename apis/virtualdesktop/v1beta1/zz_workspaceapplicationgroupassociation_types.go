// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type WorkspaceApplicationGroupAssociationInitParameters struct {
}

type WorkspaceApplicationGroupAssociationObservation struct {

	// The resource ID for the Virtual Desktop Application Group. Changing this forces a new resource to be created.
	ApplicationGroupID *string `json:"applicationGroupId,omitempty" tf:"application_group_id,omitempty"`

	// The ID of the Virtual Desktop Workspace Application Group association.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The resource ID for the Virtual Desktop Workspace. Changing this forces a new resource to be created.
	WorkspaceID *string `json:"workspaceId,omitempty" tf:"workspace_id,omitempty"`
}

type WorkspaceApplicationGroupAssociationParameters struct {

	// The resource ID for the Virtual Desktop Application Group. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/virtualdesktop/v1beta1.ApplicationGroup
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ApplicationGroupID *string `json:"applicationGroupId,omitempty" tf:"application_group_id,omitempty"`

	// Reference to a ApplicationGroup in virtualdesktop to populate applicationGroupId.
	// +kubebuilder:validation:Optional
	ApplicationGroupIDRef *v1.Reference `json:"applicationGroupIdRef,omitempty" tf:"-"`

	// Selector for a ApplicationGroup in virtualdesktop to populate applicationGroupId.
	// +kubebuilder:validation:Optional
	ApplicationGroupIDSelector *v1.Selector `json:"applicationGroupIdSelector,omitempty" tf:"-"`

	// The resource ID for the Virtual Desktop Workspace. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/virtualdesktop/v1beta1.Workspace
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	WorkspaceID *string `json:"workspaceId,omitempty" tf:"workspace_id,omitempty"`

	// Reference to a Workspace in virtualdesktop to populate workspaceId.
	// +kubebuilder:validation:Optional
	WorkspaceIDRef *v1.Reference `json:"workspaceIdRef,omitempty" tf:"-"`

	// Selector for a Workspace in virtualdesktop to populate workspaceId.
	// +kubebuilder:validation:Optional
	WorkspaceIDSelector *v1.Selector `json:"workspaceIdSelector,omitempty" tf:"-"`
}

// WorkspaceApplicationGroupAssociationSpec defines the desired state of WorkspaceApplicationGroupAssociation
type WorkspaceApplicationGroupAssociationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     WorkspaceApplicationGroupAssociationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider WorkspaceApplicationGroupAssociationInitParameters `json:"initProvider,omitempty"`
}

// WorkspaceApplicationGroupAssociationStatus defines the observed state of WorkspaceApplicationGroupAssociation.
type WorkspaceApplicationGroupAssociationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WorkspaceApplicationGroupAssociationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// WorkspaceApplicationGroupAssociation is the Schema for the WorkspaceApplicationGroupAssociations API. Manages a Virtual Desktop Workspace Application Group Association.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type WorkspaceApplicationGroupAssociation struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              WorkspaceApplicationGroupAssociationSpec   `json:"spec"`
	Status            WorkspaceApplicationGroupAssociationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WorkspaceApplicationGroupAssociationList contains a list of WorkspaceApplicationGroupAssociations
type WorkspaceApplicationGroupAssociationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WorkspaceApplicationGroupAssociation `json:"items"`
}

// Repository type metadata.
var (
	WorkspaceApplicationGroupAssociation_Kind             = "WorkspaceApplicationGroupAssociation"
	WorkspaceApplicationGroupAssociation_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: WorkspaceApplicationGroupAssociation_Kind}.String()
	WorkspaceApplicationGroupAssociation_KindAPIVersion   = WorkspaceApplicationGroupAssociation_Kind + "." + CRDGroupVersion.String()
	WorkspaceApplicationGroupAssociation_GroupVersionKind = CRDGroupVersion.WithKind(WorkspaceApplicationGroupAssociation_Kind)
)

func init() {
	SchemeBuilder.Register(&WorkspaceApplicationGroupAssociation{}, &WorkspaceApplicationGroupAssociationList{})
}
