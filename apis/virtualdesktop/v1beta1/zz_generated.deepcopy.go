//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Application) DeepCopyInto(out *Application) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Application.
func (in *Application) DeepCopy() *Application {
	if in == nil {
		return nil
	}
	out := new(Application)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Application) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationGroup) DeepCopyInto(out *ApplicationGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationGroup.
func (in *ApplicationGroup) DeepCopy() *ApplicationGroup {
	if in == nil {
		return nil
	}
	out := new(ApplicationGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationGroupInitParameters) DeepCopyInto(out *ApplicationGroupInitParameters) {
	*out = *in
	if in.DefaultDesktopDisplayName != nil {
		in, out := &in.DefaultDesktopDisplayName, &out.DefaultDesktopDisplayName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationGroupInitParameters.
func (in *ApplicationGroupInitParameters) DeepCopy() *ApplicationGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationGroupList) DeepCopyInto(out *ApplicationGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApplicationGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationGroupList.
func (in *ApplicationGroupList) DeepCopy() *ApplicationGroupList {
	if in == nil {
		return nil
	}
	out := new(ApplicationGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationGroupObservation) DeepCopyInto(out *ApplicationGroupObservation) {
	*out = *in
	if in.DefaultDesktopDisplayName != nil {
		in, out := &in.DefaultDesktopDisplayName, &out.DefaultDesktopDisplayName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.HostPoolID != nil {
		in, out := &in.HostPoolID, &out.HostPoolID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationGroupObservation.
func (in *ApplicationGroupObservation) DeepCopy() *ApplicationGroupObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationGroupParameters) DeepCopyInto(out *ApplicationGroupParameters) {
	*out = *in
	if in.DefaultDesktopDisplayName != nil {
		in, out := &in.DefaultDesktopDisplayName, &out.DefaultDesktopDisplayName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.HostPoolID != nil {
		in, out := &in.HostPoolID, &out.HostPoolID
		*out = new(string)
		**out = **in
	}
	if in.HostPoolIDRef != nil {
		in, out := &in.HostPoolIDRef, &out.HostPoolIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.HostPoolIDSelector != nil {
		in, out := &in.HostPoolIDSelector, &out.HostPoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationGroupParameters.
func (in *ApplicationGroupParameters) DeepCopy() *ApplicationGroupParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationGroupSpec) DeepCopyInto(out *ApplicationGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationGroupSpec.
func (in *ApplicationGroupSpec) DeepCopy() *ApplicationGroupSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationGroupStatus) DeepCopyInto(out *ApplicationGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationGroupStatus.
func (in *ApplicationGroupStatus) DeepCopy() *ApplicationGroupStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInitParameters) DeepCopyInto(out *ApplicationInitParameters) {
	*out = *in
	if in.CommandLineArgumentPolicy != nil {
		in, out := &in.CommandLineArgumentPolicy, &out.CommandLineArgumentPolicy
		*out = new(string)
		**out = **in
	}
	if in.CommandLineArguments != nil {
		in, out := &in.CommandLineArguments, &out.CommandLineArguments
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.IconIndex != nil {
		in, out := &in.IconIndex, &out.IconIndex
		*out = new(float64)
		**out = **in
	}
	if in.IconPath != nil {
		in, out := &in.IconPath, &out.IconPath
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ShowInPortal != nil {
		in, out := &in.ShowInPortal, &out.ShowInPortal
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInitParameters.
func (in *ApplicationInitParameters) DeepCopy() *ApplicationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationList) DeepCopyInto(out *ApplicationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Application, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationList.
func (in *ApplicationList) DeepCopy() *ApplicationList {
	if in == nil {
		return nil
	}
	out := new(ApplicationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationObservation) DeepCopyInto(out *ApplicationObservation) {
	*out = *in
	if in.ApplicationGroupID != nil {
		in, out := &in.ApplicationGroupID, &out.ApplicationGroupID
		*out = new(string)
		**out = **in
	}
	if in.CommandLineArgumentPolicy != nil {
		in, out := &in.CommandLineArgumentPolicy, &out.CommandLineArgumentPolicy
		*out = new(string)
		**out = **in
	}
	if in.CommandLineArguments != nil {
		in, out := &in.CommandLineArguments, &out.CommandLineArguments
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IconIndex != nil {
		in, out := &in.IconIndex, &out.IconIndex
		*out = new(float64)
		**out = **in
	}
	if in.IconPath != nil {
		in, out := &in.IconPath, &out.IconPath
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ShowInPortal != nil {
		in, out := &in.ShowInPortal, &out.ShowInPortal
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationObservation.
func (in *ApplicationObservation) DeepCopy() *ApplicationObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationParameters) DeepCopyInto(out *ApplicationParameters) {
	*out = *in
	if in.ApplicationGroupID != nil {
		in, out := &in.ApplicationGroupID, &out.ApplicationGroupID
		*out = new(string)
		**out = **in
	}
	if in.ApplicationGroupIDRef != nil {
		in, out := &in.ApplicationGroupIDRef, &out.ApplicationGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ApplicationGroupIDSelector != nil {
		in, out := &in.ApplicationGroupIDSelector, &out.ApplicationGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CommandLineArgumentPolicy != nil {
		in, out := &in.CommandLineArgumentPolicy, &out.CommandLineArgumentPolicy
		*out = new(string)
		**out = **in
	}
	if in.CommandLineArguments != nil {
		in, out := &in.CommandLineArguments, &out.CommandLineArguments
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.IconIndex != nil {
		in, out := &in.IconIndex, &out.IconIndex
		*out = new(float64)
		**out = **in
	}
	if in.IconPath != nil {
		in, out := &in.IconPath, &out.IconPath
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ShowInPortal != nil {
		in, out := &in.ShowInPortal, &out.ShowInPortal
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationParameters.
func (in *ApplicationParameters) DeepCopy() *ApplicationParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSpec) DeepCopyInto(out *ApplicationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSpec.
func (in *ApplicationSpec) DeepCopy() *ApplicationSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationStatus) DeepCopyInto(out *ApplicationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationStatus.
func (in *ApplicationStatus) DeepCopy() *ApplicationStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostPool) DeepCopyInto(out *HostPool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostPool.
func (in *HostPool) DeepCopy() *HostPool {
	if in == nil {
		return nil
	}
	out := new(HostPool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HostPool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostPoolInitParameters) DeepCopyInto(out *HostPoolInitParameters) {
	*out = *in
	if in.CustomRdpProperties != nil {
		in, out := &in.CustomRdpProperties, &out.CustomRdpProperties
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerType != nil {
		in, out := &in.LoadBalancerType, &out.LoadBalancerType
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaximumSessionsAllowed != nil {
		in, out := &in.MaximumSessionsAllowed, &out.MaximumSessionsAllowed
		*out = new(float64)
		**out = **in
	}
	if in.PersonalDesktopAssignmentType != nil {
		in, out := &in.PersonalDesktopAssignmentType, &out.PersonalDesktopAssignmentType
		*out = new(string)
		**out = **in
	}
	if in.PreferredAppGroupType != nil {
		in, out := &in.PreferredAppGroupType, &out.PreferredAppGroupType
		*out = new(string)
		**out = **in
	}
	if in.ScheduledAgentUpdates != nil {
		in, out := &in.ScheduledAgentUpdates, &out.ScheduledAgentUpdates
		*out = make([]ScheduledAgentUpdatesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StartVMOnConnect != nil {
		in, out := &in.StartVMOnConnect, &out.StartVMOnConnect
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.ValidateEnvironment != nil {
		in, out := &in.ValidateEnvironment, &out.ValidateEnvironment
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostPoolInitParameters.
func (in *HostPoolInitParameters) DeepCopy() *HostPoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(HostPoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostPoolList) DeepCopyInto(out *HostPoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HostPool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostPoolList.
func (in *HostPoolList) DeepCopy() *HostPoolList {
	if in == nil {
		return nil
	}
	out := new(HostPoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HostPoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostPoolObservation) DeepCopyInto(out *HostPoolObservation) {
	*out = *in
	if in.CustomRdpProperties != nil {
		in, out := &in.CustomRdpProperties, &out.CustomRdpProperties
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerType != nil {
		in, out := &in.LoadBalancerType, &out.LoadBalancerType
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaximumSessionsAllowed != nil {
		in, out := &in.MaximumSessionsAllowed, &out.MaximumSessionsAllowed
		*out = new(float64)
		**out = **in
	}
	if in.PersonalDesktopAssignmentType != nil {
		in, out := &in.PersonalDesktopAssignmentType, &out.PersonalDesktopAssignmentType
		*out = new(string)
		**out = **in
	}
	if in.PreferredAppGroupType != nil {
		in, out := &in.PreferredAppGroupType, &out.PreferredAppGroupType
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ScheduledAgentUpdates != nil {
		in, out := &in.ScheduledAgentUpdates, &out.ScheduledAgentUpdates
		*out = make([]ScheduledAgentUpdatesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StartVMOnConnect != nil {
		in, out := &in.StartVMOnConnect, &out.StartVMOnConnect
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.ValidateEnvironment != nil {
		in, out := &in.ValidateEnvironment, &out.ValidateEnvironment
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostPoolObservation.
func (in *HostPoolObservation) DeepCopy() *HostPoolObservation {
	if in == nil {
		return nil
	}
	out := new(HostPoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostPoolParameters) DeepCopyInto(out *HostPoolParameters) {
	*out = *in
	if in.CustomRdpProperties != nil {
		in, out := &in.CustomRdpProperties, &out.CustomRdpProperties
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerType != nil {
		in, out := &in.LoadBalancerType, &out.LoadBalancerType
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaximumSessionsAllowed != nil {
		in, out := &in.MaximumSessionsAllowed, &out.MaximumSessionsAllowed
		*out = new(float64)
		**out = **in
	}
	if in.PersonalDesktopAssignmentType != nil {
		in, out := &in.PersonalDesktopAssignmentType, &out.PersonalDesktopAssignmentType
		*out = new(string)
		**out = **in
	}
	if in.PreferredAppGroupType != nil {
		in, out := &in.PreferredAppGroupType, &out.PreferredAppGroupType
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ScheduledAgentUpdates != nil {
		in, out := &in.ScheduledAgentUpdates, &out.ScheduledAgentUpdates
		*out = make([]ScheduledAgentUpdatesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StartVMOnConnect != nil {
		in, out := &in.StartVMOnConnect, &out.StartVMOnConnect
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.ValidateEnvironment != nil {
		in, out := &in.ValidateEnvironment, &out.ValidateEnvironment
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostPoolParameters.
func (in *HostPoolParameters) DeepCopy() *HostPoolParameters {
	if in == nil {
		return nil
	}
	out := new(HostPoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostPoolRegistrationInfo) DeepCopyInto(out *HostPoolRegistrationInfo) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostPoolRegistrationInfo.
func (in *HostPoolRegistrationInfo) DeepCopy() *HostPoolRegistrationInfo {
	if in == nil {
		return nil
	}
	out := new(HostPoolRegistrationInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HostPoolRegistrationInfo) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostPoolRegistrationInfoInitParameters) DeepCopyInto(out *HostPoolRegistrationInfoInitParameters) {
	*out = *in
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostPoolRegistrationInfoInitParameters.
func (in *HostPoolRegistrationInfoInitParameters) DeepCopy() *HostPoolRegistrationInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(HostPoolRegistrationInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostPoolRegistrationInfoList) DeepCopyInto(out *HostPoolRegistrationInfoList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HostPoolRegistrationInfo, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostPoolRegistrationInfoList.
func (in *HostPoolRegistrationInfoList) DeepCopy() *HostPoolRegistrationInfoList {
	if in == nil {
		return nil
	}
	out := new(HostPoolRegistrationInfoList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HostPoolRegistrationInfoList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostPoolRegistrationInfoObservation) DeepCopyInto(out *HostPoolRegistrationInfoObservation) {
	*out = *in
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.HostpoolID != nil {
		in, out := &in.HostpoolID, &out.HostpoolID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostPoolRegistrationInfoObservation.
func (in *HostPoolRegistrationInfoObservation) DeepCopy() *HostPoolRegistrationInfoObservation {
	if in == nil {
		return nil
	}
	out := new(HostPoolRegistrationInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostPoolRegistrationInfoParameters) DeepCopyInto(out *HostPoolRegistrationInfoParameters) {
	*out = *in
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.HostpoolID != nil {
		in, out := &in.HostpoolID, &out.HostpoolID
		*out = new(string)
		**out = **in
	}
	if in.HostpoolIDRef != nil {
		in, out := &in.HostpoolIDRef, &out.HostpoolIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.HostpoolIDSelector != nil {
		in, out := &in.HostpoolIDSelector, &out.HostpoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostPoolRegistrationInfoParameters.
func (in *HostPoolRegistrationInfoParameters) DeepCopy() *HostPoolRegistrationInfoParameters {
	if in == nil {
		return nil
	}
	out := new(HostPoolRegistrationInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostPoolRegistrationInfoSpec) DeepCopyInto(out *HostPoolRegistrationInfoSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostPoolRegistrationInfoSpec.
func (in *HostPoolRegistrationInfoSpec) DeepCopy() *HostPoolRegistrationInfoSpec {
	if in == nil {
		return nil
	}
	out := new(HostPoolRegistrationInfoSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostPoolRegistrationInfoStatus) DeepCopyInto(out *HostPoolRegistrationInfoStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostPoolRegistrationInfoStatus.
func (in *HostPoolRegistrationInfoStatus) DeepCopy() *HostPoolRegistrationInfoStatus {
	if in == nil {
		return nil
	}
	out := new(HostPoolRegistrationInfoStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostPoolSpec) DeepCopyInto(out *HostPoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostPoolSpec.
func (in *HostPoolSpec) DeepCopy() *HostPoolSpec {
	if in == nil {
		return nil
	}
	out := new(HostPoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostPoolStatus) DeepCopyInto(out *HostPoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostPoolStatus.
func (in *HostPoolStatus) DeepCopy() *HostPoolStatus {
	if in == nil {
		return nil
	}
	out := new(HostPoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPlan) DeepCopyInto(out *ScalingPlan) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPlan.
func (in *ScalingPlan) DeepCopy() *ScalingPlan {
	if in == nil {
		return nil
	}
	out := new(ScalingPlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScalingPlan) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPlanHostPoolInitParameters) DeepCopyInto(out *ScalingPlanHostPoolInitParameters) {
	*out = *in
	if in.ScalingPlanEnabled != nil {
		in, out := &in.ScalingPlanEnabled, &out.ScalingPlanEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPlanHostPoolInitParameters.
func (in *ScalingPlanHostPoolInitParameters) DeepCopy() *ScalingPlanHostPoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScalingPlanHostPoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPlanHostPoolObservation) DeepCopyInto(out *ScalingPlanHostPoolObservation) {
	*out = *in
	if in.HostpoolID != nil {
		in, out := &in.HostpoolID, &out.HostpoolID
		*out = new(string)
		**out = **in
	}
	if in.ScalingPlanEnabled != nil {
		in, out := &in.ScalingPlanEnabled, &out.ScalingPlanEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPlanHostPoolObservation.
func (in *ScalingPlanHostPoolObservation) DeepCopy() *ScalingPlanHostPoolObservation {
	if in == nil {
		return nil
	}
	out := new(ScalingPlanHostPoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPlanHostPoolParameters) DeepCopyInto(out *ScalingPlanHostPoolParameters) {
	*out = *in
	if in.HostpoolID != nil {
		in, out := &in.HostpoolID, &out.HostpoolID
		*out = new(string)
		**out = **in
	}
	if in.HostpoolIDRef != nil {
		in, out := &in.HostpoolIDRef, &out.HostpoolIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.HostpoolIDSelector != nil {
		in, out := &in.HostpoolIDSelector, &out.HostpoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ScalingPlanEnabled != nil {
		in, out := &in.ScalingPlanEnabled, &out.ScalingPlanEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPlanHostPoolParameters.
func (in *ScalingPlanHostPoolParameters) DeepCopy() *ScalingPlanHostPoolParameters {
	if in == nil {
		return nil
	}
	out := new(ScalingPlanHostPoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPlanInitParameters) DeepCopyInto(out *ScalingPlanInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExclusionTag != nil {
		in, out := &in.ExclusionTag, &out.ExclusionTag
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.HostPool != nil {
		in, out := &in.HostPool, &out.HostPool
		*out = make([]ScalingPlanHostPoolInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScalingPlanScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPlanInitParameters.
func (in *ScalingPlanInitParameters) DeepCopy() *ScalingPlanInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScalingPlanInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPlanList) DeepCopyInto(out *ScalingPlanList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ScalingPlan, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPlanList.
func (in *ScalingPlanList) DeepCopy() *ScalingPlanList {
	if in == nil {
		return nil
	}
	out := new(ScalingPlanList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScalingPlanList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPlanObservation) DeepCopyInto(out *ScalingPlanObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExclusionTag != nil {
		in, out := &in.ExclusionTag, &out.ExclusionTag
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.HostPool != nil {
		in, out := &in.HostPool, &out.HostPool
		*out = make([]ScalingPlanHostPoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScalingPlanScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPlanObservation.
func (in *ScalingPlanObservation) DeepCopy() *ScalingPlanObservation {
	if in == nil {
		return nil
	}
	out := new(ScalingPlanObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPlanParameters) DeepCopyInto(out *ScalingPlanParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExclusionTag != nil {
		in, out := &in.ExclusionTag, &out.ExclusionTag
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.HostPool != nil {
		in, out := &in.HostPool, &out.HostPool
		*out = make([]ScalingPlanHostPoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScalingPlanScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPlanParameters.
func (in *ScalingPlanParameters) DeepCopy() *ScalingPlanParameters {
	if in == nil {
		return nil
	}
	out := new(ScalingPlanParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPlanScheduleInitParameters) DeepCopyInto(out *ScalingPlanScheduleInitParameters) {
	*out = *in
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OffPeakLoadBalancingAlgorithm != nil {
		in, out := &in.OffPeakLoadBalancingAlgorithm, &out.OffPeakLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.OffPeakStartTime != nil {
		in, out := &in.OffPeakStartTime, &out.OffPeakStartTime
		*out = new(string)
		**out = **in
	}
	if in.PeakLoadBalancingAlgorithm != nil {
		in, out := &in.PeakLoadBalancingAlgorithm, &out.PeakLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.PeakStartTime != nil {
		in, out := &in.PeakStartTime, &out.PeakStartTime
		*out = new(string)
		**out = **in
	}
	if in.RampDownCapacityThresholdPercent != nil {
		in, out := &in.RampDownCapacityThresholdPercent, &out.RampDownCapacityThresholdPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampDownForceLogoffUsers != nil {
		in, out := &in.RampDownForceLogoffUsers, &out.RampDownForceLogoffUsers
		*out = new(bool)
		**out = **in
	}
	if in.RampDownLoadBalancingAlgorithm != nil {
		in, out := &in.RampDownLoadBalancingAlgorithm, &out.RampDownLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.RampDownMinimumHostsPercent != nil {
		in, out := &in.RampDownMinimumHostsPercent, &out.RampDownMinimumHostsPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampDownNotificationMessage != nil {
		in, out := &in.RampDownNotificationMessage, &out.RampDownNotificationMessage
		*out = new(string)
		**out = **in
	}
	if in.RampDownStartTime != nil {
		in, out := &in.RampDownStartTime, &out.RampDownStartTime
		*out = new(string)
		**out = **in
	}
	if in.RampDownStopHostsWhen != nil {
		in, out := &in.RampDownStopHostsWhen, &out.RampDownStopHostsWhen
		*out = new(string)
		**out = **in
	}
	if in.RampDownWaitTimeMinutes != nil {
		in, out := &in.RampDownWaitTimeMinutes, &out.RampDownWaitTimeMinutes
		*out = new(float64)
		**out = **in
	}
	if in.RampUpCapacityThresholdPercent != nil {
		in, out := &in.RampUpCapacityThresholdPercent, &out.RampUpCapacityThresholdPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampUpLoadBalancingAlgorithm != nil {
		in, out := &in.RampUpLoadBalancingAlgorithm, &out.RampUpLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.RampUpMinimumHostsPercent != nil {
		in, out := &in.RampUpMinimumHostsPercent, &out.RampUpMinimumHostsPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampUpStartTime != nil {
		in, out := &in.RampUpStartTime, &out.RampUpStartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPlanScheduleInitParameters.
func (in *ScalingPlanScheduleInitParameters) DeepCopy() *ScalingPlanScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScalingPlanScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPlanScheduleObservation) DeepCopyInto(out *ScalingPlanScheduleObservation) {
	*out = *in
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OffPeakLoadBalancingAlgorithm != nil {
		in, out := &in.OffPeakLoadBalancingAlgorithm, &out.OffPeakLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.OffPeakStartTime != nil {
		in, out := &in.OffPeakStartTime, &out.OffPeakStartTime
		*out = new(string)
		**out = **in
	}
	if in.PeakLoadBalancingAlgorithm != nil {
		in, out := &in.PeakLoadBalancingAlgorithm, &out.PeakLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.PeakStartTime != nil {
		in, out := &in.PeakStartTime, &out.PeakStartTime
		*out = new(string)
		**out = **in
	}
	if in.RampDownCapacityThresholdPercent != nil {
		in, out := &in.RampDownCapacityThresholdPercent, &out.RampDownCapacityThresholdPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampDownForceLogoffUsers != nil {
		in, out := &in.RampDownForceLogoffUsers, &out.RampDownForceLogoffUsers
		*out = new(bool)
		**out = **in
	}
	if in.RampDownLoadBalancingAlgorithm != nil {
		in, out := &in.RampDownLoadBalancingAlgorithm, &out.RampDownLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.RampDownMinimumHostsPercent != nil {
		in, out := &in.RampDownMinimumHostsPercent, &out.RampDownMinimumHostsPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampDownNotificationMessage != nil {
		in, out := &in.RampDownNotificationMessage, &out.RampDownNotificationMessage
		*out = new(string)
		**out = **in
	}
	if in.RampDownStartTime != nil {
		in, out := &in.RampDownStartTime, &out.RampDownStartTime
		*out = new(string)
		**out = **in
	}
	if in.RampDownStopHostsWhen != nil {
		in, out := &in.RampDownStopHostsWhen, &out.RampDownStopHostsWhen
		*out = new(string)
		**out = **in
	}
	if in.RampDownWaitTimeMinutes != nil {
		in, out := &in.RampDownWaitTimeMinutes, &out.RampDownWaitTimeMinutes
		*out = new(float64)
		**out = **in
	}
	if in.RampUpCapacityThresholdPercent != nil {
		in, out := &in.RampUpCapacityThresholdPercent, &out.RampUpCapacityThresholdPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampUpLoadBalancingAlgorithm != nil {
		in, out := &in.RampUpLoadBalancingAlgorithm, &out.RampUpLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.RampUpMinimumHostsPercent != nil {
		in, out := &in.RampUpMinimumHostsPercent, &out.RampUpMinimumHostsPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampUpStartTime != nil {
		in, out := &in.RampUpStartTime, &out.RampUpStartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPlanScheduleObservation.
func (in *ScalingPlanScheduleObservation) DeepCopy() *ScalingPlanScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(ScalingPlanScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPlanScheduleParameters) DeepCopyInto(out *ScalingPlanScheduleParameters) {
	*out = *in
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OffPeakLoadBalancingAlgorithm != nil {
		in, out := &in.OffPeakLoadBalancingAlgorithm, &out.OffPeakLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.OffPeakStartTime != nil {
		in, out := &in.OffPeakStartTime, &out.OffPeakStartTime
		*out = new(string)
		**out = **in
	}
	if in.PeakLoadBalancingAlgorithm != nil {
		in, out := &in.PeakLoadBalancingAlgorithm, &out.PeakLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.PeakStartTime != nil {
		in, out := &in.PeakStartTime, &out.PeakStartTime
		*out = new(string)
		**out = **in
	}
	if in.RampDownCapacityThresholdPercent != nil {
		in, out := &in.RampDownCapacityThresholdPercent, &out.RampDownCapacityThresholdPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampDownForceLogoffUsers != nil {
		in, out := &in.RampDownForceLogoffUsers, &out.RampDownForceLogoffUsers
		*out = new(bool)
		**out = **in
	}
	if in.RampDownLoadBalancingAlgorithm != nil {
		in, out := &in.RampDownLoadBalancingAlgorithm, &out.RampDownLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.RampDownMinimumHostsPercent != nil {
		in, out := &in.RampDownMinimumHostsPercent, &out.RampDownMinimumHostsPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampDownNotificationMessage != nil {
		in, out := &in.RampDownNotificationMessage, &out.RampDownNotificationMessage
		*out = new(string)
		**out = **in
	}
	if in.RampDownStartTime != nil {
		in, out := &in.RampDownStartTime, &out.RampDownStartTime
		*out = new(string)
		**out = **in
	}
	if in.RampDownStopHostsWhen != nil {
		in, out := &in.RampDownStopHostsWhen, &out.RampDownStopHostsWhen
		*out = new(string)
		**out = **in
	}
	if in.RampDownWaitTimeMinutes != nil {
		in, out := &in.RampDownWaitTimeMinutes, &out.RampDownWaitTimeMinutes
		*out = new(float64)
		**out = **in
	}
	if in.RampUpCapacityThresholdPercent != nil {
		in, out := &in.RampUpCapacityThresholdPercent, &out.RampUpCapacityThresholdPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampUpLoadBalancingAlgorithm != nil {
		in, out := &in.RampUpLoadBalancingAlgorithm, &out.RampUpLoadBalancingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.RampUpMinimumHostsPercent != nil {
		in, out := &in.RampUpMinimumHostsPercent, &out.RampUpMinimumHostsPercent
		*out = new(float64)
		**out = **in
	}
	if in.RampUpStartTime != nil {
		in, out := &in.RampUpStartTime, &out.RampUpStartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPlanScheduleParameters.
func (in *ScalingPlanScheduleParameters) DeepCopy() *ScalingPlanScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(ScalingPlanScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPlanSpec) DeepCopyInto(out *ScalingPlanSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPlanSpec.
func (in *ScalingPlanSpec) DeepCopy() *ScalingPlanSpec {
	if in == nil {
		return nil
	}
	out := new(ScalingPlanSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPlanStatus) DeepCopyInto(out *ScalingPlanStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPlanStatus.
func (in *ScalingPlanStatus) DeepCopy() *ScalingPlanStatus {
	if in == nil {
		return nil
	}
	out := new(ScalingPlanStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleInitParameters) DeepCopyInto(out *ScheduleInitParameters) {
	*out = *in
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.HourOfDay != nil {
		in, out := &in.HourOfDay, &out.HourOfDay
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleInitParameters.
func (in *ScheduleInitParameters) DeepCopy() *ScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleObservation) DeepCopyInto(out *ScheduleObservation) {
	*out = *in
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.HourOfDay != nil {
		in, out := &in.HourOfDay, &out.HourOfDay
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleObservation.
func (in *ScheduleObservation) DeepCopy() *ScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleParameters) DeepCopyInto(out *ScheduleParameters) {
	*out = *in
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.HourOfDay != nil {
		in, out := &in.HourOfDay, &out.HourOfDay
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleParameters.
func (in *ScheduleParameters) DeepCopy() *ScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledAgentUpdatesInitParameters) DeepCopyInto(out *ScheduledAgentUpdatesInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.UseSessionHostTimezone != nil {
		in, out := &in.UseSessionHostTimezone, &out.UseSessionHostTimezone
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledAgentUpdatesInitParameters.
func (in *ScheduledAgentUpdatesInitParameters) DeepCopy() *ScheduledAgentUpdatesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduledAgentUpdatesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledAgentUpdatesObservation) DeepCopyInto(out *ScheduledAgentUpdatesObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.UseSessionHostTimezone != nil {
		in, out := &in.UseSessionHostTimezone, &out.UseSessionHostTimezone
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledAgentUpdatesObservation.
func (in *ScheduledAgentUpdatesObservation) DeepCopy() *ScheduledAgentUpdatesObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduledAgentUpdatesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledAgentUpdatesParameters) DeepCopyInto(out *ScheduledAgentUpdatesParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.UseSessionHostTimezone != nil {
		in, out := &in.UseSessionHostTimezone, &out.UseSessionHostTimezone
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledAgentUpdatesParameters.
func (in *ScheduledAgentUpdatesParameters) DeepCopy() *ScheduledAgentUpdatesParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduledAgentUpdatesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Workspace) DeepCopyInto(out *Workspace) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Workspace.
func (in *Workspace) DeepCopy() *Workspace {
	if in == nil {
		return nil
	}
	out := new(Workspace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Workspace) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceApplicationAssociation) DeepCopyInto(out *WorkspaceApplicationAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceApplicationAssociation.
func (in *WorkspaceApplicationAssociation) DeepCopy() *WorkspaceApplicationAssociation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceApplicationAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkspaceApplicationAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceApplicationAssociationInitParameters) DeepCopyInto(out *WorkspaceApplicationAssociationInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceApplicationAssociationInitParameters.
func (in *WorkspaceApplicationAssociationInitParameters) DeepCopy() *WorkspaceApplicationAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceApplicationAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceApplicationAssociationList) DeepCopyInto(out *WorkspaceApplicationAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkspaceApplicationAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceApplicationAssociationList.
func (in *WorkspaceApplicationAssociationList) DeepCopy() *WorkspaceApplicationAssociationList {
	if in == nil {
		return nil
	}
	out := new(WorkspaceApplicationAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkspaceApplicationAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceApplicationAssociationObservation) DeepCopyInto(out *WorkspaceApplicationAssociationObservation) {
	*out = *in
	if in.ApplicationGroupID != nil {
		in, out := &in.ApplicationGroupID, &out.ApplicationGroupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceApplicationAssociationObservation.
func (in *WorkspaceApplicationAssociationObservation) DeepCopy() *WorkspaceApplicationAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceApplicationAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceApplicationAssociationParameters) DeepCopyInto(out *WorkspaceApplicationAssociationParameters) {
	*out = *in
	if in.ApplicationGroupID != nil {
		in, out := &in.ApplicationGroupID, &out.ApplicationGroupID
		*out = new(string)
		**out = **in
	}
	if in.ApplicationGroupIDRef != nil {
		in, out := &in.ApplicationGroupIDRef, &out.ApplicationGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ApplicationGroupIDSelector != nil {
		in, out := &in.ApplicationGroupIDSelector, &out.ApplicationGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceIDRef != nil {
		in, out := &in.WorkspaceIDRef, &out.WorkspaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkspaceIDSelector != nil {
		in, out := &in.WorkspaceIDSelector, &out.WorkspaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceApplicationAssociationParameters.
func (in *WorkspaceApplicationAssociationParameters) DeepCopy() *WorkspaceApplicationAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceApplicationAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceApplicationAssociationSpec) DeepCopyInto(out *WorkspaceApplicationAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	out.InitProvider = in.InitProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceApplicationAssociationSpec.
func (in *WorkspaceApplicationAssociationSpec) DeepCopy() *WorkspaceApplicationAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(WorkspaceApplicationAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceApplicationAssociationStatus) DeepCopyInto(out *WorkspaceApplicationAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceApplicationAssociationStatus.
func (in *WorkspaceApplicationAssociationStatus) DeepCopy() *WorkspaceApplicationAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(WorkspaceApplicationAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceInitParameters) DeepCopyInto(out *WorkspaceInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceInitParameters.
func (in *WorkspaceInitParameters) DeepCopy() *WorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceList) DeepCopyInto(out *WorkspaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Workspace, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceList.
func (in *WorkspaceList) DeepCopy() *WorkspaceList {
	if in == nil {
		return nil
	}
	out := new(WorkspaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkspaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceObservation) DeepCopyInto(out *WorkspaceObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceObservation.
func (in *WorkspaceObservation) DeepCopy() *WorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceParameters) DeepCopyInto(out *WorkspaceParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceParameters.
func (in *WorkspaceParameters) DeepCopy() *WorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceSpec) DeepCopyInto(out *WorkspaceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceSpec.
func (in *WorkspaceSpec) DeepCopy() *WorkspaceSpec {
	if in == nil {
		return nil
	}
	out := new(WorkspaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceStatus) DeepCopyInto(out *WorkspaceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceStatus.
func (in *WorkspaceStatus) DeepCopy() *WorkspaceStatus {
	if in == nil {
		return nil
	}
	out := new(WorkspaceStatus)
	in.DeepCopyInto(out)
	return out
}
