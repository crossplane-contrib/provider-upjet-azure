// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
)

type AccountRaiBlocklistInitParameters struct {

	// A short description for the Cognitive Account Rai Blocklist.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`
}

type AccountRaiBlocklistObservation struct {

	// The ID of the Cognitive Services Account. Changing this forces a new Cognitive Account Rai Blocklist to be created.
	CognitiveAccountID *string `json:"cognitiveAccountId,omitempty" tf:"cognitive_account_id,omitempty"`

	// A short description for the Cognitive Account Rai Blocklist.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The ID of the Cognitive Account Rai Blocklist.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type AccountRaiBlocklistParameters struct {

	// The ID of the Cognitive Services Account. Changing this forces a new Cognitive Account Rai Blocklist to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/cluster/cognitiveservices/v1beta2.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/cluster/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	CognitiveAccountID *string `json:"cognitiveAccountId,omitempty" tf:"cognitive_account_id,omitempty"`

	// Reference to a Account in cognitiveservices to populate cognitiveAccountId.
	// +kubebuilder:validation:Optional
	CognitiveAccountIDRef *v1.Reference `json:"cognitiveAccountIdRef,omitempty" tf:"-"`

	// Selector for a Account in cognitiveservices to populate cognitiveAccountId.
	// +kubebuilder:validation:Optional
	CognitiveAccountIDSelector *v1.Selector `json:"cognitiveAccountIdSelector,omitempty" tf:"-"`

	// A short description for the Cognitive Account Rai Blocklist.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`
}

// AccountRaiBlocklistSpec defines the desired state of AccountRaiBlocklist
type AccountRaiBlocklistSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AccountRaiBlocklistParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AccountRaiBlocklistInitParameters `json:"initProvider,omitempty"`
}

// AccountRaiBlocklistStatus defines the observed state of AccountRaiBlocklist.
type AccountRaiBlocklistStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AccountRaiBlocklistObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AccountRaiBlocklist is the Schema for the AccountRaiBlocklists API. Manages a Cognitive Account Rai Blocklist.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type AccountRaiBlocklist struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AccountRaiBlocklistSpec   `json:"spec"`
	Status            AccountRaiBlocklistStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AccountRaiBlocklistList contains a list of AccountRaiBlocklists
type AccountRaiBlocklistList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AccountRaiBlocklist `json:"items"`
}

// Repository type metadata.
var (
	AccountRaiBlocklist_Kind             = "AccountRaiBlocklist"
	AccountRaiBlocklist_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AccountRaiBlocklist_Kind}.String()
	AccountRaiBlocklist_KindAPIVersion   = AccountRaiBlocklist_Kind + "." + CRDGroupVersion.String()
	AccountRaiBlocklist_GroupVersionKind = CRDGroupVersion.WithKind(AccountRaiBlocklist_Kind)
)

func init() {
	SchemeBuilder.Register(&AccountRaiBlocklist{}, &AccountRaiBlocklistList{})
}
