// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
)

type ManagerRoutingConfigurationInitParameters struct {

	// The description of the Network Manager.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`
}

type ManagerRoutingConfigurationObservation struct {

	// The description of the Network Manager.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The ID of the Network Manager Routing Configuration.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID of the Network Manager. Changing this forces a new Network Manager Routing Configuration to be created.
	NetworkManagerID *string `json:"networkManagerId,omitempty" tf:"network_manager_id,omitempty"`
}

type ManagerRoutingConfigurationParameters struct {

	// The description of the Network Manager.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The ID of the Network Manager. Changing this forces a new Network Manager Routing Configuration to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/cluster/network/v1beta2.Manager
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/cluster/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	NetworkManagerID *string `json:"networkManagerId,omitempty" tf:"network_manager_id,omitempty"`

	// Reference to a Manager in network to populate networkManagerId.
	// +kubebuilder:validation:Optional
	NetworkManagerIDRef *v1.Reference `json:"networkManagerIdRef,omitempty" tf:"-"`

	// Selector for a Manager in network to populate networkManagerId.
	// +kubebuilder:validation:Optional
	NetworkManagerIDSelector *v1.Selector `json:"networkManagerIdSelector,omitempty" tf:"-"`
}

// ManagerRoutingConfigurationSpec defines the desired state of ManagerRoutingConfiguration
type ManagerRoutingConfigurationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ManagerRoutingConfigurationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ManagerRoutingConfigurationInitParameters `json:"initProvider,omitempty"`
}

// ManagerRoutingConfigurationStatus defines the observed state of ManagerRoutingConfiguration.
type ManagerRoutingConfigurationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ManagerRoutingConfigurationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ManagerRoutingConfiguration is the Schema for the ManagerRoutingConfigurations API. Manages a Network Manager Routing Configuration.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type ManagerRoutingConfiguration struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ManagerRoutingConfigurationSpec   `json:"spec"`
	Status            ManagerRoutingConfigurationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ManagerRoutingConfigurationList contains a list of ManagerRoutingConfigurations
type ManagerRoutingConfigurationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ManagerRoutingConfiguration `json:"items"`
}

// Repository type metadata.
var (
	ManagerRoutingConfiguration_Kind             = "ManagerRoutingConfiguration"
	ManagerRoutingConfiguration_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ManagerRoutingConfiguration_Kind}.String()
	ManagerRoutingConfiguration_KindAPIVersion   = ManagerRoutingConfiguration_Kind + "." + CRDGroupVersion.String()
	ManagerRoutingConfiguration_GroupVersionKind = CRDGroupVersion.WithKind(ManagerRoutingConfiguration_Kind)
)

func init() {
	SchemeBuilder.Register(&ManagerRoutingConfiguration{}, &ManagerRoutingConfigurationList{})
}
