//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSourceEventHub) DeepCopyInto(out *EventSourceEventHub) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSourceEventHub.
func (in *EventSourceEventHub) DeepCopy() *EventSourceEventHub {
	if in == nil {
		return nil
	}
	out := new(EventSourceEventHub)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EventSourceEventHub) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSourceEventHubInitParameters) DeepCopyInto(out *EventSourceEventHubInitParameters) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimestampPropertyName != nil {
		in, out := &in.TimestampPropertyName, &out.TimestampPropertyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSourceEventHubInitParameters.
func (in *EventSourceEventHubInitParameters) DeepCopy() *EventSourceEventHubInitParameters {
	if in == nil {
		return nil
	}
	out := new(EventSourceEventHubInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSourceEventHubList) DeepCopyInto(out *EventSourceEventHubList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EventSourceEventHub, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSourceEventHubList.
func (in *EventSourceEventHubList) DeepCopy() *EventSourceEventHubList {
	if in == nil {
		return nil
	}
	out := new(EventSourceEventHubList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EventSourceEventHubList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSourceEventHubObservation) DeepCopyInto(out *EventSourceEventHubObservation) {
	*out = *in
	if in.ConsumerGroupName != nil {
		in, out := &in.ConsumerGroupName, &out.ConsumerGroupName
		*out = new(string)
		**out = **in
	}
	if in.EnvironmentID != nil {
		in, out := &in.EnvironmentID, &out.EnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.EventHubName != nil {
		in, out := &in.EventHubName, &out.EventHubName
		*out = new(string)
		**out = **in
	}
	if in.EventSourceResourceID != nil {
		in, out := &in.EventSourceResourceID, &out.EventSourceResourceID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NamespaceName != nil {
		in, out := &in.NamespaceName, &out.NamespaceName
		*out = new(string)
		**out = **in
	}
	if in.SharedAccessKeyName != nil {
		in, out := &in.SharedAccessKeyName, &out.SharedAccessKeyName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimestampPropertyName != nil {
		in, out := &in.TimestampPropertyName, &out.TimestampPropertyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSourceEventHubObservation.
func (in *EventSourceEventHubObservation) DeepCopy() *EventSourceEventHubObservation {
	if in == nil {
		return nil
	}
	out := new(EventSourceEventHubObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSourceEventHubParameters) DeepCopyInto(out *EventSourceEventHubParameters) {
	*out = *in
	if in.ConsumerGroupName != nil {
		in, out := &in.ConsumerGroupName, &out.ConsumerGroupName
		*out = new(string)
		**out = **in
	}
	if in.ConsumerGroupNameRef != nil {
		in, out := &in.ConsumerGroupNameRef, &out.ConsumerGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConsumerGroupNameSelector != nil {
		in, out := &in.ConsumerGroupNameSelector, &out.ConsumerGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EnvironmentID != nil {
		in, out := &in.EnvironmentID, &out.EnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.EnvironmentIDRef != nil {
		in, out := &in.EnvironmentIDRef, &out.EnvironmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EnvironmentIDSelector != nil {
		in, out := &in.EnvironmentIDSelector, &out.EnvironmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EventHubName != nil {
		in, out := &in.EventHubName, &out.EventHubName
		*out = new(string)
		**out = **in
	}
	if in.EventHubNameRef != nil {
		in, out := &in.EventHubNameRef, &out.EventHubNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EventHubNameSelector != nil {
		in, out := &in.EventHubNameSelector, &out.EventHubNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EventSourceResourceID != nil {
		in, out := &in.EventSourceResourceID, &out.EventSourceResourceID
		*out = new(string)
		**out = **in
	}
	if in.EventSourceResourceIDRef != nil {
		in, out := &in.EventSourceResourceIDRef, &out.EventSourceResourceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EventSourceResourceIDSelector != nil {
		in, out := &in.EventSourceResourceIDSelector, &out.EventSourceResourceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NamespaceName != nil {
		in, out := &in.NamespaceName, &out.NamespaceName
		*out = new(string)
		**out = **in
	}
	if in.NamespaceNameRef != nil {
		in, out := &in.NamespaceNameRef, &out.NamespaceNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NamespaceNameSelector != nil {
		in, out := &in.NamespaceNameSelector, &out.NamespaceNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SharedAccessKeyName != nil {
		in, out := &in.SharedAccessKeyName, &out.SharedAccessKeyName
		*out = new(string)
		**out = **in
	}
	if in.SharedAccessKeyNameRef != nil {
		in, out := &in.SharedAccessKeyNameRef, &out.SharedAccessKeyNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SharedAccessKeyNameSelector != nil {
		in, out := &in.SharedAccessKeyNameSelector, &out.SharedAccessKeyNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	out.SharedAccessKeySecretRef = in.SharedAccessKeySecretRef
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimestampPropertyName != nil {
		in, out := &in.TimestampPropertyName, &out.TimestampPropertyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSourceEventHubParameters.
func (in *EventSourceEventHubParameters) DeepCopy() *EventSourceEventHubParameters {
	if in == nil {
		return nil
	}
	out := new(EventSourceEventHubParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSourceEventHubSpec) DeepCopyInto(out *EventSourceEventHubSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSourceEventHubSpec.
func (in *EventSourceEventHubSpec) DeepCopy() *EventSourceEventHubSpec {
	if in == nil {
		return nil
	}
	out := new(EventSourceEventHubSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSourceEventHubStatus) DeepCopyInto(out *EventSourceEventHubStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSourceEventHubStatus.
func (in *EventSourceEventHubStatus) DeepCopy() *EventSourceEventHubStatus {
	if in == nil {
		return nil
	}
	out := new(EventSourceEventHubStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSourceIOTHub) DeepCopyInto(out *EventSourceIOTHub) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSourceIOTHub.
func (in *EventSourceIOTHub) DeepCopy() *EventSourceIOTHub {
	if in == nil {
		return nil
	}
	out := new(EventSourceIOTHub)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EventSourceIOTHub) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSourceIOTHubInitParameters) DeepCopyInto(out *EventSourceIOTHubInitParameters) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.SharedAccessKeyName != nil {
		in, out := &in.SharedAccessKeyName, &out.SharedAccessKeyName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimestampPropertyName != nil {
		in, out := &in.TimestampPropertyName, &out.TimestampPropertyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSourceIOTHubInitParameters.
func (in *EventSourceIOTHubInitParameters) DeepCopy() *EventSourceIOTHubInitParameters {
	if in == nil {
		return nil
	}
	out := new(EventSourceIOTHubInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSourceIOTHubList) DeepCopyInto(out *EventSourceIOTHubList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EventSourceIOTHub, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSourceIOTHubList.
func (in *EventSourceIOTHubList) DeepCopy() *EventSourceIOTHubList {
	if in == nil {
		return nil
	}
	out := new(EventSourceIOTHubList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EventSourceIOTHubList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSourceIOTHubObservation) DeepCopyInto(out *EventSourceIOTHubObservation) {
	*out = *in
	if in.ConsumerGroupName != nil {
		in, out := &in.ConsumerGroupName, &out.ConsumerGroupName
		*out = new(string)
		**out = **in
	}
	if in.EnvironmentID != nil {
		in, out := &in.EnvironmentID, &out.EnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.EventSourceResourceID != nil {
		in, out := &in.EventSourceResourceID, &out.EventSourceResourceID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IOTHubName != nil {
		in, out := &in.IOTHubName, &out.IOTHubName
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.SharedAccessKeyName != nil {
		in, out := &in.SharedAccessKeyName, &out.SharedAccessKeyName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimestampPropertyName != nil {
		in, out := &in.TimestampPropertyName, &out.TimestampPropertyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSourceIOTHubObservation.
func (in *EventSourceIOTHubObservation) DeepCopy() *EventSourceIOTHubObservation {
	if in == nil {
		return nil
	}
	out := new(EventSourceIOTHubObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSourceIOTHubParameters) DeepCopyInto(out *EventSourceIOTHubParameters) {
	*out = *in
	if in.ConsumerGroupName != nil {
		in, out := &in.ConsumerGroupName, &out.ConsumerGroupName
		*out = new(string)
		**out = **in
	}
	if in.ConsumerGroupNameRef != nil {
		in, out := &in.ConsumerGroupNameRef, &out.ConsumerGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConsumerGroupNameSelector != nil {
		in, out := &in.ConsumerGroupNameSelector, &out.ConsumerGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EnvironmentID != nil {
		in, out := &in.EnvironmentID, &out.EnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.EnvironmentIDRef != nil {
		in, out := &in.EnvironmentIDRef, &out.EnvironmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EnvironmentIDSelector != nil {
		in, out := &in.EnvironmentIDSelector, &out.EnvironmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EventSourceResourceID != nil {
		in, out := &in.EventSourceResourceID, &out.EventSourceResourceID
		*out = new(string)
		**out = **in
	}
	if in.EventSourceResourceIDRef != nil {
		in, out := &in.EventSourceResourceIDRef, &out.EventSourceResourceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EventSourceResourceIDSelector != nil {
		in, out := &in.EventSourceResourceIDSelector, &out.EventSourceResourceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IOTHubName != nil {
		in, out := &in.IOTHubName, &out.IOTHubName
		*out = new(string)
		**out = **in
	}
	if in.IOTHubNameRef != nil {
		in, out := &in.IOTHubNameRef, &out.IOTHubNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IOTHubNameSelector != nil {
		in, out := &in.IOTHubNameSelector, &out.IOTHubNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.SharedAccessKeyName != nil {
		in, out := &in.SharedAccessKeyName, &out.SharedAccessKeyName
		*out = new(string)
		**out = **in
	}
	out.SharedAccessKeySecretRef = in.SharedAccessKeySecretRef
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimestampPropertyName != nil {
		in, out := &in.TimestampPropertyName, &out.TimestampPropertyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSourceIOTHubParameters.
func (in *EventSourceIOTHubParameters) DeepCopy() *EventSourceIOTHubParameters {
	if in == nil {
		return nil
	}
	out := new(EventSourceIOTHubParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSourceIOTHubSpec) DeepCopyInto(out *EventSourceIOTHubSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSourceIOTHubSpec.
func (in *EventSourceIOTHubSpec) DeepCopy() *EventSourceIOTHubSpec {
	if in == nil {
		return nil
	}
	out := new(EventSourceIOTHubSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSourceIOTHubStatus) DeepCopyInto(out *EventSourceIOTHubStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSourceIOTHubStatus.
func (in *EventSourceIOTHubStatus) DeepCopy() *EventSourceIOTHubStatus {
	if in == nil {
		return nil
	}
	out := new(EventSourceIOTHubStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Gen2Environment) DeepCopyInto(out *Gen2Environment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Gen2Environment.
func (in *Gen2Environment) DeepCopy() *Gen2Environment {
	if in == nil {
		return nil
	}
	out := new(Gen2Environment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Gen2Environment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Gen2EnvironmentInitParameters) DeepCopyInto(out *Gen2EnvironmentInitParameters) {
	*out = *in
	if in.IDProperties != nil {
		in, out := &in.IDProperties, &out.IDProperties
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = make([]StorageInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WarmStoreDataRetentionTime != nil {
		in, out := &in.WarmStoreDataRetentionTime, &out.WarmStoreDataRetentionTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Gen2EnvironmentInitParameters.
func (in *Gen2EnvironmentInitParameters) DeepCopy() *Gen2EnvironmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(Gen2EnvironmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Gen2EnvironmentList) DeepCopyInto(out *Gen2EnvironmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Gen2Environment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Gen2EnvironmentList.
func (in *Gen2EnvironmentList) DeepCopy() *Gen2EnvironmentList {
	if in == nil {
		return nil
	}
	out := new(Gen2EnvironmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Gen2EnvironmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Gen2EnvironmentObservation) DeepCopyInto(out *Gen2EnvironmentObservation) {
	*out = *in
	if in.DataAccessFqdn != nil {
		in, out := &in.DataAccessFqdn, &out.DataAccessFqdn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IDProperties != nil {
		in, out := &in.IDProperties, &out.IDProperties
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = make([]StorageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WarmStoreDataRetentionTime != nil {
		in, out := &in.WarmStoreDataRetentionTime, &out.WarmStoreDataRetentionTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Gen2EnvironmentObservation.
func (in *Gen2EnvironmentObservation) DeepCopy() *Gen2EnvironmentObservation {
	if in == nil {
		return nil
	}
	out := new(Gen2EnvironmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Gen2EnvironmentParameters) DeepCopyInto(out *Gen2EnvironmentParameters) {
	*out = *in
	if in.IDProperties != nil {
		in, out := &in.IDProperties, &out.IDProperties
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = make([]StorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WarmStoreDataRetentionTime != nil {
		in, out := &in.WarmStoreDataRetentionTime, &out.WarmStoreDataRetentionTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Gen2EnvironmentParameters.
func (in *Gen2EnvironmentParameters) DeepCopy() *Gen2EnvironmentParameters {
	if in == nil {
		return nil
	}
	out := new(Gen2EnvironmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Gen2EnvironmentSpec) DeepCopyInto(out *Gen2EnvironmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Gen2EnvironmentSpec.
func (in *Gen2EnvironmentSpec) DeepCopy() *Gen2EnvironmentSpec {
	if in == nil {
		return nil
	}
	out := new(Gen2EnvironmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Gen2EnvironmentStatus) DeepCopyInto(out *Gen2EnvironmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Gen2EnvironmentStatus.
func (in *Gen2EnvironmentStatus) DeepCopy() *Gen2EnvironmentStatus {
	if in == nil {
		return nil
	}
	out := new(Gen2EnvironmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyPropertyInitParameters) DeepCopyInto(out *KeyPropertyInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyPropertyInitParameters.
func (in *KeyPropertyInitParameters) DeepCopy() *KeyPropertyInitParameters {
	if in == nil {
		return nil
	}
	out := new(KeyPropertyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyPropertyObservation) DeepCopyInto(out *KeyPropertyObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyPropertyObservation.
func (in *KeyPropertyObservation) DeepCopy() *KeyPropertyObservation {
	if in == nil {
		return nil
	}
	out := new(KeyPropertyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyPropertyParameters) DeepCopyInto(out *KeyPropertyParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyPropertyParameters.
func (in *KeyPropertyParameters) DeepCopy() *KeyPropertyParameters {
	if in == nil {
		return nil
	}
	out := new(KeyPropertyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReferenceDataSet) DeepCopyInto(out *ReferenceDataSet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReferenceDataSet.
func (in *ReferenceDataSet) DeepCopy() *ReferenceDataSet {
	if in == nil {
		return nil
	}
	out := new(ReferenceDataSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ReferenceDataSet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReferenceDataSetInitParameters) DeepCopyInto(out *ReferenceDataSetInitParameters) {
	*out = *in
	if in.DataStringComparisonBehavior != nil {
		in, out := &in.DataStringComparisonBehavior, &out.DataStringComparisonBehavior
		*out = new(string)
		**out = **in
	}
	if in.KeyProperty != nil {
		in, out := &in.KeyProperty, &out.KeyProperty
		*out = make([]KeyPropertyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReferenceDataSetInitParameters.
func (in *ReferenceDataSetInitParameters) DeepCopy() *ReferenceDataSetInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReferenceDataSetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReferenceDataSetList) DeepCopyInto(out *ReferenceDataSetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ReferenceDataSet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReferenceDataSetList.
func (in *ReferenceDataSetList) DeepCopy() *ReferenceDataSetList {
	if in == nil {
		return nil
	}
	out := new(ReferenceDataSetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ReferenceDataSetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReferenceDataSetObservation) DeepCopyInto(out *ReferenceDataSetObservation) {
	*out = *in
	if in.DataStringComparisonBehavior != nil {
		in, out := &in.DataStringComparisonBehavior, &out.DataStringComparisonBehavior
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KeyProperty != nil {
		in, out := &in.KeyProperty, &out.KeyProperty
		*out = make([]KeyPropertyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeSeriesInsightsEnvironmentID != nil {
		in, out := &in.TimeSeriesInsightsEnvironmentID, &out.TimeSeriesInsightsEnvironmentID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReferenceDataSetObservation.
func (in *ReferenceDataSetObservation) DeepCopy() *ReferenceDataSetObservation {
	if in == nil {
		return nil
	}
	out := new(ReferenceDataSetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReferenceDataSetParameters) DeepCopyInto(out *ReferenceDataSetParameters) {
	*out = *in
	if in.DataStringComparisonBehavior != nil {
		in, out := &in.DataStringComparisonBehavior, &out.DataStringComparisonBehavior
		*out = new(string)
		**out = **in
	}
	if in.KeyProperty != nil {
		in, out := &in.KeyProperty, &out.KeyProperty
		*out = make([]KeyPropertyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeSeriesInsightsEnvironmentID != nil {
		in, out := &in.TimeSeriesInsightsEnvironmentID, &out.TimeSeriesInsightsEnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.TimeSeriesInsightsEnvironmentIDRef != nil {
		in, out := &in.TimeSeriesInsightsEnvironmentIDRef, &out.TimeSeriesInsightsEnvironmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TimeSeriesInsightsEnvironmentIDSelector != nil {
		in, out := &in.TimeSeriesInsightsEnvironmentIDSelector, &out.TimeSeriesInsightsEnvironmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReferenceDataSetParameters.
func (in *ReferenceDataSetParameters) DeepCopy() *ReferenceDataSetParameters {
	if in == nil {
		return nil
	}
	out := new(ReferenceDataSetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReferenceDataSetSpec) DeepCopyInto(out *ReferenceDataSetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReferenceDataSetSpec.
func (in *ReferenceDataSetSpec) DeepCopy() *ReferenceDataSetSpec {
	if in == nil {
		return nil
	}
	out := new(ReferenceDataSetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReferenceDataSetStatus) DeepCopyInto(out *ReferenceDataSetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReferenceDataSetStatus.
func (in *ReferenceDataSetStatus) DeepCopy() *ReferenceDataSetStatus {
	if in == nil {
		return nil
	}
	out := new(ReferenceDataSetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardEnvironment) DeepCopyInto(out *StandardEnvironment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardEnvironment.
func (in *StandardEnvironment) DeepCopy() *StandardEnvironment {
	if in == nil {
		return nil
	}
	out := new(StandardEnvironment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StandardEnvironment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardEnvironmentInitParameters) DeepCopyInto(out *StandardEnvironmentInitParameters) {
	*out = *in
	if in.DataRetentionTime != nil {
		in, out := &in.DataRetentionTime, &out.DataRetentionTime
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PartitionKey != nil {
		in, out := &in.PartitionKey, &out.PartitionKey
		*out = new(string)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.StorageLimitExceededBehavior != nil {
		in, out := &in.StorageLimitExceededBehavior, &out.StorageLimitExceededBehavior
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardEnvironmentInitParameters.
func (in *StandardEnvironmentInitParameters) DeepCopy() *StandardEnvironmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(StandardEnvironmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardEnvironmentList) DeepCopyInto(out *StandardEnvironmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StandardEnvironment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardEnvironmentList.
func (in *StandardEnvironmentList) DeepCopy() *StandardEnvironmentList {
	if in == nil {
		return nil
	}
	out := new(StandardEnvironmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StandardEnvironmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardEnvironmentObservation) DeepCopyInto(out *StandardEnvironmentObservation) {
	*out = *in
	if in.DataRetentionTime != nil {
		in, out := &in.DataRetentionTime, &out.DataRetentionTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PartitionKey != nil {
		in, out := &in.PartitionKey, &out.PartitionKey
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.StorageLimitExceededBehavior != nil {
		in, out := &in.StorageLimitExceededBehavior, &out.StorageLimitExceededBehavior
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardEnvironmentObservation.
func (in *StandardEnvironmentObservation) DeepCopy() *StandardEnvironmentObservation {
	if in == nil {
		return nil
	}
	out := new(StandardEnvironmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardEnvironmentParameters) DeepCopyInto(out *StandardEnvironmentParameters) {
	*out = *in
	if in.DataRetentionTime != nil {
		in, out := &in.DataRetentionTime, &out.DataRetentionTime
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PartitionKey != nil {
		in, out := &in.PartitionKey, &out.PartitionKey
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.StorageLimitExceededBehavior != nil {
		in, out := &in.StorageLimitExceededBehavior, &out.StorageLimitExceededBehavior
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardEnvironmentParameters.
func (in *StandardEnvironmentParameters) DeepCopy() *StandardEnvironmentParameters {
	if in == nil {
		return nil
	}
	out := new(StandardEnvironmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardEnvironmentSpec) DeepCopyInto(out *StandardEnvironmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardEnvironmentSpec.
func (in *StandardEnvironmentSpec) DeepCopy() *StandardEnvironmentSpec {
	if in == nil {
		return nil
	}
	out := new(StandardEnvironmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardEnvironmentStatus) DeepCopyInto(out *StandardEnvironmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardEnvironmentStatus.
func (in *StandardEnvironmentStatus) DeepCopy() *StandardEnvironmentStatus {
	if in == nil {
		return nil
	}
	out := new(StandardEnvironmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageInitParameters) DeepCopyInto(out *StorageInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageInitParameters.
func (in *StorageInitParameters) DeepCopy() *StorageInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageObservation) DeepCopyInto(out *StorageObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageObservation.
func (in *StorageObservation) DeepCopy() *StorageObservation {
	if in == nil {
		return nil
	}
	out := new(StorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageParameters) DeepCopyInto(out *StorageParameters) {
	*out = *in
	out.KeySecretRef = in.KeySecretRef
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageParameters.
func (in *StorageParameters) DeepCopy() *StorageParameters {
	if in == nil {
		return nil
	}
	out := new(StorageParameters)
	in.DeepCopyInto(out)
	return out
}
