---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: clusters.servicefabric.azure.upbound.io
spec:
  group: servicefabric.azure.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the Clusters API. Manages a Service
          Fabric Cluster.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  addOnFeatures:
                    description: A List of one or more features which should be enabled,
                      such as DnsService.
                    items:
                      type: string
                    type: array
                  azureActiveDirectory:
                    description: An azure_active_directory block as defined below.
                    items:
                      properties:
                        clientApplicationId:
                          description: The Azure Active Directory Client ID which
                            should be used for the Client Application.
                          type: string
                        clusterApplicationId:
                          description: The Azure Active Directory Cluster Application
                            ID.
                          type: string
                        tenantId:
                          description: The Azure Active Directory Tenant ID.
                          type: string
                      required:
                      - clientApplicationId
                      - clusterApplicationId
                      - tenantId
                      type: object
                    type: array
                  certificate:
                    description: A certificate block as defined below. Conflicts with
                      certificate_common_names.
                    items:
                      properties:
                        thumbprint:
                          description: The Thumbprint of the Certificate.
                          type: string
                        thumbprintSecondary:
                          description: The Secondary Thumbprint of the Certificate.
                          type: string
                        x509StoreName:
                          description: The X509 Store where the Certificate Exists,
                            such as My.
                          type: string
                      required:
                      - thumbprint
                      - x509StoreName
                      type: object
                    type: array
                  certificateCommonNames:
                    description: A certificate_common_names block as defined below.
                      Conflicts with certificate.
                    items:
                      properties:
                        commonNames:
                          description: A common_names block as defined below.
                          items:
                            properties:
                              certificateCommonName:
                                description: The common or subject name of the certificate.
                                type: string
                              certificateIssuerThumbprint:
                                description: The Issuer Thumbprint of the Certificate.
                                type: string
                            required:
                            - certificateCommonName
                            type: object
                          type: array
                        x509StoreName:
                          description: The X509 Store where the Certificate Exists,
                            such as My.
                          type: string
                      required:
                      - commonNames
                      - x509StoreName
                      type: object
                    type: array
                  clientCertificateCommonName:
                    description: A client_certificate_common_name block as defined
                      below.
                    items:
                      properties:
                        commonName:
                          description: The common or subject name of the certificate.
                          type: string
                        isAdmin:
                          description: Does the Client Certificate have Admin Access
                            to the cluster? Non-admin clients can only perform read
                            only operations on the cluster.
                          type: boolean
                        issuerThumbprint:
                          description: The Issuer Thumbprint of the Certificate.
                          type: string
                      required:
                      - commonName
                      - isAdmin
                      type: object
                    type: array
                  clientCertificateThumbprint:
                    description: One or more client_certificate_thumbprint blocks
                      as defined below.
                    items:
                      properties:
                        isAdmin:
                          description: Does the Client Certificate have Admin Access
                            to the cluster? Non-admin clients can only perform read
                            only operations on the cluster.
                          type: boolean
                        thumbprint:
                          description: The Thumbprint associated with the Client Certificate.
                          type: string
                      required:
                      - isAdmin
                      - thumbprint
                      type: object
                    type: array
                  clusterCodeVersion:
                    description: Required if Upgrade Mode set to Manual, Specifies
                      the Version of the Cluster Code of the cluster.
                    type: string
                  diagnosticsConfig:
                    description: A diagnostics_config block as defined below.
                    items:
                      properties:
                        blobEndpoint:
                          description: The Blob Endpoint of the Storage Account.
                          type: string
                        protectedAccountKeyName:
                          description: The protected diagnostics storage key name,
                            such as StorageAccountKey1.
                          type: string
                        queueEndpoint:
                          description: The Queue Endpoint of the Storage Account.
                          type: string
                        storageAccountName:
                          description: The name of the Storage Account where the Diagnostics
                            should be sent to.
                          type: string
                        tableEndpoint:
                          description: The Table Endpoint of the Storage Account.
                          type: string
                      required:
                      - blobEndpoint
                      - protectedAccountKeyName
                      - queueEndpoint
                      - storageAccountName
                      - tableEndpoint
                      type: object
                    type: array
                  fabricSettings:
                    description: One or more fabric_settings blocks as defined below.
                    items:
                      properties:
                        name:
                          description: The name of the Fabric Setting, such as Security
                            or Federation.
                          type: string
                        parameters:
                          additionalProperties:
                            type: string
                          description: A map containing settings for the specified
                            Fabric Setting.
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  location:
                    description: Specifies the Azure Region where the Service Fabric
                      Cluster should exist. Changing this forces a new resource to
                      be created.
                    type: string
                  managementEndpoint:
                    description: Specifies the Management Endpoint of the cluster
                      such as http://example.com. Changing this forces a new resource
                      to be created.
                    type: string
                  nodeType:
                    description: One or more node_type blocks as defined below.
                    items:
                      properties:
                        applicationPorts:
                          description: A application_ports block as defined below.
                          items:
                            properties:
                              endPort:
                                description: The end of the Ephemeral Port Range on
                                  this Node Type.
                                type: number
                              startPort:
                                description: The start of the Ephemeral Port Range
                                  on this Node Type.
                                type: number
                            required:
                            - endPort
                            - startPort
                            type: object
                          type: array
                        capacities:
                          additionalProperties:
                            type: string
                          description: The capacity tags applied to the nodes in the
                            node type, the cluster resource manager uses these tags
                            to understand how much resource a node has.
                          type: object
                        clientEndpointPort:
                          description: The Port used for the Client Endpoint for this
                            Node Type.
                          type: number
                        durabilityLevel:
                          description: The Durability Level for this Node Type. Possible
                            values include Bronze, Gold and Silver. Defaults to Bronze.
                          type: string
                        ephemeralPorts:
                          description: A ephemeral_ports block as defined below.
                          items:
                            properties:
                              endPort:
                                description: The end of the Ephemeral Port Range on
                                  this Node Type.
                                type: number
                              startPort:
                                description: The start of the Ephemeral Port Range
                                  on this Node Type.
                                type: number
                            required:
                            - endPort
                            - startPort
                            type: object
                          type: array
                        httpEndpointPort:
                          description: The Port used for the HTTP Endpoint for this
                            Node Type.
                          type: number
                        instanceCount:
                          description: The number of nodes for this Node Type.
                          type: number
                        isPrimary:
                          description: Is this the Primary Node Type?
                          type: boolean
                        isStateless:
                          description: Should this node type run only stateless services?
                          type: boolean
                        multipleAvailabilityZones:
                          description: Does this node type span availability zones?
                          type: boolean
                        name:
                          description: The name of the Node Type.
                          type: string
                        placementProperties:
                          additionalProperties:
                            type: string
                          description: The placement tags applied to nodes in the
                            node type, which can be used to indicate where certain
                            services (workload) should run.
                          type: object
                        reverseProxyEndpointPort:
                          description: The Port used for the Reverse Proxy Endpoint
                            for this Node Type. Changing this will upgrade the cluster.
                          type: number
                      required:
                      - clientEndpointPort
                      - httpEndpointPort
                      - instanceCount
                      - isPrimary
                      - name
                      type: object
                    type: array
                  reliabilityLevel:
                    description: Specifies the Reliability Level of the Cluster. Possible
                      values include None, Bronze, Silver, Gold and Platinum.
                    type: string
                  resourceGroupName:
                    description: The name of the Resource Group in which the Service
                      Fabric Cluster exists. Changing this forces a new resource to
                      be created.
                    type: string
                  resourceGroupNameRef:
                    description: Reference to a ResourceGroup in azure to populate
                      resourceGroupName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  resourceGroupNameSelector:
                    description: Selector for a ResourceGroup in azure to populate
                      resourceGroupName.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  reverseProxyCertificate:
                    description: A reverse_proxy_certificate block as defined below.
                      Conflicts with reverse_proxy_certificate_common_names.
                    items:
                      properties:
                        thumbprint:
                          description: The Thumbprint of the Certificate.
                          type: string
                        thumbprintSecondary:
                          description: The Secondary Thumbprint of the Certificate.
                          type: string
                        x509StoreName:
                          description: The X509 Store where the Certificate Exists,
                            such as My.
                          type: string
                      required:
                      - thumbprint
                      - x509StoreName
                      type: object
                    type: array
                  reverseProxyCertificateCommonNames:
                    description: A reverse_proxy_certificate_common_names block as
                      defined below. Conflicts with reverse_proxy_certificate.
                    items:
                      properties:
                        commonNames:
                          description: A common_names block as defined below.
                          items:
                            properties:
                              certificateCommonName:
                                description: The common or subject name of the certificate.
                                type: string
                              certificateIssuerThumbprint:
                                description: The Issuer Thumbprint of the Certificate.
                                type: string
                            required:
                            - certificateCommonName
                            type: object
                          type: array
                        x509StoreName:
                          description: The X509 Store where the Certificate Exists,
                            such as My.
                          type: string
                      required:
                      - commonNames
                      - x509StoreName
                      type: object
                    type: array
                  serviceFabricZonalUpgradeMode:
                    description: Specifies the logical grouping of VMs in upgrade
                      domains. Possible values are Hierarchical or Parallel.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: A mapping of tags to assign to the resource.
                    type: object
                  upgradeMode:
                    description: Specifies the Upgrade Mode of the cluster. Possible
                      values are Automatic or Manual.
                    type: string
                  upgradePolicy:
                    description: A upgrade_policy block as defined below.
                    items:
                      properties:
                        deltaHealthPolicy:
                          description: A delta_health_policy block as defined below
                          items:
                            properties:
                              maxDeltaUnhealthyApplicationsPercent:
                                description: Specifies the maximum tolerated percentage
                                  of delta unhealthy applications that can have aggregated
                                  health states of error. If the current unhealthy
                                  applications do not respect the percentage relative
                                  to the state at the beginning of the upgrade, the
                                  cluster is unhealthy. Defaults to 0.
                                type: number
                              maxDeltaUnhealthyNodesPercent:
                                description: Specifies the maximum tolerated percentage
                                  of delta unhealthy nodes that can have aggregated
                                  health states of error. If the current unhealthy
                                  nodes do not respect the percentage relative to
                                  the state at the beginning of the upgrade, the cluster
                                  is unhealthy. Defaults to 0.
                                type: number
                              maxUpgradeDomainDeltaUnhealthyNodesPercent:
                                description: Specifies the maximum tolerated percentage
                                  of upgrade domain delta unhealthy nodes that can
                                  have aggregated health state of error. If there
                                  is any upgrade domain where the current unhealthy
                                  nodes do not respect the percentage relative to
                                  the state at the beginning of the upgrade, the cluster
                                  is unhealthy. Defaults to 0.
                                type: number
                            type: object
                          type: array
                        forceRestartEnabled:
                          description: Indicates whether to restart the Service Fabric
                            node even if only dynamic configurations have changed.
                          type: boolean
                        healthCheckRetryTimeout:
                          description: Specifies the duration, in "hh:mm:ss" string
                            format, after which Service Fabric retries the health
                            check if the previous health check fails. Defaults to
                            00:45:00.
                          type: string
                        healthCheckStableDuration:
                          description: Specifies the duration, in "hh:mm:ss" string
                            format, that Service Fabric waits in order to verify that
                            the cluster is stable before it continues to the next
                            upgrade domain or completes the upgrade. This wait duration
                            prevents undetected changes of health right after the
                            health check is performed. Defaults to 00:01:00.
                          type: string
                        healthCheckWaitDuration:
                          description: Specifies the duration, in "hh:mm:ss" string
                            format, that Service Fabric waits before it performs the
                            initial health check after it finishes the upgrade on
                            the upgrade domain. Defaults to 00:00:30.
                          type: string
                        healthPolicy:
                          description: A health_policy block as defined below
                          items:
                            properties:
                              maxUnhealthyApplicationsPercent:
                                description: Specifies the maximum tolerated percentage
                                  of applications that can have aggregated health
                                  state of error. If the upgrade exceeds this percentage,
                                  the cluster is unhealthy. Defaults to 0.
                                type: number
                              maxUnhealthyNodesPercent:
                                description: Specifies the maximum tolerated percentage
                                  of nodes that can have aggregated health states
                                  of error. If an upgrade exceeds this percentage,
                                  the cluster is unhealthy. Defaults to 0.
                                type: number
                            type: object
                          type: array
                        upgradeDomainTimeout:
                          description: Specifies the duration, in "hh:mm:ss" string
                            format, that Service Fabric takes to upgrade a single
                            upgrade domain. After this period, the upgrade fails.
                            Defaults to 02:00:00.
                          type: string
                        upgradeReplicaSetCheckTimeout:
                          description: Specifies the duration, in "hh:mm:ss" string
                            format, that Service Fabric waits for a replica set to
                            reconfigure into a safe state, if it is not already in
                            a safe state, before Service Fabric proceeds with the
                            upgrade. Defaults to 10675199.02:48:05.4775807.
                          type: string
                        upgradeTimeout:
                          description: Specifies the duration, in "hh:mm:ss" string
                            format, that Service Fabric takes for the entire upgrade.
                            After this period, the upgrade fails. Defaults to 12:00:00.
                          type: string
                      type: object
                    type: array
                  vmImage:
                    description: Specifies the Image expected for the Service Fabric
                      Cluster, such as Windows. Changing this forces a new resource
                      to be created.
                    type: string
                  vmssZonalUpgradeMode:
                    description: Specifies the upgrade mode for the virtual machine
                      scale set updates that happen in all availability zones at once.
                      Possible values are Hierarchical or Parallel.
                    type: string
                required:
                - location
                - managementEndpoint
                - nodeType
                - reliabilityLevel
                - upgradeMode
                - vmImage
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ClusterStatus defines the observed state of Cluster.
            properties:
              atProvider:
                properties:
                  clusterEndpoint:
                    description: The Cluster Endpoint for this Service Fabric Cluster.
                    type: string
                  id:
                    description: The ID of the Service Fabric Cluster.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
