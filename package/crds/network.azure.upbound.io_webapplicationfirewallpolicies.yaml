---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: webapplicationfirewallpolicies.network.azure.upbound.io
spec:
  group: network.azure.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: WebApplicationFirewallPolicy
    listKind: WebApplicationFirewallPolicyList
    plural: webapplicationfirewallpolicies
    singular: webapplicationfirewallpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: WebApplicationFirewallPolicy is the Schema for the WebApplicationFirewallPolicys
          API. Manages a Azure Web Application Firewall Policy instance.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WebApplicationFirewallPolicySpec defines the desired state
              of WebApplicationFirewallPolicy
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  customRules:
                    description: One or more custom_rules blocks as defined below.
                    items:
                      properties:
                        action:
                          description: Type of action. Possible values are Allow,
                            Block and Log.
                          type: string
                        matchConditions:
                          description: One or more match_conditions blocks as defined
                            below.
                          items:
                            properties:
                              matchValues:
                                description: A list of match values.
                                items:
                                  type: string
                                type: array
                              matchVariables:
                                description: One or more match_variables blocks as
                                  defined below.
                                items:
                                  properties:
                                    selector:
                                      description: Describes field of the matchVariable
                                        collection
                                      type: string
                                    variableName:
                                      description: The name of the Match Variable.
                                        Possible values are RemoteAddr, RequestMethod,
                                        QueryString, PostArgs, RequestUri, RequestHeaders,
                                        RequestBody and RequestCookies.
                                      type: string
                                  required:
                                  - variableName
                                  type: object
                                type: array
                              negationCondition:
                                description: Describes if this is negate condition
                                  or not
                                type: boolean
                              operator:
                                description: Describes operator to be matched. Possible
                                  values are IPMatch, GeoMatch, Equal, Contains, LessThan,
                                  GreaterThan, LessThanOrEqual, GreaterThanOrEqual,
                                  BeginsWith, EndsWith and Regex.
                                type: string
                              transforms:
                                description: A list of transformations to do before
                                  the match is attempted. Possible values are HtmlEntityDecode,
                                  Lowercase, RemoveNulls, Trim, UrlDecode and UrlEncode.
                                items:
                                  type: string
                                type: array
                            required:
                            - matchValues
                            - matchVariables
                            - operator
                            type: object
                          type: array
                        name:
                          description: Gets name of the resource that is unique within
                            a policy. This name can be used to access the resource.
                          type: string
                        priority:
                          description: Describes priority of the rule. Rules with
                            a lower value will be evaluated before rules with a higher
                            value.
                          type: number
                        ruleType:
                          description: Describes the type of rule. Possible values
                            are MatchRule and Invalid.
                          type: string
                      required:
                      - action
                      - matchConditions
                      - priority
                      - ruleType
                      type: object
                    type: array
                  location:
                    description: Resource location. Changing this forces a new resource
                      to be created.
                    type: string
                  managedRules:
                    description: A managed_rules blocks as defined below.
                    items:
                      properties:
                        exclusion:
                          description: One or more exclusion block defined below.
                          items:
                            properties:
                              excludedRuleSet:
                                description: One or more excluded_rule_set block defined
                                  below.
                                items:
                                  properties:
                                    ruleGroup:
                                      description: One or more rule_group block defined
                                        below.
                                      items:
                                        properties:
                                          excludedRules:
                                            description: One or more Rule IDs for
                                              exclusion.
                                            items:
                                              type: string
                                            type: array
                                          ruleGroupName:
                                            description: The name of the Rule Group.
                                              Possible values are BadBots, crs_20_protocol_violations,
                                              crs_21_protocol_anomalies, crs_23_request_limits,
                                              crs_30_http_policy, crs_35_bad_robots,
                                              crs_40_generic_attacks, crs_41_sql_injection_attacks,
                                              crs_41_xss_attacks, crs_42_tight_security,
                                              crs_45_trojans, General, GoodBots, Known-CVEs,
                                              REQUEST-911-METHOD-ENFORCEMENT, REQUEST-913-SCANNER-DETECTION,
                                              REQUEST-920-PROTOCOL-ENFORCEMENT, REQUEST-921-PROTOCOL-ATTACK,
                                              REQUEST-930-APPLICATION-ATTACK-LFI,
                                              REQUEST-931-APPLICATION-ATTACK-RFI,
                                              REQUEST-932-APPLICATION-ATTACK-RCE,
                                              REQUEST-933-APPLICATION-ATTACK-PHP,
                                              REQUEST-941-APPLICATION-ATTACK-XSS,
                                              REQUEST-942-APPLICATION-ATTACK-SQLI,
                                              REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION,
                                              REQUEST-944-APPLICATION-ATTACK-JAVA
                                              and UnknownBots.
                                            type: string
                                        required:
                                        - ruleGroupName
                                        type: object
                                      type: array
                                    type:
                                      description: 'The rule set type. Possible values:
                                        Microsoft_BotManagerRuleSet and OWASP.'
                                      type: string
                                    version:
                                      description: 'The rule set version. Possible
                                        values: 0.1, 1.0, 2.2.9, 3.0, 3.1 and 3.2.'
                                      type: string
                                  type: object
                                type: array
                              matchVariable:
                                description: 'The name of the Match Variable. Possible
                                  values: RequestArgKeys, RequestArgNames, RequestArgValues,
                                  RequestCookieKeys, RequestCookieNames, RequestCookieValues,
                                  RequestHeaderKeys, RequestHeaderNames, RequestHeaderValues.'
                                type: string
                              selector:
                                description: Describes field of the matchVariable
                                  collection
                                type: string
                              selectorMatchOperator:
                                description: 'Describes operator to be matched. Possible
                                  values: Contains, EndsWith, Equals, EqualsAny, StartsWith.'
                                type: string
                            required:
                            - matchVariable
                            - selector
                            - selectorMatchOperator
                            type: object
                          type: array
                        managedRuleSet:
                          description: One or more managed_rule_set block defined
                            below.
                          items:
                            properties:
                              ruleGroupOverride:
                                description: One or more rule_group_override block
                                  defined below.
                                items:
                                  properties:
                                    disabledRules:
                                      items:
                                        type: string
                                      type: array
                                    rule:
                                      description: One or more rule block defined
                                        below.
                                      items:
                                        properties:
                                          action:
                                            description: Describes the override action
                                              to be applied when rule matches. Possible
                                              values are Allow, AnomalyScoring, Block
                                              and Log.
                                            type: string
                                          enabled:
                                            description: Describes if the managed
                                              rule is in enabled state or disabled
                                              state.
                                            type: boolean
                                          id:
                                            description: Identifier for the managed
                                              rule.
                                            type: string
                                        required:
                                        - id
                                        type: object
                                      type: array
                                    ruleGroupName:
                                      description: The name of the Rule Group. Possible
                                        values are BadBots, crs_20_protocol_violations,
                                        crs_21_protocol_anomalies, crs_23_request_limits,
                                        crs_30_http_policy, crs_35_bad_robots, crs_40_generic_attacks,
                                        crs_41_sql_injection_attacks, crs_41_xss_attacks,
                                        crs_42_tight_security, crs_45_trojans, General,
                                        GoodBots, Known-CVEs, REQUEST-911-METHOD-ENFORCEMENT,
                                        REQUEST-913-SCANNER-DETECTION, REQUEST-920-PROTOCOL-ENFORCEMENT,
                                        REQUEST-921-PROTOCOL-ATTACK, REQUEST-930-APPLICATION-ATTACK-LFI,
                                        REQUEST-931-APPLICATION-ATTACK-RFI, REQUEST-932-APPLICATION-ATTACK-RCE,
                                        REQUEST-933-APPLICATION-ATTACK-PHP, REQUEST-941-APPLICATION-ATTACK-XSS,
                                        REQUEST-942-APPLICATION-ATTACK-SQLI, REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION,
                                        REQUEST-944-APPLICATION-ATTACK-JAVA and UnknownBots.
                                      type: string
                                  required:
                                  - ruleGroupName
                                  type: object
                                type: array
                              type:
                                description: 'The rule set type. Possible values:
                                  Microsoft_BotManagerRuleSet and OWASP.'
                                type: string
                              version:
                                description: 'The rule set version. Possible values:
                                  0.1, 1.0, 2.2.9, 3.0, 3.1 and 3.2.'
                                type: string
                            required:
                            - version
                            type: object
                          type: array
                      required:
                      - managedRuleSet
                      type: object
                    type: array
                  policySettings:
                    description: A policy_settings block as defined below.
                    items:
                      properties:
                        enabled:
                          description: Describes if the policy is in enabled state
                            or disabled state. Defaults to true.
                          type: boolean
                        fileUploadLimitInMb:
                          description: The File Upload Limit in MB. Accepted values
                            are in the range 1 to 4000. Defaults to 100.
                          type: number
                        maxRequestBodySizeInKb:
                          description: The Maximum Request Body Size in KB. Accepted
                            values are in the range 8 to 2000. Defaults to 128.
                          type: number
                        mode:
                          description: Describes if it is in detection mode or prevention
                            mode at the policy level. Valid values are Detection and
                            Prevention. Defaults to Prevention.
                          type: string
                        requestBodyCheck:
                          description: Is Request Body Inspection enabled? Defaults
                            to true.
                          type: boolean
                      type: object
                    type: array
                  resourceGroupName:
                    description: The name of the resource group. Changing this forces
                      a new resource to be created.
                    type: string
                  resourceGroupNameRef:
                    description: Reference to a ResourceGroup in azure to populate
                      resourceGroupName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  resourceGroupNameSelector:
                    description: Selector for a ResourceGroup in azure to populate
                      resourceGroupName.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    description: A mapping of tags to assign to the Web Application
                      Firewall Policy.
                    type: object
                required:
                - location
                - managedRules
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: WebApplicationFirewallPolicyStatus defines the observed state
              of WebApplicationFirewallPolicy.
            properties:
              atProvider:
                properties:
                  httpListenerIds:
                    description: A list of HTTP Listener IDs from an azurerm_application_gateway.
                    items:
                      type: string
                    type: array
                  id:
                    description: The ID of the Web Application Firewall Policy.
                    type: string
                  pathBasedRuleIds:
                    description: A list of URL Path Map Path Rule IDs from an azurerm_application_gateway.
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
