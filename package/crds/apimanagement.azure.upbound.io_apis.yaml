---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: apis.apimanagement.azure.upbound.io
spec:
  group: apimanagement.azure.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: API
    listKind: APIList
    plural: apis
    singular: api
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: API is the Schema for the APIs API. Manages an API within an
          API Management Service.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: APISpec defines the desired state of API
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  apiManagementName:
                    description: The Name of the API Management Service where this
                      API should be created. Changing this forces a new resource to
                      be created.
                    type: string
                  apiManagementNameRef:
                    description: Reference to a Management in apimanagement to populate
                      apiManagementName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  apiManagementNameSelector:
                    description: Selector for a Management in apimanagement to populate
                      apiManagementName.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  apiType:
                    description: Type of API. Possible values are graphql, http, soap,
                      and websocket. Defaults to http.
                    type: string
                  contact:
                    description: A contact block as documented below.
                    items:
                      properties:
                        email:
                          description: The email address of the contact person/organization.
                          type: string
                        name:
                          description: The name of the contact person/organization.
                          type: string
                        url:
                          description: Absolute URL of the contact information.
                          type: string
                      type: object
                    type: array
                  description:
                    description: A description of the API Management API, which may
                      include HTML formatting tags.
                    type: string
                  displayName:
                    description: The display name of the API.
                    type: string
                  import:
                    description: A import block as documented below.
                    items:
                      properties:
                        contentFormat:
                          description: 'The format of the content from which the API
                            Definition should be imported. Possible values are: openapi,
                            openapi+json, openapi+json-link, openapi-link, swagger-json,
                            swagger-link-json, wadl-link-json, wadl-xml, wsdl and
                            wsdl-link.'
                          type: string
                        contentValue:
                          description: The Content from which the API Definition should
                            be imported. When a content_format of *-link-* is specified
                            this must be a URL, otherwise this must be defined inline.
                          type: string
                        wsdlSelector:
                          description: A wsdl_selector block as defined below, which
                            allows you to limit the import of a WSDL to only a subset
                            of the document. This can only be specified when content_format
                            is wsdl or wsdl-link.
                          items:
                            properties:
                              endpointName:
                                description: The name of endpoint (port) to import
                                  from WSDL.
                                type: string
                              serviceName:
                                description: The name of service to import from WSDL.
                                type: string
                            required:
                            - endpointName
                            - serviceName
                            type: object
                          type: array
                      required:
                      - contentFormat
                      - contentValue
                      type: object
                    type: array
                  license:
                    description: A license block as documented below.
                    items:
                      properties:
                        name:
                          description: The name of the license .
                          type: string
                        url:
                          description: Absolute URL of the license.
                          type: string
                      type: object
                    type: array
                  oauth2Authorization:
                    description: An oauth2_authorization block as documented below.
                    items:
                      properties:
                        authorizationServerName:
                          description: OAuth authorization server identifier. The
                            name of an OAuth2 Authorization Server.
                          type: string
                        scope:
                          description: Operations scope.
                          type: string
                      required:
                      - authorizationServerName
                      type: object
                    type: array
                  openidAuthentication:
                    description: An openid_authentication block as documented below.
                    items:
                      properties:
                        bearerTokenSendingMethods:
                          description: How to send token to the server. A list of
                            zero or more methods. Valid values are authorizationHeader
                            and query.
                          items:
                            type: string
                          type: array
                        openidProviderName:
                          description: OpenID Connect provider identifier. The name
                            of an OpenID Connect Provider.
                          type: string
                      required:
                      - openidProviderName
                      type: object
                    type: array
                  path:
                    description: The Path for this API Management API, which is a
                      relative URL which uniquely identifies this API and all of its
                      resource paths within the API Management Service.
                    type: string
                  protocols:
                    description: A list of protocols the operations in this API can
                      be invoked. Possible values are http, https, ws, and wss.
                    items:
                      type: string
                    type: array
                  resourceGroupName:
                    description: The Name of the Resource Group where the API Management
                      API exists. Changing this forces a new resource to be created.
                    type: string
                  resourceGroupNameRef:
                    description: Reference to a ResourceGroup in azure to populate
                      resourceGroupName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  resourceGroupNameSelector:
                    description: Selector for a ResourceGroup in azure to populate
                      resourceGroupName.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  revision:
                    description: The Revision which used for this API. Changing this
                      forces a new resource to be created.
                    type: string
                  revisionDescription:
                    description: The description of the API Revision of the API Management
                      API.
                    type: string
                  serviceUrl:
                    description: Absolute URL of the backend service implementing
                      this API.
                    type: string
                  soapPassThrough:
                    description: Should this API expose a SOAP frontend, rather than
                      a HTTP frontend? Defaults to false.
                    type: boolean
                  sourceApiId:
                    description: The API id of the source API, which could be in format
                      azurerm_api_management_api.example.id or in format azurerm_api_management_api.example.id;rev=1
                    type: string
                  subscriptionKeyParameterNames:
                    description: A subscription_key_parameter_names block as documented
                      below.
                    items:
                      properties:
                        header:
                          description: The name of the HTTP Header which should be
                            used for the Subscription Key.
                          type: string
                        query:
                          description: The name of the QueryString parameter which
                            should be used for the Subscription Key.
                          type: string
                      required:
                      - header
                      - query
                      type: object
                    type: array
                  subscriptionRequired:
                    description: Should this API require a subscription key? Defaults
                      to true.
                    type: boolean
                  termsOfServiceUrl:
                    description: Absolute URL of the Terms of Service for the API.
                    type: string
                  version:
                    description: The Version number of this API, if this API is versioned.
                    type: string
                  versionDescription:
                    description: The description of the API Version of the API Management
                      API.
                    type: string
                  versionSetId:
                    description: The ID of the Version Set which this API is associated
                      with.
                    type: string
                required:
                - revision
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: APIStatus defines the observed state of API.
            properties:
              atProvider:
                properties:
                  id:
                    description: The ID of the API Management API.
                    type: string
                  isCurrent:
                    description: Is this the current API Revision?
                    type: boolean
                  isOnline:
                    description: Is this API Revision online/accessible via the Gateway?
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
