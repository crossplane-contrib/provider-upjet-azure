---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  name: virtualdesktopscalingplans.desktopvirtualization.azure.upbound.io
spec:
  group: desktopvirtualization.azure.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: VirtualDesktopScalingPlan
    listKind: VirtualDesktopScalingPlanList
    plural: virtualdesktopscalingplans
    singular: virtualdesktopscalingplan
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VirtualDesktopScalingPlan is the Schema for the VirtualDesktopScalingPlans
          API. Manages a Virtual Desktop Scaling Plan .
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VirtualDesktopScalingPlanSpec defines the desired state of
              VirtualDesktopScalingPlan
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: A description of the Scaling Plan.
                    type: string
                  exclusionTag:
                    description: The name of the tag associated with the VMs you want
                      to exclude from autoscaling.
                    type: string
                  friendlyName:
                    description: Friendly name of the Scaling Plan.
                    type: string
                  hostPool:
                    description: One or more host_pool blocks as defined below.
                    items:
                      properties:
                        hostpoolId:
                          description: The ID of the HostPool to assign the Scaling
                            Plan to.
                          type: string
                        hostpoolIdRef:
                          description: Reference to a DesktopHostPool in virtual to
                            populate hostpoolId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        hostpoolIdSelector:
                          description: Selector for a DesktopHostPool in virtual to
                            populate hostpoolId.
                          properties:
                            matchControllerRef:
                              description: MatchControllerRef ensures an object with
                                the same controller reference as the selecting object
                                is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        scalingPlanEnabled:
                          description: Specifies if the scaling plan is enabled or
                            disabled for the HostPool.
                          type: boolean
                      type: object
                    type: array
                  location:
                    description: The Azure Region where the Virtual Desktop Scaling
                      Plan should exist. Changing this forces a new Virtual Desktop
                      Scaling Plan to be created.
                    type: string
                  resourceGroupName:
                    description: The name of the Resource Group where the Virtual
                      Desktop Scaling Plan should exist. Changing this forces a new
                      Virtual Desktop Scaling Plan to be created.
                    type: string
                  resourceGroupNameRef:
                    description: Reference to a ResourceGroup in azure to populate
                      resourceGroupName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  resourceGroupNameSelector:
                    description: Selector for a ResourceGroup in azure to populate
                      resourceGroupName.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  schedule:
                    description: One or more schedule blocks as defined below.
                    items:
                      properties:
                        daysOfWeek:
                          description: A list of Days of the Week on which this schedule
                            will be used. Possible values are Monday, Tuesday, Wednesday,
                            Thursday, Friday, Saturday, and Sunday
                          items:
                            type: string
                          type: array
                        name:
                          description: The name of the schedule.
                          type: string
                        offPeakLoadBalancingAlgorithm:
                          description: The load Balancing Algorithm to use during
                            Off-Peak Hours. Possible values are DepthFirst and BreadthFirst.
                          type: string
                        offPeakStartTime:
                          description: The time at which Off-Peak scaling will begin.
                            This is also the end-time for the Ramp-Down period. The
                            time must be specified in "HH:MM" format.
                          type: string
                        peakLoadBalancingAlgorithm:
                          description: The load Balancing Algorithm to use during
                            Peak Hours. Possible values are DepthFirst and BreadthFirst.
                          type: string
                        peakStartTime:
                          description: The time at which Peak scaling will begin.
                            This is also the end-time for the Ramp-Up period. The
                            time must be specified in "HH:MM" format.
                          type: string
                        rampDownCapacityThresholdPercent:
                          description: This is the value in percentage of used host
                            pool capacity that will be considered to evaluate whether
                            to turn on/off virtual machines during the ramp-down and
                            off-peak hours. For example, if capacity threshold is
                            specified as 60% and your total host pool capacity is
                            100 sessions, autoscale will turn on additional session
                            hosts once the host pool exceeds a load of 60 sessions.
                          type: number
                        rampDownForceLogoffUsers:
                          description: Whether users will be forced to log-off session
                            hosts once the ramp_down_wait_time_minutes value has been
                            exceeded during the Ramp-Down period. Possible
                          type: boolean
                        rampDownLoadBalancingAlgorithm:
                          description: The load Balancing Algorithm to use during
                            the Ramp-Down period. Possible values are DepthFirst and
                            BreadthFirst.
                          type: string
                        rampDownMinimumHostsPercent:
                          description: The minimum percentage of session host virtual
                            machines that you would like to get to for ramp-down and
                            off-peak hours. For example, if Minimum percentage of
                            hosts is specified as 10% and total number of session
                            hosts in your host pool is 10, autoscale will ensure a
                            minimum of 1 session host is available to take user connections.
                          type: number
                        rampDownNotificationMessage:
                          description: The notification message to send to users during
                            Ramp-Down period when they are required to log-off.
                          type: string
                        rampDownStartTime:
                          description: The time at which Ramp-Down scaling will begin.
                            This is also the end-time for the Ramp-Up period. The
                            time must be specified in "HH:MM" format.
                          type: string
                        rampDownStopHostsWhen:
                          description: Controls Session Host shutdown behaviour during
                            Ramp-Down period. Session Hosts can either be shutdown
                            when all sessions on the Session Host have ended, or when
                            there are no Active sessions left on the Session Host.
                            Possible values are ZeroSessions and ZeroActiveSessions.
                          type: string
                        rampDownWaitTimeMinutes:
                          description: The number of minutes during Ramp-Down period
                            that autoscale will wait after setting the session host
                            VMs to drain mode, notifying any currently signed in users
                            to save their work before forcing the users to logoff.
                            Once all user sessions on the session host VM have been
                            logged off, Autoscale will shut down the VM.
                          type: number
                        rampUpCapacityThresholdPercent:
                          description: This is the value of percentage of used host
                            pool capacity that will be considered to evaluate whether
                            to turn on/off virtual machines during the ramp-up and
                            peak hours. For example, if capacity threshold is specified
                            as 60% and your total host pool capacity is 100 sessions,
                            autoscale will turn on additional session hosts once the
                            host pool exceeds a load of 60 sessions.
                          type: number
                        rampUpLoadBalancingAlgorithm:
                          description: The load Balancing Algorithm to use during
                            the Ramp-Up period. Possible values are DepthFirst and
                            BreadthFirst.
                          type: string
                        rampUpMinimumHostsPercent:
                          description: Specifies the minimum percentage of session
                            host virtual machines to start during ramp-up for peak
                            hours. For example, if Minimum percentage of hosts is
                            specified as 10% and total number of session hosts in
                            your host pool is 10, autoscale will ensure a minimum
                            of 1 session host is available to take user connections.
                          type: number
                        rampUpStartTime:
                          description: The time at which Ramp-Up scaling will begin.
                            This is also the end-time for the Ramp-Up period. The
                            time must be specified in "HH:MM" format.
                          type: string
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    description: A mapping of tags which should be assigned to the
                      Virtual Desktop Scaling Plan .
                    type: object
                  timeZone:
                    description: Specifies the Time Zone which should be used by the
                      Scaling Plan for time based events, the possible values are
                      defined here.
                    type: string
                type: object
              initProvider:
                description: THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. InitProvider
                  holds the same fields as ForProvider, with the exception of Identifier
                  and other resource reference fields. The fields that are in InitProvider
                  are merged into ForProvider when the resource is created. The same
                  fields are also added to the terraform ignore_changes hook, to avoid
                  updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after
                  creation, for example because of an external controller is managing
                  them, like an autoscaler.
                properties:
                  description:
                    description: A description of the Scaling Plan.
                    type: string
                  exclusionTag:
                    description: The name of the tag associated with the VMs you want
                      to exclude from autoscaling.
                    type: string
                  friendlyName:
                    description: Friendly name of the Scaling Plan.
                    type: string
                  hostPool:
                    description: One or more host_pool blocks as defined below.
                    items:
                      properties:
                        scalingPlanEnabled:
                          description: Specifies if the scaling plan is enabled or
                            disabled for the HostPool.
                          type: boolean
                      type: object
                    type: array
                  location:
                    description: The Azure Region where the Virtual Desktop Scaling
                      Plan should exist. Changing this forces a new Virtual Desktop
                      Scaling Plan to be created.
                    type: string
                  schedule:
                    description: One or more schedule blocks as defined below.
                    items:
                      properties:
                        daysOfWeek:
                          description: A list of Days of the Week on which this schedule
                            will be used. Possible values are Monday, Tuesday, Wednesday,
                            Thursday, Friday, Saturday, and Sunday
                          items:
                            type: string
                          type: array
                        name:
                          description: The name of the schedule.
                          type: string
                        offPeakLoadBalancingAlgorithm:
                          description: The load Balancing Algorithm to use during
                            Off-Peak Hours. Possible values are DepthFirst and BreadthFirst.
                          type: string
                        offPeakStartTime:
                          description: The time at which Off-Peak scaling will begin.
                            This is also the end-time for the Ramp-Down period. The
                            time must be specified in "HH:MM" format.
                          type: string
                        peakLoadBalancingAlgorithm:
                          description: The load Balancing Algorithm to use during
                            Peak Hours. Possible values are DepthFirst and BreadthFirst.
                          type: string
                        peakStartTime:
                          description: The time at which Peak scaling will begin.
                            This is also the end-time for the Ramp-Up period. The
                            time must be specified in "HH:MM" format.
                          type: string
                        rampDownCapacityThresholdPercent:
                          description: This is the value in percentage of used host
                            pool capacity that will be considered to evaluate whether
                            to turn on/off virtual machines during the ramp-down and
                            off-peak hours. For example, if capacity threshold is
                            specified as 60% and your total host pool capacity is
                            100 sessions, autoscale will turn on additional session
                            hosts once the host pool exceeds a load of 60 sessions.
                          type: number
                        rampDownForceLogoffUsers:
                          description: Whether users will be forced to log-off session
                            hosts once the ramp_down_wait_time_minutes value has been
                            exceeded during the Ramp-Down period. Possible
                          type: boolean
                        rampDownLoadBalancingAlgorithm:
                          description: The load Balancing Algorithm to use during
                            the Ramp-Down period. Possible values are DepthFirst and
                            BreadthFirst.
                          type: string
                        rampDownMinimumHostsPercent:
                          description: The minimum percentage of session host virtual
                            machines that you would like to get to for ramp-down and
                            off-peak hours. For example, if Minimum percentage of
                            hosts is specified as 10% and total number of session
                            hosts in your host pool is 10, autoscale will ensure a
                            minimum of 1 session host is available to take user connections.
                          type: number
                        rampDownNotificationMessage:
                          description: The notification message to send to users during
                            Ramp-Down period when they are required to log-off.
                          type: string
                        rampDownStartTime:
                          description: The time at which Ramp-Down scaling will begin.
                            This is also the end-time for the Ramp-Up period. The
                            time must be specified in "HH:MM" format.
                          type: string
                        rampDownStopHostsWhen:
                          description: Controls Session Host shutdown behaviour during
                            Ramp-Down period. Session Hosts can either be shutdown
                            when all sessions on the Session Host have ended, or when
                            there are no Active sessions left on the Session Host.
                            Possible values are ZeroSessions and ZeroActiveSessions.
                          type: string
                        rampDownWaitTimeMinutes:
                          description: The number of minutes during Ramp-Down period
                            that autoscale will wait after setting the session host
                            VMs to drain mode, notifying any currently signed in users
                            to save their work before forcing the users to logoff.
                            Once all user sessions on the session host VM have been
                            logged off, Autoscale will shut down the VM.
                          type: number
                        rampUpCapacityThresholdPercent:
                          description: This is the value of percentage of used host
                            pool capacity that will be considered to evaluate whether
                            to turn on/off virtual machines during the ramp-up and
                            peak hours. For example, if capacity threshold is specified
                            as 60% and your total host pool capacity is 100 sessions,
                            autoscale will turn on additional session hosts once the
                            host pool exceeds a load of 60 sessions.
                          type: number
                        rampUpLoadBalancingAlgorithm:
                          description: The load Balancing Algorithm to use during
                            the Ramp-Up period. Possible values are DepthFirst and
                            BreadthFirst.
                          type: string
                        rampUpMinimumHostsPercent:
                          description: Specifies the minimum percentage of session
                            host virtual machines to start during ramp-up for peak
                            hours. For example, if Minimum percentage of hosts is
                            specified as 10% and total number of session hosts in
                            your host pool is 10, autoscale will ensure a minimum
                            of 1 session host is available to take user connections.
                          type: number
                        rampUpStartTime:
                          description: The time at which Ramp-Up scaling will begin.
                            This is also the end-time for the Ramp-Up period. The
                            time must be specified in "HH:MM" format.
                          type: string
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    description: A mapping of tags which should be assigned to the
                      Virtual Desktop Scaling Plan .
                    type: object
                  timeZone:
                    description: Specifies the Time Zone which should be used by the
                      Scaling Plan for time based events, the possible values are
                      defined here.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: location is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.location)
                || has(self.initProvider.location)'
            - message: schedule is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.schedule)
                || has(self.initProvider.schedule)'
            - message: timeZone is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.timeZone)
                || has(self.initProvider.timeZone)'
          status:
            description: VirtualDesktopScalingPlanStatus defines the observed state
              of VirtualDesktopScalingPlan.
            properties:
              atProvider:
                properties:
                  description:
                    description: A description of the Scaling Plan.
                    type: string
                  exclusionTag:
                    description: The name of the tag associated with the VMs you want
                      to exclude from autoscaling.
                    type: string
                  friendlyName:
                    description: Friendly name of the Scaling Plan.
                    type: string
                  hostPool:
                    description: One or more host_pool blocks as defined below.
                    items:
                      properties:
                        hostpoolId:
                          description: The ID of the HostPool to assign the Scaling
                            Plan to.
                          type: string
                        scalingPlanEnabled:
                          description: Specifies if the scaling plan is enabled or
                            disabled for the HostPool.
                          type: boolean
                      type: object
                    type: array
                  id:
                    description: The ID of the Virtual Desktop Scaling Plan.
                    type: string
                  location:
                    description: The Azure Region where the Virtual Desktop Scaling
                      Plan should exist. Changing this forces a new Virtual Desktop
                      Scaling Plan to be created.
                    type: string
                  resourceGroupName:
                    description: The name of the Resource Group where the Virtual
                      Desktop Scaling Plan should exist. Changing this forces a new
                      Virtual Desktop Scaling Plan to be created.
                    type: string
                  schedule:
                    description: One or more schedule blocks as defined below.
                    items:
                      properties:
                        daysOfWeek:
                          description: A list of Days of the Week on which this schedule
                            will be used. Possible values are Monday, Tuesday, Wednesday,
                            Thursday, Friday, Saturday, and Sunday
                          items:
                            type: string
                          type: array
                        name:
                          description: The name of the schedule.
                          type: string
                        offPeakLoadBalancingAlgorithm:
                          description: The load Balancing Algorithm to use during
                            Off-Peak Hours. Possible values are DepthFirst and BreadthFirst.
                          type: string
                        offPeakStartTime:
                          description: The time at which Off-Peak scaling will begin.
                            This is also the end-time for the Ramp-Down period. The
                            time must be specified in "HH:MM" format.
                          type: string
                        peakLoadBalancingAlgorithm:
                          description: The load Balancing Algorithm to use during
                            Peak Hours. Possible values are DepthFirst and BreadthFirst.
                          type: string
                        peakStartTime:
                          description: The time at which Peak scaling will begin.
                            This is also the end-time for the Ramp-Up period. The
                            time must be specified in "HH:MM" format.
                          type: string
                        rampDownCapacityThresholdPercent:
                          description: This is the value in percentage of used host
                            pool capacity that will be considered to evaluate whether
                            to turn on/off virtual machines during the ramp-down and
                            off-peak hours. For example, if capacity threshold is
                            specified as 60% and your total host pool capacity is
                            100 sessions, autoscale will turn on additional session
                            hosts once the host pool exceeds a load of 60 sessions.
                          type: number
                        rampDownForceLogoffUsers:
                          description: Whether users will be forced to log-off session
                            hosts once the ramp_down_wait_time_minutes value has been
                            exceeded during the Ramp-Down period. Possible
                          type: boolean
                        rampDownLoadBalancingAlgorithm:
                          description: The load Balancing Algorithm to use during
                            the Ramp-Down period. Possible values are DepthFirst and
                            BreadthFirst.
                          type: string
                        rampDownMinimumHostsPercent:
                          description: The minimum percentage of session host virtual
                            machines that you would like to get to for ramp-down and
                            off-peak hours. For example, if Minimum percentage of
                            hosts is specified as 10% and total number of session
                            hosts in your host pool is 10, autoscale will ensure a
                            minimum of 1 session host is available to take user connections.
                          type: number
                        rampDownNotificationMessage:
                          description: The notification message to send to users during
                            Ramp-Down period when they are required to log-off.
                          type: string
                        rampDownStartTime:
                          description: The time at which Ramp-Down scaling will begin.
                            This is also the end-time for the Ramp-Up period. The
                            time must be specified in "HH:MM" format.
                          type: string
                        rampDownStopHostsWhen:
                          description: Controls Session Host shutdown behaviour during
                            Ramp-Down period. Session Hosts can either be shutdown
                            when all sessions on the Session Host have ended, or when
                            there are no Active sessions left on the Session Host.
                            Possible values are ZeroSessions and ZeroActiveSessions.
                          type: string
                        rampDownWaitTimeMinutes:
                          description: The number of minutes during Ramp-Down period
                            that autoscale will wait after setting the session host
                            VMs to drain mode, notifying any currently signed in users
                            to save their work before forcing the users to logoff.
                            Once all user sessions on the session host VM have been
                            logged off, Autoscale will shut down the VM.
                          type: number
                        rampUpCapacityThresholdPercent:
                          description: This is the value of percentage of used host
                            pool capacity that will be considered to evaluate whether
                            to turn on/off virtual machines during the ramp-up and
                            peak hours. For example, if capacity threshold is specified
                            as 60% and your total host pool capacity is 100 sessions,
                            autoscale will turn on additional session hosts once the
                            host pool exceeds a load of 60 sessions.
                          type: number
                        rampUpLoadBalancingAlgorithm:
                          description: The load Balancing Algorithm to use during
                            the Ramp-Up period. Possible values are DepthFirst and
                            BreadthFirst.
                          type: string
                        rampUpMinimumHostsPercent:
                          description: Specifies the minimum percentage of session
                            host virtual machines to start during ramp-up for peak
                            hours. For example, if Minimum percentage of hosts is
                            specified as 10% and total number of session hosts in
                            your host pool is 10, autoscale will ensure a minimum
                            of 1 session host is available to take user connections.
                          type: number
                        rampUpStartTime:
                          description: The time at which Ramp-Up scaling will begin.
                            This is also the end-time for the Ramp-Up period. The
                            time must be specified in "HH:MM" format.
                          type: string
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    description: A mapping of tags which should be assigned to the
                      Virtual Desktop Scaling Plan .
                    type: object
                  timeZone:
                    description: Specifies the Time Zone which should be used by the
                      Scaling Plan for time based events, the possible values are
                      defined here.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
