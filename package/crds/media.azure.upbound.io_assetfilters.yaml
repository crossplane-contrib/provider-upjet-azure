---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: assetfilters.media.azure.upbound.io
spec:
  group: media.azure.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: AssetFilter
    listKind: AssetFilterList
    plural: assetfilters
    singular: assetfilter
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AssetFilter is the Schema for the AssetFilters API. Manages an
          Azure Media Asset Filter.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AssetFilterSpec defines the desired state of AssetFilter
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  assetId:
                    description: The Asset ID for which the Asset Filter should be
                      created. Changing this forces a new Asset Filter to be created.
                    type: string
                  assetIdRef:
                    description: Reference to a Asset in media to populate assetId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  assetIdSelector:
                    description: Selector for a Asset in media to populate assetId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  firstQualityBitrate:
                    description: The first quality bitrate. Sets the first video track
                      to appear in the Live Streaming playlist to allow HLS native
                      players to start downloading from this quality level at the
                      beginning.
                    type: number
                  presentationTimeRange:
                    description: A presentation_time_range block as defined below.
                    items:
                      properties:
                        endInUnits:
                          description: The absolute end time boundary. Applies to
                            Video on Demand (VoD). For the Live Streaming presentation,
                            it is silently ignored and applied when the presentation
                            ends and the stream becomes VoD. This is a long value
                            that represents an absolute end point of the presentation,
                            rounded to the closest next GOP start. The unit is defined
                            by unit_timescale_in_miliseconds, so an end_in_units of
                            180 would be for 3 minutes. Use start_in_units and end_in_units
                            to trim the fragments that will be in the playlist (manifest).
                            For example, start_in_units set to 20 and end_in_units
                            set to 60 using unit_timescale_in_miliseconds in 1000
                            will generate a playlist that contains fragments from
                            between 20 seconds and 60 seconds of the VoD presentation.
                            If a fragment straddles the boundary, the entire fragment
                            will be included in the manifest.
                          type: number
                        forceEnd:
                          description: 'Indicates whether the end_in_units property
                            must be present. If true, end_in_units must be specified
                            or a bad request code is returned. Applies to Live Streaming
                            only. Allowed values: false, true.'
                          type: boolean
                        liveBackoffInUnits:
                          description: The relative to end right edge. Applies to
                            Live Streaming only. This value defines the latest live
                            position that a client can seek to. Using this property,
                            you can delay live playback position and create a server-side
                            buffer for players. The unit is defined by unit_timescale_in_miliseconds.
                            The maximum live back off duration is 300 seconds. For
                            example, a value of 20 means that the latest available
                            content is 20 seconds delayed from the real live edge.
                          type: number
                        presentationWindowInUnits:
                          description: The relative to end sliding window. Applies
                            to Live Streaming only. Use presentation_window_in_units
                            to apply a sliding window of fragments to include in a
                            playlist. The unit is defined by unit_timescale_in_miliseconds.
                            For example, set presentation_window_in_units to 120 to
                            apply a two-minute sliding window. Media within 2 minutes
                            of the live edge will be included in the playlist. If
                            a fragment straddles the boundary, the entire fragment
                            will be included in the playlist. The minimum presentation
                            window duration is 60 seconds.
                          type: number
                        startInUnits:
                          description: The absolute start time boundary. Applies to
                            Video on Demand (VoD) or Live Streaming. This is a long
                            value that represents an absolute start point of the stream.
                            The value gets rounded to the closest next GOP start.
                            The unit is defined by unit_timescale_in_miliseconds,
                            so a start_in_units of 15 would be for 15 seconds. Use
                            start_in_units and end_in_units to trim the fragments
                            that will be in the playlist (manifest). For example,
                            start_in_units set to 20 and end_in_units set to 60 using
                            unit_timescale_in_miliseconds in 1000 will generate a
                            playlist that contains fragments from between 20 seconds
                            and 60 seconds of the VoD presentation. If a fragment
                            straddles the boundary, the entire fragment will be included
                            in the manifest.
                          type: number
                        unitTimescaleInMiliseconds:
                          description: Specified as the number of miliseconds in one
                            unit timescale. For example, if you want to set a start_in_units
                            at 30 seconds, you would use a value of 30 when using
                            the unit_timescale_in_miliseconds in 1000. Or if you want
                            to set start_in_units in 30 miliseconds, you would use
                            a value of 30 when using the unit_timescale_in_miliseconds
                            in 1. Applies timescale to start_in_units, start_timescale
                            and presentation_window_in_timescale and live_backoff_in_timescale.
                          type: number
                      type: object
                    type: array
                  trackSelection:
                    description: One or more track_selection blocks as defined below.
                    items:
                      properties:
                        condition:
                          description: One or more condition blocks as defined above.
                          items:
                            properties:
                              operation:
                                description: The condition operation to test a track
                                  property against. Supported values are Equal and
                                  NotEqual.
                                type: string
                              property:
                                description: The track property to compare. Supported
                                  values are Bitrate, FourCC, Language, Name and Type.
                                  Check documentation for more details.
                                type: string
                              value:
                                description: The track property value to match or
                                  not match.
                                type: string
                            type: object
                          type: array
                      required:
                      - condition
                      type: object
                    type: array
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: AssetFilterStatus defines the observed state of AssetFilter.
            properties:
              atProvider:
                properties:
                  id:
                    description: The ID of the Asset Filter.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
