---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: frontdoors.network.azure.upbound.io
spec:
  group: network.azure.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: FrontDoor
    listKind: FrontDoorList
    plural: frontdoors
    singular: frontdoor
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: FrontDoor is the Schema for the FrontDoors API. Manages an Azure
          Front Door (classic) instance.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FrontDoorSpec defines the desired state of FrontDoor
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  backendPool:
                    description: A backend_pool block as defined below.
                    items:
                      properties:
                        backend:
                          description: A backend block as defined below.
                          items:
                            properties:
                              address:
                                description: Location of the backend (IP address or
                                  FQDN)
                                type: string
                              enabled:
                                description: Enable or Disable use of this Backend
                                  Routing Rule. Permitted values are true or false.
                                  Defaults to true.
                                type: boolean
                              hostHeader:
                                description: The value to use as the host header sent
                                  to the backend.
                                type: string
                              httpPort:
                                description: The HTTP TCP port number. Possible values
                                  are between 1 - 65535.
                                type: number
                              httpsPort:
                                description: The HTTPS TCP port number. Possible values
                                  are between 1 - 65535.
                                type: number
                              priority:
                                description: Priority to use for load balancing. Higher
                                  priorities will not be used for load balancing if
                                  any lower priority backend is healthy. Defaults
                                  to 1.
                                type: number
                              weight:
                                description: Weight of this endpoint for load balancing
                                  purposes. Defaults to 50.
                                type: number
                            required:
                            - address
                            - hostHeader
                            - httpPort
                            - httpsPort
                            type: object
                          type: array
                        healthProbeName:
                          description: Specifies the name of the backend_pool_health_probe
                            block within this resource to use for this Backend Pool.
                          type: string
                        loadBalancingName:
                          description: Specifies the name of the backend_pool_load_balancing
                            block within this resource to use for this Backend Pool.
                          type: string
                        name:
                          description: Specifies the name of the Backend Pool.
                          type: string
                      required:
                      - backend
                      - healthProbeName
                      - loadBalancingName
                      - name
                      type: object
                    type: array
                  backendPoolHealthProbe:
                    description: A backend_pool_health_probe block as defined below.
                    items:
                      properties:
                        enabled:
                          description: Is this health probe enabled? Defaults to true.
                          type: boolean
                        intervalInSeconds:
                          description: The number of seconds between each Health Probe.
                            Defaults to 120.
                          type: number
                        name:
                          description: Specifies the name of the Health Probe.
                          type: string
                        path:
                          description: The path to use for the Health Probe. Default
                            is /.
                          type: string
                        probeMethod:
                          description: 'Specifies HTTP method the health probe uses
                            when querying the backend pool instances. Possible values
                            include: Get and Head. Defaults to GET.'
                          type: string
                        protocol:
                          description: Protocol scheme to use for the Health Probe.
                            Possible values are Http and Https. Defaults to Http.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  backendPoolLoadBalancing:
                    description: A backend_pool_load_balancing block as defined below.
                    items:
                      properties:
                        additionalLatencyMilliseconds:
                          description: The additional latency in milliseconds for
                            probes to fall into the lowest latency bucket. Defaults
                            to 0.
                          type: number
                        name:
                          description: Specifies the name of the Load Balancer.
                          type: string
                        sampleSize:
                          description: The number of samples to consider for load
                            balancing decisions. Defaults to 4.
                          type: number
                        successfulSamplesRequired:
                          description: The number of samples within the sample period
                            that must succeed. Defaults to 2.
                          type: number
                      required:
                      - name
                      type: object
                    type: array
                  backendPoolSettings:
                    description: A backend_pool_settings block as defined below.
                    items:
                      properties:
                        backendPoolsSendReceiveTimeoutSeconds:
                          description: Specifies the send and receive timeout on forwarding
                            request to the backend. When the timeout is reached, the
                            request fails and returns. Possible values are between
                            0 - 240. Defaults to 60.
                          type: number
                        enforceBackendPoolsCertificateNameCheck:
                          description: Enforce certificate name check on HTTPS requests
                            to all backend pools, this setting will have no effect
                            on HTTP requests. Permitted values are true or false.
                          type: boolean
                      required:
                      - enforceBackendPoolsCertificateNameCheck
                      type: object
                    type: array
                  friendlyName:
                    description: A friendly name for the Front Door service.
                    type: string
                  frontendEndpoint:
                    description: A frontend_endpoint block as defined below.
                    items:
                      properties:
                        hostName:
                          description: Specifies the host name of the frontend_endpoint.
                            Must be a domain name. In order to use a name.azurefd.net
                            domain, the name value must match the Front Door name.
                          type: string
                        name:
                          description: Specifies the name of the frontend_endpoint.
                          type: string
                        sessionAffinityEnabled:
                          description: Whether to allow session affinity on this host.
                            Valid options are true or false Defaults to false.
                          type: boolean
                        sessionAffinityTtlSeconds:
                          description: The TTL to use in seconds for session affinity,
                            if applicable. Defaults to 0.
                          type: number
                        webApplicationFirewallPolicyLinkId:
                          description: Defines the Web Application Firewall policy
                            ID for each host.
                          type: string
                      required:
                      - hostName
                      - name
                      type: object
                    type: array
                  loadBalancerEnabled:
                    description: Should the Front Door Load Balancer be Enabled? Defaults
                      to true.
                    type: boolean
                  resourceGroupName:
                    description: Specifies the name of the Resource Group in which
                      the Front Door service should exist. Changing this forces a
                      new resource to be created.
                    type: string
                  resourceGroupNameRef:
                    description: Reference to a ResourceGroup in azure to populate
                      resourceGroupName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  resourceGroupNameSelector:
                    description: Selector for a ResourceGroup in azure to populate
                      resourceGroupName.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  routingRule:
                    description: A routing_rule block as defined below.
                    items:
                      properties:
                        acceptedProtocols:
                          description: Protocol schemes to match for the Backend Routing
                            Rule. Possible values are Http and Https.
                          items:
                            type: string
                          type: array
                        enabled:
                          description: Enable or Disable use of this Backend Routing
                            Rule. Permitted values are true or false. Defaults to
                            true.
                          type: boolean
                        forwardingConfiguration:
                          description: A forwarding_configuration block as defined
                            below.
                          items:
                            properties:
                              backendPoolName:
                                description: Specifies the name of the Backend Pool
                                  to forward the incoming traffic to.
                                type: string
                              cacheDuration:
                                description: Specify the caching duration (in ISO8601
                                  notation e.g. P1DT2H for 1 day and 2 hours). Needs
                                  to be greater than 0 and smaller than 365 days.
                                  cache_duration works only in combination with cache_enabled
                                  set to true.
                                type: string
                              cacheEnabled:
                                description: Specifies whether to Enable caching or
                                  not. Valid options are true or false. Defaults to
                                  false.
                                type: boolean
                              cacheQueryParameterStripDirective:
                                description: Defines cache behaviour in relation to
                                  query string parameters. Valid options are StripAll,
                                  StripAllExcept, StripOnly or StripNone. Defaults
                                  to StripAll.
                                type: string
                              cacheQueryParameters:
                                description: Specify query parameters (array). Works
                                  only in combination with cache_query_parameter_strip_directive
                                  set to StripAllExcept or StripOnly.
                                items:
                                  type: string
                                type: array
                              cacheUseDynamicCompression:
                                description: Whether to use dynamic compression when
                                  caching. Valid options are true or false. Defaults
                                  to false.
                                type: boolean
                              customForwardingPath:
                                description: Path to use when constructing the request
                                  to forward to the backend. This functions as a URL
                                  Rewrite. Default behaviour preserves the URL path.
                                type: string
                              forwardingProtocol:
                                description: Protocol to use when redirecting. Valid
                                  options are HttpOnly, HttpsOnly, or MatchRequest.
                                  Defaults to HttpsOnly.
                                type: string
                            required:
                            - backendPoolName
                            type: object
                          type: array
                        frontendEndpoints:
                          description: The names of the frontend_endpoint blocks within
                            this resource to associate with this routing_rule.
                          items:
                            type: string
                          type: array
                        name:
                          description: Specifies the name of the Routing Rule.
                          type: string
                        patternsToMatch:
                          description: The route patterns for the Backend Routing
                            Rule.
                          items:
                            type: string
                          type: array
                        redirectConfiguration:
                          description: A redirect_configuration block as defined below.
                          items:
                            properties:
                              customFragment:
                                description: The destination fragment in the portion
                                  of URL after '#'. Set this to add a fragment to
                                  the redirect URL.
                                type: string
                              customHost:
                                description: Set this to change the URL for the redirection.
                                type: string
                              customPath:
                                description: The path to retain as per the incoming
                                  request, or update in the URL for the redirection.
                                type: string
                              customQueryString:
                                description: Replace any existing query string from
                                  the incoming request URL.
                                type: string
                              redirectProtocol:
                                description: Protocol to use when redirecting. Valid
                                  options are HttpOnly, HttpsOnly, or MatchRequest.
                                type: string
                              redirectType:
                                description: Status code for the redirect. Valida
                                  options are Moved, Found, TemporaryRedirect, PermanentRedirect.
                                type: string
                            required:
                            - redirectProtocol
                            - redirectType
                            type: object
                          type: array
                      required:
                      - acceptedProtocols
                      - frontendEndpoints
                      - name
                      - patternsToMatch
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    description: A mapping of tags to assign to the resource.
                    type: object
                required:
                - backendPool
                - backendPoolHealthProbe
                - backendPoolLoadBalancing
                - frontendEndpoint
                - routingRule
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: FrontDoorStatus defines the observed state of FrontDoor.
            properties:
              atProvider:
                properties:
                  backendPool:
                    description: A backend_pool block as defined below.
                    items:
                      properties:
                        id:
                          description: The ID of the Azure Front Door Backend.
                          type: string
                      type: object
                    type: array
                  backendPoolHealthProbe:
                    description: A backend_pool_health_probe block as defined below.
                    items:
                      properties:
                        id:
                          description: The ID of the Azure Front Door Backend.
                          type: string
                      type: object
                    type: array
                  backendPoolHealthProbes:
                    additionalProperties:
                      type: string
                    description: A map/dictionary of Backend Pool Health Probe Names
                      (key) to the Backend Pool Health Probe ID (value)
                    type: object
                  backendPoolLoadBalancing:
                    description: A backend_pool_load_balancing block as defined below.
                    items:
                      properties:
                        id:
                          description: The ID of the Azure Front Door Backend.
                          type: string
                      type: object
                    type: array
                  backendPoolLoadBalancingSettings:
                    additionalProperties:
                      type: string
                    description: A map/dictionary of Backend Pool Load Balancing Setting
                      Names (key) to the Backend Pool Load Balancing Setting ID (value)
                    type: object
                  backendPools:
                    additionalProperties:
                      type: string
                    description: A map/dictionary of Backend Pool Names (key) to the
                      Backend Pool ID (value)
                    type: object
                  cname:
                    description: The host that each frontendEndpoint must CNAME to.
                    type: string
                  explicitResourceOrder:
                    items:
                      properties:
                        backendPoolHealthProbeIds:
                          items:
                            type: string
                          type: array
                        backendPoolIds:
                          items:
                            type: string
                          type: array
                        backendPoolLoadBalancingIds:
                          items:
                            type: string
                          type: array
                        frontendEndpointIds:
                          items:
                            type: string
                          type: array
                        routingRuleIds:
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  frontendEndpoint:
                    description: A frontend_endpoint block as defined below.
                    items:
                      properties:
                        id:
                          description: The ID of the Azure Front Door Backend.
                          type: string
                      type: object
                    type: array
                  frontendEndpoints:
                    additionalProperties:
                      type: string
                    description: A map/dictionary of Frontend Endpoint Names (key)
                      to the Frontend Endpoint ID (value)
                    type: object
                  headerFrontdoorId:
                    description: The unique ID of the Front Door which is embedded
                      into the incoming headers X-Azure-FDID attribute and maybe used
                      to filter traffic sent by the Front Door to your backend.
                    type: string
                  id:
                    description: The ID of the Azure Front Door Backend.
                    type: string
                  routingRule:
                    description: A routing_rule block as defined below.
                    items:
                      properties:
                        id:
                          description: The ID of the Azure Front Door Backend.
                          type: string
                      type: object
                    type: array
                  routingRules:
                    additionalProperties:
                      type: string
                    description: A map/dictionary of Routing Rule Names (key) to the
                      Routing Rule ID (value)
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
