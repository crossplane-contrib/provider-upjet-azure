---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: linuxwebappslots.web.azure.upbound.io
spec:
  group: web.azure.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: LinuxWebAppSlot
    listKind: LinuxWebAppSlotList
    plural: linuxwebappslots
    singular: linuxwebappslot
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: LinuxWebAppSlot is the Schema for the LinuxWebAppSlots API. Manages
          a Linux Web App Slot.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LinuxWebAppSlotSpec defines the desired state of LinuxWebAppSlot
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  appServiceId:
                    description: The ID of the Linux Web App this Deployment Slot
                      will be part of.
                    type: string
                  appServiceIdRef:
                    description: Reference to a LinuxWebApp in web to populate appServiceId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  appServiceIdSelector:
                    description: Selector for a LinuxWebApp in web to populate appServiceId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  appSettings:
                    additionalProperties:
                      type: string
                    description: A map of key-value pairs of App Settings.
                    type: object
                  authSettings:
                    description: A auth_settings block as defined below.
                    items:
                      properties:
                        activeDirectory:
                          description: An active_directory block as defined above.
                          items:
                            properties:
                              allowedAudiences:
                                description: Specifies a list of Allowed audience
                                  values to consider when validating JWTs issued by
                                  Azure Active Directory. Specifies a list of Allowed
                                  audience values to consider when validating JWTs
                                  issued by Azure Active Directory.
                                items:
                                  type: string
                                type: array
                              clientId:
                                description: The OAuth 2.0 client ID that was created
                                  for the app used for authentication. The ID of the
                                  Client to use to authenticate with Azure Active
                                  Directory.
                                type: string
                              clientSecretSecretRef:
                                description: The OAuth 2.0 client secret that was
                                  created for the app used for authentication. Cannot
                                  be specified with client_secret_setting_name. The
                                  Client Secret for the Client ID. Cannot be used
                                  with `client_secret_setting_name`.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                              clientSecretSettingName:
                                description: The app setting name containing the OAuth
                                  2.0 client secret that was created for the app used
                                  for authentication. Cannot be specified with client_secret.
                                  The App Setting name that contains the client secret
                                  of the Client. Cannot be used with `client_secret`.
                                type: string
                            required:
                            - clientId
                            type: object
                          type: array
                        additionalLoginParameters:
                          additionalProperties:
                            type: string
                          description: Specifies a map of login Parameters to send
                            to the OpenID Connect authorization endpoint when a user
                            logs in. Specifies a map of Login Parameters to send to
                            the OpenID Connect authorization endpoint when a user
                            logs in.
                          type: object
                        allowedExternalRedirectUrls:
                          description: Specifies a list of External URLs that can
                            be redirected to as part of logging in or logging out
                            of the Linux Web App. Specifies a list of External URLs
                            that can be redirected to as part of logging in or logging
                            out of the Windows Web App.
                          items:
                            type: string
                          type: array
                        defaultProvider:
                          description: 'The default authentication provider to use
                            when multiple providers are configured. Possible values
                            include: BuiltInAuthenticationProviderAzureActiveDirectory,
                            BuiltInAuthenticationProviderFacebook, BuiltInAuthenticationProviderGoogle,
                            BuiltInAuthenticationProviderMicrosoftAccount, BuiltInAuthenticationProviderTwitter,
                            BuiltInAuthenticationProviderGithub The default authentication
                            provider to use when multiple providers are configured.
                            Possible values include: `AzureActiveDirectory`, `Facebook`,
                            `Google`, `MicrosoftAccount`, `Twitter`, `Github`.'
                          type: string
                        enabled:
                          description: Should the Authentication / Authorization feature
                            be enabled for the Linux Web App? Should the Authentication
                            / Authorization feature be enabled?
                          type: boolean
                        facebook:
                          description: A facebook block as defined below.
                          items:
                            properties:
                              appId:
                                description: The App ID of the Facebook app used for
                                  login. The App ID of the Facebook app used for login.
                                type: string
                              appSecretSecretRef:
                                description: The App Secret of the Facebook app used
                                  for Facebook login. Cannot be specified with app_secret_setting_name.
                                  The App Secret of the Facebook app used for Facebook
                                  Login. Cannot be specified with `app_secret_setting_name`.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                              appSecretSettingName:
                                description: The app setting name that contains the
                                  app_secret value used for Facebook login. Cannot
                                  be specified with app_secret. The app setting name
                                  that contains the `app_secret` value used for Facebook
                                  Login. Cannot be specified with `app_secret`.
                                type: string
                              oauthScopes:
                                description: Specifies a list of OAuth 2.0 scopes
                                  that will be requested as part of Microsoft Account
                                  authentication. If not specified, "wl.basic" is
                                  used as the default scope. Specifies a list of OAuth
                                  2.0 scopes to be requested as part of Facebook Login
                                  authentication.
                                items:
                                  type: string
                                type: array
                            required:
                            - appId
                            type: object
                          type: array
                        github:
                          description: A github block as defined below.
                          items:
                            properties:
                              clientId:
                                description: The OAuth 2.0 client ID that was created
                                  for the app used for authentication. The ID of the
                                  GitHub app used for login.
                                type: string
                              clientSecretSecretRef:
                                description: The OAuth 2.0 client secret that was
                                  created for the app used for authentication. Cannot
                                  be specified with client_secret_setting_name. The
                                  Client Secret of the GitHub app used for GitHub
                                  Login. Cannot be specified with `client_secret_setting_name`.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                              clientSecretSettingName:
                                description: The app setting name containing the OAuth
                                  2.0 client secret that was created for the app used
                                  for authentication. Cannot be specified with client_secret.
                                  The app setting name that contains the `client_secret`
                                  value used for GitHub Login. Cannot be specified
                                  with `client_secret`.
                                type: string
                              oauthScopes:
                                description: Specifies a list of OAuth 2.0 scopes
                                  that will be requested as part of Microsoft Account
                                  authentication. If not specified, "wl.basic" is
                                  used as the default scope. Specifies a list of OAuth
                                  2.0 scopes that will be requested as part of GitHub
                                  Login authentication.
                                items:
                                  type: string
                                type: array
                            required:
                            - clientId
                            type: object
                          type: array
                        google:
                          description: A google block as defined below.
                          items:
                            properties:
                              clientId:
                                description: The OAuth 2.0 client ID that was created
                                  for the app used for authentication. The OpenID
                                  Connect Client ID for the Google web application.
                                type: string
                              clientSecretSecretRef:
                                description: The OAuth 2.0 client secret that was
                                  created for the app used for authentication. Cannot
                                  be specified with client_secret_setting_name. The
                                  client secret associated with the Google web application.  Cannot
                                  be specified with `client_secret_setting_name`.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                              clientSecretSettingName:
                                description: The app setting name containing the OAuth
                                  2.0 client secret that was created for the app used
                                  for authentication. Cannot be specified with client_secret.
                                  The app setting name that contains the `client_secret`
                                  value used for Google Login. Cannot be specified
                                  with `client_secret`.
                                type: string
                              oauthScopes:
                                description: Specifies a list of OAuth 2.0 scopes
                                  that will be requested as part of Microsoft Account
                                  authentication. If not specified, "wl.basic" is
                                  used as the default scope. Specifies a list of OAuth
                                  2.0 scopes that will be requested as part of Google
                                  Sign-In authentication. If not specified, "openid",
                                  "profile", and "email" are used as default scopes.
                                items:
                                  type: string
                                type: array
                            required:
                            - clientId
                            type: object
                          type: array
                        issuer:
                          description: The OpenID Connect Issuer URI that represents
                            the entity that issues access tokens for this Linux Web
                            App. The OpenID Connect Issuer URI that represents the
                            entity which issues access tokens.
                          type: string
                        microsoft:
                          description: A microsoft block as defined below.
                          items:
                            properties:
                              clientId:
                                description: The OAuth 2.0 client ID that was created
                                  for the app used for authentication. The OAuth 2.0
                                  client ID that was created for the app used for
                                  authentication.
                                type: string
                              clientSecretSecretRef:
                                description: The OAuth 2.0 client secret that was
                                  created for the app used for authentication. Cannot
                                  be specified with client_secret_setting_name. The
                                  OAuth 2.0 client secret that was created for the
                                  app used for authentication. Cannot be specified
                                  with `client_secret_setting_name`.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                              clientSecretSettingName:
                                description: The app setting name containing the OAuth
                                  2.0 client secret that was created for the app used
                                  for authentication. Cannot be specified with client_secret.
                                  The app setting name containing the OAuth 2.0 client
                                  secret that was created for the app used for authentication.
                                  Cannot be specified with `client_secret`.
                                type: string
                              oauthScopes:
                                description: Specifies a list of OAuth 2.0 scopes
                                  that will be requested as part of Microsoft Account
                                  authentication. If not specified, "wl.basic" is
                                  used as the default scope. The list of OAuth 2.0
                                  scopes that will be requested as part of Microsoft
                                  Account authentication. If not specified, `wl.basic`
                                  is used as the default scope.
                                items:
                                  type: string
                                type: array
                            required:
                            - clientId
                            type: object
                          type: array
                        runtimeVersion:
                          description: The RuntimeVersion of the Authentication /
                            Authorization feature in use for the Linux Web App. The
                            RuntimeVersion of the Authentication / Authorization feature
                            in use.
                          type: string
                        tokenRefreshExtensionHours:
                          description: The number of hours after session token expiration
                            that a session token can be used to call the token refresh
                            API. Defaults to 72 hours. The number of hours after session
                            token expiration that a session token can be used to call
                            the token refresh API. Defaults to `72` hours.
                          type: number
                        tokenStoreEnabled:
                          description: Should the Linux Web App durably store platform-specific
                            security tokens that are obtained during login flows?
                            Defaults to false. Should the Windows Web App durably
                            store platform-specific security tokens that are obtained
                            during login flows? Defaults to `false`.
                          type: boolean
                        twitter:
                          description: A twitter block as defined below.
                          items:
                            properties:
                              consumerKey:
                                description: The OAuth 1.0a consumer key of the Twitter
                                  application used for sign-in. The OAuth 1.0a consumer
                                  key of the Twitter application used for sign-in.
                                type: string
                              consumerSecretSecretRef:
                                description: The OAuth 1.0a consumer secret of the
                                  Twitter application used for sign-in. Cannot be
                                  specified with consumer_secret_setting_name. The
                                  OAuth 1.0a consumer secret of the Twitter application
                                  used for sign-in. Cannot be specified with `consumer_secret_setting_name`.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                              consumerSecretSettingName:
                                description: The app setting name that contains the
                                  OAuth 1.0a consumer secret of the Twitter application
                                  used for sign-in. Cannot be specified with consumer_secret.
                                  The app setting name that contains the OAuth 1.0a
                                  consumer secret of the Twitter application used
                                  for sign-in. Cannot be specified with `consumer_secret`.
                                type: string
                            required:
                            - consumerKey
                            type: object
                          type: array
                        unauthenticatedClientAction:
                          description: 'The action to take when an unauthenticated
                            client attempts to access the app. Possible values include:
                            RedirectToLoginPage, AllowAnonymous. The action to take
                            when an unauthenticated client attempts to access the
                            app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.'
                          type: string
                      required:
                      - enabled
                      type: object
                    type: array
                  backup:
                    description: A backup block as defined below.
                    items:
                      properties:
                        enabled:
                          description: Should this backup job be enabled? Defaults
                            to true. Should this backup job be enabled?
                          type: boolean
                        name:
                          description: The name which should be used for this Backup.
                            The name which should be used for this Backup.
                          type: string
                        schedule:
                          description: An schedule block as defined below.
                          items:
                            properties:
                              frequencyInterval:
                                description: How often the backup should be executed
                                  (e.g. for weekly backup, this should be set to 7
                                  and frequency_unit should be set to Day). How often
                                  the backup should be executed (e.g. for weekly backup,
                                  this should be set to `7` and `frequency_unit` should
                                  be set to `Day`).
                                type: number
                              frequencyUnit:
                                description: 'The unit of time for how often the backup
                                  should take place. Possible values include: Day,
                                  Hour The unit of time for how often the backup should
                                  take place. Possible values include: `Day` and `Hour`.'
                                type: string
                              keepAtLeastOneBackup:
                                description: Should the service keep at least one
                                  backup, regardless of the age of backup? Defaults
                                  to false. Should the service keep at least one backup,
                                  regardless of age of backup. Defaults to `false`.
                                type: boolean
                              retentionPeriodDays:
                                description: After how many days backups should be
                                  deleted. Defaults to 30. After how many days backups
                                  should be deleted.
                                type: number
                              startTime:
                                description: When the schedule should start working
                                  in RFC-3339 format. When the schedule should start
                                  working in RFC-3339 format.
                                type: string
                            required:
                            - frequencyInterval
                            - frequencyUnit
                            type: object
                          type: array
                        storageAccountUrlSecretRef:
                          description: The SAS URL to the container. The SAS URL to
                            the container.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      required:
                      - name
                      - schedule
                      - storageAccountUrlSecretRef
                      type: object
                    type: array
                  clientAffinityEnabled:
                    description: Should Client Affinity be enabled?
                    type: boolean
                  clientCertificateEnabled:
                    description: Should Client Certificates be enabled?
                    type: boolean
                  clientCertificateExclusionPaths:
                    description: Paths to exclude when using client certificates,
                      separated by ; Paths to exclude when using client certificates,
                      separated by ;
                    type: string
                  clientCertificateMode:
                    description: The Client Certificate mode. Possible values are
                      Required, Optional, and OptionalInteractiveUser. This property
                      has no effect when client_cert_enabled is false
                    type: string
                  connectionString:
                    description: One or more connection_string blocks as defined below.
                    items:
                      properties:
                        name:
                          description: The name which should be used for this Storage
                            Account. The name which should be used for this Connection.
                          type: string
                        type:
                          description: 'Type of database. Possible values include
                            APIHub, Custom, DocDb, EventHub, MySQL, NotificationHub,
                            PostgreSQL, RedisCache, ServiceBus, SQLAzure, and SQLServer.
                            Type of database. Possible values include: `MySQL`, `SQLServer`,
                            `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`,
                            `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.'
                          type: string
                        valueSecretRef:
                          description: The connection string value. The connection
                            string value.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      required:
                      - name
                      - type
                      - valueSecretRef
                      type: object
                    type: array
                  enabled:
                    description: Should the Linux Web App be enabled? Defaults to
                      true.
                    type: boolean
                  httpsOnly:
                    description: Should the Linux Web App require HTTPS connections.
                    type: boolean
                  identity:
                    description: An identity block as defined below.
                    items:
                      properties:
                        identityIds:
                          description: A list of User Assigned Managed Identity IDs
                            to be assigned to this Linux Web App Slot.
                          items:
                            type: string
                          type: array
                        type:
                          description: Specifies the type of Managed Service Identity
                            that should be configured on this Linux Web App Slot.
                            Possible values are SystemAssigned, UserAssigned and SystemAssigned,
                            UserAssigned (to enable both).
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  keyVaultReferenceIdentityId:
                    description: The User Assigned Identity ID used for accessing
                      KeyVault secrets. The identity must be assigned to the application
                      in the identity block. For more information see - Access vaults
                      with a user-assigned identity.
                    type: string
                  logs:
                    description: A logs block as defined below.
                    items:
                      properties:
                        applicationLogs:
                          description: A application_logs block as defined above.
                          items:
                            properties:
                              azureBlobStorage:
                                description: A azure_blob_storage block as defined
                                  above.
                                items:
                                  properties:
                                    level:
                                      description: 'The level at which to log. Possible
                                        values include Error, Warning, Information,
                                        Verbose and Off. NOTE: this field is not available
                                        for http_logs'
                                      type: string
                                    retentionInDays:
                                      description: The retention period in days. A
                                        values of 0 means no retention.
                                      type: number
                                    sasUrl:
                                      description: SAS URL to an Azure blob container
                                        with read/write/list/delete permissions.
                                      type: string
                                  required:
                                  - level
                                  - retentionInDays
                                  - sasUrl
                                  type: object
                                type: array
                              fileSystemLevel:
                                description: Log level. Possible values include Verbose,
                                  Information, Warning, and Error.
                                type: string
                            required:
                            - fileSystemLevel
                            type: object
                          type: array
                        detailedErrorMessages:
                          description: Should detailed error messages be enabled?
                          type: boolean
                        failedRequestTracing:
                          description: Should the failed request tracing be enabled?
                          type: boolean
                        httpLogs:
                          description: An http_logs block as defined above.
                          items:
                            properties:
                              azureBlobStorage:
                                description: A azure_blob_storage block as defined
                                  above.
                                items:
                                  properties:
                                    retentionInDays:
                                      description: The retention period in days. A
                                        values of 0 means no retention.
                                      type: number
                                    sasurlSecretRef:
                                      description: SAS URL to an Azure blob container
                                        with read/write/list/delete permissions.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: Name of the secret.
                                          type: string
                                        namespace:
                                          description: Namespace of the secret.
                                          type: string
                                      required:
                                      - key
                                      - name
                                      - namespace
                                      type: object
                                  required:
                                  - sasurlSecretRef
                                  type: object
                                type: array
                              fileSystem:
                                description: A file_system block as defined above.
                                items:
                                  properties:
                                    retentionInDays:
                                      description: The retention period in days. A
                                        values of 0 means no retention.
                                      type: number
                                    retentionInMb:
                                      description: The maximum size in megabytes that
                                        log files can use.
                                      type: number
                                  required:
                                  - retentionInDays
                                  - retentionInMb
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  name:
                    description: The name which should be used for this Linux Web
                      App Slot. Changing this forces a new Linux Web App Slot to be
                      created.
                    type: string
                  servicePlanId:
                    description: The ID of the Service Plan in which to run this slot.
                      If not specified the same Service Plan as the Linux Web App
                      will be used.
                    type: string
                  siteConfig:
                    description: A site_config block as defined below.
                    items:
                      properties:
                        alwaysOn:
                          description: If this Linux Web App is Always On enabled.
                            Defaults to true.
                          type: boolean
                        apiDefinitionUrl:
                          description: The URL to the API Definition for this Linux
                            Web App Slot.
                          type: string
                        apiManagementApiId:
                          description: The API Management API ID this Linux Web App
                            Slot is associated with.
                          type: string
                        appCommandLine:
                          description: The App command line to launch.
                          type: string
                        applicationStack:
                          description: A application_stack block as defined above.
                          items:
                            properties:
                              dockerImage:
                                description: The Docker image reference, including
                                  repository host as needed.
                                type: string
                              dockerImageTag:
                                description: The image Tag to use. e.g. latest.
                                type: string
                              dotnetVersion:
                                description: The version of .NET to use. Possible
                                  values include 3.1, 5.0, 6.0 and 7.0.
                                type: string
                              goVersion:
                                description: The version of Go to use. Possible values
                                  include 1.18, and 1.19.
                                type: string
                              javaServer:
                                description: The Java server type. Possible values
                                  include JAVA, TOMCAT, and JBOSSEAP.
                                type: string
                              javaServerVersion:
                                description: The Version of the java_server to use.
                                type: string
                              javaVersion:
                                description: The Version of Java to use. Possible
                                  values include 8, 11, and 17.
                                type: string
                              nodeVersion:
                                description: The version of Node to run. Possible
                                  values include 12-lts, 14-lts, 16-lts, and 18-lts.
                                  This property conflicts with java_version.
                                type: string
                              phpVersion:
                                description: The version of PHP to run. Possible values
                                  are 7.4, 8.0 and 8.1.
                                type: string
                              pythonVersion:
                                description: The version of Python to run. Possible
                                  values include 3.7, 3.8, 3.9, 3.10 and 3.11.
                                type: string
                              rubyVersion:
                                description: Te version of Ruby to run. Possible values
                                  include 2.6 and 2.7.
                                type: string
                            type: object
                          type: array
                        autoHealEnabled:
                          description: Should Auto heal rules be enabled? Required
                            with auto_heal_setting.
                          type: boolean
                        autoHealSetting:
                          description: A auto_heal_setting block as defined above.
                            Required with auto_heal.
                          items:
                            properties:
                              action:
                                description: The action to take. Possible values are
                                  Allow or Deny.
                                items:
                                  properties:
                                    actionType:
                                      description: 'Predefined action to be taken
                                        to an Auto Heal trigger. Possible values include:
                                        Recycle.'
                                      type: string
                                    minimumProcessExecutionTime:
                                      description: The minimum amount of time in hh:mm:ss
                                        the Linux Web App must have been running before
                                        the defined action will be run in the event
                                        of a trigger.
                                      type: string
                                  required:
                                  - actionType
                                  type: object
                                type: array
                              trigger:
                                description: A trigger block as defined below.
                                items:
                                  properties:
                                    requests:
                                      description: A requests block as defined above.
                                      items:
                                        properties:
                                          count:
                                            description: The number of occurrences
                                              of the defined status_code in the specified
                                              interval on which to trigger this rule.
                                            type: number
                                          interval:
                                            description: The time interval in the
                                              form hh:mm:ss.
                                            type: string
                                        required:
                                        - count
                                        - interval
                                        type: object
                                      type: array
                                    slowRequest:
                                      description: One or more slow_request blocks
                                        as defined above.
                                      items:
                                        properties:
                                          count:
                                            description: The number of occurrences
                                              of the defined status_code in the specified
                                              interval on which to trigger this rule.
                                            type: number
                                          interval:
                                            description: The time interval in the
                                              form hh:mm:ss.
                                            type: string
                                          path:
                                            description: The path to which this rule
                                              status code applies.
                                            type: string
                                          timeTaken:
                                            description: The threshold of time passed
                                              to qualify as a Slow Request in hh:mm:ss.
                                            type: string
                                        required:
                                        - count
                                        - interval
                                        - timeTaken
                                        type: object
                                      type: array
                                    statusCode:
                                      description: One or more status_code blocks
                                        as defined above.
                                      items:
                                        properties:
                                          count:
                                            description: The number of occurrences
                                              of the defined status_code in the specified
                                              interval on which to trigger this rule.
                                            type: number
                                          interval:
                                            description: The time interval in the
                                              form hh:mm:ss.
                                            type: string
                                          path:
                                            description: The path to which this rule
                                              status code applies.
                                            type: string
                                          statusCodeRange:
                                            description: The status code for this
                                              rule, accepts single status codes and
                                              status code ranges. e.g. 500 or 400-499.
                                              Possible values are integers between
                                              101 and 599
                                            type: string
                                          subStatus:
                                            description: The Request Sub Status of
                                              the Status Code.
                                            type: number
                                          win32Status:
                                            description: The Win32 Status Code of
                                              the Request.
                                            type: string
                                        required:
                                        - count
                                        - interval
                                        - statusCodeRange
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                        autoSwapSlotName:
                          description: The Linux Web App Slot Name to automatically
                            swap to when deployment to that slot is successfully completed.
                          type: string
                        containerRegistryManagedIdentityClientId:
                          description: The Client ID of the Managed Service Identity
                            to use for connections to the Azure Container Registry.
                          type: string
                        containerRegistryUseManagedIdentity:
                          description: Should connections for Azure Container Registry
                            use Managed Identity.
                          type: boolean
                        cors:
                          description: A cors block as defined above.
                          items:
                            properties:
                              allowedOrigins:
                                description: Specifies a list of origins that should
                                  be allowed to make cross-origin calls. Specifies
                                  a list of origins that should be allowed to make
                                  cross-origin calls.
                                items:
                                  type: string
                                type: array
                              supportCredentials:
                                description: Whether CORS requests with credentials
                                  are allowed. Defaults to false Are credentials allowed
                                  in CORS requests? Defaults to `false`.
                                type: boolean
                            required:
                            - allowedOrigins
                            type: object
                          type: array
                        defaultDocuments:
                          description: Specifies a list of Default Documents for the
                            Linux Web App.
                          items:
                            type: string
                          type: array
                        ftpsState:
                          description: The State of FTP / FTPS service. Possible values
                            include AllAllowed, FtpsOnly, and Disabled.
                          type: string
                        healthCheckEvictionTimeInMin:
                          description: The amount of time in minutes that a node can
                            be unhealthy before being removed from the load balancer.
                            Possible values are between 2 and 10. Only valid in conjunction
                            with health_check_path. The amount of time in minutes
                            that a node is unhealthy before being removed from the
                            load balancer. Possible values are between `2` and `10`.
                            Defaults to `10`. Only valid in conjunction with `health_check_path`
                          type: number
                        healthCheckPath:
                          description: The path to the Health Check.
                          type: string
                        http2Enabled:
                          description: Should the HTTP2 be enabled?
                          type: boolean
                        ipRestriction:
                          description: One or more ip_restriction blocks as defined
                            above.
                          items:
                            properties:
                              action:
                                description: The action to take. Possible values are
                                  Allow or Deny.
                                type: string
                              headers:
                                description: A headers block as defined above.
                                items:
                                  properties:
                                    xAzureFdid:
                                      description: Specifies a list of Azure Front
                                        Door IDs.
                                      items:
                                        type: string
                                      type: array
                                    xFdHealthProbe:
                                      description: Specifies if a Front Door Health
                                        Probe should be expected. The only possible
                                        value is 1.
                                      items:
                                        type: string
                                      type: array
                                    xForwardedFor:
                                      description: Specifies a list of addresses for
                                        which matching should be applied. Omitting
                                        this value means allow any.
                                      items:
                                        type: string
                                      type: array
                                    xForwardedHost:
                                      description: Specifies a list of Hosts for which
                                        matching should be applied.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              ipAddress:
                                description: 'The CIDR notation of the IP or IP Range
                                  to match. For example: 10.0.0.0/24 or 192.168.10.1/32'
                                type: string
                              name:
                                description: The name which should be used for this
                                  Storage Account.
                                type: string
                              priority:
                                description: The priority value of this ip_restriction.
                                  Defaults to 65000.
                                type: number
                              serviceTag:
                                description: The Service Tag used for this IP Restriction.
                                type: string
                              virtualNetworkSubnetId:
                                description: The subnet id which will be used by this
                                  Web App Slot for regional virtual network integration.
                                type: string
                              virtualNetworkSubnetIdRef:
                                description: Reference to a Subnet in network to populate
                                  virtualNetworkSubnetId.
                                properties:
                                  name:
                                    description: Name of the referenced object.
                                    type: string
                                  policy:
                                    description: Policies for referencing.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: Resolution specifies whether
                                          resolution of this reference is required.
                                          The default is 'Required', which means the
                                          reconcile will fail if the reference cannot
                                          be resolved. 'Optional' means this reference
                                          will be a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: Resolve specifies when this reference
                                          should be resolved. The default is 'IfNotPresent',
                                          which will attempt to resolve the reference
                                          only when the corresponding field is not
                                          present. Use 'Always' to resolve the reference
                                          on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                required:
                                - name
                                type: object
                              virtualNetworkSubnetIdSelector:
                                description: Selector for a Subnet in network to populate
                                  virtualNetworkSubnetId.
                                properties:
                                  matchControllerRef:
                                    description: MatchControllerRef ensures an object
                                      with the same controller reference as the selecting
                                      object is selected.
                                    type: boolean
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: MatchLabels ensures an object with
                                      matching labels is selected.
                                    type: object
                                  policy:
                                    description: Policies for selection.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: Resolution specifies whether
                                          resolution of this reference is required.
                                          The default is 'Required', which means the
                                          reconcile will fail if the reference cannot
                                          be resolved. 'Optional' means this reference
                                          will be a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: Resolve specifies when this reference
                                          should be resolved. The default is 'IfNotPresent',
                                          which will attempt to resolve the reference
                                          only when the corresponding field is not
                                          present. Use 'Always' to resolve the reference
                                          on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                type: object
                            type: object
                          type: array
                        loadBalancingMode:
                          description: 'The Site load balancing. Possible values include:
                            WeightedRoundRobin, LeastRequests, LeastResponseTime,
                            WeightedTotalTraffic, RequestHash, PerSiteRoundRobin.
                            Defaults to LeastRequests if omitted.'
                          type: string
                        localMysqlEnabled:
                          description: Use Local MySQL. Defaults to false.
                          type: boolean
                        managedPipelineMode:
                          description: 'Managed pipeline mode. Possible values include:
                            Integrated, Classic.'
                          type: string
                        minimumTlsVersion:
                          description: 'The configures the minimum version of TLS
                            required for SSL requests. Possible values include: 1.0,
                            1.1, and 1.2. Defaults to 1.2.'
                          type: string
                        remoteDebuggingEnabled:
                          description: Should Remote Debugging be enabled? Defaults
                            to false.
                          type: boolean
                        remoteDebuggingVersion:
                          description: The Remote Debugging Version. Possible values
                            include VS2017 and VS2019
                          type: string
                        scmIpRestriction:
                          description: One or more scm_ip_restriction blocks as defined
                            above.
                          items:
                            properties:
                              action:
                                description: The action to take. Possible values are
                                  Allow or Deny.
                                type: string
                              headers:
                                description: A headers block as defined above.
                                items:
                                  properties:
                                    xAzureFdid:
                                      description: Specifies a list of Azure Front
                                        Door IDs.
                                      items:
                                        type: string
                                      type: array
                                    xFdHealthProbe:
                                      description: Specifies if a Front Door Health
                                        Probe should be expected. The only possible
                                        value is 1.
                                      items:
                                        type: string
                                      type: array
                                    xForwardedFor:
                                      description: Specifies a list of addresses for
                                        which matching should be applied. Omitting
                                        this value means allow any.
                                      items:
                                        type: string
                                      type: array
                                    xForwardedHost:
                                      description: Specifies a list of Hosts for which
                                        matching should be applied.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              ipAddress:
                                description: 'The CIDR notation of the IP or IP Range
                                  to match. For example: 10.0.0.0/24 or 192.168.10.1/32'
                                type: string
                              name:
                                description: The name which should be used for this
                                  Storage Account.
                                type: string
                              priority:
                                description: The priority value of this ip_restriction.
                                  Defaults to 65000.
                                type: number
                              serviceTag:
                                description: The Service Tag used for this IP Restriction.
                                type: string
                              virtualNetworkSubnetId:
                                description: The subnet id which will be used by this
                                  Web App Slot for regional virtual network integration.
                                type: string
                              virtualNetworkSubnetIdRef:
                                description: Reference to a Subnet in network to populate
                                  virtualNetworkSubnetId.
                                properties:
                                  name:
                                    description: Name of the referenced object.
                                    type: string
                                  policy:
                                    description: Policies for referencing.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: Resolution specifies whether
                                          resolution of this reference is required.
                                          The default is 'Required', which means the
                                          reconcile will fail if the reference cannot
                                          be resolved. 'Optional' means this reference
                                          will be a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: Resolve specifies when this reference
                                          should be resolved. The default is 'IfNotPresent',
                                          which will attempt to resolve the reference
                                          only when the corresponding field is not
                                          present. Use 'Always' to resolve the reference
                                          on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                required:
                                - name
                                type: object
                              virtualNetworkSubnetIdSelector:
                                description: Selector for a Subnet in network to populate
                                  virtualNetworkSubnetId.
                                properties:
                                  matchControllerRef:
                                    description: MatchControllerRef ensures an object
                                      with the same controller reference as the selecting
                                      object is selected.
                                    type: boolean
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: MatchLabels ensures an object with
                                      matching labels is selected.
                                    type: object
                                  policy:
                                    description: Policies for selection.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: Resolution specifies whether
                                          resolution of this reference is required.
                                          The default is 'Required', which means the
                                          reconcile will fail if the reference cannot
                                          be resolved. 'Optional' means this reference
                                          will be a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: Resolve specifies when this reference
                                          should be resolved. The default is 'IfNotPresent',
                                          which will attempt to resolve the reference
                                          only when the corresponding field is not
                                          present. Use 'Always' to resolve the reference
                                          on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                type: object
                            type: object
                          type: array
                        scmMinimumTlsVersion:
                          description: 'The configures the minimum version of TLS
                            required for SSL requests to the SCM site Possible values
                            include: 1.0, 1.1, and 1.2. Defaults to 1.2.'
                          type: string
                        scmUseMainIpRestriction:
                          description: Should the Linux Web App ip_restriction configuration
                            be used for the SCM also.
                          type: boolean
                        use32BitWorker:
                          description: Should the Linux Web App use a 32-bit worker?
                            Defaults to true.
                          type: boolean
                        vnetRouteAllEnabled:
                          description: Should all outbound traffic have NAT Gateways,
                            Network Security Groups and User Defined Routes applied?
                            Defaults to false. Should all outbound traffic to have
                            Virtual Network Security Groups and User Defined Routes
                            applied? Defaults to `false`.
                          type: boolean
                        websocketsEnabled:
                          description: Should the Linux Web App be enabled? Defaults
                            to true.
                          type: boolean
                        workerCount:
                          description: The number of Workers for this Linux App Service
                            Slot.
                          type: number
                      type: object
                    type: array
                  storageAccount:
                    description: One or more storage_account blocks as defined below.
                    items:
                      properties:
                        accessKeySecretRef:
                          description: The Access key for the storage account.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        accountName:
                          description: The Name of the Storage Account.
                          type: string
                        mountPath:
                          description: The path at which to mount the storage share.
                          type: string
                        name:
                          description: The name which should be used for this Storage
                            Account.
                          type: string
                        shareName:
                          description: The Name of the File Share or Container Name
                            for Blob storage.
                          type: string
                        type:
                          description: The Azure Storage Type. Possible values include
                            AzureFiles and AzureBlob
                          type: string
                      required:
                      - accessKeySecretRef
                      - accountName
                      - name
                      - shareName
                      - type
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    description: A mapping of tags that should be assigned to the
                      Linux Web App.
                    type: object
                  virtualNetworkSubnetId:
                    description: The subnet id which will be used by this Web App
                      Slot for regional virtual network integration.
                    type: string
                  virtualNetworkSubnetIdRef:
                    description: Reference to a Subnet in network to populate virtualNetworkSubnetId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  virtualNetworkSubnetIdSelector:
                    description: Selector for a Subnet in network to populate virtualNetworkSubnetId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  zipDeployFile:
                    description: The local path and filename of the Zip packaged application
                      to deploy to this Linux Web App. The local path and filename
                      of the Zip packaged application to deploy to this Windows Web
                      App. **Note:** Using this value requires `WEBSITE_RUN_FROM_PACKAGE=1`
                      on the App in `app_settings`.
                    type: string
                required:
                - name
                - siteConfig
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: LinuxWebAppSlotStatus defines the observed state of LinuxWebAppSlot.
            properties:
              atProvider:
                properties:
                  appMetadata:
                    additionalProperties:
                      type: string
                    description: A app_metadata block as defined below.
                    type: object
                  backup:
                    description: A backup block as defined below.
                    items:
                      properties:
                        schedule:
                          description: An schedule block as defined below.
                          items:
                            properties:
                              lastExecutionTime:
                                description: The time the backup was last attempted.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  defaultHostname:
                    description: The default hostname of the Linux Web App.
                    type: string
                  id:
                    description: The ID of the Linux Web App.
                    type: string
                  identity:
                    description: An identity block as defined below.
                    items:
                      properties:
                        principalId:
                          description: The Principal ID associated with this Managed
                            Service Identity.
                          type: string
                        tenantId:
                          description: The Tenant ID associated with this Managed
                            Service Identity.
                          type: string
                      type: object
                    type: array
                  kind:
                    description: The Kind value for this Linux Web App.
                    type: string
                  outboundIpAddressList:
                    description: A list of outbound IP addresses - such as ["52.23.25.3",
                      "52.143.43.12"]
                    items:
                      type: string
                    type: array
                  outboundIpAddresses:
                    description: A comma-separated list of outbound IP addresses -
                      such as 52.23.25.3,52.143.43.12.
                    type: string
                  possibleOutboundIpAddressList:
                    description: A possible_outbound_ip_address_list block as defined
                      below.
                    items:
                      type: string
                    type: array
                  possibleOutboundIpAddresses:
                    description: A comma-separated list of outbound IP addresses -
                      such as 52.23.25.3,52.143.43.12,52.143.43.17 - not all of which
                      are necessarily in use. Superset of outbound_ip_addresses.
                    type: string
                  siteConfig:
                    description: A site_config block as defined below.
                    items:
                      properties:
                        detailedErrorLoggingEnabled:
                          description: Should the Linux Web App be enabled? Defaults
                            to true.
                          type: boolean
                        linuxFxVersion:
                          type: string
                        scmType:
                          type: string
                      type: object
                    type: array
                  siteCredential:
                    description: A site_credential block as defined below.
                    items:
                      properties:
                        name:
                          description: The Site Credentials Username used for publishing.
                          type: string
                        password:
                          description: The Site Credentials Password used for publishing.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
