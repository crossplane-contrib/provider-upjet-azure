---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: managedclusters.servicefabric.azure.upbound.io
spec:
  group: servicefabric.azure.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: ManagedCluster
    listKind: ManagedClusterList
    plural: managedclusters
    singular: managedcluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ManagedCluster is the Schema for the ManagedClusters API. Manages
          a Resource Group.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ManagedClusterSpec defines the desired state of ManagedCluster
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  authentication:
                    description: Controls how connections to the cluster are authenticated.
                      A authentication block as defined below.
                    items:
                      properties:
                        activeDirectory:
                          description: A active_directory block as defined above.
                          items:
                            properties:
                              clientApplicationId:
                                description: The ID of the Client Application.
                                type: string
                              clusterApplicationId:
                                description: The ID of the Cluster Application.
                                type: string
                              tenantId:
                                description: The ID of the Tenant.
                                type: string
                            required:
                            - clientApplicationId
                            - clusterApplicationId
                            - tenantId
                            type: object
                          type: array
                        certificate:
                          description: One or more certificate blocks as defined below.
                          items:
                            properties:
                              commonName:
                                description: The certificate's CN.
                                type: string
                              thumbprint:
                                description: The thumbprint of the certificate.
                                type: string
                              type:
                                description: The type of the certificate. Can be AdminClient
                                  or ReadOnlyClient.
                                type: string
                            required:
                            - thumbprint
                            - type
                            type: object
                          type: array
                      type: object
                    type: array
                  backupServiceEnabled:
                    description: If true, backup service is enabled.
                    type: boolean
                  clientConnectionPort:
                    description: Port to use when connecting to the cluster.
                    type: number
                  customFabricSetting:
                    description: One or more custom_fabric_setting blocks as defined
                      below.
                    items:
                      properties:
                        parameter:
                          description: Parameter name.
                          type: string
                        section:
                          description: Section name.
                          type: string
                        value:
                          description: Parameter value.
                          type: string
                      required:
                      - parameter
                      - section
                      - value
                      type: object
                    type: array
                  dnsName:
                    description: Hostname for the cluster. If unset the cluster's
                      name will be used..
                    type: string
                  dnsServiceEnabled:
                    description: If true, DNS service is enabled.
                    type: boolean
                  httpGatewayPort:
                    description: Port that should be used by the Service Fabric Explorer
                      to visualize applications and cluster status.
                    type: number
                  lbRule:
                    description: One or more lb_rule blocks as defined below.
                    items:
                      properties:
                        backendPort:
                          description: LB Backend port.
                          type: number
                        frontendPort:
                          description: LB Frontend port.
                          type: number
                        probeProtocol:
                          description: Protocol for the probe. Can be one of tcp,
                            udp, http, or https.
                          type: string
                        probeRequestPath:
                          description: Path for the probe to check, when probe protocol
                            is set to http.
                          type: string
                        protocol:
                          description: The transport protocol used in this rule. Can
                            be one of tcp or udp.
                          type: string
                      required:
                      - backendPort
                      - frontendPort
                      - probeProtocol
                      - protocol
                      type: object
                    type: array
                  location:
                    description: The Azure Region where the Resource Group should
                      exist. Changing this forces a new Resource Group to be created.
                    type: string
                  nodeType:
                    description: One or more node_type blocks as defined below.
                    items:
                      properties:
                        applicationPortRange:
                          description: Sets the port range available for applications.
                            Format is <from_port>-<to_port>, for example 10000-20000.
                          type: string
                        capacities:
                          additionalProperties:
                            type: string
                          description: Specifies a list of key/value pairs used to
                            set capacity tags for this node type.
                          type: object
                        dataDiskSizeGb:
                          description: The size of the data disk in gigabytes..
                          type: number
                        dataDiskType:
                          description: The type of the disk to use for storing data.
                            It can be one of Premium_LRS, Standard_LRS, or StandardSSD_LRS.
                          type: string
                        ephemeralPortRange:
                          description: Sets the port range available for the OS. Format
                            is <from_port>-<to_port>, for example 10000-20000. There
                            has to be at least 255 ports available and cannot overlap
                            with application_port_range..
                          type: string
                        multiplePlacementGroupsEnabled:
                          description: If set the node type can be composed of multiple
                            placement groups.
                          type: boolean
                        name:
                          description: The name which should be used for this node
                            type.
                          type: string
                        placementProperties:
                          additionalProperties:
                            type: string
                          description: Specifies a list of placement tags that can
                            be used to indicate where services should run..
                          type: object
                        primary:
                          description: If set to true, system services will run on
                            this node type. Only one node type should be marked as
                            primary. Primary node type cannot be deleted or changed
                            once they're created.
                          type: boolean
                        stateless:
                          description: If set to true, only stateless workloads can
                            run on this node type.
                          type: boolean
                        vmImageOffer:
                          description: The offer type of the marketplace image cluster
                            VMs will use.
                          type: string
                        vmImagePublisher:
                          description: The publisher of the marketplace image cluster
                            VMs will use.
                          type: string
                        vmImageSku:
                          description: The SKU of the marketplace image cluster VMs
                            will use.
                          type: string
                        vmImageVersion:
                          description: The version of the marketplace image cluster
                            VMs will use.
                          type: string
                        vmInstanceCount:
                          description: The number of instances this node type will
                            launch.
                          type: number
                        vmSecrets:
                          description: One or more vm_secrets blocks as defined below.
                          items:
                            properties:
                              certificates:
                                description: One or more certificates blocks as defined
                                  above.
                                items:
                                  properties:
                                    store:
                                      description: The certificate store on the Virtual
                                        Machine to which the certificate should be
                                        added.
                                      type: string
                                    url:
                                      description: The URL of a certificate that has
                                        been uploaded to Key Vault as a secret
                                      type: string
                                  required:
                                  - store
                                  - url
                                  type: object
                                type: array
                              vaultId:
                                description: The ID of the Vault that contain the
                                  certificates.
                                type: string
                            required:
                            - certificates
                            - vaultId
                            type: object
                          type: array
                        vmSize:
                          description: The size of the instances in this node type.
                          type: string
                      required:
                      - applicationPortRange
                      - dataDiskSizeGb
                      - ephemeralPortRange
                      - name
                      - vmImageOffer
                      - vmImagePublisher
                      - vmImageSku
                      - vmImageVersion
                      - vmInstanceCount
                      - vmSize
                      type: object
                    type: array
                  passwordSecretRef:
                    description: Administrator password for the VMs that will be created
                      as part of this cluster.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  resourceGroupName:
                    description: The name of the Resource Group where the Resource
                      Group should exist. Changing this forces a new Resource Group
                      to be created.
                    type: string
                  resourceGroupNameRef:
                    description: Reference to a ResourceGroup in azure to populate
                      resourceGroupName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  resourceGroupNameSelector:
                    description: Selector for a ResourceGroup in azure to populate
                      resourceGroupName.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  sku:
                    description: SKU for this cluster. Changing this forces a new
                      resource to be created. Default is Basic, allowed values are
                      either Basic or Standard.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: A mapping of tags which should be assigned to the
                      Resource Group.
                    type: object
                  upgradeWave:
                    description: Upgrade wave for the fabric runtime. Default is Wave0,
                      allowed value must be one of Wave0, Wave1, or Wave2.
                    type: string
                  username:
                    description: Administrator password for the VMs that will be created
                      as part of this cluster.
                    type: string
                required:
                - clientConnectionPort
                - httpGatewayPort
                - lbRule
                - location
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ManagedClusterStatus defines the observed state of ManagedCluster.
            properties:
              atProvider:
                properties:
                  id:
                    description: The ID of the Resource Group.
                    type: string
                  nodeType:
                    description: One or more node_type blocks as defined below.
                    items:
                      properties:
                        id:
                          description: The ID of the Resource Group.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
