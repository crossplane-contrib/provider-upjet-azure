---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: springcloudgateways.appplatform.azure.upbound.io
spec:
  group: appplatform.azure.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: SpringCloudGateway
    listKind: SpringCloudGatewayList
    plural: springcloudgateways
    singular: springcloudgateway
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: SpringCloudGateway is the Schema for the SpringCloudGateways
          API. Manages a Spring Cloud Gateway.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SpringCloudGatewaySpec defines the desired state of SpringCloudGateway
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  apiMetadata:
                    description: A api_metadata block as defined below.
                    items:
                      properties:
                        description:
                          description: Detailed description of the APIs available
                            on the Gateway instance.
                          type: string
                        documentationUrl:
                          description: Location of additional documentation for the
                            APIs available on the Gateway instance.
                          type: string
                        serverUrl:
                          description: Base URL that API consumers will use to access
                            APIs on the Gateway instance.
                          type: string
                        title:
                          description: Specifies the title describing the context
                            of the APIs available on the Gateway instance.
                          type: string
                        version:
                          description: Specifies the version of APIs available on
                            this Gateway instance.
                          type: string
                      type: object
                    type: array
                  applicationPerformanceMonitoringTypes:
                    description: Specifies a list of application performance monitoring
                      types used in the Spring Cloud Gateway. The allowed values are
                      AppDynamics, ApplicationInsights, Dynatrace, ElasticAPM and
                      NewRelic.
                    items:
                      type: string
                    type: array
                  cors:
                    description: A cors block as defined below.
                    items:
                      properties:
                        allowedHeaders:
                          description: Allowed headers in cross-site requests. The
                            special value * allows actual requests to send any header.
                          items:
                            type: string
                          type: array
                        allowedMethods:
                          description: Allowed HTTP methods on cross-site requests.
                            The special value * allows all methods. If not set, GET
                            and HEAD are allowed by default. Possible values are DELETE,
                            GET, HEAD, MERGE, POST, OPTIONS and PUT.
                          items:
                            type: string
                          type: array
                        allowedOrigins:
                          description: Allowed origins to make cross-site requests.
                            The special value * allows all domains.
                          items:
                            type: string
                          type: array
                        credentialsAllowed:
                          description: is user credentials are supported on cross-site
                            requests?
                          type: boolean
                        exposedHeaders:
                          description: HTTP response headers to expose for cross-site
                            requests.
                          items:
                            type: string
                          type: array
                        maxAgeSeconds:
                          description: How long, in seconds, the response from a pre-flight
                            request can be cached by clients.
                          type: number
                      type: object
                    type: array
                  environmentVariables:
                    additionalProperties:
                      type: string
                    description: Specifies the environment variables of the Spring
                      Cloud Gateway as a map of key-value pairs. Changing this forces
                      a new resource to be created.
                    type: object
                  httpsOnly:
                    description: is only https is allowed?
                    type: boolean
                  instanceCount:
                    description: Specifies the required instance count of the Spring
                      Cloud Gateway. Possible Values are between 1 and 500. Defaults
                      to 1 if not specified.
                    type: number
                  publicNetworkAccessEnabled:
                    description: Indicates whether the Spring Cloud Gateway exposes
                      endpoint.
                    type: boolean
                  quota:
                    description: A quota block as defined below.
                    items:
                      properties:
                        cpu:
                          description: Specifies the required cpu of the Spring Cloud
                            Deployment. Possible Values are 500m, 1, 2, 3 and 4. Defaults
                            to 1 if not specified.
                          type: string
                        memory:
                          description: Specifies the required memory size of the Spring
                            Cloud Deployment. Possible Values are 512Mi, 1Gi, 2Gi,
                            3Gi, 4Gi, 5Gi, 6Gi, 7Gi, and 8Gi. Defaults to 1Gi if not
                            specified.
                          type: string
                      type: object
                    type: array
                  sensitiveEnvironmentVariablesSecretRef:
                    description: Specifies the sensitive environment variables of
                      the Spring Cloud Gateway as a map of key-value pairs. Changing
                      this forces a new resource to be created.
                    properties:
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  springCloudServiceId:
                    description: The ID of the Spring Cloud Service. Changing this
                      forces a new Spring Cloud Gateway to be created.
                    type: string
                  springCloudServiceIdRef:
                    description: Reference to a SpringCloudService in appplatform
                      to populate springCloudServiceId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  springCloudServiceIdSelector:
                    description: Selector for a SpringCloudService in appplatform
                      to populate springCloudServiceId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  sso:
                    description: A sso block as defined below.
                    items:
                      properties:
                        clientId:
                          description: The public identifier for the application.
                          type: string
                        clientSecret:
                          description: The secret known only to the application and
                            the authorization server.
                          type: string
                        issuerUri:
                          description: The URI of Issuer Identifier.
                          type: string
                        scope:
                          description: It defines the specific actions applications
                            can be allowed to do on a user's behalf.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: SpringCloudGatewayStatus defines the observed state of SpringCloudGateway.
            properties:
              atProvider:
                properties:
                  id:
                    description: The ID of the Spring Cloud Gateway.
                    type: string
                  url:
                    description: URL of the Spring Cloud Gateway, exposed when 'public_network_access_enabled'
                      is true.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
