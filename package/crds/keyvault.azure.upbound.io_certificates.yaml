---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: certificates.keyvault.azure.upbound.io
spec:
  group: keyvault.azure.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: Certificate
    listKind: CertificateList
    plural: certificates
    singular: certificate
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Certificate is the Schema for the Certificates API. Manages a
          Key Vault Certificate.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CertificateSpec defines the desired state of Certificate
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  certificate:
                    description: A certificate block as defined below, used to Import
                      an existing certificate.
                    items:
                      properties:
                        contentsSecretRef:
                          description: The base64-encoded certificate contents.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        passwordSecretRef:
                          description: The password associated with the certificate.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      required:
                      - contentsSecretRef
                      type: object
                    type: array
                  certificatePolicy:
                    description: A certificate_policy block as defined below.
                    items:
                      properties:
                        issuerParameters:
                          description: A issuer_parameters block as defined below.
                          items:
                            properties:
                              name:
                                description: The name of the Certificate Issuer. Possible
                                  values include Self (for self-signed certificate),
                                  or Unknown (for a certificate issuing authority
                                  like Let's Encrypt and Azure direct supported ones).
                                  Changing this forces a new resource to be created.
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                        keyProperties:
                          description: A key_properties block as defined below.
                          items:
                            properties:
                              curve:
                                description: Specifies the curve to use when creating
                                  an EC key. Possible values are P-256, P-256K, P-384,
                                  and P-521. This field will be required in a future
                                  release if key_type is EC or EC-HSM. Changing this
                                  forces a new resource to be created.
                                type: string
                              exportable:
                                description: Is this certificate exportable? Changing
                                  this forces a new resource to be created.
                                type: boolean
                              keySize:
                                description: The size of the key used in the certificate.
                                  Possible values include 2048, 3072, and 4096 for
                                  RSA keys, or 256, 384, and 521 for EC keys. This
                                  property is required when using RSA keys. Changing
                                  this forces a new resource to be created.
                                type: number
                              keyType:
                                description: Specifies the type of key. Possible values
                                  are EC, EC-HSM, RSA, RSA-HSM and oct. Changing this
                                  forces a new resource to be created.
                                type: string
                              reuseKey:
                                description: Is the key reusable? Changing this forces
                                  a new resource to be created.
                                type: boolean
                            required:
                            - exportable
                            - keyType
                            - reuseKey
                            type: object
                          type: array
                        lifetimeAction:
                          description: A lifetime_action block as defined below.
                          items:
                            properties:
                              action:
                                description: A action block as defined below.
                                items:
                                  properties:
                                    actionType:
                                      description: The Type of action to be performed
                                        when the lifetime trigger is triggerec. Possible
                                        values include AutoRenew and EmailContacts.
                                        Changing this forces a new resource to be
                                        created.
                                      type: string
                                  required:
                                  - actionType
                                  type: object
                                type: array
                              trigger:
                                description: A trigger block as defined below.
                                items:
                                  properties:
                                    daysBeforeExpiry:
                                      description: The number of days before the Certificate
                                        expires that the action associated with this
                                        Trigger should run. Changing this forces a
                                        new resource to be created. Conflicts with
                                        lifetime_percentage.
                                      type: number
                                    lifetimePercentage:
                                      description: The percentage at which during
                                        the Certificates Lifetime the action associated
                                        with this Trigger should run. Changing this
                                        forces a new resource to be created. Conflicts
                                        with days_before_expiry.
                                      type: number
                                  type: object
                                type: array
                            required:
                            - action
                            - trigger
                            type: object
                          type: array
                        secretProperties:
                          description: A secret_properties block as defined below.
                          items:
                            properties:
                              contentType:
                                description: The Content-Type of the Certificate,
                                  such as application/x-pkcs12 for a PFX or application/x-pem-file
                                  for a PEM. Changing this forces a new resource to
                                  be created.
                                type: string
                            required:
                            - contentType
                            type: object
                          type: array
                        x509CertificateProperties:
                          description: A x509_certificate_properties block as defined
                            below. Required when certificate block is not specified.
                          items:
                            properties:
                              extendedKeyUsage:
                                description: A list of Extended/Enhanced Key Usages.
                                  Changing this forces a new resource to be created.
                                items:
                                  type: string
                                type: array
                              keyUsage:
                                description: A list of uses associated with this Key.
                                  Possible values include cRLSign, dataEncipherment,
                                  decipherOnly, digitalSignature, encipherOnly, keyAgreement,
                                  keyCertSign, keyEncipherment and nonRepudiation
                                  and are case-sensitive. Changing this forces a new
                                  resource to be created.
                                items:
                                  type: string
                                type: array
                              subject:
                                description: The Certificate's Subject. Changing this
                                  forces a new resource to be created.
                                type: string
                              subjectAlternativeNames:
                                description: A subject_alternative_names block as
                                  defined below.
                                items:
                                  properties:
                                    dnsNames:
                                      description: A list of alternative DNS names
                                        (FQDNs) identified by the Certificate. Changing
                                        this forces a new resource to be created.
                                      items:
                                        type: string
                                      type: array
                                    emails:
                                      description: A list of email addresses identified
                                        by this Certificate. Changing this forces
                                        a new resource to be created.
                                      items:
                                        type: string
                                      type: array
                                    upns:
                                      description: A list of User Principal Names
                                        identified by the Certificate. Changing this
                                        forces a new resource to be created.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              validityInMonths:
                                description: The Certificates Validity Period in Months.
                                  Changing this forces a new resource to be created.
                                type: number
                            required:
                            - keyUsage
                            - subject
                            - validityInMonths
                            type: object
                          type: array
                      required:
                      - issuerParameters
                      - keyProperties
                      - secretProperties
                      type: object
                    type: array
                  keyVaultId:
                    description: The ID of the Key Vault where the Certificate should
                      be created. Changing this forces a new resource to be created.
                    type: string
                  keyVaultIdRef:
                    description: Reference to a Vault to populate keyVaultId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  keyVaultIdSelector:
                    description: Selector for a Vault to populate keyVaultId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    description: A mapping of tags to assign to the resource.
                    type: object
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: CertificateStatus defines the observed state of Certificate.
            properties:
              atProvider:
                properties:
                  certificateAttribute:
                    description: A certificate_attribute block as defined below.
                    items:
                      properties:
                        created:
                          description: The create time of the Key Vault Certificate.
                          type: string
                        enabled:
                          description: whether the Key Vault Certificate is enabled.
                          type: boolean
                        expires:
                          description: The expires time of the Key Vault Certificate.
                          type: string
                        notBefore:
                          description: The not before valid time of the Key Vault
                            Certificate.
                          type: string
                        recoveryLevel:
                          description: The deletion recovery level of the Key Vault
                            Certificate.
                          type: string
                        updated:
                          description: The recent update time of the Key Vault Certificate.
                          type: string
                      type: object
                    type: array
                  certificateData:
                    description: The raw Key Vault Certificate data represented as
                      a hexadecimal string.
                    type: string
                  certificateDataBase64:
                    description: The Base64 encoded Key Vault Certificate data.
                    type: string
                  id:
                    description: The Key Vault Certificate ID.
                    type: string
                  secretId:
                    description: The ID of the associated Key Vault Secret.
                    type: string
                  thumbprint:
                    description: The X509 Thumbprint of the Key Vault Certificate
                      represented as a hexadecimal string.
                    type: string
                  version:
                    description: The current version of the Key Vault Certificate.
                    type: string
                  versionlessId:
                    description: The Base ID of the Key Vault Certificate.
                    type: string
                  versionlessSecretId:
                    description: The Base ID of the Key Vault Secret.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
