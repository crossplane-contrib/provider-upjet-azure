---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: vpnserverconfigurations.network.azure.upbound.io
spec:
  group: network.azure.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: VPNServerConfiguration
    listKind: VPNServerConfigurationList
    plural: vpnserverconfigurations
    singular: vpnserverconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VPNServerConfiguration is the Schema for the VPNServerConfigurations
          API. Manages a VPN Server Configuration.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VPNServerConfigurationSpec defines the desired state of VPNServerConfiguration
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  azureActiveDirectoryAuthentication:
                    description: A azure_active_directory_authentication block as
                      defined below.
                    items:
                      properties:
                        audience:
                          description: The Audience which should be used for authentication.
                          type: string
                        issuer:
                          description: The Issuer which should be used for authentication.
                          type: string
                        tenant:
                          description: The Tenant which should be used for authentication.
                          type: string
                      required:
                      - audience
                      - issuer
                      - tenant
                      type: object
                    type: array
                  clientRevokedCertificate:
                    description: One or more client_revoked_certificate blocks as
                      defined below.
                    items:
                      properties:
                        name:
                          description: A name used to uniquely identify this certificate.
                          type: string
                        thumbprint:
                          description: The Thumbprint of the Certificate.
                          type: string
                      required:
                      - name
                      - thumbprint
                      type: object
                    type: array
                  clientRootCertificate:
                    description: One or more client_root_certificate blocks as defined
                      below.
                    items:
                      properties:
                        name:
                          description: A name used to uniquely identify this certificate.
                          type: string
                        publicCertData:
                          description: The Public Key Data associated with the Certificate.
                          type: string
                      required:
                      - name
                      - publicCertData
                      type: object
                    type: array
                  ipsecPolicy:
                    description: A ipsec_policy block as defined below.
                    items:
                      properties:
                        dhGroup:
                          description: The DH Group, used in IKE Phase 1. Possible
                            values include DHGroup1, DHGroup2, DHGroup14, DHGroup24,
                            DHGroup2048, ECP256, ECP384 and None.
                          type: string
                        ikeEncryption:
                          description: The IKE encryption algorithm, used for IKE
                            Phase 2. Possible values include AES128, AES192, AES256,
                            DES, DES3, GCMAES128 and GCMAES256.
                          type: string
                        ikeIntegrity:
                          description: The IKE encryption integrity algorithm, used
                            for IKE Phase 2. Possible values include GCMAES128, GCMAES256,
                            MD5, SHA1, SHA256 and SHA384.
                          type: string
                        ipsecEncryption:
                          description: The IPSec encryption algorithm, used for IKE
                            phase 1. Possible values include AES128, AES192, AES256,
                            DES, DES3, GCMAES128, GCMAES192, GCMAES256 and None.
                          type: string
                        ipsecIntegrity:
                          description: The IPSec integrity algorithm, used for IKE
                            phase 1. Possible values include GCMAES128, GCMAES192,
                            GCMAES256, MD5, SHA1 and SHA256.
                          type: string
                        pfsGroup:
                          description: The Pfs Group, used in IKE Phase 2. Possible
                            values include ECP256, ECP384, PFS1, PFS2, PFS14, PFS24,
                            PFS2048, PFSMM and None.
                          type: string
                        saDataSizeKilobytes:
                          description: The IPSec Security Association payload size
                            in KB for a Site-to-Site VPN tunnel.
                          type: number
                        saLifetimeSeconds:
                          description: The IPSec Security Association lifetime in
                            seconds for a Site-to-Site VPN tunnel.
                          type: number
                      required:
                      - dhGroup
                      - ikeEncryption
                      - ikeIntegrity
                      - ipsecEncryption
                      - ipsecIntegrity
                      - pfsGroup
                      - saDataSizeKilobytes
                      - saLifetimeSeconds
                      type: object
                    type: array
                  location:
                    description: The Azure location where this VPN Server Configuration
                      should be created. Changing this forces a new resource to be
                      created.
                    type: string
                  radius:
                    description: A radius block as defined below.
                    items:
                      properties:
                        clientRootCertificate:
                          description: One or more client_root_certificate blocks
                            as defined above.
                          items:
                            properties:
                              name:
                                description: A name used to uniquely identify this
                                  certificate.
                                type: string
                              thumbprint:
                                description: The Thumbprint of the Certificate.
                                type: string
                            required:
                            - name
                            - thumbprint
                            type: object
                          type: array
                        server:
                          description: One or more server blocks as defined below.
                          items:
                            properties:
                              address:
                                description: The Address of the Radius Server.
                                type: string
                              score:
                                description: The Score of the Radius Server determines
                                  the priority of the server. Ranges from 1 to 30.
                                type: number
                              secretSecretRef:
                                description: The Secret used to communicate with the
                                  Radius Server.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                            required:
                            - address
                            - score
                            - secretSecretRef
                            type: object
                          type: array
                        serverRootCertificate:
                          description: One or more server_root_certificate blocks
                            as defined below.
                          items:
                            properties:
                              name:
                                description: A name used to uniquely identify this
                                  certificate.
                                type: string
                              publicCertData:
                                description: The Public Key Data associated with the
                                  Certificate.
                                type: string
                            required:
                            - name
                            - publicCertData
                            type: object
                          type: array
                      type: object
                    type: array
                  resourceGroupName:
                    description: The Name of the Resource Group in which this VPN
                      Server Configuration should be created. Changing this forces
                      a new resource to be created.
                    type: string
                  resourceGroupNameRef:
                    description: Reference to a ResourceGroup in azure to populate
                      resourceGroupName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  resourceGroupNameSelector:
                    description: Selector for a ResourceGroup in azure to populate
                      resourceGroupName.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    description: A mapping of tags to assign to the resource.
                    type: object
                  vpnAuthenticationTypes:
                    description: A list of Authentication Types applicable for this
                      VPN Server Configuration. Possible values are AAD (Azure Active
                      Directory), Certificate and Radius.
                    items:
                      type: string
                    type: array
                  vpnProtocols:
                    description: A list of VPN Protocols to use for this Server Configuration.
                      Possible values are IkeV2 and OpenVPN.
                    items:
                      type: string
                    type: array
                required:
                - location
                - vpnAuthenticationTypes
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: VPNServerConfigurationStatus defines the observed state of
              VPNServerConfiguration.
            properties:
              atProvider:
                properties:
                  id:
                    description: The ID of the VPN Server Configuration.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
