---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: eventsubscriptions.eventgrid.azure.upbound.io
spec:
  group: eventgrid.azure.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: EventSubscription
    listKind: EventSubscriptionList
    plural: eventsubscriptions
    singular: eventsubscription
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: EventSubscription is the Schema for the EventSubscriptions API.
          Manages an EventGrid Event Subscription
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EventSubscriptionSpec defines the desired state of EventSubscription
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  advancedFilter:
                    description: A advanced_filter block as defined below.
                    items:
                      properties:
                        boolEquals:
                          description: Compares a value of an event using a single
                            boolean value.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              value:
                                description: Specifies a single value to compare to
                                  when using a single value operator.
                                type: boolean
                            type: object
                          type: array
                        isNotNull:
                          description: Evaluates if a value of an event isn't NULL
                            or undefined.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                            type: object
                          type: array
                        isNullOrUndefined:
                          description: Evaluates if a value of an event is NULL or
                            undefined.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                            type: object
                          type: array
                        numberGreaterThan:
                          description: Compares a value of an event using a single
                            floating point number.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              value:
                                description: Specifies a single value to compare to
                                  when using a single value operator.
                                type: number
                            type: object
                          type: array
                        numberGreaterThanOrEquals:
                          description: Compares a value of an event using a single
                            floating point number.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              value:
                                description: Specifies a single value to compare to
                                  when using a single value operator.
                                type: number
                            type: object
                          type: array
                        numberIn:
                          description: Compares a value of an event using multiple
                            floating point numbers.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: number
                                type: array
                            type: object
                          type: array
                        numberInRange:
                          description: Compares a value of an event using multiple
                            floating point number ranges.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  items:
                                    type: number
                                  type: array
                                type: array
                            type: object
                          type: array
                        numberLessThan:
                          description: Compares a value of an event using a single
                            floating point number.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              value:
                                description: Specifies a single value to compare to
                                  when using a single value operator.
                                type: number
                            type: object
                          type: array
                        numberLessThanOrEquals:
                          description: Compares a value of an event using a single
                            floating point number.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              value:
                                description: Specifies a single value to compare to
                                  when using a single value operator.
                                type: number
                            type: object
                          type: array
                        numberNotIn:
                          description: Compares a value of an event using multiple
                            floating point numbers.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: number
                                type: array
                            type: object
                          type: array
                        numberNotInRange:
                          description: Compares a value of an event using multiple
                            floating point number ranges.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  items:
                                    type: number
                                  type: array
                                type: array
                            type: object
                          type: array
                        stringBeginsWith:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        stringContains:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        stringEndsWith:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        stringIn:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        stringNotBeginsWith:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        stringNotContains:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        stringNotEndsWith:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        stringNotIn:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  advancedFilteringOnArraysEnabled:
                    description: Specifies whether advanced filters should be evaluated
                      against an array of values instead of expecting a singular value.
                      Defaults to false.
                    type: boolean
                  azureFunctionEndpoint:
                    description: An azure_function_endpoint block as defined below.
                    items:
                      properties:
                        functionId:
                          description: Specifies the ID of the Function where the
                            Event Subscription will receive events. This must be the
                            functions ID in format {function_app.id}/functions/{name}.
                          type: string
                        maxEventsPerBatch:
                          description: Maximum number of events per batch.
                          type: number
                        preferredBatchSizeInKilobytes:
                          description: Preferred batch size in Kilobytes.
                          type: number
                      type: object
                    type: array
                  deadLetterIdentity:
                    description: A dead_letter_identity block as defined below.
                    items:
                      properties:
                        type:
                          description: Specifies the type of Managed Service Identity
                            that is used for dead lettering. Allowed value is SystemAssigned,
                            UserAssigned.
                          type: string
                        userAssignedIdentity:
                          description: The user identity associated with the resource.
                          type: string
                      type: object
                    type: array
                  deliveryIdentity:
                    description: A delivery_identity block as defined below.
                    items:
                      properties:
                        type:
                          description: Specifies the type of Managed Service Identity
                            that is used for event delivery. Allowed value is SystemAssigned,
                            UserAssigned.
                          type: string
                        userAssignedIdentity:
                          description: The user identity associated with the resource.
                          type: string
                      type: object
                    type: array
                  deliveryProperty:
                    description: One or more delivery_property blocks as defined below.
                    items:
                      properties:
                        headerName:
                          description: The name of the header to send on to the destination
                          type: string
                        secret:
                          description: True if the value is a secret and should be
                            protected, otherwise false. If True, then this value won't
                            be returned from Azure API calls
                          type: boolean
                        sourceField:
                          description: If the type is Dynamic, then provide the payload
                            field to be used as the value. Valid source fields differ
                            by subscription type.
                          type: string
                        type:
                          description: Either Static or Dynamic
                          type: string
                        valueSecretRef:
                          description: If the type is Static, then provide the value
                            to use
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                  eventDeliverySchema:
                    description: 'Specifies the event delivery schema for the event
                      subscription. Possible values include: EventGridSchema, CloudEventSchemaV1_0,
                      CustomInputSchema. Defaults to EventGridSchema. Changing this
                      forces a new resource to be created.'
                    type: string
                  eventhubEndpointId:
                    description: Specifies the id where the Event Hub is located.
                    type: string
                  expirationTimeUtc:
                    description: Specifies the expiration time of the event subscription
                      (Datetime Format RFC 3339).
                    type: string
                  hybridConnectionEndpointId:
                    description: Specifies the id where the Hybrid Connection is located.
                    type: string
                  includedEventTypes:
                    description: A list of applicable event types that need to be
                      part of the event subscription.
                    items:
                      type: string
                    type: array
                  labels:
                    description: A list of labels to assign to the event subscription.
                    items:
                      type: string
                    type: array
                  name:
                    description: Specifies the name of the EventGrid Event Subscription
                      resource. Changing this forces a new resource to be created.
                    type: string
                  retryPolicy:
                    description: A retry_policy block as defined below.
                    items:
                      properties:
                        eventTimeToLive:
                          description: Specifies the time to live (in minutes) for
                            events. Supported range is 1 to 1440. See official documentation
                            for more details.
                          type: number
                        maxDeliveryAttempts:
                          description: Specifies the maximum number of delivery retry
                            attempts for events.
                          type: number
                      type: object
                    type: array
                  scope:
                    description: Specifies the scope at which the EventGrid Event
                      Subscription should be created. Changing this forces a new resource
                      to be created.
                    type: string
                  scopeRef:
                    description: Reference to a ResourceGroup in azure to populate
                      scope.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  scopeSelector:
                    description: Selector for a ResourceGroup in azure to populate
                      scope.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  serviceBusQueueEndpointId:
                    description: Specifies the id where the Service Bus Queue is located.
                    type: string
                  serviceBusTopicEndpointId:
                    description: Specifies the id where the Service Bus Topic is located.
                    type: string
                  storageBlobDeadLetterDestination:
                    description: A storage_blob_dead_letter_destination block as defined
                      below.
                    items:
                      properties:
                        storageAccountId:
                          description: Specifies the id of the storage account id
                            where the storage blob is located.
                          type: string
                        storageBlobContainerName:
                          description: Specifies the name of the Storage blob container
                            that is the destination of the deadletter events.
                          type: string
                      type: object
                    type: array
                  storageQueueEndpoint:
                    description: A storage_queue_endpoint block as defined below.
                    items:
                      properties:
                        queueMessageTimeToLiveInSeconds:
                          description: Storage queue message time to live in seconds.
                          type: number
                        queueName:
                          description: Specifies the name of the storage queue where
                            the Event Subscription will receive events.
                          type: string
                        queueNameRef:
                          description: Reference to a Queue in storage to populate
                            queueName.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        queueNameSelector:
                          description: Selector for a Queue in storage to populate
                            queueName.
                          properties:
                            matchControllerRef:
                              description: MatchControllerRef ensures an object with
                                the same controller reference as the selecting object
                                is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        storageAccountId:
                          description: Specifies the id of the storage account id
                            where the storage queue is located.
                          type: string
                        storageAccountIdRef:
                          description: Reference to a Account in storage to populate
                            storageAccountId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        storageAccountIdSelector:
                          description: Selector for a Account in storage to populate
                            storageAccountId.
                          properties:
                            matchControllerRef:
                              description: MatchControllerRef ensures an object with
                                the same controller reference as the selecting object
                                is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                  subjectFilter:
                    description: A subject_filter block as defined below.
                    items:
                      properties:
                        caseSensitive:
                          description: Specifies if subject_begins_with and subject_ends_with
                            case sensitive. This value
                          type: boolean
                        subjectBeginsWith:
                          description: A string to filter events for an event subscription
                            based on a resource path prefix.
                          type: string
                        subjectEndsWith:
                          description: A string to filter events for an event subscription
                            based on a resource path suffix.
                          type: string
                      type: object
                    type: array
                  webhookEndpoint:
                    description: A webhook_endpoint block as defined below.
                    items:
                      properties:
                        activeDirectoryAppIdOrUri:
                          description: The Azure Active Directory Application ID or
                            URI to get the access token that will be included as the
                            bearer token in delivery requests.
                          type: string
                        activeDirectoryTenantId:
                          description: The Azure Active Directory Tenant ID to get
                            the access token that will be included as the bearer token
                            in delivery requests.
                          type: string
                        maxEventsPerBatch:
                          description: Maximum number of events per batch.
                          type: number
                        preferredBatchSizeInKilobytes:
                          description: Preferred batch size in Kilobytes.
                          type: number
                        url:
                          description: Specifies the url of the webhook where the
                            Event Subscription will receive events.
                          type: string
                      type: object
                    type: array
                type: object
              initProvider:
                description: THIS IS A BETA FIELD. It will be honored unless the Management
                  Policies feature flag is disabled. InitProvider holds the same fields
                  as ForProvider, with the exception of Identifier and other resource
                  reference fields. The fields that are in InitProvider are merged
                  into ForProvider when the resource is created. The same fields are
                  also added to the terraform ignore_changes hook, to avoid updating
                  them after creation. This is useful for fields that are required
                  on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them,
                  like an autoscaler.
                properties:
                  advancedFilter:
                    description: A advanced_filter block as defined below.
                    items:
                      properties:
                        boolEquals:
                          description: Compares a value of an event using a single
                            boolean value.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              value:
                                description: Specifies a single value to compare to
                                  when using a single value operator.
                                type: boolean
                            type: object
                          type: array
                        isNotNull:
                          description: Evaluates if a value of an event isn't NULL
                            or undefined.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                            type: object
                          type: array
                        isNullOrUndefined:
                          description: Evaluates if a value of an event is NULL or
                            undefined.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                            type: object
                          type: array
                        numberGreaterThan:
                          description: Compares a value of an event using a single
                            floating point number.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              value:
                                description: Specifies a single value to compare to
                                  when using a single value operator.
                                type: number
                            type: object
                          type: array
                        numberGreaterThanOrEquals:
                          description: Compares a value of an event using a single
                            floating point number.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              value:
                                description: Specifies a single value to compare to
                                  when using a single value operator.
                                type: number
                            type: object
                          type: array
                        numberIn:
                          description: Compares a value of an event using multiple
                            floating point numbers.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: number
                                type: array
                            type: object
                          type: array
                        numberInRange:
                          description: Compares a value of an event using multiple
                            floating point number ranges.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  items:
                                    type: number
                                  type: array
                                type: array
                            type: object
                          type: array
                        numberLessThan:
                          description: Compares a value of an event using a single
                            floating point number.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              value:
                                description: Specifies a single value to compare to
                                  when using a single value operator.
                                type: number
                            type: object
                          type: array
                        numberLessThanOrEquals:
                          description: Compares a value of an event using a single
                            floating point number.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              value:
                                description: Specifies a single value to compare to
                                  when using a single value operator.
                                type: number
                            type: object
                          type: array
                        numberNotIn:
                          description: Compares a value of an event using multiple
                            floating point numbers.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: number
                                type: array
                            type: object
                          type: array
                        numberNotInRange:
                          description: Compares a value of an event using multiple
                            floating point number ranges.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  items:
                                    type: number
                                  type: array
                                type: array
                            type: object
                          type: array
                        stringBeginsWith:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        stringContains:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        stringEndsWith:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        stringIn:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        stringNotBeginsWith:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        stringNotContains:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        stringNotEndsWith:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        stringNotIn:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  advancedFilteringOnArraysEnabled:
                    description: Specifies whether advanced filters should be evaluated
                      against an array of values instead of expecting a singular value.
                      Defaults to false.
                    type: boolean
                  azureFunctionEndpoint:
                    description: An azure_function_endpoint block as defined below.
                    items:
                      properties:
                        functionId:
                          description: Specifies the ID of the Function where the
                            Event Subscription will receive events. This must be the
                            functions ID in format {function_app.id}/functions/{name}.
                          type: string
                        maxEventsPerBatch:
                          description: Maximum number of events per batch.
                          type: number
                        preferredBatchSizeInKilobytes:
                          description: Preferred batch size in Kilobytes.
                          type: number
                      type: object
                    type: array
                  deadLetterIdentity:
                    description: A dead_letter_identity block as defined below.
                    items:
                      properties:
                        type:
                          description: Specifies the type of Managed Service Identity
                            that is used for dead lettering. Allowed value is SystemAssigned,
                            UserAssigned.
                          type: string
                        userAssignedIdentity:
                          description: The user identity associated with the resource.
                          type: string
                      type: object
                    type: array
                  deliveryIdentity:
                    description: A delivery_identity block as defined below.
                    items:
                      properties:
                        type:
                          description: Specifies the type of Managed Service Identity
                            that is used for event delivery. Allowed value is SystemAssigned,
                            UserAssigned.
                          type: string
                        userAssignedIdentity:
                          description: The user identity associated with the resource.
                          type: string
                      type: object
                    type: array
                  deliveryProperty:
                    description: One or more delivery_property blocks as defined below.
                    items:
                      properties:
                        headerName:
                          description: The name of the header to send on to the destination
                          type: string
                        secret:
                          description: True if the value is a secret and should be
                            protected, otherwise false. If True, then this value won't
                            be returned from Azure API calls
                          type: boolean
                        sourceField:
                          description: If the type is Dynamic, then provide the payload
                            field to be used as the value. Valid source fields differ
                            by subscription type.
                          type: string
                        type:
                          description: Either Static or Dynamic
                          type: string
                      type: object
                    type: array
                  eventDeliverySchema:
                    description: 'Specifies the event delivery schema for the event
                      subscription. Possible values include: EventGridSchema, CloudEventSchemaV1_0,
                      CustomInputSchema. Defaults to EventGridSchema. Changing this
                      forces a new resource to be created.'
                    type: string
                  eventhubEndpointId:
                    description: Specifies the id where the Event Hub is located.
                    type: string
                  expirationTimeUtc:
                    description: Specifies the expiration time of the event subscription
                      (Datetime Format RFC 3339).
                    type: string
                  hybridConnectionEndpointId:
                    description: Specifies the id where the Hybrid Connection is located.
                    type: string
                  includedEventTypes:
                    description: A list of applicable event types that need to be
                      part of the event subscription.
                    items:
                      type: string
                    type: array
                  labels:
                    description: A list of labels to assign to the event subscription.
                    items:
                      type: string
                    type: array
                  name:
                    description: Specifies the name of the EventGrid Event Subscription
                      resource. Changing this forces a new resource to be created.
                    type: string
                  retryPolicy:
                    description: A retry_policy block as defined below.
                    items:
                      properties:
                        eventTimeToLive:
                          description: Specifies the time to live (in minutes) for
                            events. Supported range is 1 to 1440. See official documentation
                            for more details.
                          type: number
                        maxDeliveryAttempts:
                          description: Specifies the maximum number of delivery retry
                            attempts for events.
                          type: number
                      type: object
                    type: array
                  serviceBusQueueEndpointId:
                    description: Specifies the id where the Service Bus Queue is located.
                    type: string
                  serviceBusTopicEndpointId:
                    description: Specifies the id where the Service Bus Topic is located.
                    type: string
                  storageBlobDeadLetterDestination:
                    description: A storage_blob_dead_letter_destination block as defined
                      below.
                    items:
                      properties:
                        storageAccountId:
                          description: Specifies the id of the storage account id
                            where the storage blob is located.
                          type: string
                        storageBlobContainerName:
                          description: Specifies the name of the Storage blob container
                            that is the destination of the deadletter events.
                          type: string
                      type: object
                    type: array
                  storageQueueEndpoint:
                    description: A storage_queue_endpoint block as defined below.
                    items:
                      properties:
                        queueMessageTimeToLiveInSeconds:
                          description: Storage queue message time to live in seconds.
                          type: number
                      type: object
                    type: array
                  subjectFilter:
                    description: A subject_filter block as defined below.
                    items:
                      properties:
                        caseSensitive:
                          description: Specifies if subject_begins_with and subject_ends_with
                            case sensitive. This value
                          type: boolean
                        subjectBeginsWith:
                          description: A string to filter events for an event subscription
                            based on a resource path prefix.
                          type: string
                        subjectEndsWith:
                          description: A string to filter events for an event subscription
                            based on a resource path suffix.
                          type: string
                      type: object
                    type: array
                  webhookEndpoint:
                    description: A webhook_endpoint block as defined below.
                    items:
                      properties:
                        activeDirectoryAppIdOrUri:
                          description: The Azure Active Directory Application ID or
                            URI to get the access token that will be included as the
                            bearer token in delivery requests.
                          type: string
                        activeDirectoryTenantId:
                          description: The Azure Active Directory Tenant ID to get
                            the access token that will be included as the bearer token
                            in delivery requests.
                          type: string
                        maxEventsPerBatch:
                          description: Maximum number of events per batch.
                          type: number
                        preferredBatchSizeInKilobytes:
                          description: Preferred batch size in Kilobytes.
                          type: number
                        url:
                          description: Specifies the url of the webhook where the
                            Event Subscription will receive events.
                          type: string
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: EventSubscriptionStatus defines the observed state of EventSubscription.
            properties:
              atProvider:
                properties:
                  advancedFilter:
                    description: A advanced_filter block as defined below.
                    items:
                      properties:
                        boolEquals:
                          description: Compares a value of an event using a single
                            boolean value.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              value:
                                description: Specifies a single value to compare to
                                  when using a single value operator.
                                type: boolean
                            type: object
                          type: array
                        isNotNull:
                          description: Evaluates if a value of an event isn't NULL
                            or undefined.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                            type: object
                          type: array
                        isNullOrUndefined:
                          description: Evaluates if a value of an event is NULL or
                            undefined.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                            type: object
                          type: array
                        numberGreaterThan:
                          description: Compares a value of an event using a single
                            floating point number.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              value:
                                description: Specifies a single value to compare to
                                  when using a single value operator.
                                type: number
                            type: object
                          type: array
                        numberGreaterThanOrEquals:
                          description: Compares a value of an event using a single
                            floating point number.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              value:
                                description: Specifies a single value to compare to
                                  when using a single value operator.
                                type: number
                            type: object
                          type: array
                        numberIn:
                          description: Compares a value of an event using multiple
                            floating point numbers.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: number
                                type: array
                            type: object
                          type: array
                        numberInRange:
                          description: Compares a value of an event using multiple
                            floating point number ranges.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  items:
                                    type: number
                                  type: array
                                type: array
                            type: object
                          type: array
                        numberLessThan:
                          description: Compares a value of an event using a single
                            floating point number.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              value:
                                description: Specifies a single value to compare to
                                  when using a single value operator.
                                type: number
                            type: object
                          type: array
                        numberLessThanOrEquals:
                          description: Compares a value of an event using a single
                            floating point number.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              value:
                                description: Specifies a single value to compare to
                                  when using a single value operator.
                                type: number
                            type: object
                          type: array
                        numberNotIn:
                          description: Compares a value of an event using multiple
                            floating point numbers.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: number
                                type: array
                            type: object
                          type: array
                        numberNotInRange:
                          description: Compares a value of an event using multiple
                            floating point number ranges.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  items:
                                    type: number
                                  type: array
                                type: array
                            type: object
                          type: array
                        stringBeginsWith:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        stringContains:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        stringEndsWith:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        stringIn:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        stringNotBeginsWith:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        stringNotContains:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        stringNotEndsWith:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        stringNotIn:
                          description: Compares a value of an event using multiple
                            string values.
                          items:
                            properties:
                              key:
                                description: Specifies the field within the event
                                  data that you want to use for filtering. Type of
                                  the field can be a number, boolean, or string.
                                type: string
                              values:
                                description: Specifies an array of values to compare
                                  to when using a multiple values operator.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  advancedFilteringOnArraysEnabled:
                    description: Specifies whether advanced filters should be evaluated
                      against an array of values instead of expecting a singular value.
                      Defaults to false.
                    type: boolean
                  azureFunctionEndpoint:
                    description: An azure_function_endpoint block as defined below.
                    items:
                      properties:
                        functionId:
                          description: Specifies the ID of the Function where the
                            Event Subscription will receive events. This must be the
                            functions ID in format {function_app.id}/functions/{name}.
                          type: string
                        maxEventsPerBatch:
                          description: Maximum number of events per batch.
                          type: number
                        preferredBatchSizeInKilobytes:
                          description: Preferred batch size in Kilobytes.
                          type: number
                      type: object
                    type: array
                  deadLetterIdentity:
                    description: A dead_letter_identity block as defined below.
                    items:
                      properties:
                        type:
                          description: Specifies the type of Managed Service Identity
                            that is used for dead lettering. Allowed value is SystemAssigned,
                            UserAssigned.
                          type: string
                        userAssignedIdentity:
                          description: The user identity associated with the resource.
                          type: string
                      type: object
                    type: array
                  deliveryIdentity:
                    description: A delivery_identity block as defined below.
                    items:
                      properties:
                        type:
                          description: Specifies the type of Managed Service Identity
                            that is used for event delivery. Allowed value is SystemAssigned,
                            UserAssigned.
                          type: string
                        userAssignedIdentity:
                          description: The user identity associated with the resource.
                          type: string
                      type: object
                    type: array
                  deliveryProperty:
                    description: One or more delivery_property blocks as defined below.
                    items:
                      properties:
                        headerName:
                          description: The name of the header to send on to the destination
                          type: string
                        secret:
                          description: True if the value is a secret and should be
                            protected, otherwise false. If True, then this value won't
                            be returned from Azure API calls
                          type: boolean
                        sourceField:
                          description: If the type is Dynamic, then provide the payload
                            field to be used as the value. Valid source fields differ
                            by subscription type.
                          type: string
                        type:
                          description: Either Static or Dynamic
                          type: string
                      type: object
                    type: array
                  eventDeliverySchema:
                    description: 'Specifies the event delivery schema for the event
                      subscription. Possible values include: EventGridSchema, CloudEventSchemaV1_0,
                      CustomInputSchema. Defaults to EventGridSchema. Changing this
                      forces a new resource to be created.'
                    type: string
                  eventhubEndpointId:
                    description: Specifies the id where the Event Hub is located.
                    type: string
                  expirationTimeUtc:
                    description: Specifies the expiration time of the event subscription
                      (Datetime Format RFC 3339).
                    type: string
                  hybridConnectionEndpointId:
                    description: Specifies the id where the Hybrid Connection is located.
                    type: string
                  id:
                    description: The ID of the EventGrid Event Subscription.
                    type: string
                  includedEventTypes:
                    description: A list of applicable event types that need to be
                      part of the event subscription.
                    items:
                      type: string
                    type: array
                  labels:
                    description: A list of labels to assign to the event subscription.
                    items:
                      type: string
                    type: array
                  name:
                    description: Specifies the name of the EventGrid Event Subscription
                      resource. Changing this forces a new resource to be created.
                    type: string
                  retryPolicy:
                    description: A retry_policy block as defined below.
                    items:
                      properties:
                        eventTimeToLive:
                          description: Specifies the time to live (in minutes) for
                            events. Supported range is 1 to 1440. See official documentation
                            for more details.
                          type: number
                        maxDeliveryAttempts:
                          description: Specifies the maximum number of delivery retry
                            attempts for events.
                          type: number
                      type: object
                    type: array
                  scope:
                    description: Specifies the scope at which the EventGrid Event
                      Subscription should be created. Changing this forces a new resource
                      to be created.
                    type: string
                  serviceBusQueueEndpointId:
                    description: Specifies the id where the Service Bus Queue is located.
                    type: string
                  serviceBusTopicEndpointId:
                    description: Specifies the id where the Service Bus Topic is located.
                    type: string
                  storageBlobDeadLetterDestination:
                    description: A storage_blob_dead_letter_destination block as defined
                      below.
                    items:
                      properties:
                        storageAccountId:
                          description: Specifies the id of the storage account id
                            where the storage blob is located.
                          type: string
                        storageBlobContainerName:
                          description: Specifies the name of the Storage blob container
                            that is the destination of the deadletter events.
                          type: string
                      type: object
                    type: array
                  storageQueueEndpoint:
                    description: A storage_queue_endpoint block as defined below.
                    items:
                      properties:
                        queueMessageTimeToLiveInSeconds:
                          description: Storage queue message time to live in seconds.
                          type: number
                        queueName:
                          description: Specifies the name of the storage queue where
                            the Event Subscription will receive events.
                          type: string
                        storageAccountId:
                          description: Specifies the id of the storage account id
                            where the storage queue is located.
                          type: string
                      type: object
                    type: array
                  subjectFilter:
                    description: A subject_filter block as defined below.
                    items:
                      properties:
                        caseSensitive:
                          description: Specifies if subject_begins_with and subject_ends_with
                            case sensitive. This value
                          type: boolean
                        subjectBeginsWith:
                          description: A string to filter events for an event subscription
                            based on a resource path prefix.
                          type: string
                        subjectEndsWith:
                          description: A string to filter events for an event subscription
                            based on a resource path suffix.
                          type: string
                      type: object
                    type: array
                  webhookEndpoint:
                    description: A webhook_endpoint block as defined below.
                    items:
                      properties:
                        activeDirectoryAppIdOrUri:
                          description: The Azure Active Directory Application ID or
                            URI to get the access token that will be included as the
                            bearer token in delivery requests.
                          type: string
                        activeDirectoryTenantId:
                          description: The Azure Active Directory Tenant ID to get
                            the access token that will be included as the bearer token
                            in delivery requests.
                          type: string
                        baseUrl:
                          description: (Computed) The base url of the webhook where
                            the Event Subscription will receive events.
                          type: string
                        maxEventsPerBatch:
                          description: Maximum number of events per batch.
                          type: number
                        preferredBatchSizeInKilobytes:
                          description: Preferred batch size in Kilobytes.
                          type: number
                        url:
                          description: Specifies the url of the webhook where the
                            Event Subscription will receive events.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
