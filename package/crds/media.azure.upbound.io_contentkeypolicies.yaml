---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: contentkeypolicies.media.azure.upbound.io
spec:
  group: media.azure.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: ContentKeyPolicy
    listKind: ContentKeyPolicyList
    plural: contentkeypolicies
    singular: contentkeypolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ContentKeyPolicy is the Schema for the ContentKeyPolicys API.
          Manages a Content Key Policy.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ContentKeyPolicySpec defines the desired state of ContentKeyPolicy
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: A description for the Policy.
                    type: string
                  mediaServicesAccountName:
                    description: The Media Services account name. Changing this forces
                      a new Content Key Policy to be created.
                    type: string
                  mediaServicesAccountNameRef:
                    description: Reference to a ServicesAccount in media to populate
                      mediaServicesAccountName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  mediaServicesAccountNameSelector:
                    description: Selector for a ServicesAccount in media to populate
                      mediaServicesAccountName.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  policyOption:
                    description: One or more policy_option blocks as defined below.
                    items:
                      properties:
                        clearKeyConfigurationEnabled:
                          description: Enable a configuration for non-DRM keys.
                          type: boolean
                        fairplayConfiguration:
                          description: A fairplay_configuration block as defined above.
                            Check license requirements here https://docs.microsoft.com/azure/media-services/latest/fairplay-license-overview.
                          items:
                            properties:
                              askSecretRef:
                                description: The key that must be used as FairPlay
                                  Application Secret key.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                              offlineRentalConfiguration:
                                description: A offline_rental_configuration block
                                  as defined below.
                                items:
                                  properties:
                                    playbackDurationSeconds:
                                      description: Playback duration.
                                      type: number
                                    storageDurationSeconds:
                                      description: Storage duration.
                                      type: number
                                  type: object
                                type: array
                              pfxPasswordSecretRef:
                                description: The password encrypting FairPlay certificate
                                  in PKCS 12 (pfx) format.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                              pfxSecretRef:
                                description: The Base64 representation of FairPlay
                                  certificate in PKCS 12 (pfx) format (including private
                                  key).
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                              rentalAndLeaseKeyType:
                                description: The rental and lease key type. Supported
                                  values are DualExpiry, PersistentLimited, PersistentUnlimited
                                  or Undefined.
                                type: string
                              rentalDurationSeconds:
                                description: The rental duration. Must be greater
                                  than 0.
                                type: number
                            type: object
                          type: array
                        name:
                          description: The name which should be used for this Policy
                            Option.
                          type: string
                        openRestrictionEnabled:
                          description: Enable an open restriction. License or key
                            will be delivered on every request.
                          type: boolean
                        playreadyConfigurationLicense:
                          description: One or more playready_configuration_license
                            blocks as defined above.
                          items:
                            properties:
                              allowTestDevices:
                                description: A flag indicating whether test devices
                                  can use the license.
                                type: boolean
                              beginDate:
                                description: The begin date of license.
                                type: string
                              contentKeyLocationFromHeaderEnabled:
                                description: Specifies that the content key ID is
                                  in the PlayReady header.
                                type: boolean
                              contentKeyLocationFromKeyId:
                                description: The content key ID. Specifies that the
                                  content key ID is specified in the PlayReady configuration.
                                type: string
                              contentType:
                                description: The PlayReady content type. Supported
                                  values are UltraVioletDownload, UltraVioletStreaming
                                  or Unspecified.
                                type: string
                              expirationDate:
                                description: The expiration date of license.
                                type: string
                              gracePeriodSecretRef:
                                description: The grace period of license.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                              licenseType:
                                description: The license type. Supported values are
                                  NonPersistent or Persistent.
                                type: string
                              playRight:
                                description: A play_right block as defined above.
                                items:
                                  properties:
                                    agcAndColorStripeRestriction:
                                      description: Configures Automatic Gain Control
                                        (AGC) and Color Stripe in the license. Must
                                        be between 0 and 3 inclusive.
                                      type: number
                                    allowPassingVideoContentToUnknownOutput:
                                      description: Configures Unknown output handling
                                        settings of the license. Supported values
                                        are Allowed, AllowedWithVideoConstriction
                                        or NotAllowed.
                                      type: string
                                    analogVideoOpl:
                                      description: Specifies the output protection
                                        level for compressed digital audio. Supported
                                        values are 100, 150 or 200.
                                      type: number
                                    compressedDigitalAudioOpl:
                                      description: Specifies the output protection
                                        level for compressed digital audio.Supported
                                        values are 100, 150, 200, 250 or 300.
                                      type: number
                                    compressedDigitalVideoOpl:
                                      description: Specifies the output protection
                                        level for compressed digital video. Supported
                                        values are 400 or 500.
                                      type: number
                                    digitalVideoOnlyContentRestriction:
                                      description: Enables the Image Constraint For
                                        Analog Component Video Restriction in the
                                        license.
                                      type: boolean
                                    explicitAnalogTelevisionOutputRestriction:
                                      description: An explicit_analog_television_output_restriction
                                        block as defined above.
                                      items:
                                        properties:
                                          bestEffortEnforced:
                                            type: boolean
                                          controlBits:
                                            description: The restriction control bits.
                                              Possible value is integer between 0
                                              and 3 inclusive.
                                            type: number
                                        required:
                                        - controlBits
                                        type: object
                                      type: array
                                    firstPlayExpiration:
                                      description: The amount of time that the license
                                        is valid after the license is first used to
                                        play content.
                                      type: string
                                    imageConstraintForAnalogComponentVideoRestriction:
                                      description: Enables the Image Constraint For
                                        Analog Component Video Restriction in the
                                        license.
                                      type: boolean
                                    imageConstraintForAnalogComputerMonitorRestriction:
                                      description: Enables the Image Constraint For
                                        Analog Component Video Restriction in the
                                        license.
                                      type: boolean
                                    scmsRestriction:
                                      description: Configures the Serial Copy Management
                                        System (SCMS) in the license. Must be between
                                        0 and 3 inclusive.
                                      type: number
                                    uncompressedDigitalAudioOpl:
                                      description: Specifies the output protection
                                        level for uncompressed digital audio. Supported
                                        values are 100, 150, 200, 250 or 300.
                                      type: number
                                    uncompressedDigitalVideoOpl:
                                      description: Specifies the output protection
                                        level for uncompressed digital video. Supported
                                        values are 100, 250, 270 or 300.
                                      type: number
                                  type: object
                                type: array
                              relativeBeginDate:
                                description: The relative begin date of license.
                                type: string
                              relativeExpirationDate:
                                description: The relative expiration date of license.
                                type: string
                              securityLevel:
                                description: The security level of the PlayReady license.
                                  Possible values are SL150, SL2000 and SL3000. Please
                                  see this document for more information about security
                                  level. See this document for more information about
                                  SL3000 support.
                                type: string
                            type: object
                          type: array
                        playreadyResponseCustomData:
                          description: The custom response data of the PlayReady configuration.
                            This only applies when playready_configuration_license
                            is specified.
                          type: string
                        tokenRestriction:
                          description: A token_restriction block as defined below.
                          items:
                            properties:
                              alternateKey:
                                description: One or more alternate_key block as defined
                                  above.
                                items:
                                  properties:
                                    rsaTokenKeyExponentSecretRef:
                                      description: The RSA parameter exponent.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: Name of the secret.
                                          type: string
                                        namespace:
                                          description: Namespace of the secret.
                                          type: string
                                      required:
                                      - key
                                      - name
                                      - namespace
                                      type: object
                                    rsaTokenKeyModulusSecretRef:
                                      description: The RSA parameter modulus.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: Name of the secret.
                                          type: string
                                        namespace:
                                          description: Namespace of the secret.
                                          type: string
                                      required:
                                      - key
                                      - name
                                      - namespace
                                      type: object
                                    symmetricTokenKeySecretRef:
                                      description: The key value of the key. Specifies
                                        a symmetric key for token validation.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: Name of the secret.
                                          type: string
                                        namespace:
                                          description: Namespace of the secret.
                                          type: string
                                      required:
                                      - key
                                      - name
                                      - namespace
                                      type: object
                                    x509TokenKeyRawSecretRef:
                                      description: The raw data field of a certificate
                                        in PKCS 12 format (X509Certificate2 in .NET).
                                        Specifies a certificate for token validation.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: Name of the secret.
                                          type: string
                                        namespace:
                                          description: Namespace of the secret.
                                          type: string
                                      required:
                                      - key
                                      - name
                                      - namespace
                                      type: object
                                  type: object
                                type: array
                              audience:
                                description: The audience for the token.
                                type: string
                              issuer:
                                description: The token issuer.
                                type: string
                              openIdConnectDiscoveryDocument:
                                description: The OpenID connect discovery document.
                                type: string
                              primaryRsaTokenKeyExponentSecretRef:
                                description: The RSA parameter exponent.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                              primaryRsaTokenKeyModulusSecretRef:
                                description: The RSA parameter modulus.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                              primarySymmetricTokenKeySecretRef:
                                description: The key value of the key. Specifies a
                                  symmetric key for token validation.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                              primaryX509TokenKeyRawSecretRef:
                                description: The raw data field of a certificate in
                                  PKCS 12 format (X509Certificate2 in .NET). Specifies
                                  a certificate for token validation.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                              requiredClaim:
                                description: One or more required_claim blocks as
                                  defined above.
                                items:
                                  properties:
                                    type:
                                      description: Token claim type.
                                      type: string
                                    value:
                                      description: Token claim value.
                                      type: string
                                  type: object
                                type: array
                              tokenType:
                                description: The type of token. Supported values are
                                  Jwt or Swt.
                                type: string
                            type: object
                          type: array
                        widevineConfigurationTemplate:
                          description: The Widevine template.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  resourceGroupName:
                    description: The name of the Resource Group where the Content
                      Key Policy should exist. Changing this forces a new Content
                      Key Policy to be created.
                    type: string
                  resourceGroupNameRef:
                    description: Reference to a ResourceGroup in azure to populate
                      resourceGroupName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  resourceGroupNameSelector:
                    description: Selector for a ResourceGroup in azure to populate
                      resourceGroupName.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                required:
                - policyOption
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ContentKeyPolicyStatus defines the observed state of ContentKeyPolicy.
            properties:
              atProvider:
                properties:
                  id:
                    description: The ID of the Content Key Policy.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
