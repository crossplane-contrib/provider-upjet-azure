---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: trafficmanagernestedendpoints.network.azure.upbound.io
spec:
  group: network.azure.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: TrafficManagerNestedEndpoint
    listKind: TrafficManagerNestedEndpointList
    plural: trafficmanagernestedendpoints
    singular: trafficmanagernestedendpoint
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: TrafficManagerNestedEndpoint is the Schema for the TrafficManagerNestedEndpoints
          API. Manages a Nested Endpoint within a Traffic Manager Profile.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TrafficManagerNestedEndpointSpec defines the desired state
              of TrafficManagerNestedEndpoint
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  customHeader:
                    description: One or more custom_header blocks as defined below.
                    items:
                      properties:
                        name:
                          description: The name of the custom header.
                          type: string
                        value:
                          description: The value of custom header. Applicable for
                            HTTP and HTTPS protocol.
                          type: string
                      type: object
                    type: array
                  enabled:
                    description: Is the endpoint enabled? Defaults to true.
                    type: boolean
                  endpointLocation:
                    description: Specifies the Azure location of the Endpoint, this
                      must be specified for Profiles using the Performance routing
                      method.
                    type: string
                  geoMappings:
                    description: A list of Geographic Regions used to distribute traffic,
                      such as WORLD, UK or DE. The same location can't be specified
                      in two endpoints. See the Geographic Hierarchies documentation
                      for more information.
                    items:
                      type: string
                    type: array
                  minimumChildEndpoints:
                    description: This argument specifies the minimum number of endpoints
                      that must be ‘online’ in the child profile in order for the
                      parent profile to direct traffic to any of the endpoints in
                      that child profile. This value must be larger than 0.
                    type: number
                  minimumRequiredChildEndpointsIpv4:
                    description: This argument specifies the minimum number of IPv4
                      (DNS record type A) endpoints that must be ‘online’ in the child
                      profile in order for the parent profile to direct traffic to
                      any of the endpoints in that child profile. This argument only
                      applies to Endpoints of type nestedEndpoints and
                    type: number
                  minimumRequiredChildEndpointsIpv6:
                    description: This argument specifies the minimum number of IPv6
                      (DNS record type AAAA) endpoints that must be ‘online’ in the
                      child profile in order for the parent profile to direct traffic
                      to any of the endpoints in that child profile. This argument
                      only applies to Endpoints of type nestedEndpoints and
                    type: number
                  priority:
                    description: Specifies the priority of this Endpoint, this must
                      be specified for Profiles using the Priority traffic routing
                      method. Supports values between 1 and 1000, with no Endpoints
                      sharing the same value. If omitted the value will be computed
                      in order of creation.
                    type: number
                  profileId:
                    description: The ID of the Traffic Manager Profile that this External
                      Endpoint should be created within. Changing this forces a new
                      resource to be created.
                    type: string
                  profileIdRef:
                    description: Reference to a TrafficManagerProfile in network to
                      populate profileId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  profileIdSelector:
                    description: Selector for a TrafficManagerProfile in network to
                      populate profileId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  subnet:
                    description: One or more subnet blocks as defined below. Changing
                      this forces a new resource to be created.
                    items:
                      properties:
                        first:
                          description: The first IP Address in this subnet.
                          type: string
                        last:
                          description: The last IP Address in this subnet.
                          type: string
                        scope:
                          description: The block size (number of leading bits in the
                            subnet mask).
                          type: number
                      type: object
                    type: array
                  targetResourceId:
                    description: The resource id of an Azure resource to target.
                    type: string
                  targetResourceIdRef:
                    description: Reference to a TrafficManagerProfile in network to
                      populate targetResourceId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  targetResourceIdSelector:
                    description: Selector for a TrafficManagerProfile in network to
                      populate targetResourceId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  weight:
                    description: Specifies how much traffic should be distributed
                      to this endpoint, this must be specified for Profiles using
                      the Weighted traffic routing method. Valid values are between
                      1 and 1000.
                    type: number
                type: object
              initProvider:
                description: THIS IS A BETA FIELD. It will be honored unless the Management
                  Policies feature flag is disabled. InitProvider holds the same fields
                  as ForProvider, with the exception of Identifier and other resource
                  reference fields. The fields that are in InitProvider are merged
                  into ForProvider when the resource is created. The same fields are
                  also added to the terraform ignore_changes hook, to avoid updating
                  them after creation. This is useful for fields that are required
                  on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them,
                  like an autoscaler.
                properties:
                  customHeader:
                    description: One or more custom_header blocks as defined below.
                    items:
                      properties:
                        name:
                          description: The name of the custom header.
                          type: string
                        value:
                          description: The value of custom header. Applicable for
                            HTTP and HTTPS protocol.
                          type: string
                      type: object
                    type: array
                  enabled:
                    description: Is the endpoint enabled? Defaults to true.
                    type: boolean
                  endpointLocation:
                    description: Specifies the Azure location of the Endpoint, this
                      must be specified for Profiles using the Performance routing
                      method.
                    type: string
                  geoMappings:
                    description: A list of Geographic Regions used to distribute traffic,
                      such as WORLD, UK or DE. The same location can't be specified
                      in two endpoints. See the Geographic Hierarchies documentation
                      for more information.
                    items:
                      type: string
                    type: array
                  minimumChildEndpoints:
                    description: This argument specifies the minimum number of endpoints
                      that must be ‘online’ in the child profile in order for the
                      parent profile to direct traffic to any of the endpoints in
                      that child profile. This value must be larger than 0.
                    type: number
                  minimumRequiredChildEndpointsIpv4:
                    description: This argument specifies the minimum number of IPv4
                      (DNS record type A) endpoints that must be ‘online’ in the child
                      profile in order for the parent profile to direct traffic to
                      any of the endpoints in that child profile. This argument only
                      applies to Endpoints of type nestedEndpoints and
                    type: number
                  minimumRequiredChildEndpointsIpv6:
                    description: This argument specifies the minimum number of IPv6
                      (DNS record type AAAA) endpoints that must be ‘online’ in the
                      child profile in order for the parent profile to direct traffic
                      to any of the endpoints in that child profile. This argument
                      only applies to Endpoints of type nestedEndpoints and
                    type: number
                  priority:
                    description: Specifies the priority of this Endpoint, this must
                      be specified for Profiles using the Priority traffic routing
                      method. Supports values between 1 and 1000, with no Endpoints
                      sharing the same value. If omitted the value will be computed
                      in order of creation.
                    type: number
                  subnet:
                    description: One or more subnet blocks as defined below. Changing
                      this forces a new resource to be created.
                    items:
                      properties:
                        first:
                          description: The first IP Address in this subnet.
                          type: string
                        last:
                          description: The last IP Address in this subnet.
                          type: string
                        scope:
                          description: The block size (number of leading bits in the
                            subnet mask).
                          type: number
                      type: object
                    type: array
                  weight:
                    description: Specifies how much traffic should be distributed
                      to this endpoint, this must be specified for Profiles using
                      the Weighted traffic routing method. Valid values are between
                      1 and 1000.
                    type: number
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.minimumChildEndpoints is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.minimumChildEndpoints)
                || (has(self.initProvider) && has(self.initProvider.minimumChildEndpoints))'
          status:
            description: TrafficManagerNestedEndpointStatus defines the observed state
              of TrafficManagerNestedEndpoint.
            properties:
              atProvider:
                properties:
                  customHeader:
                    description: One or more custom_header blocks as defined below.
                    items:
                      properties:
                        name:
                          description: The name of the custom header.
                          type: string
                        value:
                          description: The value of custom header. Applicable for
                            HTTP and HTTPS protocol.
                          type: string
                      type: object
                    type: array
                  enabled:
                    description: Is the endpoint enabled? Defaults to true.
                    type: boolean
                  endpointLocation:
                    description: Specifies the Azure location of the Endpoint, this
                      must be specified for Profiles using the Performance routing
                      method.
                    type: string
                  geoMappings:
                    description: A list of Geographic Regions used to distribute traffic,
                      such as WORLD, UK or DE. The same location can't be specified
                      in two endpoints. See the Geographic Hierarchies documentation
                      for more information.
                    items:
                      type: string
                    type: array
                  id:
                    description: The ID of the Nested Endpoint.
                    type: string
                  minimumChildEndpoints:
                    description: This argument specifies the minimum number of endpoints
                      that must be ‘online’ in the child profile in order for the
                      parent profile to direct traffic to any of the endpoints in
                      that child profile. This value must be larger than 0.
                    type: number
                  minimumRequiredChildEndpointsIpv4:
                    description: This argument specifies the minimum number of IPv4
                      (DNS record type A) endpoints that must be ‘online’ in the child
                      profile in order for the parent profile to direct traffic to
                      any of the endpoints in that child profile. This argument only
                      applies to Endpoints of type nestedEndpoints and
                    type: number
                  minimumRequiredChildEndpointsIpv6:
                    description: This argument specifies the minimum number of IPv6
                      (DNS record type AAAA) endpoints that must be ‘online’ in the
                      child profile in order for the parent profile to direct traffic
                      to any of the endpoints in that child profile. This argument
                      only applies to Endpoints of type nestedEndpoints and
                    type: number
                  priority:
                    description: Specifies the priority of this Endpoint, this must
                      be specified for Profiles using the Priority traffic routing
                      method. Supports values between 1 and 1000, with no Endpoints
                      sharing the same value. If omitted the value will be computed
                      in order of creation.
                    type: number
                  profileId:
                    description: The ID of the Traffic Manager Profile that this External
                      Endpoint should be created within. Changing this forces a new
                      resource to be created.
                    type: string
                  subnet:
                    description: One or more subnet blocks as defined below. Changing
                      this forces a new resource to be created.
                    items:
                      properties:
                        first:
                          description: The first IP Address in this subnet.
                          type: string
                        last:
                          description: The last IP Address in this subnet.
                          type: string
                        scope:
                          description: The block size (number of leading bits in the
                            subnet mask).
                          type: number
                      type: object
                    type: array
                  targetResourceId:
                    description: The resource id of an Azure resource to target.
                    type: string
                  weight:
                    description: Specifies how much traffic should be distributed
                      to this endpoint, this must be specified for Profiles using
                      the Weighted traffic routing method. Valid values are between
                      1 and 1000.
                    type: number
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
