---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: functionappflexconsumptions.web.azure.m.upbound.io
spec:
  group: web.azure.m.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: FunctionAppFlexConsumption
    listKind: FunctionAppFlexConsumptionList
    plural: functionappflexconsumptions
    singular: functionappflexconsumption
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: FunctionAppFlexConsumption is the Schema for the FunctionAppFlexConsumptions
          API. Manages a Function App Running on a Flex Consumption Plan.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FunctionAppFlexConsumptionSpec defines the desired state
              of FunctionAppFlexConsumption
            properties:
              forProvider:
                properties:
                  alwaysReady:
                    description: One or more always_ready blocks as defined below.
                    items:
                      properties:
                        instanceCount:
                          description: The instance count of the always_ready of the  Function
                            App. The minimum number is 0. The total number of instance_count
                            should not exceed the maximum_instance_count.
                          type: number
                        name:
                          description: The name of the always_ready of the Function
                            App.
                          type: string
                      type: object
                    type: array
                  appSettings:
                    additionalProperties:
                      type: string
                    description: |-
                      A map of key-value pairs for App Settings and custom values.
                      A map of key-value pairs for [App Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.
                    type: object
                    x-kubernetes-map-type: granular
                  authSettings:
                    description: A auth_settings block as defined below.
                    properties:
                      activeDirectory:
                        description: An active_directory block as defined above.
                        properties:
                          allowedAudiences:
                            description: |-
                              Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
                              Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
                            items:
                              type: string
                            type: array
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The ID of the Client to use to authenticate with Azure Active Directory.
                            type: string
                          clientSecretSecretRef:
                            description: |-
                              The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.
                              The Client Secret for the Client ID. Cannot be used with `client_secret_setting_name`.
                            properties:
                              key:
                                type: string
                              name:
                                description: Name of the secret.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.
                            type: string
                        type: object
                      additionalLoginParameters:
                        additionalProperties:
                          type: string
                        description: |-
                          Specifies a map of login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
                          Specifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
                        type: object
                        x-kubernetes-map-type: granular
                      allowedExternalRedirectUrls:
                        description: |-
                          Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Linux Web App.
                          Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.
                        items:
                          type: string
                        type: array
                      defaultProvider:
                        description: |-
                          The default authentication provider to use when multiple providers are configured. Possible values include: AzureActiveDirectory, Facebook, Google, MicrosoftAccount, Twitter, Github
                          The default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.
                        type: string
                      enabled:
                        description: |-
                          Should the Authentication / Authorization feature be enabled for the Linux Web App?
                          Should the Authentication / Authorization feature be enabled?
                        type: boolean
                      facebook:
                        description: A facebook block as defined below.
                        properties:
                          appId:
                            description: |-
                              The App ID of the Facebook app used for login.
                              The App ID of the Facebook app used for login.
                            type: string
                          appSecretSecretRef:
                            description: |-
                              The App Secret of the Facebook app used for Facebook login. Cannot be specified with app_secret_setting_name.
                              The App Secret of the Facebook app used for Facebook Login. Cannot be specified with `app_secret_setting_name`.
                            properties:
                              key:
                                type: string
                              name:
                                description: Name of the secret.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          appSecretSettingName:
                            description: |-
                              The app setting name that contains the app_secret value used for Facebook Login.
                              The app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.
                            type: string
                          oauthScopes:
                            description: |-
                              Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
                              Specifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.
                            items:
                              type: string
                            type: array
                        type: object
                      github:
                        description: A github block as defined below.
                        properties:
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The ID of the GitHub app used for login.
                            type: string
                          clientSecretSecretRef:
                            description: |-
                              The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.
                              The Client Secret of the GitHub app used for GitHub Login. Cannot be specified with `client_secret_setting_name`.
                            properties:
                              key:
                                type: string
                              name:
                                description: Name of the secret.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.
                            type: string
                          oauthScopes:
                            description: |-
                              Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
                              Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
                            items:
                              type: string
                            type: array
                        type: object
                      google:
                        description: A google block as defined below.
                        properties:
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The OpenID Connect Client ID for the Google web application.
                            type: string
                          clientSecretSecretRef:
                            description: |-
                              The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.
                              The client secret associated with the Google web application.  Cannot be specified with `client_secret_setting_name`.
                            properties:
                              key:
                                type: string
                              name:
                                description: Name of the secret.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.
                            type: string
                          oauthScopes:
                            description: |-
                              Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
                              Specifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, "openid", "profile", and "email" are used as default scopes.
                            items:
                              type: string
                            type: array
                        type: object
                      issuer:
                        description: |-
                          The OpenID Connect Issuer URI that represents the entity which issues access tokens for this Linux Web App.
                          The OpenID Connect Issuer URI that represents the entity which issues access tokens.
                        type: string
                      microsoft:
                        description: A microsoft block as defined below.
                        properties:
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                            type: string
                          clientSecretSecretRef:
                            description: |-
                              The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.
                              The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret_setting_name`.
                            properties:
                              key:
                                type: string
                              name:
                                description: Name of the secret.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.
                            type: string
                          oauthScopes:
                            description: |-
                              Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
                              The list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.
                            items:
                              type: string
                            type: array
                        type: object
                      runtimeVersion:
                        description: |-
                          The RuntimeVersion of the Authentication / Authorization feature in use for the Linux Web App.
                          The RuntimeVersion of the Authentication / Authorization feature in use.
                        type: string
                      tokenRefreshExtensionHours:
                        description: |-
                          The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.
                          The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
                        type: number
                      tokenStoreEnabled:
                        description: |-
                          Should the Linux Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to false.
                          Should the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.
                        type: boolean
                      twitter:
                        description: A twitter block as defined below.
                        properties:
                          consumerKey:
                            description: |-
                              The OAuth 1.0a consumer key of the Twitter application used for sign-in.
                              The OAuth 1.0a consumer key of the Twitter application used for sign-in.
                            type: string
                          consumerSecretSecretRef:
                            description: |-
                              The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with consumer_secret_setting_name.
                              The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret_setting_name`.
                            properties:
                              key:
                                type: string
                              name:
                                description: Name of the secret.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          consumerSecretSettingName:
                            description: |-
                              The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
                              The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.
                            type: string
                        type: object
                      unauthenticatedClientAction:
                        description: |-
                          The action to take when an unauthenticated client attempts to access the app. Possible values include: RedirectToLoginPage, AllowAnonymous.
                          The action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.
                        type: string
                    type: object
                  authSettingsV2:
                    description: An auth_settings_v2 block as defined below.
                    properties:
                      activeDirectoryV2:
                        description: An active_directory_v2 block as defined below.
                        properties:
                          allowedApplications:
                            description: |-
                              The list of allowed Applications for the Default Authorisation Policy.
                              The list of allowed Applications for the Default Authorisation Policy.
                            items:
                              type: string
                            type: array
                          allowedAudiences:
                            description: |-
                              Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
                              Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
                            items:
                              type: string
                            type: array
                          allowedGroups:
                            description: |-
                              The list of allowed Group Names for the Default Authorisation Policy.
                              The list of allowed Group Names for the Default Authorisation Policy.
                            items:
                              type: string
                            type: array
                          allowedIdentities:
                            description: |-
                              The list of allowed Identities for the Default Authorisation Policy.
                              The list of allowed Identities for the Default Authorisation Policy.
                            items:
                              type: string
                            type: array
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The ID of the Client to use to authenticate with Azure Active Directory.
                            type: string
                          clientSecretCertificateThumbprint:
                            description: |-
                              The thumbprint of the certificate used for signing purposes.
                              The thumbprint of the certificate used for signing purposes.
                            type: string
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The App Setting name that contains the client secret of the Client.
                            type: string
                          jwtAllowedClientApplications:
                            description: |-
                              A list of Allowed Client Applications in the JWT Claim.
                              A list of Allowed Client Applications in the JWT Claim.
                            items:
                              type: string
                            type: array
                          jwtAllowedGroups:
                            description: |-
                              A list of Allowed Groups in the JWT Claim.
                              A list of Allowed Groups in the JWT Claim.
                            items:
                              type: string
                            type: array
                          loginParameters:
                            additionalProperties:
                              type: string
                            description: |-
                              A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.
                              A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.
                            type: object
                            x-kubernetes-map-type: granular
                          tenantAuthEndpoint:
                            description: |-
                              The Azure Tenant Endpoint for the Authenticating Tenant. e.g. https://login.microsoftonline.com/{tenant-guid}/v2.0/
                              The Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.
                            type: string
                          wwwAuthenticationDisabled:
                            description: |-
                              Should the www-authenticate provider should be omitted from the request? Defaults to false.
                              Should the www-authenticate provider should be omitted from the request? Defaults to `false`
                            type: boolean
                        type: object
                      appleV2:
                        description: An apple_v2 block as defined below.
                        properties:
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The OpenID Connect Client ID for the Apple web application.
                            type: string
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The app setting name that contains the `client_secret` value used for Apple Login.
                            type: string
                        type: object
                      authEnabled:
                        description: |-
                          Should the AuthV2 Settings be enabled. Defaults to false.
                          Should the AuthV2 Settings be enabled. Defaults to `false`
                        type: boolean
                      azureStaticWebAppV2:
                        description: An azure_static_web_app_v2 block as defined below.
                        properties:
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The ID of the Client to use to authenticate with Azure Static Web App Authentication.
                            type: string
                        type: object
                      configFilePath:
                        description: |-
                          The path to the App Auth settings.
                          The path to the App Auth settings. **Note:** Relative Paths are evaluated from the Site Root directory.
                        type: string
                      customOidcV2:
                        description: Zero or more custom_oidc_v2 blocks as defined
                          below.
                        items:
                          properties:
                            clientId:
                              description: |-
                                The OAuth 2.0 client ID that was created for the app used for authentication.
                                The ID of the Client to use to authenticate with this Custom OIDC.
                              type: string
                            name:
                              description: |-
                                The Site Credentials Username used for publishing.
                                The name of the Custom OIDC Authentication Provider.
                              type: string
                            nameClaimType:
                              description: |-
                                The name of the claim that contains the users name.
                                The name of the claim that contains the users name.
                              type: string
                            openidConfigurationEndpoint:
                              description: |-
                                The app setting name that contains the client_secret value used for the Custom OIDC Login.
                                The endpoint that contains all the configuration endpoints for this Custom OIDC provider.
                              type: string
                            scopes:
                              description: |-
                                The list of the scopes that should be requested while authenticating.
                                The list of the scopes that should be requested while authenticating.
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      defaultProvider:
                        description: |-
                          The Default Authentication Provider to use when the unauthenticated_action is set to RedirectToLoginPage. Possible values include: apple, azureactivedirectory, facebook, github, google, twitter and the name of your custom_oidc_v2 provider.
                          The Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`. Possible values include: `apple`, `azureactivedirectory`, `facebook`, `github`, `google`, `twitter` and the `name` of your `custom_oidc_v2` provider.
                        type: string
                      excludedPaths:
                        description: |-
                          The paths which should be excluded from the unauthenticated_action when it is set to RedirectToLoginPage.
                          The paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.
                        items:
                          type: string
                        type: array
                      facebookV2:
                        description: A facebook_v2 block as defined below.
                        properties:
                          appId:
                            description: |-
                              The App ID of the Facebook app used for login.
                              The App ID of the Facebook app used for login.
                            type: string
                          appSecretSettingName:
                            description: |-
                              The app setting name that contains the app_secret value used for Facebook Login.
                              The app setting name that contains the `app_secret` value used for Facebook Login.
                            type: string
                          graphApiVersion:
                            description: |-
                              The version of the Facebook API to be used while logging in.
                              The version of the Facebook API to be used while logging in.
                            type: string
                          loginScopes:
                            description: |-
                              The list of Login scopes that should be requested as part of Microsoft Account authentication.
                              Specifies a list of scopes to be requested as part of Facebook Login authentication.
                            items:
                              type: string
                            type: array
                        type: object
                      forwardProxyConvention:
                        description: |-
                          The convention used to determine the url of the request made. Possible values include NoProxy, Standard, Custom. Defaults to NoProxy.
                          The convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`
                        type: string
                      forwardProxyCustomHostHeaderName:
                        description: |-
                          The name of the custom header containing the host of the request.
                          The name of the header containing the host of the request.
                        type: string
                      forwardProxyCustomSchemeHeaderName:
                        description: |-
                          The name of the custom header containing the scheme of the request.
                          The name of the header containing the scheme of the request.
                        type: string
                      githubV2:
                        description: A github_v2 block as defined below.
                        properties:
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The ID of the GitHub app used for login.
                            type: string
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The app setting name that contains the `client_secret` value used for GitHub Login.
                            type: string
                          loginScopes:
                            description: |-
                              The list of Login scopes that should be requested as part of Microsoft Account authentication.
                              Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
                            items:
                              type: string
                            type: array
                        type: object
                      googleV2:
                        description: A google_v2 block as defined below.
                        properties:
                          allowedAudiences:
                            description: |-
                              Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
                              Specifies a list of Allowed Audiences that will be requested as part of Google Sign-In authentication.
                            items:
                              type: string
                            type: array
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The OpenID Connect Client ID for the Google web application.
                            type: string
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The app setting name that contains the `client_secret` value used for Google Login.
                            type: string
                          loginScopes:
                            description: |-
                              The list of Login scopes that should be requested as part of Microsoft Account authentication.
                              Specifies a list of Login scopes that will be requested as part of Google Sign-In authentication.
                            items:
                              type: string
                            type: array
                        type: object
                      httpRouteApiPrefix:
                        description: |-
                          The prefix that should precede all the authentication and authorisation paths. Defaults to /.auth.
                          The prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`
                        type: string
                      login:
                        description: A login block as defined below.
                        properties:
                          allowedExternalRedirectUrls:
                            description: |-
                              External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends.
                              External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.
                            items:
                              type: string
                            type: array
                          cookieExpirationConvention:
                            description: |-
                              The method by which cookies expire. Possible values include: FixedTime, and IdentityProviderDerived. Defaults to FixedTime.
                              The method by which cookies expire. Possible values include: `FixedTime`, and `IdentityProviderDerived`. Defaults to `FixedTime`.
                            type: string
                          cookieExpirationTime:
                            description: |-
                              The time after the request is made when the session cookie should expire. Defaults to 08:00:00.
                              The time after the request is made when the session cookie should expire. Defaults to `08:00:00`.
                            type: string
                          logoutEndpoint:
                            description: |-
                              The endpoint to which logout requests should be made.
                              The endpoint to which logout requests should be made.
                            type: string
                          nonceExpirationTime:
                            description: |-
                              The time after the request is made when the nonce should expire. Defaults to 00:05:00.
                              The time after the request is made when the nonce should expire. Defaults to `00:05:00`.
                            type: string
                          preserveUrlFragmentsForLogins:
                            description: |-
                              Should the fragments from the request be preserved after the login request is made. Defaults to false.
                              Should the fragments from the request be preserved after the login request is made. Defaults to `false`.
                            type: boolean
                          tokenRefreshExtensionTime:
                            description: |-
                              The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.
                              The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
                            type: number
                          tokenStoreEnabled:
                            description: |-
                              Should the Token Store configuration Enabled. Defaults to false
                              Should the Token Store configuration Enabled. Defaults to `false`
                            type: boolean
                          tokenStorePath:
                            description: |-
                              The directory path in the App Filesystem in which the tokens will be stored.
                              The directory path in the App Filesystem in which the tokens will be stored.
                            type: string
                          tokenStoreSasSettingName:
                            description: |-
                              The name of the app setting which contains the SAS URL of the blob storage containing the tokens.
                              The name of the app setting which contains the SAS URL of the blob storage containing the tokens.
                            type: string
                          validateNonce:
                            description: |-
                              Should the nonce be validated while completing the login flow. Defaults to true.
                              Should the nonce be validated while completing the login flow. Defaults to `true`.
                            type: boolean
                        type: object
                      microsoftV2:
                        description: A microsoft_v2 block as defined below.
                        properties:
                          allowedAudiences:
                            description: |-
                              Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
                              Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
                            items:
                              type: string
                            type: array
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                            type: string
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                            type: string
                          loginScopes:
                            description: |-
                              The list of Login scopes that should be requested as part of Microsoft Account authentication.
                              The list of Login scopes that will be requested as part of Microsoft Account authentication.
                            items:
                              type: string
                            type: array
                        type: object
                      requireAuthentication:
                        description: |-
                          Should the authentication flow be used for all requests.
                          Should the authentication flow be used for all requests.
                        type: boolean
                      requireHttps:
                        description: |-
                          Should HTTPS be required on connections? Defaults to true.
                          Should HTTPS be required on connections? Defaults to true.
                        type: boolean
                      runtimeVersion:
                        description: |-
                          The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to ~1.
                          The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`
                        type: string
                      twitterV2:
                        description: A twitter_v2 block as defined below.
                        properties:
                          consumerKey:
                            description: |-
                              The OAuth 1.0a consumer key of the Twitter application used for sign-in.
                              The OAuth 1.0a consumer key of the Twitter application used for sign-in.
                            type: string
                          consumerSecretSettingName:
                            description: |-
                              The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
                              The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
                            type: string
                        type: object
                      unauthenticatedAction:
                        description: |-
                          The action to take for requests made without authentication. Possible values include RedirectToLoginPage, AllowAnonymous, Return401, and Return403. Defaults to RedirectToLoginPage.
                          The action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.
                        type: string
                    type: object
                  clientCertificateEnabled:
                    description: |-
                      Should the function app use Client Certificates.
                      Should the function app use Client Certificates
                    type: boolean
                  clientCertificateExclusionPaths:
                    description: |-
                      Paths to exclude when using client certificates, separated by ;
                      Paths to exclude when using client certificates, separated by ;
                    type: string
                  clientCertificateMode:
                    description: |-
                      The mode of the Function App's client certificates requirement for incoming requests. Possible values are Required, Optional, and OptionalInteractiveUser. Defaults to Optional.
                      The mode of the Function App's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`
                    type: string
                  connectionString:
                    description: One or more connection_string blocks as defined below.
                    items:
                      properties:
                        name:
                          description: |-
                            The name which should be used for this Connection.
                            The name which should be used for this Connection.
                          type: string
                        type:
                          description: |-
                            Type of database. Possible values include: MySQL, SQLServer, SQLAzure, Custom, NotificationHub, ServiceBus, EventHub, APIHub, DocDb, RedisCache, and PostgreSQL.
                            Type of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.
                          type: string
                        valueSecretRef:
                          description: |-
                            The connection string value.
                            The connection string value.
                          properties:
                            key:
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                          required:
                          - key
                          - name
                          type: object
                      type: object
                    type: array
                  enabled:
                    description: |-
                      Is the Function App enabled? Defaults to true.
                      Is the Function App enabled.
                    type: boolean
                  httpsOnly:
                    description: |-
                      Is Https Connection enforced to the function app. Defaults to false
                      Can the Function App only be accessed via HTTPS?
                    type: boolean
                  identity:
                    description: A identity block as defined below.
                    properties:
                      identityIds:
                        description: A list of User Assigned Managed Identity IDs
                          to be assigned to this Linux Function App.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: set
                      identityIdsRefs:
                        description: References to UserAssignedIdentity in managedidentity
                          to populate identityIds.
                        items:
                          description: A NamespacedReference to a named object.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            namespace:
                              description: Namespace of the referenced object
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      identityIdsSelector:
                        description: Selector for a list of UserAssignedIdentity in
                          managedidentity to populate identityIds.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          namespace:
                            description: Namespace for the selector
                            type: string
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      type:
                        description: Specifies the type of Managed Service Identity
                          that should be configured on this Linux Function App. Possible
                          values are SystemAssigned, UserAssigned, SystemAssigned,
                          UserAssigned (to enable both).
                        type: string
                    type: object
                  instanceMemoryInMb:
                    description: The memory size of the instances on which your app
                      runs. The currently supported values are 2048 or 4096.
                    type: number
                  location:
                    description: The Azure Region where the Function App should exist.
                      Changing this forces a new Function App to be created.
                    type: string
                  maximumInstanceCount:
                    description: The number of workers this function app can scale
                      out to.
                    type: number
                  publicNetworkAccessEnabled:
                    description: Should public network access be enabled for the Function
                      App. Defaults to true.
                    type: boolean
                  resourceGroupName:
                    description: The name of the Resource Group where the Function
                      App should exist. Changing this forces a new Linux Function
                      App to be created.
                    type: string
                  resourceGroupNameRef:
                    description: Reference to a ResourceGroup in azure to populate
                      resourceGroupName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  resourceGroupNameSelector:
                    description: Selector for a ResourceGroup in azure to populate
                      resourceGroupName.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      namespace:
                        description: Namespace for the selector
                        type: string
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  runtimeName:
                    description: The Runtime of the Linux Function App. Possible values
                      are node, dotnet-isolated, powershell, python, java and custom.
                    type: string
                  runtimeVersion:
                    description: The Runtime version of the Linux Function App. The
                      values are diff from different runtime version. The supported
                      values are 8.0, 9.0 for dotnet-isolated, 20 for node, 3.10,
                      3.11 for python, 11, 17 for java, 7.4 for powershell.
                    type: string
                  servicePlanId:
                    description: |-
                      The ID of the App Service Plan within which to create this Function App. Changing this forces a new Linux Function App to be created.
                      The ID of the App Service Plan within which to create this Function App
                    type: string
                  servicePlanIdRef:
                    description: Reference to a ServicePlan in web to populate servicePlanId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  servicePlanIdSelector:
                    description: Selector for a ServicePlan in web to populate servicePlanId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      namespace:
                        description: Namespace for the selector
                        type: string
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  siteConfig:
                    description: A site_config block as defined below.
                    properties:
                      apiDefinitionUrl:
                        description: |-
                          The URL of the API definition that describes this Linux Function App.
                          The URL of the API definition that describes this Linux Function App.
                        type: string
                      apiManagementApiId:
                        description: |-
                          The ID of the API Management API for this Linux Function App.
                          The ID of the API Management API for this Linux Function App.
                        type: string
                      apiManagementApiIdRef:
                        description: Reference to a API in apimanagement to populate
                          apiManagementApiId.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          namespace:
                            description: Namespace of the referenced object
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      apiManagementApiIdSelector:
                        description: Selector for a API in apimanagement to populate
                          apiManagementApiId.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          namespace:
                            description: Namespace for the selector
                            type: string
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      appCommandLine:
                        description: |-
                          The App command line to launch.
                          The program and any arguments used to launch this app via the command line. (Example `node myapp.js`).
                        type: string
                      appServiceLogs:
                        description: An app_service_logs block as defined above.
                        properties:
                          diskQuotaMb:
                            description: |-
                              The amount of disk space to use for logs. Valid values are between 25 and 100. Defaults to 35.
                              The amount of disk space to use for logs. Valid values are between `25` and `100`.
                            type: number
                          retentionPeriodDays:
                            description: |-
                              After how many days backups should be deleted. Defaults to 30.
                              The retention period for logs in days. Valid values are between `0` and `99999`. Defaults to `0` (never delete).
                            type: number
                        type: object
                      applicationInsightsConnectionStringSecretRef:
                        description: |-
                          The Connection String for linking the Linux Function App to Application Insights.
                          The Connection String for linking the Linux Function App to Application Insights.
                        properties:
                          key:
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      applicationInsightsKeySecretRef:
                        description: |-
                          The Instrumentation Key for connecting the Linux Function App to Application Insights.
                          The Instrumentation Key for connecting the Linux Function App to Application Insights.
                        properties:
                          key:
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      containerRegistryManagedIdentityClientId:
                        description: |-
                          The Client ID of the Managed Service Identity to use for connections to the Azure Container Registry.
                          The Client ID of the Managed Service Identity to use for connections to the Azure Container Registry.
                        type: string
                      containerRegistryManagedIdentityClientIdRef:
                        description: Reference to a UserAssignedIdentity in managedidentity
                          to populate containerRegistryManagedIdentityClientId.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          namespace:
                            description: Namespace of the referenced object
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      containerRegistryManagedIdentityClientIdSelector:
                        description: Selector for a UserAssignedIdentity in managedidentity
                          to populate containerRegistryManagedIdentityClientId.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          namespace:
                            description: Namespace for the selector
                            type: string
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      containerRegistryUseManagedIdentity:
                        description: |-
                          Should connections for Azure Container Registry use Managed Identity.
                          Should connections for Azure Container Registry use Managed Identity.
                        type: boolean
                      cors:
                        description: A cors block as defined above.
                        properties:
                          allowedOrigins:
                            description: |-
                              Specifies a list of origins that should be allowed to make cross-origin calls.
                              Specifies a list of origins that should be allowed to make cross-origin calls.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                          supportCredentials:
                            description: |-
                              Are credentials allowed in CORS requests? Defaults to false.
                              Are credentials allowed in CORS requests? Defaults to `false`.
                            type: boolean
                        type: object
                      defaultDocuments:
                        description: |-
                          Specifies a list of Default Documents for the Linux Web App.
                          Specifies a list of Default Documents for the Linux Web App.
                        items:
                          type: string
                        type: array
                      elasticInstanceMinimum:
                        description: The number of minimum instances for this Linux
                          Function App. Only affects apps on Elastic Premium plans.
                        type: number
                      healthCheckEvictionTimeInMin:
                        description: |-
                          The amount of time in minutes that a node can be unhealthy before being removed from the load balancer. Possible values are between 2 and 10. Only valid in conjunction with health_check_path.
                          The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Only valid in conjunction with `health_check_path`
                        type: number
                      healthCheckPath:
                        description: |-
                          The path to be checked for this function app health.
                          The path to be checked for this function app health.
                        type: string
                      http2Enabled:
                        description: |-
                          Specifies if the HTTP2 protocol should be enabled. Defaults to false.
                          Specifies if the http2 protocol should be enabled. Defaults to `false`.
                        type: boolean
                      ipRestriction:
                        description: One or more ip_restriction blocks as defined
                          above.
                        items:
                          properties:
                            action:
                              description: |-
                                The action to take. Possible values are Allow or Deny. Defaults to Allow.
                                The action to take. Possible values are `Allow` or `Deny`.
                              type: string
                            description:
                              description: |-
                                The Description of this IP Restriction.
                                The description of the IP restriction rule.
                              type: string
                            headers:
                              description: A headers block as defined above.
                              properties:
                                xAzureFdid:
                                  description: Specifies a list of Azure Front Door
                                    IDs.
                                  items:
                                    type: string
                                  type: array
                                xFdHealthProbe:
                                  description: Specifies if a Front Door Health Probe
                                    should be expected. The only possible value is
                                    1.
                                  items:
                                    type: string
                                  type: array
                                xForwardedFor:
                                  description: Specifies a list of addresses for which
                                    matching should be applied. Omitting this value
                                    means allow any.
                                  items:
                                    type: string
                                  type: array
                                xForwardedHost:
                                  description: Specifies a list of Hosts for which
                                    matching should be applied.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            ipAddress:
                              description: |-
                                The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32
                                The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
                              type: string
                            name:
                              description: |-
                                The Site Credentials Username used for publishing.
                                The name which should be used for this `ip_restriction`.
                              type: string
                            priority:
                              description: |-
                                The priority value of this ip_restriction. Defaults to 65000.
                                The priority value of this `ip_restriction`.
                              type: number
                            serviceTag:
                              description: |-
                                The Service Tag used for this IP Restriction.
                                The Service Tag used for this IP Restriction.
                              type: string
                            virtualNetworkSubnetId:
                              description: |-
                                The subnet id which will be used by this Function App for regional virtual network integration.
                                The Virtual Network Subnet ID used for this IP Restriction.
                              type: string
                            virtualNetworkSubnetIdRef:
                              description: Reference to a Subnet in network to populate
                                virtualNetworkSubnetId.
                              properties:
                                name:
                                  description: Name of the referenced object.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object
                                  type: string
                                policy:
                                  description: Policies for referencing.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              required:
                              - name
                              type: object
                            virtualNetworkSubnetIdSelector:
                              description: Selector for a Subnet in network to populate
                                virtualNetworkSubnetId.
                              properties:
                                matchControllerRef:
                                  description: |-
                                    MatchControllerRef ensures an object with the same controller reference
                                    as the selecting object is selected.
                                  type: boolean
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels ensures an object with
                                    matching labels is selected.
                                  type: object
                                namespace:
                                  description: Namespace for the selector
                                  type: string
                                policy:
                                  description: Policies for selection.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              type: object
                          type: object
                        type: array
                      ipRestrictionDefaultAction:
                        description: The Default action for traffic that does not
                          match any ip_restriction rule. possible values include Allow
                          and Deny. Defaults to Allow.
                        type: string
                      loadBalancingMode:
                        description: |-
                          The Site load balancing mode. Possible values include: WeightedRoundRobin, LeastRequests, LeastResponseTime, WeightedTotalTraffic, RequestHash, PerSiteRoundRobin. Defaults to LeastRequests if omitted.
                          The Site load balancing mode. Possible values include: `WeightedRoundRobin`, `LeastRequests`, `LeastResponseTime`, `WeightedTotalTraffic`, `RequestHash`, `PerSiteRoundRobin`. Defaults to `LeastRequests` if omitted.
                        type: string
                      managedPipelineMode:
                        description: |-
                          Managed pipeline mode. Possible values include: Integrated, Classic. Defaults to Integrated.
                          The Managed Pipeline mode. Possible values include: `Integrated`, `Classic`. Defaults to `Integrated`.
                        type: string
                      minimumTlsVersion:
                        description: |-
                          The configures the minimum version of TLS required for SSL requests. Possible values include: 1.0, 1.1, 1.2 and 1.3. Defaults to 1.2.
                          The configures the minimum version of TLS required for SSL requests. Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
                        type: string
                      remoteDebuggingEnabled:
                        description: |-
                          Should Remote Debugging be enabled. Defaults to false.
                          Should Remote Debugging be enabled. Defaults to `false`.
                        type: boolean
                      remoteDebuggingVersion:
                        description: |-
                          The Remote Debugging Version. Possible values include VS2017, VS2019, and VS2022.
                          The Remote Debugging Version. Possible values include `VS2017`, `VS2019`, and `VS2022“
                        type: string
                      runtimeScaleMonitoringEnabled:
                        description: |-
                          Should Scale Monitoring of the Functions Runtime be enabled?
                          Should Functions Runtime Scale Monitoring be enabled.
                        type: boolean
                      scmIpRestriction:
                        description: One or more scm_ip_restriction blocks as defined
                          above.
                        items:
                          properties:
                            action:
                              description: |-
                                The action to take. Possible values are Allow or Deny. Defaults to Allow.
                                The action to take. Possible values are `Allow` or `Deny`.
                              type: string
                            description:
                              description: |-
                                The Description of this IP Restriction.
                                The description of the IP restriction rule.
                              type: string
                            headers:
                              description: A headers block as defined above.
                              properties:
                                xAzureFdid:
                                  description: Specifies a list of Azure Front Door
                                    IDs.
                                  items:
                                    type: string
                                  type: array
                                xFdHealthProbe:
                                  description: Specifies if a Front Door Health Probe
                                    should be expected. The only possible value is
                                    1.
                                  items:
                                    type: string
                                  type: array
                                xForwardedFor:
                                  description: Specifies a list of addresses for which
                                    matching should be applied. Omitting this value
                                    means allow any.
                                  items:
                                    type: string
                                  type: array
                                xForwardedHost:
                                  description: Specifies a list of Hosts for which
                                    matching should be applied.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            ipAddress:
                              description: |-
                                The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32
                                The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
                              type: string
                            name:
                              description: |-
                                The Site Credentials Username used for publishing.
                                The name which should be used for this `ip_restriction`.
                              type: string
                            priority:
                              description: |-
                                The priority value of this ip_restriction. Defaults to 65000.
                                The priority value of this `ip_restriction`.
                              type: number
                            serviceTag:
                              description: |-
                                The Service Tag used for this IP Restriction.
                                The Service Tag used for this IP Restriction.
                              type: string
                            virtualNetworkSubnetId:
                              description: |-
                                The subnet id which will be used by this Function App for regional virtual network integration.
                                The Virtual Network Subnet ID used for this IP Restriction.
                              type: string
                            virtualNetworkSubnetIdRef:
                              description: Reference to a Subnet in network to populate
                                virtualNetworkSubnetId.
                              properties:
                                name:
                                  description: Name of the referenced object.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object
                                  type: string
                                policy:
                                  description: Policies for referencing.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              required:
                              - name
                              type: object
                            virtualNetworkSubnetIdSelector:
                              description: Selector for a Subnet in network to populate
                                virtualNetworkSubnetId.
                              properties:
                                matchControllerRef:
                                  description: |-
                                    MatchControllerRef ensures an object with the same controller reference
                                    as the selecting object is selected.
                                  type: boolean
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels ensures an object with
                                    matching labels is selected.
                                  type: object
                                namespace:
                                  description: Namespace for the selector
                                  type: string
                                policy:
                                  description: Policies for selection.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              type: object
                          type: object
                        type: array
                      scmIpRestrictionDefaultAction:
                        description: The Default action for traffic that does not
                          match any scm_ip_restriction rule. possible values include
                          Allow and Deny. Defaults to Allow.
                        type: string
                      scmMinimumTlsVersion:
                        description: |-
                          The minimum version of TLS required for SSL requests to the SCM site. Possible values include 1.0, 1.1, 1.2 and 1.3. Defaults to 1.2.
                          Configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
                        type: string
                      scmUseMainIpRestriction:
                        description: |-
                          Should the Linux Function App ip_restriction configuration be used for the SCM also.
                          Should the Linux Function App `ip_restriction` configuration be used for the SCM also.
                        type: boolean
                      use32BitWorker:
                        description: |-
                          Should the Linux Web App  Linux Function App use a 32-bit worker. Defaults to false.
                          Should the Linux Function App use a 32-bit worker.
                        type: boolean
                      vnetRouteAllEnabled:
                        description: |-
                          Should the Linux Function App route all traffic through the virtual network. Defaults to false.
                          Should the Linux Function App route all traffic through the virtual network.
                        type: boolean
                      websocketsEnabled:
                        description: |-
                          Should Web Sockets be enabled. Defaults to false.
                          Should Web Sockets be enabled. Defaults to `false`.
                        type: boolean
                      workerCount:
                        description: |-
                          The number of Workers for this Linux Function App.
                          The number of Workers for this Linux Function App.
                        type: number
                    type: object
                  stickySettings:
                    description: A sticky_settings block as defined below.
                    properties:
                      appSettingNames:
                        description: A list of app_setting names that the Linux Function
                          App will not swap between Slots when a swap operation is
                          triggered.
                        items:
                          type: string
                        type: array
                      connectionStringNames:
                        description: A list of connection_string names that the Linux
                          Function App will not swap between Slots when a swap operation
                          is triggered.
                        items:
                          type: string
                        type: array
                    type: object
                  storageAccessKey:
                    description: The access key which will be used to access the backend
                      storage account for the Function App.
                    type: string
                  storageAccessKeyRef:
                    description: Reference to a Account in storage to populate storageAccessKey.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  storageAccessKeySelector:
                    description: Selector for a Account in storage to populate storageAccessKey.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      namespace:
                        description: Namespace for the selector
                        type: string
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  storageAuthenticationType:
                    description: The authentication type which will be used to access
                      the backend storage account for the Function App. Possible values
                      are StorageAccountConnectionString, SystemAssignedIdentity,
                      and UserAssignedIdentity.
                    type: string
                  storageContainerEndpoint:
                    description: |-
                      The backend storage container endpoint which will be used by this Function App.
                      The endpoint of the storage container where the function app's code is hosted.
                    type: string
                  storageContainerEndpointRef:
                    description: Reference to a Container in storage to populate storageContainerEndpoint.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  storageContainerEndpointSelector:
                    description: Selector for a Container in storage to populate storageContainerEndpoint.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      namespace:
                        description: Namespace for the selector
                        type: string
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  storageContainerType:
                    description: |-
                      The storage container type used for the Function App. The current supported type is blobContainer.
                      The type of the storage container where the function app's code is hosted. Only `blobContainer` is supported currently.
                    type: string
                  storageUserAssignedIdentityId:
                    description: The user assigned Managed Identity to access the
                      storage account. Conflicts with storage_access_key.
                    type: string
                  storageUserAssignedIdentityIdRef:
                    description: Reference to a UserAssignedIdentity in managedidentity
                      to populate storageUserAssignedIdentityId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  storageUserAssignedIdentityIdSelector:
                    description: Selector for a UserAssignedIdentity in managedidentity
                      to populate storageUserAssignedIdentityId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      namespace:
                        description: Namespace for the selector
                        type: string
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    description: A mapping of tags which should be assigned to the
                      Linux Function App.
                    type: object
                    x-kubernetes-map-type: granular
                  virtualNetworkSubnetId:
                    description: The subnet id which will be used by this Function
                      App for regional virtual network integration.
                    type: string
                  virtualNetworkSubnetIdRef:
                    description: Reference to a Subnet in network to populate virtualNetworkSubnetId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  virtualNetworkSubnetIdSelector:
                    description: Selector for a Subnet in network to populate virtualNetworkSubnetId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      namespace:
                        description: Namespace for the selector
                        type: string
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  webdeployPublishBasicAuthenticationEnabled:
                    description: Should the default WebDeploy Basic Authentication
                      publishing credentials enabled. Defaults to true.
                    type: boolean
                  zipDeployFile:
                    description: |-
                      The local path and filename of the Zip packaged application to deploy to this Linux Function App.
                      The local path and filename of the Zip packaged application to deploy to this Function App. **Note:** Using this value requires either `WEBSITE_RUN_FROM_PACKAGE=1` or `SCM_DO_BUILD_DURING_DEPLOYMENT=true` to be set on the App in `app_settings`.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  alwaysReady:
                    description: One or more always_ready blocks as defined below.
                    items:
                      properties:
                        instanceCount:
                          description: The instance count of the always_ready of the  Function
                            App. The minimum number is 0. The total number of instance_count
                            should not exceed the maximum_instance_count.
                          type: number
                        name:
                          description: The name of the always_ready of the Function
                            App.
                          type: string
                      type: object
                    type: array
                  appSettings:
                    additionalProperties:
                      type: string
                    description: |-
                      A map of key-value pairs for App Settings and custom values.
                      A map of key-value pairs for [App Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.
                    type: object
                    x-kubernetes-map-type: granular
                  authSettings:
                    description: A auth_settings block as defined below.
                    properties:
                      activeDirectory:
                        description: An active_directory block as defined above.
                        properties:
                          allowedAudiences:
                            description: |-
                              Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
                              Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
                            items:
                              type: string
                            type: array
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The ID of the Client to use to authenticate with Azure Active Directory.
                            type: string
                          clientSecretSecretRef:
                            description: |-
                              The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.
                              The Client Secret for the Client ID. Cannot be used with `client_secret_setting_name`.
                            properties:
                              key:
                                type: string
                              name:
                                description: Name of the secret.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.
                            type: string
                        type: object
                      additionalLoginParameters:
                        additionalProperties:
                          type: string
                        description: |-
                          Specifies a map of login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
                          Specifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
                        type: object
                        x-kubernetes-map-type: granular
                      allowedExternalRedirectUrls:
                        description: |-
                          Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Linux Web App.
                          Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.
                        items:
                          type: string
                        type: array
                      defaultProvider:
                        description: |-
                          The default authentication provider to use when multiple providers are configured. Possible values include: AzureActiveDirectory, Facebook, Google, MicrosoftAccount, Twitter, Github
                          The default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.
                        type: string
                      enabled:
                        description: |-
                          Should the Authentication / Authorization feature be enabled for the Linux Web App?
                          Should the Authentication / Authorization feature be enabled?
                        type: boolean
                      facebook:
                        description: A facebook block as defined below.
                        properties:
                          appId:
                            description: |-
                              The App ID of the Facebook app used for login.
                              The App ID of the Facebook app used for login.
                            type: string
                          appSecretSecretRef:
                            description: |-
                              The App Secret of the Facebook app used for Facebook login. Cannot be specified with app_secret_setting_name.
                              The App Secret of the Facebook app used for Facebook Login. Cannot be specified with `app_secret_setting_name`.
                            properties:
                              key:
                                type: string
                              name:
                                description: Name of the secret.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          appSecretSettingName:
                            description: |-
                              The app setting name that contains the app_secret value used for Facebook Login.
                              The app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.
                            type: string
                          oauthScopes:
                            description: |-
                              Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
                              Specifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.
                            items:
                              type: string
                            type: array
                        type: object
                      github:
                        description: A github block as defined below.
                        properties:
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The ID of the GitHub app used for login.
                            type: string
                          clientSecretSecretRef:
                            description: |-
                              The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.
                              The Client Secret of the GitHub app used for GitHub Login. Cannot be specified with `client_secret_setting_name`.
                            properties:
                              key:
                                type: string
                              name:
                                description: Name of the secret.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.
                            type: string
                          oauthScopes:
                            description: |-
                              Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
                              Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
                            items:
                              type: string
                            type: array
                        type: object
                      google:
                        description: A google block as defined below.
                        properties:
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The OpenID Connect Client ID for the Google web application.
                            type: string
                          clientSecretSecretRef:
                            description: |-
                              The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.
                              The client secret associated with the Google web application.  Cannot be specified with `client_secret_setting_name`.
                            properties:
                              key:
                                type: string
                              name:
                                description: Name of the secret.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.
                            type: string
                          oauthScopes:
                            description: |-
                              Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
                              Specifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, "openid", "profile", and "email" are used as default scopes.
                            items:
                              type: string
                            type: array
                        type: object
                      issuer:
                        description: |-
                          The OpenID Connect Issuer URI that represents the entity which issues access tokens for this Linux Web App.
                          The OpenID Connect Issuer URI that represents the entity which issues access tokens.
                        type: string
                      microsoft:
                        description: A microsoft block as defined below.
                        properties:
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                            type: string
                          clientSecretSecretRef:
                            description: |-
                              The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.
                              The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret_setting_name`.
                            properties:
                              key:
                                type: string
                              name:
                                description: Name of the secret.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.
                            type: string
                          oauthScopes:
                            description: |-
                              Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
                              The list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.
                            items:
                              type: string
                            type: array
                        type: object
                      runtimeVersion:
                        description: |-
                          The RuntimeVersion of the Authentication / Authorization feature in use for the Linux Web App.
                          The RuntimeVersion of the Authentication / Authorization feature in use.
                        type: string
                      tokenRefreshExtensionHours:
                        description: |-
                          The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.
                          The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
                        type: number
                      tokenStoreEnabled:
                        description: |-
                          Should the Linux Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to false.
                          Should the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.
                        type: boolean
                      twitter:
                        description: A twitter block as defined below.
                        properties:
                          consumerKey:
                            description: |-
                              The OAuth 1.0a consumer key of the Twitter application used for sign-in.
                              The OAuth 1.0a consumer key of the Twitter application used for sign-in.
                            type: string
                          consumerSecretSecretRef:
                            description: |-
                              The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with consumer_secret_setting_name.
                              The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret_setting_name`.
                            properties:
                              key:
                                type: string
                              name:
                                description: Name of the secret.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          consumerSecretSettingName:
                            description: |-
                              The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
                              The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.
                            type: string
                        type: object
                      unauthenticatedClientAction:
                        description: |-
                          The action to take when an unauthenticated client attempts to access the app. Possible values include: RedirectToLoginPage, AllowAnonymous.
                          The action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.
                        type: string
                    type: object
                  authSettingsV2:
                    description: An auth_settings_v2 block as defined below.
                    properties:
                      activeDirectoryV2:
                        description: An active_directory_v2 block as defined below.
                        properties:
                          allowedApplications:
                            description: |-
                              The list of allowed Applications for the Default Authorisation Policy.
                              The list of allowed Applications for the Default Authorisation Policy.
                            items:
                              type: string
                            type: array
                          allowedAudiences:
                            description: |-
                              Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
                              Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
                            items:
                              type: string
                            type: array
                          allowedGroups:
                            description: |-
                              The list of allowed Group Names for the Default Authorisation Policy.
                              The list of allowed Group Names for the Default Authorisation Policy.
                            items:
                              type: string
                            type: array
                          allowedIdentities:
                            description: |-
                              The list of allowed Identities for the Default Authorisation Policy.
                              The list of allowed Identities for the Default Authorisation Policy.
                            items:
                              type: string
                            type: array
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The ID of the Client to use to authenticate with Azure Active Directory.
                            type: string
                          clientSecretCertificateThumbprint:
                            description: |-
                              The thumbprint of the certificate used for signing purposes.
                              The thumbprint of the certificate used for signing purposes.
                            type: string
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The App Setting name that contains the client secret of the Client.
                            type: string
                          jwtAllowedClientApplications:
                            description: |-
                              A list of Allowed Client Applications in the JWT Claim.
                              A list of Allowed Client Applications in the JWT Claim.
                            items:
                              type: string
                            type: array
                          jwtAllowedGroups:
                            description: |-
                              A list of Allowed Groups in the JWT Claim.
                              A list of Allowed Groups in the JWT Claim.
                            items:
                              type: string
                            type: array
                          loginParameters:
                            additionalProperties:
                              type: string
                            description: |-
                              A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.
                              A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.
                            type: object
                            x-kubernetes-map-type: granular
                          tenantAuthEndpoint:
                            description: |-
                              The Azure Tenant Endpoint for the Authenticating Tenant. e.g. https://login.microsoftonline.com/{tenant-guid}/v2.0/
                              The Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.
                            type: string
                          wwwAuthenticationDisabled:
                            description: |-
                              Should the www-authenticate provider should be omitted from the request? Defaults to false.
                              Should the www-authenticate provider should be omitted from the request? Defaults to `false`
                            type: boolean
                        type: object
                      appleV2:
                        description: An apple_v2 block as defined below.
                        properties:
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The OpenID Connect Client ID for the Apple web application.
                            type: string
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The app setting name that contains the `client_secret` value used for Apple Login.
                            type: string
                        type: object
                      authEnabled:
                        description: |-
                          Should the AuthV2 Settings be enabled. Defaults to false.
                          Should the AuthV2 Settings be enabled. Defaults to `false`
                        type: boolean
                      azureStaticWebAppV2:
                        description: An azure_static_web_app_v2 block as defined below.
                        properties:
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The ID of the Client to use to authenticate with Azure Static Web App Authentication.
                            type: string
                        type: object
                      configFilePath:
                        description: |-
                          The path to the App Auth settings.
                          The path to the App Auth settings. **Note:** Relative Paths are evaluated from the Site Root directory.
                        type: string
                      customOidcV2:
                        description: Zero or more custom_oidc_v2 blocks as defined
                          below.
                        items:
                          properties:
                            clientId:
                              description: |-
                                The OAuth 2.0 client ID that was created for the app used for authentication.
                                The ID of the Client to use to authenticate with this Custom OIDC.
                              type: string
                            name:
                              description: |-
                                The Site Credentials Username used for publishing.
                                The name of the Custom OIDC Authentication Provider.
                              type: string
                            nameClaimType:
                              description: |-
                                The name of the claim that contains the users name.
                                The name of the claim that contains the users name.
                              type: string
                            openidConfigurationEndpoint:
                              description: |-
                                The app setting name that contains the client_secret value used for the Custom OIDC Login.
                                The endpoint that contains all the configuration endpoints for this Custom OIDC provider.
                              type: string
                            scopes:
                              description: |-
                                The list of the scopes that should be requested while authenticating.
                                The list of the scopes that should be requested while authenticating.
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      defaultProvider:
                        description: |-
                          The Default Authentication Provider to use when the unauthenticated_action is set to RedirectToLoginPage. Possible values include: apple, azureactivedirectory, facebook, github, google, twitter and the name of your custom_oidc_v2 provider.
                          The Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`. Possible values include: `apple`, `azureactivedirectory`, `facebook`, `github`, `google`, `twitter` and the `name` of your `custom_oidc_v2` provider.
                        type: string
                      excludedPaths:
                        description: |-
                          The paths which should be excluded from the unauthenticated_action when it is set to RedirectToLoginPage.
                          The paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.
                        items:
                          type: string
                        type: array
                      facebookV2:
                        description: A facebook_v2 block as defined below.
                        properties:
                          appId:
                            description: |-
                              The App ID of the Facebook app used for login.
                              The App ID of the Facebook app used for login.
                            type: string
                          appSecretSettingName:
                            description: |-
                              The app setting name that contains the app_secret value used for Facebook Login.
                              The app setting name that contains the `app_secret` value used for Facebook Login.
                            type: string
                          graphApiVersion:
                            description: |-
                              The version of the Facebook API to be used while logging in.
                              The version of the Facebook API to be used while logging in.
                            type: string
                          loginScopes:
                            description: |-
                              The list of Login scopes that should be requested as part of Microsoft Account authentication.
                              Specifies a list of scopes to be requested as part of Facebook Login authentication.
                            items:
                              type: string
                            type: array
                        type: object
                      forwardProxyConvention:
                        description: |-
                          The convention used to determine the url of the request made. Possible values include NoProxy, Standard, Custom. Defaults to NoProxy.
                          The convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`
                        type: string
                      forwardProxyCustomHostHeaderName:
                        description: |-
                          The name of the custom header containing the host of the request.
                          The name of the header containing the host of the request.
                        type: string
                      forwardProxyCustomSchemeHeaderName:
                        description: |-
                          The name of the custom header containing the scheme of the request.
                          The name of the header containing the scheme of the request.
                        type: string
                      githubV2:
                        description: A github_v2 block as defined below.
                        properties:
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The ID of the GitHub app used for login.
                            type: string
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The app setting name that contains the `client_secret` value used for GitHub Login.
                            type: string
                          loginScopes:
                            description: |-
                              The list of Login scopes that should be requested as part of Microsoft Account authentication.
                              Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
                            items:
                              type: string
                            type: array
                        type: object
                      googleV2:
                        description: A google_v2 block as defined below.
                        properties:
                          allowedAudiences:
                            description: |-
                              Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
                              Specifies a list of Allowed Audiences that will be requested as part of Google Sign-In authentication.
                            items:
                              type: string
                            type: array
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The OpenID Connect Client ID for the Google web application.
                            type: string
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The app setting name that contains the `client_secret` value used for Google Login.
                            type: string
                          loginScopes:
                            description: |-
                              The list of Login scopes that should be requested as part of Microsoft Account authentication.
                              Specifies a list of Login scopes that will be requested as part of Google Sign-In authentication.
                            items:
                              type: string
                            type: array
                        type: object
                      httpRouteApiPrefix:
                        description: |-
                          The prefix that should precede all the authentication and authorisation paths. Defaults to /.auth.
                          The prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`
                        type: string
                      login:
                        description: A login block as defined below.
                        properties:
                          allowedExternalRedirectUrls:
                            description: |-
                              External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends.
                              External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.
                            items:
                              type: string
                            type: array
                          cookieExpirationConvention:
                            description: |-
                              The method by which cookies expire. Possible values include: FixedTime, and IdentityProviderDerived. Defaults to FixedTime.
                              The method by which cookies expire. Possible values include: `FixedTime`, and `IdentityProviderDerived`. Defaults to `FixedTime`.
                            type: string
                          cookieExpirationTime:
                            description: |-
                              The time after the request is made when the session cookie should expire. Defaults to 08:00:00.
                              The time after the request is made when the session cookie should expire. Defaults to `08:00:00`.
                            type: string
                          logoutEndpoint:
                            description: |-
                              The endpoint to which logout requests should be made.
                              The endpoint to which logout requests should be made.
                            type: string
                          nonceExpirationTime:
                            description: |-
                              The time after the request is made when the nonce should expire. Defaults to 00:05:00.
                              The time after the request is made when the nonce should expire. Defaults to `00:05:00`.
                            type: string
                          preserveUrlFragmentsForLogins:
                            description: |-
                              Should the fragments from the request be preserved after the login request is made. Defaults to false.
                              Should the fragments from the request be preserved after the login request is made. Defaults to `false`.
                            type: boolean
                          tokenRefreshExtensionTime:
                            description: |-
                              The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.
                              The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
                            type: number
                          tokenStoreEnabled:
                            description: |-
                              Should the Token Store configuration Enabled. Defaults to false
                              Should the Token Store configuration Enabled. Defaults to `false`
                            type: boolean
                          tokenStorePath:
                            description: |-
                              The directory path in the App Filesystem in which the tokens will be stored.
                              The directory path in the App Filesystem in which the tokens will be stored.
                            type: string
                          tokenStoreSasSettingName:
                            description: |-
                              The name of the app setting which contains the SAS URL of the blob storage containing the tokens.
                              The name of the app setting which contains the SAS URL of the blob storage containing the tokens.
                            type: string
                          validateNonce:
                            description: |-
                              Should the nonce be validated while completing the login flow. Defaults to true.
                              Should the nonce be validated while completing the login flow. Defaults to `true`.
                            type: boolean
                        type: object
                      microsoftV2:
                        description: A microsoft_v2 block as defined below.
                        properties:
                          allowedAudiences:
                            description: |-
                              Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
                              Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
                            items:
                              type: string
                            type: array
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                            type: string
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                            type: string
                          loginScopes:
                            description: |-
                              The list of Login scopes that should be requested as part of Microsoft Account authentication.
                              The list of Login scopes that will be requested as part of Microsoft Account authentication.
                            items:
                              type: string
                            type: array
                        type: object
                      requireAuthentication:
                        description: |-
                          Should the authentication flow be used for all requests.
                          Should the authentication flow be used for all requests.
                        type: boolean
                      requireHttps:
                        description: |-
                          Should HTTPS be required on connections? Defaults to true.
                          Should HTTPS be required on connections? Defaults to true.
                        type: boolean
                      runtimeVersion:
                        description: |-
                          The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to ~1.
                          The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`
                        type: string
                      twitterV2:
                        description: A twitter_v2 block as defined below.
                        properties:
                          consumerKey:
                            description: |-
                              The OAuth 1.0a consumer key of the Twitter application used for sign-in.
                              The OAuth 1.0a consumer key of the Twitter application used for sign-in.
                            type: string
                          consumerSecretSettingName:
                            description: |-
                              The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
                              The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
                            type: string
                        type: object
                      unauthenticatedAction:
                        description: |-
                          The action to take for requests made without authentication. Possible values include RedirectToLoginPage, AllowAnonymous, Return401, and Return403. Defaults to RedirectToLoginPage.
                          The action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.
                        type: string
                    type: object
                  clientCertificateEnabled:
                    description: |-
                      Should the function app use Client Certificates.
                      Should the function app use Client Certificates
                    type: boolean
                  clientCertificateExclusionPaths:
                    description: |-
                      Paths to exclude when using client certificates, separated by ;
                      Paths to exclude when using client certificates, separated by ;
                    type: string
                  clientCertificateMode:
                    description: |-
                      The mode of the Function App's client certificates requirement for incoming requests. Possible values are Required, Optional, and OptionalInteractiveUser. Defaults to Optional.
                      The mode of the Function App's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`
                    type: string
                  connectionString:
                    description: One or more connection_string blocks as defined below.
                    items:
                      properties:
                        name:
                          description: |-
                            The name which should be used for this Connection.
                            The name which should be used for this Connection.
                          type: string
                        type:
                          description: |-
                            Type of database. Possible values include: MySQL, SQLServer, SQLAzure, Custom, NotificationHub, ServiceBus, EventHub, APIHub, DocDb, RedisCache, and PostgreSQL.
                            Type of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.
                          type: string
                        valueSecretRef:
                          description: |-
                            The connection string value.
                            The connection string value.
                          properties:
                            key:
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                          required:
                          - key
                          - name
                          type: object
                      required:
                      - valueSecretRef
                      type: object
                    type: array
                  enabled:
                    description: |-
                      Is the Function App enabled? Defaults to true.
                      Is the Function App enabled.
                    type: boolean
                  httpsOnly:
                    description: |-
                      Is Https Connection enforced to the function app. Defaults to false
                      Can the Function App only be accessed via HTTPS?
                    type: boolean
                  identity:
                    description: A identity block as defined below.
                    properties:
                      identityIds:
                        description: A list of User Assigned Managed Identity IDs
                          to be assigned to this Linux Function App.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: set
                      identityIdsRefs:
                        description: References to UserAssignedIdentity in managedidentity
                          to populate identityIds.
                        items:
                          description: A NamespacedReference to a named object.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            namespace:
                              description: Namespace of the referenced object
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      identityIdsSelector:
                        description: Selector for a list of UserAssignedIdentity in
                          managedidentity to populate identityIds.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          namespace:
                            description: Namespace for the selector
                            type: string
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      type:
                        description: Specifies the type of Managed Service Identity
                          that should be configured on this Linux Function App. Possible
                          values are SystemAssigned, UserAssigned, SystemAssigned,
                          UserAssigned (to enable both).
                        type: string
                    type: object
                  instanceMemoryInMb:
                    description: The memory size of the instances on which your app
                      runs. The currently supported values are 2048 or 4096.
                    type: number
                  location:
                    description: The Azure Region where the Function App should exist.
                      Changing this forces a new Function App to be created.
                    type: string
                  maximumInstanceCount:
                    description: The number of workers this function app can scale
                      out to.
                    type: number
                  publicNetworkAccessEnabled:
                    description: Should public network access be enabled for the Function
                      App. Defaults to true.
                    type: boolean
                  runtimeName:
                    description: The Runtime of the Linux Function App. Possible values
                      are node, dotnet-isolated, powershell, python, java and custom.
                    type: string
                  runtimeVersion:
                    description: The Runtime version of the Linux Function App. The
                      values are diff from different runtime version. The supported
                      values are 8.0, 9.0 for dotnet-isolated, 20 for node, 3.10,
                      3.11 for python, 11, 17 for java, 7.4 for powershell.
                    type: string
                  servicePlanId:
                    description: |-
                      The ID of the App Service Plan within which to create this Function App. Changing this forces a new Linux Function App to be created.
                      The ID of the App Service Plan within which to create this Function App
                    type: string
                  servicePlanIdRef:
                    description: Reference to a ServicePlan in web to populate servicePlanId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  servicePlanIdSelector:
                    description: Selector for a ServicePlan in web to populate servicePlanId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      namespace:
                        description: Namespace for the selector
                        type: string
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  siteConfig:
                    description: A site_config block as defined below.
                    properties:
                      apiDefinitionUrl:
                        description: |-
                          The URL of the API definition that describes this Linux Function App.
                          The URL of the API definition that describes this Linux Function App.
                        type: string
                      apiManagementApiId:
                        description: |-
                          The ID of the API Management API for this Linux Function App.
                          The ID of the API Management API for this Linux Function App.
                        type: string
                      apiManagementApiIdRef:
                        description: Reference to a API in apimanagement to populate
                          apiManagementApiId.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          namespace:
                            description: Namespace of the referenced object
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      apiManagementApiIdSelector:
                        description: Selector for a API in apimanagement to populate
                          apiManagementApiId.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          namespace:
                            description: Namespace for the selector
                            type: string
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      appCommandLine:
                        description: |-
                          The App command line to launch.
                          The program and any arguments used to launch this app via the command line. (Example `node myapp.js`).
                        type: string
                      appServiceLogs:
                        description: An app_service_logs block as defined above.
                        properties:
                          diskQuotaMb:
                            description: |-
                              The amount of disk space to use for logs. Valid values are between 25 and 100. Defaults to 35.
                              The amount of disk space to use for logs. Valid values are between `25` and `100`.
                            type: number
                          retentionPeriodDays:
                            description: |-
                              After how many days backups should be deleted. Defaults to 30.
                              The retention period for logs in days. Valid values are between `0` and `99999`. Defaults to `0` (never delete).
                            type: number
                        type: object
                      applicationInsightsConnectionStringSecretRef:
                        description: |-
                          The Connection String for linking the Linux Function App to Application Insights.
                          The Connection String for linking the Linux Function App to Application Insights.
                        properties:
                          key:
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      applicationInsightsKeySecretRef:
                        description: |-
                          The Instrumentation Key for connecting the Linux Function App to Application Insights.
                          The Instrumentation Key for connecting the Linux Function App to Application Insights.
                        properties:
                          key:
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      containerRegistryManagedIdentityClientId:
                        description: |-
                          The Client ID of the Managed Service Identity to use for connections to the Azure Container Registry.
                          The Client ID of the Managed Service Identity to use for connections to the Azure Container Registry.
                        type: string
                      containerRegistryManagedIdentityClientIdRef:
                        description: Reference to a UserAssignedIdentity in managedidentity
                          to populate containerRegistryManagedIdentityClientId.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          namespace:
                            description: Namespace of the referenced object
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      containerRegistryManagedIdentityClientIdSelector:
                        description: Selector for a UserAssignedIdentity in managedidentity
                          to populate containerRegistryManagedIdentityClientId.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          namespace:
                            description: Namespace for the selector
                            type: string
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      containerRegistryUseManagedIdentity:
                        description: |-
                          Should connections for Azure Container Registry use Managed Identity.
                          Should connections for Azure Container Registry use Managed Identity.
                        type: boolean
                      cors:
                        description: A cors block as defined above.
                        properties:
                          allowedOrigins:
                            description: |-
                              Specifies a list of origins that should be allowed to make cross-origin calls.
                              Specifies a list of origins that should be allowed to make cross-origin calls.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                          supportCredentials:
                            description: |-
                              Are credentials allowed in CORS requests? Defaults to false.
                              Are credentials allowed in CORS requests? Defaults to `false`.
                            type: boolean
                        type: object
                      defaultDocuments:
                        description: |-
                          Specifies a list of Default Documents for the Linux Web App.
                          Specifies a list of Default Documents for the Linux Web App.
                        items:
                          type: string
                        type: array
                      elasticInstanceMinimum:
                        description: The number of minimum instances for this Linux
                          Function App. Only affects apps on Elastic Premium plans.
                        type: number
                      healthCheckEvictionTimeInMin:
                        description: |-
                          The amount of time in minutes that a node can be unhealthy before being removed from the load balancer. Possible values are between 2 and 10. Only valid in conjunction with health_check_path.
                          The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Only valid in conjunction with `health_check_path`
                        type: number
                      healthCheckPath:
                        description: |-
                          The path to be checked for this function app health.
                          The path to be checked for this function app health.
                        type: string
                      http2Enabled:
                        description: |-
                          Specifies if the HTTP2 protocol should be enabled. Defaults to false.
                          Specifies if the http2 protocol should be enabled. Defaults to `false`.
                        type: boolean
                      ipRestriction:
                        description: One or more ip_restriction blocks as defined
                          above.
                        items:
                          properties:
                            action:
                              description: |-
                                The action to take. Possible values are Allow or Deny. Defaults to Allow.
                                The action to take. Possible values are `Allow` or `Deny`.
                              type: string
                            description:
                              description: |-
                                The Description of this IP Restriction.
                                The description of the IP restriction rule.
                              type: string
                            headers:
                              description: A headers block as defined above.
                              properties:
                                xAzureFdid:
                                  description: Specifies a list of Azure Front Door
                                    IDs.
                                  items:
                                    type: string
                                  type: array
                                xFdHealthProbe:
                                  description: Specifies if a Front Door Health Probe
                                    should be expected. The only possible value is
                                    1.
                                  items:
                                    type: string
                                  type: array
                                xForwardedFor:
                                  description: Specifies a list of addresses for which
                                    matching should be applied. Omitting this value
                                    means allow any.
                                  items:
                                    type: string
                                  type: array
                                xForwardedHost:
                                  description: Specifies a list of Hosts for which
                                    matching should be applied.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            ipAddress:
                              description: |-
                                The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32
                                The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
                              type: string
                            name:
                              description: |-
                                The Site Credentials Username used for publishing.
                                The name which should be used for this `ip_restriction`.
                              type: string
                            priority:
                              description: |-
                                The priority value of this ip_restriction. Defaults to 65000.
                                The priority value of this `ip_restriction`.
                              type: number
                            serviceTag:
                              description: |-
                                The Service Tag used for this IP Restriction.
                                The Service Tag used for this IP Restriction.
                              type: string
                            virtualNetworkSubnetId:
                              description: |-
                                The subnet id which will be used by this Function App for regional virtual network integration.
                                The Virtual Network Subnet ID used for this IP Restriction.
                              type: string
                            virtualNetworkSubnetIdRef:
                              description: Reference to a Subnet in network to populate
                                virtualNetworkSubnetId.
                              properties:
                                name:
                                  description: Name of the referenced object.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object
                                  type: string
                                policy:
                                  description: Policies for referencing.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              required:
                              - name
                              type: object
                            virtualNetworkSubnetIdSelector:
                              description: Selector for a Subnet in network to populate
                                virtualNetworkSubnetId.
                              properties:
                                matchControllerRef:
                                  description: |-
                                    MatchControllerRef ensures an object with the same controller reference
                                    as the selecting object is selected.
                                  type: boolean
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels ensures an object with
                                    matching labels is selected.
                                  type: object
                                namespace:
                                  description: Namespace for the selector
                                  type: string
                                policy:
                                  description: Policies for selection.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              type: object
                          type: object
                        type: array
                      ipRestrictionDefaultAction:
                        description: The Default action for traffic that does not
                          match any ip_restriction rule. possible values include Allow
                          and Deny. Defaults to Allow.
                        type: string
                      loadBalancingMode:
                        description: |-
                          The Site load balancing mode. Possible values include: WeightedRoundRobin, LeastRequests, LeastResponseTime, WeightedTotalTraffic, RequestHash, PerSiteRoundRobin. Defaults to LeastRequests if omitted.
                          The Site load balancing mode. Possible values include: `WeightedRoundRobin`, `LeastRequests`, `LeastResponseTime`, `WeightedTotalTraffic`, `RequestHash`, `PerSiteRoundRobin`. Defaults to `LeastRequests` if omitted.
                        type: string
                      managedPipelineMode:
                        description: |-
                          Managed pipeline mode. Possible values include: Integrated, Classic. Defaults to Integrated.
                          The Managed Pipeline mode. Possible values include: `Integrated`, `Classic`. Defaults to `Integrated`.
                        type: string
                      minimumTlsVersion:
                        description: |-
                          The configures the minimum version of TLS required for SSL requests. Possible values include: 1.0, 1.1, 1.2 and 1.3. Defaults to 1.2.
                          The configures the minimum version of TLS required for SSL requests. Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
                        type: string
                      remoteDebuggingEnabled:
                        description: |-
                          Should Remote Debugging be enabled. Defaults to false.
                          Should Remote Debugging be enabled. Defaults to `false`.
                        type: boolean
                      remoteDebuggingVersion:
                        description: |-
                          The Remote Debugging Version. Possible values include VS2017, VS2019, and VS2022.
                          The Remote Debugging Version. Possible values include `VS2017`, `VS2019`, and `VS2022“
                        type: string
                      runtimeScaleMonitoringEnabled:
                        description: |-
                          Should Scale Monitoring of the Functions Runtime be enabled?
                          Should Functions Runtime Scale Monitoring be enabled.
                        type: boolean
                      scmIpRestriction:
                        description: One or more scm_ip_restriction blocks as defined
                          above.
                        items:
                          properties:
                            action:
                              description: |-
                                The action to take. Possible values are Allow or Deny. Defaults to Allow.
                                The action to take. Possible values are `Allow` or `Deny`.
                              type: string
                            description:
                              description: |-
                                The Description of this IP Restriction.
                                The description of the IP restriction rule.
                              type: string
                            headers:
                              description: A headers block as defined above.
                              properties:
                                xAzureFdid:
                                  description: Specifies a list of Azure Front Door
                                    IDs.
                                  items:
                                    type: string
                                  type: array
                                xFdHealthProbe:
                                  description: Specifies if a Front Door Health Probe
                                    should be expected. The only possible value is
                                    1.
                                  items:
                                    type: string
                                  type: array
                                xForwardedFor:
                                  description: Specifies a list of addresses for which
                                    matching should be applied. Omitting this value
                                    means allow any.
                                  items:
                                    type: string
                                  type: array
                                xForwardedHost:
                                  description: Specifies a list of Hosts for which
                                    matching should be applied.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            ipAddress:
                              description: |-
                                The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32
                                The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
                              type: string
                            name:
                              description: |-
                                The Site Credentials Username used for publishing.
                                The name which should be used for this `ip_restriction`.
                              type: string
                            priority:
                              description: |-
                                The priority value of this ip_restriction. Defaults to 65000.
                                The priority value of this `ip_restriction`.
                              type: number
                            serviceTag:
                              description: |-
                                The Service Tag used for this IP Restriction.
                                The Service Tag used for this IP Restriction.
                              type: string
                            virtualNetworkSubnetId:
                              description: |-
                                The subnet id which will be used by this Function App for regional virtual network integration.
                                The Virtual Network Subnet ID used for this IP Restriction.
                              type: string
                            virtualNetworkSubnetIdRef:
                              description: Reference to a Subnet in network to populate
                                virtualNetworkSubnetId.
                              properties:
                                name:
                                  description: Name of the referenced object.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object
                                  type: string
                                policy:
                                  description: Policies for referencing.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              required:
                              - name
                              type: object
                            virtualNetworkSubnetIdSelector:
                              description: Selector for a Subnet in network to populate
                                virtualNetworkSubnetId.
                              properties:
                                matchControllerRef:
                                  description: |-
                                    MatchControllerRef ensures an object with the same controller reference
                                    as the selecting object is selected.
                                  type: boolean
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels ensures an object with
                                    matching labels is selected.
                                  type: object
                                namespace:
                                  description: Namespace for the selector
                                  type: string
                                policy:
                                  description: Policies for selection.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              type: object
                          type: object
                        type: array
                      scmIpRestrictionDefaultAction:
                        description: The Default action for traffic that does not
                          match any scm_ip_restriction rule. possible values include
                          Allow and Deny. Defaults to Allow.
                        type: string
                      scmMinimumTlsVersion:
                        description: |-
                          The minimum version of TLS required for SSL requests to the SCM site. Possible values include 1.0, 1.1, 1.2 and 1.3. Defaults to 1.2.
                          Configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
                        type: string
                      scmUseMainIpRestriction:
                        description: |-
                          Should the Linux Function App ip_restriction configuration be used for the SCM also.
                          Should the Linux Function App `ip_restriction` configuration be used for the SCM also.
                        type: boolean
                      use32BitWorker:
                        description: |-
                          Should the Linux Web App  Linux Function App use a 32-bit worker. Defaults to false.
                          Should the Linux Function App use a 32-bit worker.
                        type: boolean
                      vnetRouteAllEnabled:
                        description: |-
                          Should the Linux Function App route all traffic through the virtual network. Defaults to false.
                          Should the Linux Function App route all traffic through the virtual network.
                        type: boolean
                      websocketsEnabled:
                        description: |-
                          Should Web Sockets be enabled. Defaults to false.
                          Should Web Sockets be enabled. Defaults to `false`.
                        type: boolean
                      workerCount:
                        description: |-
                          The number of Workers for this Linux Function App.
                          The number of Workers for this Linux Function App.
                        type: number
                    type: object
                  stickySettings:
                    description: A sticky_settings block as defined below.
                    properties:
                      appSettingNames:
                        description: A list of app_setting names that the Linux Function
                          App will not swap between Slots when a swap operation is
                          triggered.
                        items:
                          type: string
                        type: array
                      connectionStringNames:
                        description: A list of connection_string names that the Linux
                          Function App will not swap between Slots when a swap operation
                          is triggered.
                        items:
                          type: string
                        type: array
                    type: object
                  storageAccessKey:
                    description: The access key which will be used to access the backend
                      storage account for the Function App.
                    type: string
                  storageAccessKeyRef:
                    description: Reference to a Account in storage to populate storageAccessKey.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  storageAccessKeySelector:
                    description: Selector for a Account in storage to populate storageAccessKey.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      namespace:
                        description: Namespace for the selector
                        type: string
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  storageAuthenticationType:
                    description: The authentication type which will be used to access
                      the backend storage account for the Function App. Possible values
                      are StorageAccountConnectionString, SystemAssignedIdentity,
                      and UserAssignedIdentity.
                    type: string
                  storageContainerEndpoint:
                    description: |-
                      The backend storage container endpoint which will be used by this Function App.
                      The endpoint of the storage container where the function app's code is hosted.
                    type: string
                  storageContainerEndpointRef:
                    description: Reference to a Container in storage to populate storageContainerEndpoint.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  storageContainerEndpointSelector:
                    description: Selector for a Container in storage to populate storageContainerEndpoint.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      namespace:
                        description: Namespace for the selector
                        type: string
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  storageContainerType:
                    description: |-
                      The storage container type used for the Function App. The current supported type is blobContainer.
                      The type of the storage container where the function app's code is hosted. Only `blobContainer` is supported currently.
                    type: string
                  storageUserAssignedIdentityId:
                    description: The user assigned Managed Identity to access the
                      storage account. Conflicts with storage_access_key.
                    type: string
                  storageUserAssignedIdentityIdRef:
                    description: Reference to a UserAssignedIdentity in managedidentity
                      to populate storageUserAssignedIdentityId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  storageUserAssignedIdentityIdSelector:
                    description: Selector for a UserAssignedIdentity in managedidentity
                      to populate storageUserAssignedIdentityId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      namespace:
                        description: Namespace for the selector
                        type: string
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    description: A mapping of tags which should be assigned to the
                      Linux Function App.
                    type: object
                    x-kubernetes-map-type: granular
                  virtualNetworkSubnetId:
                    description: The subnet id which will be used by this Function
                      App for regional virtual network integration.
                    type: string
                  virtualNetworkSubnetIdRef:
                    description: Reference to a Subnet in network to populate virtualNetworkSubnetId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  virtualNetworkSubnetIdSelector:
                    description: Selector for a Subnet in network to populate virtualNetworkSubnetId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      namespace:
                        description: Namespace for the selector
                        type: string
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  webdeployPublishBasicAuthenticationEnabled:
                    description: Should the default WebDeploy Basic Authentication
                      publishing credentials enabled. Defaults to true.
                    type: boolean
                  zipDeployFile:
                    description: |-
                      The local path and filename of the Zip packaged application to deploy to this Linux Function App.
                      The local path and filename of the Zip packaged application to deploy to this Function App. **Note:** Using this value requires either `WEBSITE_RUN_FROM_PACKAGE=1` or `SCM_DO_BUILD_DURING_DEPLOYMENT=true` to be set on the App in `app_settings`.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  kind: ClusterProviderConfig
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  kind:
                    description: Kind of the referenced object.
                    type: string
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - kind
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                required:
                - name
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.location is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.location)
                || (has(self.initProvider) && has(self.initProvider.location))'
            - message: spec.forProvider.runtimeName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.runtimeName)
                || (has(self.initProvider) && has(self.initProvider.runtimeName))'
            - message: spec.forProvider.runtimeVersion is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.runtimeVersion)
                || (has(self.initProvider) && has(self.initProvider.runtimeVersion))'
            - message: spec.forProvider.siteConfig is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.siteConfig)
                || (has(self.initProvider) && has(self.initProvider.siteConfig))'
            - message: spec.forProvider.storageAuthenticationType is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.storageAuthenticationType)
                || (has(self.initProvider) && has(self.initProvider.storageAuthenticationType))'
            - message: spec.forProvider.storageContainerType is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.storageContainerType)
                || (has(self.initProvider) && has(self.initProvider.storageContainerType))'
          status:
            description: FunctionAppFlexConsumptionStatus defines the observed state
              of FunctionAppFlexConsumption.
            properties:
              atProvider:
                properties:
                  alwaysReady:
                    description: One or more always_ready blocks as defined below.
                    items:
                      properties:
                        instanceCount:
                          description: The instance count of the always_ready of the  Function
                            App. The minimum number is 0. The total number of instance_count
                            should not exceed the maximum_instance_count.
                          type: number
                        name:
                          description: The name of the always_ready of the Function
                            App.
                          type: string
                      type: object
                    type: array
                  appSettings:
                    additionalProperties:
                      type: string
                    description: |-
                      A map of key-value pairs for App Settings and custom values.
                      A map of key-value pairs for [App Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.
                    type: object
                    x-kubernetes-map-type: granular
                  authSettings:
                    description: A auth_settings block as defined below.
                    properties:
                      activeDirectory:
                        description: An active_directory block as defined above.
                        properties:
                          allowedAudiences:
                            description: |-
                              Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
                              Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
                            items:
                              type: string
                            type: array
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The ID of the Client to use to authenticate with Azure Active Directory.
                            type: string
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.
                            type: string
                        type: object
                      additionalLoginParameters:
                        additionalProperties:
                          type: string
                        description: |-
                          Specifies a map of login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
                          Specifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
                        type: object
                        x-kubernetes-map-type: granular
                      allowedExternalRedirectUrls:
                        description: |-
                          Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Linux Web App.
                          Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.
                        items:
                          type: string
                        type: array
                      defaultProvider:
                        description: |-
                          The default authentication provider to use when multiple providers are configured. Possible values include: AzureActiveDirectory, Facebook, Google, MicrosoftAccount, Twitter, Github
                          The default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.
                        type: string
                      enabled:
                        description: |-
                          Should the Authentication / Authorization feature be enabled for the Linux Web App?
                          Should the Authentication / Authorization feature be enabled?
                        type: boolean
                      facebook:
                        description: A facebook block as defined below.
                        properties:
                          appId:
                            description: |-
                              The App ID of the Facebook app used for login.
                              The App ID of the Facebook app used for login.
                            type: string
                          appSecretSettingName:
                            description: |-
                              The app setting name that contains the app_secret value used for Facebook Login.
                              The app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.
                            type: string
                          oauthScopes:
                            description: |-
                              Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
                              Specifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.
                            items:
                              type: string
                            type: array
                        type: object
                      github:
                        description: A github block as defined below.
                        properties:
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The ID of the GitHub app used for login.
                            type: string
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.
                            type: string
                          oauthScopes:
                            description: |-
                              Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
                              Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
                            items:
                              type: string
                            type: array
                        type: object
                      google:
                        description: A google block as defined below.
                        properties:
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The OpenID Connect Client ID for the Google web application.
                            type: string
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.
                            type: string
                          oauthScopes:
                            description: |-
                              Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
                              Specifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, "openid", "profile", and "email" are used as default scopes.
                            items:
                              type: string
                            type: array
                        type: object
                      issuer:
                        description: |-
                          The OpenID Connect Issuer URI that represents the entity which issues access tokens for this Linux Web App.
                          The OpenID Connect Issuer URI that represents the entity which issues access tokens.
                        type: string
                      microsoft:
                        description: A microsoft block as defined below.
                        properties:
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                            type: string
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.
                            type: string
                          oauthScopes:
                            description: |-
                              Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.
                              The list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.
                            items:
                              type: string
                            type: array
                        type: object
                      runtimeVersion:
                        description: |-
                          The RuntimeVersion of the Authentication / Authorization feature in use for the Linux Web App.
                          The RuntimeVersion of the Authentication / Authorization feature in use.
                        type: string
                      tokenRefreshExtensionHours:
                        description: |-
                          The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.
                          The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
                        type: number
                      tokenStoreEnabled:
                        description: |-
                          Should the Linux Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to false.
                          Should the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.
                        type: boolean
                      twitter:
                        description: A twitter block as defined below.
                        properties:
                          consumerKey:
                            description: |-
                              The OAuth 1.0a consumer key of the Twitter application used for sign-in.
                              The OAuth 1.0a consumer key of the Twitter application used for sign-in.
                            type: string
                          consumerSecretSettingName:
                            description: |-
                              The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
                              The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.
                            type: string
                        type: object
                      unauthenticatedClientAction:
                        description: |-
                          The action to take when an unauthenticated client attempts to access the app. Possible values include: RedirectToLoginPage, AllowAnonymous.
                          The action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.
                        type: string
                    type: object
                  authSettingsV2:
                    description: An auth_settings_v2 block as defined below.
                    properties:
                      activeDirectoryV2:
                        description: An active_directory_v2 block as defined below.
                        properties:
                          allowedApplications:
                            description: |-
                              The list of allowed Applications for the Default Authorisation Policy.
                              The list of allowed Applications for the Default Authorisation Policy.
                            items:
                              type: string
                            type: array
                          allowedAudiences:
                            description: |-
                              Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
                              Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
                            items:
                              type: string
                            type: array
                          allowedGroups:
                            description: |-
                              The list of allowed Group Names for the Default Authorisation Policy.
                              The list of allowed Group Names for the Default Authorisation Policy.
                            items:
                              type: string
                            type: array
                          allowedIdentities:
                            description: |-
                              The list of allowed Identities for the Default Authorisation Policy.
                              The list of allowed Identities for the Default Authorisation Policy.
                            items:
                              type: string
                            type: array
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The ID of the Client to use to authenticate with Azure Active Directory.
                            type: string
                          clientSecretCertificateThumbprint:
                            description: |-
                              The thumbprint of the certificate used for signing purposes.
                              The thumbprint of the certificate used for signing purposes.
                            type: string
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The App Setting name that contains the client secret of the Client.
                            type: string
                          jwtAllowedClientApplications:
                            description: |-
                              A list of Allowed Client Applications in the JWT Claim.
                              A list of Allowed Client Applications in the JWT Claim.
                            items:
                              type: string
                            type: array
                          jwtAllowedGroups:
                            description: |-
                              A list of Allowed Groups in the JWT Claim.
                              A list of Allowed Groups in the JWT Claim.
                            items:
                              type: string
                            type: array
                          loginParameters:
                            additionalProperties:
                              type: string
                            description: |-
                              A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.
                              A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.
                            type: object
                            x-kubernetes-map-type: granular
                          tenantAuthEndpoint:
                            description: |-
                              The Azure Tenant Endpoint for the Authenticating Tenant. e.g. https://login.microsoftonline.com/{tenant-guid}/v2.0/
                              The Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.
                            type: string
                          wwwAuthenticationDisabled:
                            description: |-
                              Should the www-authenticate provider should be omitted from the request? Defaults to false.
                              Should the www-authenticate provider should be omitted from the request? Defaults to `false`
                            type: boolean
                        type: object
                      appleV2:
                        description: An apple_v2 block as defined below.
                        properties:
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The OpenID Connect Client ID for the Apple web application.
                            type: string
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The app setting name that contains the `client_secret` value used for Apple Login.
                            type: string
                          loginScopes:
                            description: The list of Login scopes that should be requested
                              as part of Microsoft Account authentication.
                            items:
                              type: string
                            type: array
                        type: object
                      authEnabled:
                        description: |-
                          Should the AuthV2 Settings be enabled. Defaults to false.
                          Should the AuthV2 Settings be enabled. Defaults to `false`
                        type: boolean
                      azureStaticWebAppV2:
                        description: An azure_static_web_app_v2 block as defined below.
                        properties:
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The ID of the Client to use to authenticate with Azure Static Web App Authentication.
                            type: string
                        type: object
                      configFilePath:
                        description: |-
                          The path to the App Auth settings.
                          The path to the App Auth settings. **Note:** Relative Paths are evaluated from the Site Root directory.
                        type: string
                      customOidcV2:
                        description: Zero or more custom_oidc_v2 blocks as defined
                          below.
                        items:
                          properties:
                            authorisationEndpoint:
                              description: |-
                                The endpoint to make the Authorisation Request as supplied by openid_configuration_endpoint response.
                                The endpoint to make the Authorisation Request.
                              type: string
                            certificationUri:
                              description: |-
                                The endpoint that provides the keys necessary to validate the token as supplied by openid_configuration_endpoint response.
                                The endpoint that provides the keys necessary to validate the token.
                              type: string
                            clientCredentialMethod:
                              description: |-
                                The Client Credential Method used.
                                The Client Credential Method used. Currently the only supported value is `ClientSecretPost`.
                              type: string
                            clientId:
                              description: |-
                                The OAuth 2.0 client ID that was created for the app used for authentication.
                                The ID of the Client to use to authenticate with this Custom OIDC.
                              type: string
                            clientSecretSettingName:
                              description: |-
                                The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                                The App Setting name that contains the secret for this Custom OIDC Client.
                              type: string
                            issuerEndpoint:
                              description: |-
                                The endpoint that issued the Token as supplied by openid_configuration_endpoint response.
                                The endpoint that issued the Token.
                              type: string
                            name:
                              description: |-
                                The Site Credentials Username used for publishing.
                                The name of the Custom OIDC Authentication Provider.
                              type: string
                            nameClaimType:
                              description: |-
                                The name of the claim that contains the users name.
                                The name of the claim that contains the users name.
                              type: string
                            openidConfigurationEndpoint:
                              description: |-
                                The app setting name that contains the client_secret value used for the Custom OIDC Login.
                                The endpoint that contains all the configuration endpoints for this Custom OIDC provider.
                              type: string
                            scopes:
                              description: |-
                                The list of the scopes that should be requested while authenticating.
                                The list of the scopes that should be requested while authenticating.
                              items:
                                type: string
                              type: array
                            tokenEndpoint:
                              description: |-
                                The endpoint used to request a Token as supplied by openid_configuration_endpoint response.
                                The endpoint used to request a Token.
                              type: string
                          type: object
                        type: array
                      defaultProvider:
                        description: |-
                          The Default Authentication Provider to use when the unauthenticated_action is set to RedirectToLoginPage. Possible values include: apple, azureactivedirectory, facebook, github, google, twitter and the name of your custom_oidc_v2 provider.
                          The Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`. Possible values include: `apple`, `azureactivedirectory`, `facebook`, `github`, `google`, `twitter` and the `name` of your `custom_oidc_v2` provider.
                        type: string
                      excludedPaths:
                        description: |-
                          The paths which should be excluded from the unauthenticated_action when it is set to RedirectToLoginPage.
                          The paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.
                        items:
                          type: string
                        type: array
                      facebookV2:
                        description: A facebook_v2 block as defined below.
                        properties:
                          appId:
                            description: |-
                              The App ID of the Facebook app used for login.
                              The App ID of the Facebook app used for login.
                            type: string
                          appSecretSettingName:
                            description: |-
                              The app setting name that contains the app_secret value used for Facebook Login.
                              The app setting name that contains the `app_secret` value used for Facebook Login.
                            type: string
                          graphApiVersion:
                            description: |-
                              The version of the Facebook API to be used while logging in.
                              The version of the Facebook API to be used while logging in.
                            type: string
                          loginScopes:
                            description: |-
                              The list of Login scopes that should be requested as part of Microsoft Account authentication.
                              Specifies a list of scopes to be requested as part of Facebook Login authentication.
                            items:
                              type: string
                            type: array
                        type: object
                      forwardProxyConvention:
                        description: |-
                          The convention used to determine the url of the request made. Possible values include NoProxy, Standard, Custom. Defaults to NoProxy.
                          The convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`
                        type: string
                      forwardProxyCustomHostHeaderName:
                        description: |-
                          The name of the custom header containing the host of the request.
                          The name of the header containing the host of the request.
                        type: string
                      forwardProxyCustomSchemeHeaderName:
                        description: |-
                          The name of the custom header containing the scheme of the request.
                          The name of the header containing the scheme of the request.
                        type: string
                      githubV2:
                        description: A github_v2 block as defined below.
                        properties:
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The ID of the GitHub app used for login.
                            type: string
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The app setting name that contains the `client_secret` value used for GitHub Login.
                            type: string
                          loginScopes:
                            description: |-
                              The list of Login scopes that should be requested as part of Microsoft Account authentication.
                              Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
                            items:
                              type: string
                            type: array
                        type: object
                      googleV2:
                        description: A google_v2 block as defined below.
                        properties:
                          allowedAudiences:
                            description: |-
                              Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
                              Specifies a list of Allowed Audiences that will be requested as part of Google Sign-In authentication.
                            items:
                              type: string
                            type: array
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The OpenID Connect Client ID for the Google web application.
                            type: string
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The app setting name that contains the `client_secret` value used for Google Login.
                            type: string
                          loginScopes:
                            description: |-
                              The list of Login scopes that should be requested as part of Microsoft Account authentication.
                              Specifies a list of Login scopes that will be requested as part of Google Sign-In authentication.
                            items:
                              type: string
                            type: array
                        type: object
                      httpRouteApiPrefix:
                        description: |-
                          The prefix that should precede all the authentication and authorisation paths. Defaults to /.auth.
                          The prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`
                        type: string
                      login:
                        description: A login block as defined below.
                        properties:
                          allowedExternalRedirectUrls:
                            description: |-
                              External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends.
                              External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.
                            items:
                              type: string
                            type: array
                          cookieExpirationConvention:
                            description: |-
                              The method by which cookies expire. Possible values include: FixedTime, and IdentityProviderDerived. Defaults to FixedTime.
                              The method by which cookies expire. Possible values include: `FixedTime`, and `IdentityProviderDerived`. Defaults to `FixedTime`.
                            type: string
                          cookieExpirationTime:
                            description: |-
                              The time after the request is made when the session cookie should expire. Defaults to 08:00:00.
                              The time after the request is made when the session cookie should expire. Defaults to `08:00:00`.
                            type: string
                          logoutEndpoint:
                            description: |-
                              The endpoint to which logout requests should be made.
                              The endpoint to which logout requests should be made.
                            type: string
                          nonceExpirationTime:
                            description: |-
                              The time after the request is made when the nonce should expire. Defaults to 00:05:00.
                              The time after the request is made when the nonce should expire. Defaults to `00:05:00`.
                            type: string
                          preserveUrlFragmentsForLogins:
                            description: |-
                              Should the fragments from the request be preserved after the login request is made. Defaults to false.
                              Should the fragments from the request be preserved after the login request is made. Defaults to `false`.
                            type: boolean
                          tokenRefreshExtensionTime:
                            description: |-
                              The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.
                              The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
                            type: number
                          tokenStoreEnabled:
                            description: |-
                              Should the Token Store configuration Enabled. Defaults to false
                              Should the Token Store configuration Enabled. Defaults to `false`
                            type: boolean
                          tokenStorePath:
                            description: |-
                              The directory path in the App Filesystem in which the tokens will be stored.
                              The directory path in the App Filesystem in which the tokens will be stored.
                            type: string
                          tokenStoreSasSettingName:
                            description: |-
                              The name of the app setting which contains the SAS URL of the blob storage containing the tokens.
                              The name of the app setting which contains the SAS URL of the blob storage containing the tokens.
                            type: string
                          validateNonce:
                            description: |-
                              Should the nonce be validated while completing the login flow. Defaults to true.
                              Should the nonce be validated while completing the login flow. Defaults to `true`.
                            type: boolean
                        type: object
                      microsoftV2:
                        description: A microsoft_v2 block as defined below.
                        properties:
                          allowedAudiences:
                            description: |-
                              Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
                              Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
                            items:
                              type: string
                            type: array
                          clientId:
                            description: |-
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                              The OAuth 2.0 client ID that was created for the app used for authentication.
                            type: string
                          clientSecretSettingName:
                            description: |-
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                              The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
                            type: string
                          loginScopes:
                            description: |-
                              The list of Login scopes that should be requested as part of Microsoft Account authentication.
                              The list of Login scopes that will be requested as part of Microsoft Account authentication.
                            items:
                              type: string
                            type: array
                        type: object
                      requireAuthentication:
                        description: |-
                          Should the authentication flow be used for all requests.
                          Should the authentication flow be used for all requests.
                        type: boolean
                      requireHttps:
                        description: |-
                          Should HTTPS be required on connections? Defaults to true.
                          Should HTTPS be required on connections? Defaults to true.
                        type: boolean
                      runtimeVersion:
                        description: |-
                          The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to ~1.
                          The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`
                        type: string
                      twitterV2:
                        description: A twitter_v2 block as defined below.
                        properties:
                          consumerKey:
                            description: |-
                              The OAuth 1.0a consumer key of the Twitter application used for sign-in.
                              The OAuth 1.0a consumer key of the Twitter application used for sign-in.
                            type: string
                          consumerSecretSettingName:
                            description: |-
                              The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
                              The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
                            type: string
                        type: object
                      unauthenticatedAction:
                        description: |-
                          The action to take for requests made without authentication. Possible values include RedirectToLoginPage, AllowAnonymous, Return401, and Return403. Defaults to RedirectToLoginPage.
                          The action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.
                        type: string
                    type: object
                  clientCertificateEnabled:
                    description: |-
                      Should the function app use Client Certificates.
                      Should the function app use Client Certificates
                    type: boolean
                  clientCertificateExclusionPaths:
                    description: |-
                      Paths to exclude when using client certificates, separated by ;
                      Paths to exclude when using client certificates, separated by ;
                    type: string
                  clientCertificateMode:
                    description: |-
                      The mode of the Function App's client certificates requirement for incoming requests. Possible values are Required, Optional, and OptionalInteractiveUser. Defaults to Optional.
                      The mode of the Function App's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`
                    type: string
                  connectionString:
                    description: One or more connection_string blocks as defined below.
                    items:
                      properties:
                        name:
                          description: |-
                            The name which should be used for this Connection.
                            The name which should be used for this Connection.
                          type: string
                        type:
                          description: |-
                            Type of database. Possible values include: MySQL, SQLServer, SQLAzure, Custom, NotificationHub, ServiceBus, EventHub, APIHub, DocDb, RedisCache, and PostgreSQL.
                            Type of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.
                          type: string
                      type: object
                    type: array
                  defaultHostname:
                    description: The default hostname of the Linux Function App.
                    type: string
                  enabled:
                    description: |-
                      Is the Function App enabled? Defaults to true.
                      Is the Function App enabled.
                    type: boolean
                  hostingEnvironmentId:
                    description: The ID of the App Service Environment used by Function
                      App.
                    type: string
                  httpsOnly:
                    description: |-
                      Is Https Connection enforced to the function app. Defaults to false
                      Can the Function App only be accessed via HTTPS?
                    type: boolean
                  id:
                    description: The ID of the Linux Function App.
                    type: string
                  identity:
                    description: A identity block as defined below.
                    properties:
                      identityIds:
                        description: A list of User Assigned Managed Identity IDs
                          to be assigned to this Linux Function App.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: set
                      principalId:
                        description: The Principal ID associated with this Managed
                          Service Identity.
                        type: string
                      tenantId:
                        description: The Tenant ID associated with this Managed Service
                          Identity.
                        type: string
                      type:
                        description: Specifies the type of Managed Service Identity
                          that should be configured on this Linux Function App. Possible
                          values are SystemAssigned, UserAssigned, SystemAssigned,
                          UserAssigned (to enable both).
                        type: string
                    type: object
                  instanceMemoryInMb:
                    description: The memory size of the instances on which your app
                      runs. The currently supported values are 2048 or 4096.
                    type: number
                  kind:
                    description: The Kind value for this Linux Function App.
                    type: string
                  location:
                    description: The Azure Region where the Function App should exist.
                      Changing this forces a new Function App to be created.
                    type: string
                  maximumInstanceCount:
                    description: The number of workers this function app can scale
                      out to.
                    type: number
                  outboundIpAddressList:
                    description: A list of outbound IP addresses. For example ["52.23.25.3",
                      "52.143.43.12"]
                    items:
                      type: string
                    type: array
                  outboundIpAddresses:
                    description: A comma separated list of outbound IP addresses as
                      a string. For example 52.23.25.3,52.143.43.12.
                    type: string
                  possibleOutboundIpAddressList:
                    description: A list of possible outbound IP addresses, not all
                      of which are necessarily in use. This is a superset of outbound_ip_address_list.
                      For example ["52.23.25.3", "52.143.43.12"].
                    items:
                      type: string
                    type: array
                  possibleOutboundIpAddresses:
                    description: A comma separated list of possible outbound IP addresses
                      as a string. For example 52.23.25.3,52.143.43.12,52.143.43.17.
                      This is a superset of outbound_ip_addresses.
                    type: string
                  publicNetworkAccessEnabled:
                    description: Should public network access be enabled for the Function
                      App. Defaults to true.
                    type: boolean
                  resourceGroupName:
                    description: The name of the Resource Group where the Function
                      App should exist. Changing this forces a new Linux Function
                      App to be created.
                    type: string
                  runtimeName:
                    description: The Runtime of the Linux Function App. Possible values
                      are node, dotnet-isolated, powershell, python, java and custom.
                    type: string
                  runtimeVersion:
                    description: The Runtime version of the Linux Function App. The
                      values are diff from different runtime version. The supported
                      values are 8.0, 9.0 for dotnet-isolated, 20 for node, 3.10,
                      3.11 for python, 11, 17 for java, 7.4 for powershell.
                    type: string
                  servicePlanId:
                    description: |-
                      The ID of the App Service Plan within which to create this Function App. Changing this forces a new Linux Function App to be created.
                      The ID of the App Service Plan within which to create this Function App
                    type: string
                  siteConfig:
                    description: A site_config block as defined below.
                    properties:
                      apiDefinitionUrl:
                        description: |-
                          The URL of the API definition that describes this Linux Function App.
                          The URL of the API definition that describes this Linux Function App.
                        type: string
                      apiManagementApiId:
                        description: |-
                          The ID of the API Management API for this Linux Function App.
                          The ID of the API Management API for this Linux Function App.
                        type: string
                      appCommandLine:
                        description: |-
                          The App command line to launch.
                          The program and any arguments used to launch this app via the command line. (Example `node myapp.js`).
                        type: string
                      appServiceLogs:
                        description: An app_service_logs block as defined above.
                        properties:
                          diskQuotaMb:
                            description: |-
                              The amount of disk space to use for logs. Valid values are between 25 and 100. Defaults to 35.
                              The amount of disk space to use for logs. Valid values are between `25` and `100`.
                            type: number
                          retentionPeriodDays:
                            description: |-
                              After how many days backups should be deleted. Defaults to 30.
                              The retention period for logs in days. Valid values are between `0` and `99999`. Defaults to `0` (never delete).
                            type: number
                        type: object
                      containerRegistryManagedIdentityClientId:
                        description: |-
                          The Client ID of the Managed Service Identity to use for connections to the Azure Container Registry.
                          The Client ID of the Managed Service Identity to use for connections to the Azure Container Registry.
                        type: string
                      containerRegistryUseManagedIdentity:
                        description: |-
                          Should connections for Azure Container Registry use Managed Identity.
                          Should connections for Azure Container Registry use Managed Identity.
                        type: boolean
                      cors:
                        description: A cors block as defined above.
                        properties:
                          allowedOrigins:
                            description: |-
                              Specifies a list of origins that should be allowed to make cross-origin calls.
                              Specifies a list of origins that should be allowed to make cross-origin calls.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                          supportCredentials:
                            description: |-
                              Are credentials allowed in CORS requests? Defaults to false.
                              Are credentials allowed in CORS requests? Defaults to `false`.
                            type: boolean
                        type: object
                      defaultDocuments:
                        description: |-
                          Specifies a list of Default Documents for the Linux Web App.
                          Specifies a list of Default Documents for the Linux Web App.
                        items:
                          type: string
                        type: array
                      detailedErrorLoggingEnabled:
                        description: |-
                          Is the Function App enabled? Defaults to true.
                          Is detailed error logging enabled
                        type: boolean
                      elasticInstanceMinimum:
                        description: The number of minimum instances for this Linux
                          Function App. Only affects apps on Elastic Premium plans.
                        type: number
                      healthCheckEvictionTimeInMin:
                        description: |-
                          The amount of time in minutes that a node can be unhealthy before being removed from the load balancer. Possible values are between 2 and 10. Only valid in conjunction with health_check_path.
                          The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Only valid in conjunction with `health_check_path`
                        type: number
                      healthCheckPath:
                        description: |-
                          The path to be checked for this function app health.
                          The path to be checked for this function app health.
                        type: string
                      http2Enabled:
                        description: |-
                          Specifies if the HTTP2 protocol should be enabled. Defaults to false.
                          Specifies if the http2 protocol should be enabled. Defaults to `false`.
                        type: boolean
                      ipRestriction:
                        description: One or more ip_restriction blocks as defined
                          above.
                        items:
                          properties:
                            action:
                              description: |-
                                The action to take. Possible values are Allow or Deny. Defaults to Allow.
                                The action to take. Possible values are `Allow` or `Deny`.
                              type: string
                            description:
                              description: |-
                                The Description of this IP Restriction.
                                The description of the IP restriction rule.
                              type: string
                            headers:
                              description: A headers block as defined above.
                              properties:
                                xAzureFdid:
                                  description: Specifies a list of Azure Front Door
                                    IDs.
                                  items:
                                    type: string
                                  type: array
                                xFdHealthProbe:
                                  description: Specifies if a Front Door Health Probe
                                    should be expected. The only possible value is
                                    1.
                                  items:
                                    type: string
                                  type: array
                                xForwardedFor:
                                  description: Specifies a list of addresses for which
                                    matching should be applied. Omitting this value
                                    means allow any.
                                  items:
                                    type: string
                                  type: array
                                xForwardedHost:
                                  description: Specifies a list of Hosts for which
                                    matching should be applied.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            ipAddress:
                              description: |-
                                The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32
                                The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
                              type: string
                            name:
                              description: |-
                                The Site Credentials Username used for publishing.
                                The name which should be used for this `ip_restriction`.
                              type: string
                            priority:
                              description: |-
                                The priority value of this ip_restriction. Defaults to 65000.
                                The priority value of this `ip_restriction`.
                              type: number
                            serviceTag:
                              description: |-
                                The Service Tag used for this IP Restriction.
                                The Service Tag used for this IP Restriction.
                              type: string
                            virtualNetworkSubnetId:
                              description: |-
                                The subnet id which will be used by this Function App for regional virtual network integration.
                                The Virtual Network Subnet ID used for this IP Restriction.
                              type: string
                          type: object
                        type: array
                      ipRestrictionDefaultAction:
                        description: The Default action for traffic that does not
                          match any ip_restriction rule. possible values include Allow
                          and Deny. Defaults to Allow.
                        type: string
                      loadBalancingMode:
                        description: |-
                          The Site load balancing mode. Possible values include: WeightedRoundRobin, LeastRequests, LeastResponseTime, WeightedTotalTraffic, RequestHash, PerSiteRoundRobin. Defaults to LeastRequests if omitted.
                          The Site load balancing mode. Possible values include: `WeightedRoundRobin`, `LeastRequests`, `LeastResponseTime`, `WeightedTotalTraffic`, `RequestHash`, `PerSiteRoundRobin`. Defaults to `LeastRequests` if omitted.
                        type: string
                      managedPipelineMode:
                        description: |-
                          Managed pipeline mode. Possible values include: Integrated, Classic. Defaults to Integrated.
                          The Managed Pipeline mode. Possible values include: `Integrated`, `Classic`. Defaults to `Integrated`.
                        type: string
                      minimumTlsVersion:
                        description: |-
                          The configures the minimum version of TLS required for SSL requests. Possible values include: 1.0, 1.1, 1.2 and 1.3. Defaults to 1.2.
                          The configures the minimum version of TLS required for SSL requests. Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
                        type: string
                      remoteDebuggingEnabled:
                        description: |-
                          Should Remote Debugging be enabled. Defaults to false.
                          Should Remote Debugging be enabled. Defaults to `false`.
                        type: boolean
                      remoteDebuggingVersion:
                        description: |-
                          The Remote Debugging Version. Possible values include VS2017, VS2019, and VS2022.
                          The Remote Debugging Version. Possible values include `VS2017`, `VS2019`, and `VS2022“
                        type: string
                      runtimeScaleMonitoringEnabled:
                        description: |-
                          Should Scale Monitoring of the Functions Runtime be enabled?
                          Should Functions Runtime Scale Monitoring be enabled.
                        type: boolean
                      scmIpRestriction:
                        description: One or more scm_ip_restriction blocks as defined
                          above.
                        items:
                          properties:
                            action:
                              description: |-
                                The action to take. Possible values are Allow or Deny. Defaults to Allow.
                                The action to take. Possible values are `Allow` or `Deny`.
                              type: string
                            description:
                              description: |-
                                The Description of this IP Restriction.
                                The description of the IP restriction rule.
                              type: string
                            headers:
                              description: A headers block as defined above.
                              properties:
                                xAzureFdid:
                                  description: Specifies a list of Azure Front Door
                                    IDs.
                                  items:
                                    type: string
                                  type: array
                                xFdHealthProbe:
                                  description: Specifies if a Front Door Health Probe
                                    should be expected. The only possible value is
                                    1.
                                  items:
                                    type: string
                                  type: array
                                xForwardedFor:
                                  description: Specifies a list of addresses for which
                                    matching should be applied. Omitting this value
                                    means allow any.
                                  items:
                                    type: string
                                  type: array
                                xForwardedHost:
                                  description: Specifies a list of Hosts for which
                                    matching should be applied.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            ipAddress:
                              description: |-
                                The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32
                                The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
                              type: string
                            name:
                              description: |-
                                The Site Credentials Username used for publishing.
                                The name which should be used for this `ip_restriction`.
                              type: string
                            priority:
                              description: |-
                                The priority value of this ip_restriction. Defaults to 65000.
                                The priority value of this `ip_restriction`.
                              type: number
                            serviceTag:
                              description: |-
                                The Service Tag used for this IP Restriction.
                                The Service Tag used for this IP Restriction.
                              type: string
                            virtualNetworkSubnetId:
                              description: |-
                                The subnet id which will be used by this Function App for regional virtual network integration.
                                The Virtual Network Subnet ID used for this IP Restriction.
                              type: string
                          type: object
                        type: array
                      scmIpRestrictionDefaultAction:
                        description: The Default action for traffic that does not
                          match any scm_ip_restriction rule. possible values include
                          Allow and Deny. Defaults to Allow.
                        type: string
                      scmMinimumTlsVersion:
                        description: |-
                          The minimum version of TLS required for SSL requests to the SCM site. Possible values include 1.0, 1.1, 1.2 and 1.3. Defaults to 1.2.
                          Configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
                        type: string
                      scmType:
                        description: The SCM Type in use by the Linux Function App.
                        type: string
                      scmUseMainIpRestriction:
                        description: |-
                          Should the Linux Function App ip_restriction configuration be used for the SCM also.
                          Should the Linux Function App `ip_restriction` configuration be used for the SCM also.
                        type: boolean
                      use32BitWorker:
                        description: |-
                          Should the Linux Web App  Linux Function App use a 32-bit worker. Defaults to false.
                          Should the Linux Function App use a 32-bit worker.
                        type: boolean
                      vnetRouteAllEnabled:
                        description: |-
                          Should the Linux Function App route all traffic through the virtual network. Defaults to false.
                          Should the Linux Function App route all traffic through the virtual network.
                        type: boolean
                      websocketsEnabled:
                        description: |-
                          Should Web Sockets be enabled. Defaults to false.
                          Should Web Sockets be enabled. Defaults to `false`.
                        type: boolean
                      workerCount:
                        description: |-
                          The number of Workers for this Linux Function App.
                          The number of Workers for this Linux Function App.
                        type: number
                    type: object
                  stickySettings:
                    description: A sticky_settings block as defined below.
                    properties:
                      appSettingNames:
                        description: A list of app_setting names that the Linux Function
                          App will not swap between Slots when a swap operation is
                          triggered.
                        items:
                          type: string
                        type: array
                      connectionStringNames:
                        description: A list of connection_string names that the Linux
                          Function App will not swap between Slots when a swap operation
                          is triggered.
                        items:
                          type: string
                        type: array
                    type: object
                  storageAccessKey:
                    description: The access key which will be used to access the backend
                      storage account for the Function App.
                    type: string
                  storageAuthenticationType:
                    description: The authentication type which will be used to access
                      the backend storage account for the Function App. Possible values
                      are StorageAccountConnectionString, SystemAssignedIdentity,
                      and UserAssignedIdentity.
                    type: string
                  storageContainerEndpoint:
                    description: |-
                      The backend storage container endpoint which will be used by this Function App.
                      The endpoint of the storage container where the function app's code is hosted.
                    type: string
                  storageContainerType:
                    description: |-
                      The storage container type used for the Function App. The current supported type is blobContainer.
                      The type of the storage container where the function app's code is hosted. Only `blobContainer` is supported currently.
                    type: string
                  storageUserAssignedIdentityId:
                    description: The user assigned Managed Identity to access the
                      storage account. Conflicts with storage_access_key.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: A mapping of tags which should be assigned to the
                      Linux Function App.
                    type: object
                    x-kubernetes-map-type: granular
                  virtualNetworkSubnetId:
                    description: The subnet id which will be used by this Function
                      App for regional virtual network integration.
                    type: string
                  webdeployPublishBasicAuthenticationEnabled:
                    description: Should the default WebDeploy Basic Authentication
                      publishing credentials enabled. Defaults to true.
                    type: boolean
                  zipDeployFile:
                    description: |-
                      The local path and filename of the Zip packaged application to deploy to this Linux Function App.
                      The local path and filename of the Zip packaged application to deploy to this Function App. **Note:** Using this value requires either `WEBSITE_RUN_FROM_PACKAGE=1` or `SCM_DO_BUILD_DURING_DEPLOYMENT=true` to be set on the App in `app_settings`.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
